function UTMarketSearchResultsViewController() {
    UTViewController.call(this),
    this._chemCalculator = new UTSquadChemCalculatorUtils(repositories.Chemistry),
    this._itemListViewDelegate = null,
    Object.defineProperty(this, "_itemListViewDelegate", {
        writable: !0,
        enumerable: !1
    }),
    this._paginationViewModel = null,
    Object.defineProperty(this, "_paginationViewModel", {
        writable: !0,
        enumerable: !1
    }),
    this._searchCriteria = null,
    Object.defineProperty(this, "_searchCriteria", {
        writable: !0,
        enumerable: !1
    }),
    this._squadContext = null,
    Object.defineProperty(this, "_squadContext", {
        writable: !0,
        enumerable: !1
    }),
    this._stadiumViewmodel = null,
    Object.defineProperty(this, "_stadiumViewmodel", {
        writable: !0,
        enumerable: !1
    }),
    this._compareItem = null,
    Object.defineProperty(this, "_compareItem", {
        writable: !0,
        enumerable: !1
    }),
    this._selectedItem = null,
    Object.defineProperty(this, "_selectedItem", {
        writable: !0,
        enumerable: !1
    }),
    this._pinnedListItem = null,
    Object.defineProperty(this, "_pinnedListItem", {
        writable: !0,
        enumerable: !1
    }),
    this._arbitraryInterval = 0,
    Object.defineProperty(this, "_arbitraryInterval", {
        writable: !0,
        enumerable: !1
    }),
    this.onDataChange = new EAObservable,
    Object.defineProperty(this, "onDataChange", {
        writable: !1,
        enumerable: !0
    })
}
function UTMarketSearchResultsSplitViewController() {
    UTSplitViewController.call(this),
    this._listController = new UTMarketSearchResultsViewController,
    this._itemDetailController = new controllers.navigation.ItemDetails
}
JSUtils.inherits(UTMarketSearchResultsViewController, UTViewController),
UTMarketSearchResultsViewController.prototype.init = function init() {
    if (services.Module.set(3288334336),
    !this.initialized) {
        this.superclass(),
        this._paginationViewModel = new UTTransferMarketPaginationViewModel,
        this._paginationViewModel.init(),
        this._paginationViewModel.addAuctionUpdateObserver(this, this._eViewmodelDataUpdated),
        this._searchCriteria && (this._searchCriteria.count = this._paginationViewModel.getNumItemsPerPage() + 1);
        var e = this.getView();
        e.addTarget(this, this._eRowSelected, enums.UIListEvent.ROW_SELECT),
        e.addTarget(this, this._eNextPage, enums.UIPaginationEvent.NEXT),
        e.addTarget(this, this._ePrevPage, enums.UIPaginationEvent.PREVIOUS)
    }
}
,
UTMarketSearchResultsViewController.prototype.initWithSearchCriteria = function initWithSearchCriteria(e) {
    this.initialized || (DebugUtils.Assert(e instanceof UTSearchCriteriaDTO, "Initialization expected a search criteria DTO."),
    this._searchCriteria = e,
    this.init())
}
,
UTMarketSearchResultsViewController.prototype.setSquadContext = function setSquadContext(e) {
    this.initialized || (DebugUtils.Assert(e instanceof UTSquadMarketSearchViewModel, "Initialization expected a squad market search VM."),
    this._squadContext = e,
    this._squadContext && this.setPinnedItem(this._squadContext.getCurrentSlot().getItem()))
}
,
UTMarketSearchResultsViewController.prototype.setStadiumViewModel = function setStadiumViewModel(e) {
    this._stadiumViewmodel = e
}
,
UTMarketSearchResultsViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this.onDataChange.dealloc(),
    this._searchCriteria = null,
    this._squadContext = null,
    this._stadiumViewmodel = null,
    this._compareItem = null,
    this._selectedItem = null,
    this._chemCalculator.dealloc(),
    JSUtils.isValid(this._pinnedListItem) && (this._pinnedListItem.dealloc(),
    this._pinnedListItem = null),
    this._itemListViewDelegate && (this._itemListViewDelegate = null),
    this._paginationViewModel && (this._paginationViewModel.dealloc(),
    this._paginationViewModel = null),
    getDefaultDispatcher().removeObserver(AppNotification.UI_ITEM_STATE_CHANGE, this)
}
,
UTMarketSearchResultsViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTMarketSearchView
}
,
UTMarketSearchResultsViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "Transfer Market Results - List View"
}
,
UTMarketSearchResultsViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.searchresults")
}
,
UTMarketSearchResultsViewController.prototype.viewDidAppear = function viewDidAppear() {
    services.Module.set(3489660928),
    this.superclass(),
    getDefaultDispatcher().addObserver(AppNotification.UI_ITEM_STATE_CHANGE, this, this._nInfoStateChanged),
    this._requestItems(this._paginationViewModel.getCurrentPageIndex()),
    this._compareItem && !this._pinnedListItem && this._generatePinnedItemView(),
    this._squadContext && this._compareItem !== this._squadContext.getCurrentSlot().item && (this._compareItem = this._squadContext.getCurrentSlot().item,
    this._pinnedListItem.setItem(this._compareItem)),
    this._pinnedListItem && this._pinnedListItem.viewDidAppear(),
    this._arbitraryInterval = setInterval(this._arbitraryViewUpdate.bind(this), 5e3),
    TelemetryManager.trackPage(TelemetryManager.Sections.AUCTIONS, "Transfer Market Search Results")
}
,
UTMarketSearchResultsViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    services.Module.set(3758096384),
    this.superclass(),
    getDefaultDispatcher().removeObserver(AppNotification.UI_ITEM_STATE_CHANGE, this),
    this._paginationViewModel.stopAuctionUpdates(),
    this._paginationViewModel.removeAuctionUpdateObserver(this),
    clearInterval(this._arbitraryInterval)
}
,
UTMarketSearchResultsViewController.prototype.setItemListViewDelegate = function setItemListViewDelegate(e) {
    this._itemListViewDelegate = e
}
,
UTMarketSearchResultsViewController.prototype.setPinnedItem = function setPinnedItem(e) {
    this._compareItem = e,
    this.hasLoaded && !this._pinnedListItem && this._generatePinnedItemView()
}
,
UTMarketSearchResultsViewController.prototype.setSelectedItem = function setSelectedItem(e) {
    this._selectedItem = e
}
,
UTMarketSearchResultsViewController.prototype.getSelectedItem = function getSelectedItem() {
    return this._paginationViewModel.getCurrentItem()
}
,
UTMarketSearchResultsViewController.prototype._generatePinnedItemView = function _generatePinnedItemView() {
    if (this._pinnedListItem = new UTPinnedItemViewController,
    this._pinnedListItem.initWithItem(this._compareItem),
    this._squadContext && !this._compareItem.isManager()) {
        var e = this._squadContext.getCurrentSlot();
        if (e.index < UTSquadEntity.FIELD_PLAYERS) {
            var t = new UTSquadSlotChemistryPointsView;
            t.isItemView(),
            t.render(e.chemistry, 0, e.inPreferredPosition),
            t.setState(UTSquadSlotChemistryPointsView.State.NEUTRAL);
            var i = this._pinnedListItem.getView();
            i.setChemistryPointsComponent(t),
            i.renderChemistryBreakdown(e.chemistry, e.nationChemistryPoints, e.leagueChemistryPoints, e.clubChemistryPoints)
        }
    }
    this.addChildViewController(this._pinnedListItem),
    this.getView().appendPinnedItemView(this._pinnedListItem.getView())
}
,
UTMarketSearchResultsViewController.prototype._requestItems = function _requestItems(_) {
    services.Module.set(3355443200),
    this._paginationViewModel.stopAuctionUpdates(),
    services.Item.searchTransferMarket(this._searchCriteria, _).observe(this, function _onRequestItemsComplete(e, t) {
        if (e.unobserve(this),
        !t.success)
            return NetworkErrorManager.checkCriticalStatus(t.status) ? void NetworkErrorManager.handleStatus(t.status) : (services.Notification.queue([services.Localization.localize("popup.error.searcherror"), UINotificationType.NEGATIVE]),
            void this.getNavigationController().popViewController());
        if (0 < this._searchCriteria.offset && 0 === t.data.items.length)
            this._requestItems(_ - 1);
        else {
            var i = this._paginationViewModel.getNumItemsPerPage()
              , o = t.data.items.slice();
            if (this.onDataChange.notify({
                items: o
            }),
            o.length > i && (o = o.slice(0, i)),
            this._paginationViewModel.setPageItems(o),
            this._paginationViewModel.setPageIndex(_),
            this._selectedItem && 0 < o.length) {
                var n = this._paginationViewModel.getIndexByItemId(this._selectedItem.id);
                0 < n && this._paginationViewModel.setIndex(n),
                this._selectedItem = null
            }
            var r = this.getView()
              , s = null;
            if (!this._stadiumViewmodel || this._searchCriteria.type !== SearchType.VANITY && this._searchCriteria.type !== SearchType.CLUB_INFO && this._searchCriteria.type !== SearchType.BALL || (s = this._stadiumViewmodel.getStadiumProgression(this._searchCriteria.subtypes)),
            this._squadContext && this._squadContext.getSquad() && (this._squadContext.getCurrentSlot().index < UTSquadEntity.FIELD_PLAYERS || this._squadContext.getCurrentSlot().item.isManager()) && this._compareItem) {
                var l = []
                  , c = []
                  , d = []
                  , u = []
                  , h = this._squadContext.getSquad()
                  , p = this._squadContext.getCurrentSlot();
                this._paginationViewModel.getCurrentPageItems().forEach(function(t) {
                    var e = h.getPlayers().map(function(e) {
                        return e.index === p.index ? t : e.item
                    }, this)
                      , i = p.item.isManager() ? t : h.getManager().item
                      , o = h.getFormation()
                      , n = 0;
                    if (o) {
                        var r = this._chemCalculator.calculate(o, e, i);
                        if (n = r.chemistry,
                        !t.isManager()) {
                            var s = r.getSlotChemistry(p.index).points;
                            d.push(s),
                            u.push(s - this._squadContext.getCurrentSlot().chemistry)
                        }
                    } else if (!t.isManager()) {
                        var a = this._squadContext.getCurrentSlot().chemistry;
                        d.push(0),
                        u.push(0 - a)
                    }
                    l.push(n),
                    c.push(n - h.getChemistry())
                }, this),
                r.setItemsWithChemDiff(this._paginationViewModel.getCurrentPageItems(), l, c, d, u)
            } else
                r.setItems(this._paginationViewModel.getCurrentPageItems(), s);
            if (r.setPaginationState(1 < _, t.data.items.length > i),
            JSUtils.isValid(this._compareItem) && !this._squadContext) {
                var a = JSUtils.find(o, function(e) {
                    return e.getAuctionData().tradeId === this._compareItem.getAuctionData().tradeId
                }
                .bind(this));
                JSUtils.isValid(a) ? this._pinnedListItem.setItem(a) : this._paginationViewModel.setPinnedItem(this._compareItem)
            } else
                !isPhone() && 0 < o.length && r.selectListRow(this._paginationViewModel.getCurrentItem().id)
        }
        this._paginationViewModel.startAuctionUpdates()
    })
}
,
UTMarketSearchResultsViewController.prototype.getIterator = function getIterator() {
    return this._paginationViewModel.getIterator()
}
,
UTMarketSearchResultsViewController.prototype.removeItemsById = function removeItemsById(e) {
    if (0 < this._paginationViewModel.getItemCount()) {
        var t = this.getView();
        t.removeItemsById(e),
        t.selectListRow(this._paginationViewModel.getCurrentItem().id)
    } else
        this.refreshList()
}
,
UTMarketSearchResultsViewController.prototype.refreshList = function refreshList() {
    var e = this.getView();
    if (this._compareItem && -1 === this._paginationViewModel.getIndexByItemId(this._compareItem.id))
        return void this.getNavigationController().popViewController();
    e.setItems(this._paginationViewModel.getCurrentPageItems()),
    JSUtils.isValid(this._pinnedListItem) ? this._pinnedListItem.refresh() : e.selectListRow(this._paginationViewModel.getCurrentItem().id)
}
,
UTMarketSearchResultsViewController.prototype._ePrevPage = function _ePrevPage() {
    this._requestItems(this._paginationViewModel.getPrevPageIndex())
}
,
UTMarketSearchResultsViewController.prototype._eNextPage = function _eNextPage() {
    this._requestItems(this._paginationViewModel.getNextPageIndex())
}
,
UTMarketSearchResultsViewController.prototype._eRowSelected = function _eRowSelected(e, t, i) {
    var o = i.item || null
      , n = JSUtils.isValid(o) ? this._paginationViewModel.getIndexByItemId(o.id) : 0;
    if (o) {
        var r = o.getAuctionData();
        if (!services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED) && (r.isActiveTrade() || r.isClosedTrade()))
            return void utils.PopupManager.showAlert(utils.PopupManager.Alerts.TRADING_DISABLED);
        var s = n !== this._paginationViewModel.getIndex();
        if (s && this._paginationViewModel.setIndex(n),
        JSUtils.isValid(this._itemListViewDelegate))
            s && this._itemListViewDelegate.selectListRow(this, n, o);
        else {
            var a = this.getNavigationController();
            if (a) {
                var l = new controllers.items.ItemDetails;
                this._squadContext && l.setSquadContext(this._squadContext),
                l.initWithIterator(this._paginationViewModel.getIterator()),
                l.enablePriceComparison(!JSUtils.isValid(this._pinnedListItem)),
                a.pushViewController(l, !0)
            }
        }
    }
}
,
UTMarketSearchResultsViewController.prototype._eViewmodelDataUpdated = function _eViewmodelDataUpdated() {
    this.getView().onTimedUpdate()
}
,
UTMarketSearchResultsViewController.prototype._arbitraryViewUpdate = function _arbitraryViewUpdate() {
    this.getView().onTimedUpdate()
}
,
UTMarketSearchResultsViewController.prototype._nInfoStateChanged = function _nInfoStateChanged() {
    TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.BUTTON_PRESS, "Item Info Switch Button - Transfer Market Search Results")
}
,
JSUtils.inherits(UTMarketSearchResultsSplitViewController, UTSplitViewController),
UTMarketSearchResultsSplitViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass(),
        this._listController.init(),
        this._listController.setItemListViewDelegate(this),
        this._listController.onDataChange.observe(this, this._eListDataChanged);
        var e = this._listController.getView();
        e.addTarget(this, this._ePageChange, enums.UIPaginationEvent.NEXT),
        e.addTarget(this, this._ePageChange, enums.UIPaginationEvent.PREVIOUS),
        this._itemDetailController.initWithIterator(this._listController.getIterator()),
        this._itemDetailController.enableSwiping(!1),
        this.addChildViewController(this._listController),
        this.addChildViewController(this._itemDetailController);
        var t = getDefaultDispatcher();
        t.addObserver(AppNotification.ITEM_DISCARD, this, this._nItemDiscarded),
        t.addObserver(AppNotification.ITEM_LIST, this, this._nItemListed),
        t.addObserver(AppNotification.ITEM_MOVE, this, this._nItemMoved)
    }
}
,
UTMarketSearchResultsSplitViewController.prototype.initWithSearchCriteria = function initWithSearchCriteria(e) {
    this.initialized || (this._listController.initWithSearchCriteria(e),
    this.init())
}
,
UTMarketSearchResultsSplitViewController.prototype.dealloc = function dealloc() {
    this._itemDetailController.dealloc(),
    this._itemDetailController = null,
    this._listController.dealloc(),
    this._listController = null;
    var e = getDefaultDispatcher();
    e.removeObserver(AppNotification.ITEM_DISCARD, this),
    e.removeObserver(AppNotification.ITEM_LIST, this),
    e.removeObserver(AppNotification.ITEM_MOVE, this),
    this.superclass()
}
,
UTMarketSearchResultsSplitViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return this._listController.getNavigationTitle()
}
,
UTMarketSearchResultsSplitViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this._setLeftController(this._listController),
    this._itemDetailController.setNavigationStyle(UTNavigationBarView.Style.SECONDARY)
}
,
UTMarketSearchResultsSplitViewController.prototype.setStadiumViewModel = function setStadiumViewModel(e) {
    this._listController.setStadiumViewModel(e),
    this._itemDetailController.setStadiumViewModel(e)
}
,
UTMarketSearchResultsSplitViewController.prototype.setPinnedItem = function setPinnedItem(e) {
    this._listController && this._listController.setPinnedItem(e)
}
,
UTMarketSearchResultsSplitViewController.prototype.setSelectedItem = function setSelectedItem(e) {
    this._listController.setSelectedItem(e)
}
,
UTMarketSearchResultsSplitViewController.prototype.getSelectedItem = function getSelectedItem() {
    return this._listController.getSelectedItem()
}
,
UTMarketSearchResultsSplitViewController.prototype.selectListRow = function selectListRow(e, t, i) {
    e === this._listController && (this._listController.getView().selectListRow(i.id),
    this._itemDetailController.setIndex(t))
}
,
UTMarketSearchResultsSplitViewController.prototype._eListDataChanged = function _eListDataChanged(e, t) {
    t.items && (0 < t.items.length ? (this._setRightController(this._itemDetailController),
    this._itemDetailController.setIndex(this._listController.getIterator().getIndex())) : this.hideRightController())
}
,
UTMarketSearchResultsSplitViewController.prototype._ePageChange = function _ePageChange() {
    this._itemDetailController.onPageChange()
}
,
UTMarketSearchResultsSplitViewController.prototype._nItemDiscarded = function _nItemDiscarded(e, t, i) {
    this._listController.removeItemsById(i.itemIds || [])
}
,
UTMarketSearchResultsSplitViewController.prototype._nItemListed = function _nItemListed(e, t, i) {
    this._listController.removeItemsById(i.itemIds || [])
}
,
UTMarketSearchResultsSplitViewController.prototype._nItemMoved = function _nItemMoved(e, t, i) {
    this._listController.removeItemsById(i.itemIds || [])
}
;
var __extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}()
  , UTBucketedItemSearchViewModel = function(t) {
    function UTBucketedItemSearchViewModel() {
        var e = t.call(this) || this;
        return e.searchBucket = SearchBucket.PLAYER,
        e.showCategoryTab = !0,
        e
    }
    return __extends(UTBucketedItemSearchViewModel, t),
    UTBucketedItemSearchViewModel.prototype.resetSearch = function() {
        t.prototype.resetSearch.call(this),
        this.updateSearchType()
    }
    ,
    UTBucketedItemSearchViewModel.prototype.mapCategoryToCategoryGroup = function(e) {
        switch (e) {
        case SearchCategory.BADGE:
        case SearchCategory.BALL:
        case SearchCategory.KIT:
        case SearchCategory.VANITY_AUDIO_ANTHEM_MUSIC:
        case SearchCategory.VANITY_AUDIO_CLUB_NICKNAME:
        case SearchCategory.VANITY_AUDIO_CROWD_CHANT:
        case SearchCategory.VANITY_AUDIO_GOAL_SCORE:
        case SearchCategory.VANITY_PLAYER_CELEBRATION:
            return SearchCategoryGroup.CLUB;
        case SearchCategory.VANITY_STADIUM_BASE_PITCH_PROP:
            return SearchCategoryGroup.TROPHIES;
        case SearchCategory.VANITY_TIFO_BASE:
        case SearchCategory.VANITY_TIFO_BIG:
        case SearchCategory.VANITY_TIFO_MOVING:
        case SearchCategory.VANITY_CROWD_CARDS:
        case SearchCategory.VANITY_POLE_BANNER:
        case SearchCategory.VANITY_TINTED_BANNER:
            return SearchCategoryGroup.STANDS;
        case SearchCategory.STADIUM:
        case SearchCategory.VANITY_STADIUM_BASE_SEAT_COLOR:
        case SearchCategory.VANITY_STADIUM_BASE_STRUCTURE_COLOR:
        case SearchCategory.VANITY_STADIUM_THEME:
        case SearchCategory.VANITY_VIP_AREA:
            return SearchCategoryGroup.STADIUM;
        case SearchCategory.VANITY_PYROTECHNICS_CONFETTI_CANNON:
        case SearchCategory.VANITY_PYROTECHNICS_FIREWORKS_CANNON:
        case SearchCategory.VANITY_PYROTECHNICS_FLAME_CANNON:
        case SearchCategory.VANITY_PYROTECHNICS_SPARKLER_CANNON:
        case SearchCategory.VANITY_STADIUM_BASE_PITCH_GOAL_PACKAGE:
        case SearchCategory.VANITY_STADIUM_BASE_PITCH_LINE_COLOR:
        case SearchCategory.VANITY_STADIUM_BASE_PITCH_MOW_PATTERN:
            return SearchCategoryGroup.PITCH;
        default:
            return SearchCategoryGroup.NONE
        }
    }
    ,
    UTBucketedItemSearchViewModel.prototype.updateSearchCriteria = function(e) {
        t.prototype.updateSearchCriteria.call(this, e),
        this.searchBucket = this.getBucketFromType(e.type),
        this.searchCategoryGroup = this.mapCategoryToCategoryGroup(e.category)
    }
    ,
    UTBucketedItemSearchViewModel.prototype.updateSearchType = function() {
        this.searchBucket === SearchBucket.PLAYER ? (this.searchCriteria.type = SearchType.PLAYER,
        this.defaultSearchCriteria.type = SearchType.PLAYER) : this.searchBucket === SearchBucket.STAFF ? (this.searchCriteria.type = SearchType.STAFF,
        this.searchCriteria.category = SearchCategory.MANAGER,
        this.defaultSearchCriteria.type = SearchType.STAFF,
        this.defaultSearchCriteria.category = SearchCategory.MANAGER) : this.searchBucket === SearchBucket.CLUB ? (this.searchCriteria.type = SearchType.CLUB_INFO,
        this.defaultSearchCriteria.type = SearchType.CLUB_INFO) : this.searchBucket === SearchBucket.CONSUMABLE && (this.searchCriteria.type = SearchType.CONSUMABLES_TRAINING,
        this.defaultSearchCriteria.type = SearchType.CONSUMABLES_TRAINING)
    }
    ,
    UTBucketedItemSearchViewModel.prototype.setSearchBucket = function(e) {
        this.searchBucket === SearchBucket.CLUB && e !== SearchBucket.CLUB ? this.searchCategoryGroup = SearchCategoryGroup.NONE : this.searchBucket !== SearchBucket.CLUB && e === SearchBucket.CLUB && (this.searchCategoryGroup = SearchCategoryGroup.CLUB),
        this.searchBucket = e,
        this.updateSearchType()
    }
    ,
    UTBucketedItemSearchViewModel.prototype.setCategoryTabVisible = function(e) {
        this.showCategoryTab = e
    }
    ,
    UTBucketedItemSearchViewModel.prototype.getCategoryTabVisible = function() {
        return this.showCategoryTab
    }
    ,
    UTBucketedItemSearchViewModel
}(UTItemSearchViewModel)
  , UTTextInputControl = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTTextInputControl() {
        var e = t.call(this) || this;
        return e.blurTimeout = 0,
        e.selectionTimeout = 0,
        e
    }
    return __extends(UTTextInputControl, t),
    Object.defineProperty(UTTextInputControl.prototype, "value", {
        get: function() {
            return this.getRootElement().value
        },
        set: function(e) {
            this.getRootElement().value = e
        },
        enumerable: !1,
        configurable: !0
    }),
    UTTextInputControl.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTTextInputControl.prototype.dealloc = function() {
        clearTimeout(this.selectionTimeout),
        clearTimeout(this.blurTimeout),
        this.selectionTimeout = 0,
        this.blurTimeout = 0,
        t.prototype.dealloc.call(this)
    }
    ,
    UTTextInputControl.prototype.setInteractionState = function(e) {
        if (this._setInteractionStateFlag(e)) {
            var t = this.getRootElement()
              , i = "textEvent";
            this.toggleClass(enums.UIState.DISABLED, !this._interactionState),
            this._interactionState ? (t.removeAttribute("disabled"),
            this._addListener(EventType.FOCUS, t, this.handleFocusEvent.bind(this), i),
            this._addListener(EventType.BLUR, t, this.handleBlurEvent.bind(this), i),
            this._addListener(EventType.CHANGE, t, this.handleChangeEvent.bind(this), i),
            this._addListener(EventType.INPUT, t, this.handleInputEvent.bind(this), i),
            this._addListener(EventType.CUT, t, this.handleInputEvent.bind(this), i),
            this._addListener(EventType.PASTE, t, this.handleInputEvent.bind(this), i)) : (this.blur(),
            t.setAttribute("disabled", "disabled"),
            this._removeListenersByNS(i))
        }
    }
    ,
    UTTextInputControl.prototype.getValue = function() {
        return this.value
    }
    ,
    UTTextInputControl.prototype.setValue = function(e) {
        this.value = e
    }
    ,
    UTTextInputControl.prototype.getType = function() {
        var e;
        return null !== (e = this.getRootElement().getAttribute("type")) && void 0 !== e ? e : "text"
    }
    ,
    UTTextInputControl.prototype.setType = function(e) {
        this.getRootElement().setAttribute("type", e)
    }
    ,
    UTTextInputControl.prototype.setPlaceholder = function(e) {
        this.getRootElement().setAttribute("placeholder", e)
    }
    ,
    UTTextInputControl.prototype.setMaxLength = function(e) {
        this.getRootElement().setAttribute("maxlength", e.toString())
    }
    ,
    UTTextInputControl.prototype.clear = function() {
        this.value = ""
    }
    ,
    UTTextInputControl.prototype.handleChangeEvent = function(e) {
        this._triggerActions(EventType.CHANGE, {
            value: this.value
        })
    }
    ,
    UTTextInputControl.prototype.handleInputEvent = function(e) {
        this._triggerActions(EventType.INPUT, {
            value: this.value
        })
    }
    ,
    UTTextInputControl.prototype.handleFocusEvent = function(e) {
        var t = this;
        this.selectionTimeout = window.setTimeout(function() {
            var e = t.getRootElement();
            e.setSelectionRange(0, e.value.length)
        }, 50),
        this._triggerActions(EventType.FOCUS)
    }
    ,
    UTTextInputControl.prototype.handleBlurEvent = function(e) {
        clearTimeout(this.selectionTimeout),
        this.selectionTimeout = 0,
        this._triggerActions(EventType.BLUR)
    }
    ,
    UTTextInputControl
}(UTControl));
UTTextInputControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("input");
        e.setAttribute("type", "text"),
        e.classList.add("ut-text-input-control"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTextInputControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTTextInputControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPlayerSearchControl = function(t) {
    function UTPlayerSearchControl() {
        var e = t.call(this) || this;
        return e.closeTimeout = 0,
        e.currentName = "",
        e.currentQuery = [],
        e.inputChangeTimeout = 0,
        e.isOpen = !1,
        e.searchEngine = new UTPlayerSearchEngine(repositories.Item.getStaticData()),
        e.selected = null,
        e.timeout = 0,
        e.windowListener = e.windowTapCallback.bind(e),
        e.tapDelay = 0,
        e
    }
    return __extends(UTPlayerSearchControl, t),
    UTPlayerSearchControl.prototype.init = function() {
        var e = services.Localization;
        this._playerNameInput.init(),
        this._playerNameInput.addTarget(this, this.handleInputChange, EventType.INPUT),
        this._playerNameInput.setPlaceholder(e.localize("searchauctions.playersearch.inputcaption")),
        this._playerNameInput.setMaxLength(50),
        this.__playerNameTitle.textContent = e.localize("searchauctions.label.playername"),
        this.__ratingTitle.textContent = e.localize("squads.rating"),
        this.__playerResultsEmpty.textContent = e.localize("searchauctions.playersearch.noresults"),
        DOMKit.toggleDisplayStyle(this.__playerResultsEmpty, !1),
        DOMKit.toggleDisplayStyle(this.__playerResults, !1),
        this._clearButton.init(),
        this._clearButton.addTarget(this, this.handleClearBtnEvents, EventType.TAP),
        t.prototype.init.call(this)
    }
    ,
    UTPlayerSearchControl.prototype.dealloc = function() {
        clearTimeout(this.timeout),
        clearTimeout(this.closeTimeout),
        clearTimeout(this.inputChangeTimeout),
        this.clearList(),
        this.removeWindowListener(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTPlayerSearchControl.prototype.inputChange = function(e) {
        var t = this
          , i = !JSUtils.isEmpty(e);
        this.toggleClass("has-selection", i),
        clearTimeout(this.inputChangeTimeout),
        i ? this.addClass("contract-text-input") : this.inputChangeTimeout = window.setTimeout(function() {
            return t.removeClass("contract-text-input")
        }, this.tapDelay)
    }
    ,
    UTPlayerSearchControl.prototype.setInput = function(e) {
        this._playerNameInput.value = e,
        this.currentName = e,
        this.inputChange(e)
    }
    ,
    UTPlayerSearchControl.prototype.setPlayerData = function(e) {
        var t = e.commonName ? e.commonName : e.firstName + " " + e.lastName;
        this.selected = e,
        this.setInput(t)
    }
    ,
    UTPlayerSearchControl.prototype.getSelected = function() {
        return this.selected
    }
    ,
    UTPlayerSearchControl.prototype.clearInput = function() {
        this.setInput(""),
        this.selected = null
    }
    ,
    UTPlayerSearchControl.prototype.clearList = function() {
        this.currentQuery.forEach(function(e) {
            return e.dealloc()
        }),
        this.currentQuery = []
    }
    ,
    UTPlayerSearchControl.prototype.updateList = function(e, t) {
        var o = this;
        this.clearList(),
        DOMKit.toggleDisplayStyle(this.__playerResultsList, !JSUtils.isEmpty(e) && 0 < t.length),
        DOMKit.toggleDisplayStyle(this.__playerResultsEmpty, 0 === t.length || JSUtils.isEmpty(e)),
        this.open(),
        JSUtils.isValid(e) && t.forEach(function(e) {
            var t = e.commonName ? e.commonName : e.firstName + " " + e.lastName
              , i = new UTGroupButtonControl;
            i.init(),
            i.setText(t),
            i.setSubtext(e.rating.toString()),
            i.addTarget(o, function() {
                return o.selectPlayerEntry(e, t)
            }, EventType.TAP),
            o.currentQuery.push(i),
            o.__playerResultsList.appendChild(i.getRootElement())
        })
    }
    ,
    UTPlayerSearchControl.prototype.open = function() {
        var e = this;
        this.isOpen || (this.isOpen = !0,
        clearTimeout(this.closeTimeout),
        requestAnimationFrame(function() {
            e.addClass("is-open"),
            e.addWindowListener(),
            DOMKit.toggleDisplayStyle(e.__playerResults, !0)
        }))
    }
    ,
    UTPlayerSearchControl.prototype.close = function() {
        var e = this;
        this.isOpen && (this.isOpen = !1,
        clearTimeout(this.closeTimeout),
        this.closeTimeout = window.setTimeout(function() {
            e.removeClass("is-open"),
            DOMKit.toggleDisplayStyle(e.__playerResults, !1),
            e.clearList(),
            e.setInput(e.currentName),
            e.removeWindowListener(),
            clearTimeout(e.timeout),
            clearTimeout(e.closeTimeout)
        }, this.tapDelay))
    }
    ,
    UTPlayerSearchControl.prototype.selectPlayerEntry = function(e, t) {
        this.selected = e,
        this.setInput(t),
        this._triggerActions(EventType.CHANGE),
        this.close()
    }
    ,
    UTPlayerSearchControl.prototype.handleInputChange = function(e, t, i) {
        var o = this;
        JSUtils.isEmpty(i.value) && (this.clearInput(),
        this._triggerActions(EventType.CHANGE)),
        clearTimeout(this.timeout),
        this.timeout = window.setTimeout(function() {
            var e = i.value;
            o.inputChange(e),
            o.updateList(e, o.searchEngine.getEntriesForString(e, 5)),
            clearTimeout(o.timeout)
        }, 500)
    }
    ,
    UTPlayerSearchControl.prototype.windowTapCallback = function(e) {
        for (var t = e.target; t; ) {
            if (t === this.__root)
                return;
            t = t.parentNode
        }
        this.close()
    }
    ,
    UTPlayerSearchControl.prototype.removeWindowListener = function() {
        window.removeEventListener(EventType.MOUSEUP, this.windowListener, !1),
        window.removeEventListener(EventType.TOUCHEND, this.windowListener, !1)
    }
    ,
    UTPlayerSearchControl.prototype.addWindowListener = function() {
        this.removeWindowListener(),
        window.addEventListener(EventType.MOUSEUP, this.windowListener, !1),
        window.addEventListener(EventType.TOUCHEND, this.windowListener, !1)
    }
    ,
    UTPlayerSearchControl.prototype.handleClearBtnEvents = function(e, t, i) {
        t === EventType.TAP && (this.clearInput(),
        this._triggerActions(EventType.CHANGE),
        this.close())
    }
    ,
    UTPlayerSearchControl
}(UTControl);
UTPlayerSearchControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("inline-list-select"),
        e.classList.add("ut-player-search-control"),
        this.__animatedContainer = document.createElement("div"),
        this.__animatedContainer.classList.add("inline-container");
        var t = document.createElement("div");
        t.classList.add("ut-player-search-control--input-container");
        var i = document.createElement("span");
        i.classList.add("fut_icon"),
        i.classList.add("icon_magnifier"),
        t.appendChild(i),
        this._clearButton = new UTFlatButtonControl,
        this._clearButton.getRootElement().classList.add("inline-list-btn"),
        this._clearButton.getRootElement().classList.add("icon_close"),
        this._clearButton.getRootElement().classList.add("fut_icon"),
        this._clearButton.getRootElement().classList.add("exit-btn"),
        this._clearButton.getRootElement().classList.add("icon-btn"),
        t.appendChild(this._clearButton.getRootElement()),
        this._playerNameInput = new UTTextInputControl,
        t.appendChild(this._playerNameInput.getRootElement()),
        this.__animatedContainer.appendChild(t),
        this.__playerResults = document.createElement("div"),
        this.__playerResults.classList.add("inline-list");
        var o = document.createElement("div");
        o.classList.add("sectionHeader"),
        this.__playerNameTitle = document.createElement("span"),
        this.__playerNameTitle.classList.add("playerNameTitle"),
        o.appendChild(this.__playerNameTitle),
        this.__ratingTitle = document.createElement("span"),
        this.__ratingTitle.classList.add("ratingTitle"),
        o.appendChild(this.__ratingTitle),
        this.__playerResults.appendChild(o),
        this.__playerResultsList = document.createElement("ul"),
        this.__playerResultsList.classList.add("ut-button-group"),
        this.__playerResultsList.classList.add("playerResultsList"),
        this.__playerResults.appendChild(this.__playerResultsList),
        this.__playerResultsEmpty = document.createElement("div"),
        this.__playerResultsEmpty.classList.add("icon_negative"),
        this.__playerResultsEmpty.classList.add("playerResultsEmpty"),
        this.__playerResults.appendChild(this.__playerResultsEmpty),
        this.__animatedContainer.appendChild(this.__playerResults),
        e.appendChild(this.__animatedContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPlayerSearchControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__animatedContainer = null,
    this._clearButton.destroy(),
    this._playerNameInput.destroy(),
    this.__playerResults = null,
    this.__playerNameTitle = null,
    this.__ratingTitle = null,
    this.__playerResultsList = null,
    this.__playerResultsEmpty = null
}
,
UTPlayerSearchControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTItemSearchView = function(i) {
    function UTItemSearchView() {
        var e = i.call(this) || this;
        return e.bucketFilterIconTables = new EAHashTable,
        e.filterIconTables = new EAHashTable,
        e.filters = [],
        e.onFilterChange = new EAObservable,
        e.onSearchModeChange = new EAObservable,
        e.pileFilter = null,
        e.pileFilterIcons = new EAHashTable,
        e.searchBucket = 0,
        e.searchFilters = new EAHashTable,
        e
    }
    return __extends(UTItemSearchView, i),
    UTItemSearchView.prototype.init = function() {
        i.prototype.init.call(this),
        this._playerNameSearch.init()
    }
    ,
    UTItemSearchView.prototype.dealloc = function() {
        this.pileFilter && (this.pileFilter.dealloc(),
        this.pileFilter = null),
        this.pileFilterIcons.clear(),
        this.clearFilters(),
        this.filterIconTables.forEach(function(e) {
            return e.clear()
        }),
        this.filterIconTables.clear(),
        this.bucketFilterIconTables.forEach(function(e) {
            return e.clear()
        }),
        this.bucketFilterIconTables.clear(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTItemSearchView.prototype.setInteractionState = function(t) {
        var e;
        this.filters.forEach(function(e) {
            return e.setInteractionState(t)
        }),
        this._playerNameSearch.setInteractionState(t),
        null === (e = this.pileFilter) || void 0 === e || e.setInteractionState(t),
        i.prototype.setInteractionState.call(this, t)
    }
    ,
    UTItemSearchView.prototype.clearFilters = function() {
        this.searchFilters.forEach(function(e) {
            return e.dealloc()
        }),
        this.searchFilters.clear(),
        this.filters = []
    }
    ,
    UTItemSearchView.prototype.resetFilters = function() {
        this.searchFilters.forEach(function(e) {
            return e.setIndex(e.getDefaultIndex())
        }),
        this.resetPlayerName()
    }
    ,
    UTItemSearchView.prototype.setFilterLock = function(e, t) {
        var i;
        null === (i = this.searchFilters.get(e)) || void 0 === i || i.setInteractionState(!t)
    }
    ,
    UTItemSearchView.prototype.setFilterImage = function(e) {
        e.image = this.generateFilterImage(e.setId, e.id, e.value)
    }
    ,
    UTItemSearchView.prototype.generatePileFilterIconTable = function() {
        return this.pileFilterIcons.set(ItemSearchFeature.CLUB, this.generatePileFilterImage("club")),
        this.pileFilterIcons.set(ItemSearchFeature.CONCEPT, this.generatePileFilterImage("dream")),
        this.pileFilterIcons
    }
    ,
    UTItemSearchView.prototype.generatePileFilterImage = function(e) {
        return "club" === e ? "images/SearchFilters/players_club.png" : "dream" === e ? "images/SearchFilters/players_concept.png" : ""
    }
    ,
    UTItemSearchView.prototype.generateFilterImage = function(e, t, i) {
        switch (e) {
        case enums.UISearchFilters.LEVEL:
            return AssetLocationUtils.getFilterImage(AssetLocationUtils.FILTER.LEVEL, i);
        case enums.UISearchFilters.RARITY:
            return AssetLocationUtils.getFilterImage(AssetLocationUtils.FILTER.RARITY, i);
        case enums.UISearchFilters.POSITION:
        case enums.UISearchFilters.POSITION_MOD:
            return AssetLocationUtils.getFilterImage(AssetLocationUtils.FILTER.POSITION, 0 <= t ? t : "default");
        case enums.UISearchFilters.PLAYSTYLE:
            return AssetLocationUtils.getFilterImage(AssetLocationUtils.FILTER.PLAYSTYLE, 0 <= t ? t : "default");
        case enums.UISearchFilters.LEAGUE:
            return AssetLocationUtils.getFilterImage(AssetLocationUtils.FILTER.LEAGUE, 0 <= t ? t : "default");
        case enums.UISearchFilters.NATION:
            return AssetLocationUtils.getFilterImage(AssetLocationUtils.FILTER.NATION, 0 <= t ? t : "default");
        case enums.UISearchFilters.CLUB:
            return AssetLocationUtils.getFilterImage(AssetLocationUtils.FILTER.CLUB, 0 <= t ? t : "default");
        case enums.UISearchFilters.TYPE:
            return AssetLocationUtils.getFilterImage(AssetLocationUtils.FILTER.TYPE, 0 <= t ? t : "default", this.searchBucket);
        case enums.UISearchFilters.VANITY_CATEGORY:
            return AssetLocationUtils.getFilterImage(AssetLocationUtils.FILTER.VANITY, t);
        case enums.UISearchFilters.VANITY:
            return AssetLocationUtils.getFilterImage(AssetLocationUtils.FILTER.VANITY_SECTION, t);
        case enums.UISearchFilters.AUTHENTICITY:
            return AssetLocationUtils.getFilterImage(AssetLocationUtils.FILTER.AUTHENTICITY, i);
        case enums.UISearchFilters.PRIMARY_COLOR:
        case enums.UISearchFilters.SECONDARY_COLOR:
            return AssetLocationUtils.getFilterImage(AssetLocationUtils.FILTER.COLOR, t)
        }
        return ""
    }
    ,
    UTItemSearchView.prototype.generateFilterIconTable = function(e, t, i) {
        function Pc(e, t, i) {
            var o = null != e ? e : new EAHashTable;
            return e || t.forEach(function(e) {
                return o.set(e.value, n.generateFilterImage(i, e.id, e.value))
            }),
            o
        }
        var n = this;
        if (t === enums.UISearchFilters.LEVEL || t === enums.UISearchFilters.TYPE) {
            var o = Pc(this.bucketFilterIconTables.get(i + "-" + t), e, t);
            return this.bucketFilterIconTables.set(i + "-" + t, o),
            o
        }
        if (i === SearchBucket.PLAYER || t !== enums.UISearchFilters.RARITY && t !== enums.UISearchFilters.VANITY_CATEGORY) {
            o = Pc(this.filterIconTables.get(t), e, t);
            return this.filterIconTables.set(t, o),
            o
        }
        return Pc(null, e, t)
    }
    ,
    UTItemSearchView.prototype.setFilterValue = function(e, t) {
        var i = this.searchFilters.get(e);
        i && (JSUtils.isNumber(t) ? i.setIndexById(t) : JSUtils.isString(t) && i.setIndexByValue(t))
    }
    ,
    UTItemSearchView.prototype.setFilterDefaultValue = function(e, t) {
        var i = this.searchFilters.get(e);
        i && (JSUtils.isNumber(t) ? i.setDefaultIndexById(t) : JSUtils.isString(t) && i.setDefaultIndexByValue(t))
    }
    ,
    UTItemSearchView.prototype.getFilterTitle = function(e) {
        var t = services.Localization;
        switch (e) {
        case enums.UISearchFilters.TYPE:
            return t.localize("search.details.type");
        case enums.UISearchFilters.LEVEL:
            return t.localize("search.pagination.level");
        case enums.UISearchFilters.RARITY:
            return t.localize("search.pagination.rarity");
        case enums.UISearchFilters.POSITION:
            return t.localize("search.pagination.position");
        case enums.UISearchFilters.PLAYSTYLE:
            return t.localize("search.pagination.playerstyle");
        case enums.UISearchFilters.NATION:
            return t.localize("controlbar.cardview.Nationality");
        case enums.UISearchFilters.LEAGUE:
            return t.localize("controlbar.cardview.League");
        case enums.UISearchFilters.CLUB:
            return t.localize("controlbar.cardview.Club");
        case enums.UISearchFilters.POSITION_MOD:
            return t.localize("search.pagination.position");
        case enums.UISearchFilters.AUTHENTICITY:
            return t.localize("search.pagination.authenticity");
        case enums.UISearchFilters.PRIMARY_COLOR:
            return t.localize("search.pagination.primaryColor");
        case enums.UISearchFilters.SECONDARY_COLOR:
            return t.localize("search.pagination.secondaryColor")
        }
        return ""
    }
    ,
    UTItemSearchView.prototype.filterHasDefault = function(e) {
        return e === enums.UISearchFilters.TYPE ? this.searchBucket === SearchBucket.STAFF : e !== enums.UISearchFilters.VANITY && e !== enums.UISearchFilters.VANITY_CATEGORY
    }
    ,
    UTItemSearchView.prototype.normalizeCriteria = function(e) {
        e.level !== SearchLevel.SPECIAL || e.type !== SearchType.STAFF && e.type !== SearchType.CONSUMABLES_DEVELOPMENT && e.type !== SearchType.CONSUMABLES_TRAINING || (e.level = SearchLevel.GOLD)
    }
    ,
    UTItemSearchView.prototype.generateFilter = function(e, t, i) {
        var o = this.searchFilters.get(e);
        o ? o.removeTarget(this, this.handleFilterChange, EventType.CHANGE) : ((o = new UTSearchFilterControl).init(),
        o.setId = e,
        o.setDefaultLabel(this.getFilterTitle(e)),
        o.setInteractionState(!0),
        e !== enums.UISearchFilters.LEAGUE && e !== enums.UISearchFilters.CLUB || o.addClass("force-ltr"),
        this.searchFilters.set(e, o)),
        o.setHasDefault(this.filterHasDefault(e)),
        o.setIconTable(this.generateFilterIconTable(t, e, this.searchBucket)),
        o.setOptions(t),
        this.filters.push(o),
        JSUtils.isValid(i) && this.setFilterValue(e, i),
        o.addTarget(this, this.handleFilterChange, EventType.CHANGE)
    }
    ,
    UTItemSearchView.prototype.getRarityDataEntries = function(e, t) {
        var i = []
          , o = [];
        switch (e.type) {
        case SearchType.PLAYER:
            i = [ItemSubType.PLAYER],
            o = [ItemType.PLAYER];
            break;
        case SearchType.BALL:
            i = [ItemSubType.BALL],
            o = [ItemType.BALL];
            break;
        case SearchType.STADIUM:
            i = [ItemSubType.STADIUM],
            o = [ItemType.STADIUM];
            break;
        case SearchType.CLUB_INFO:
            i = e.subtypes,
            o = e.category === SearchCategory.KIT ? [ItemType.KIT] : [ItemType.BADGE];
            break;
        case SearchType.VANITY:
            i = e.subtypes,
            o = [ItemType.VANITY]
        }
        return factories.DataProvider.getItemRarityDP({
            itemSubTypes: i,
            itemTypes: o,
            quality: e.level,
            tradableOnly: t.isMarketSearch
        })
    }
    ,
    UTItemSearchView.prototype.setFilters = function(e, t) {
        var i = this
          , o = e.searchCriteria;
        if (this.searchBucket = e.getBucketFromType(o.type),
        this.setFilterLock(enums.UISearchFilters.TYPE, !1),
        this.setFilterLock(enums.UISearchFilters.LEVEL, !1),
        this.setFilterLock(enums.UISearchFilters.VANITY_CATEGORY, !1),
        this.normalizeCriteria(o),
        this.filters.forEach(function(e) {
            e.blur(),
            DOMKit.remove(e.getRootElement())
        }),
        this.filters = [],
        this.searchBucket === SearchBucket.STAFF ? (this.generateFilter(enums.UISearchFilters.TYPE, factories.DataProvider.getStaffTypeDP(), o.category),
        this.setFilterLock(enums.UISearchFilters.TYPE, !0)) : this.searchBucket === SearchBucket.CLUB ? this.generateFilter(enums.UISearchFilters.VANITY, factories.DataProvider.getVanityCategoryDP(e.isMarketSearch), e.searchCategoryGroup) : this.searchBucket === SearchBucket.CONSUMABLE && this.generateFilter(enums.UISearchFilters.TYPE, factories.DataProvider.getConsumableTypeDP(), o.category),
        o.type === SearchType.BALL || o.type === SearchType.CLUB_INFO || o.type === SearchType.PLAYER || o.type === SearchType.STADIUM || o.type === SearchType.VANITY) {
            this.generateFilter(enums.UISearchFilters.LEVEL, factories.DataProvider.getRareItemLevelDP(), o.level);
            var n = services.Configuration.getFeatureSetting(UTServerSettingsRepository.KEY.RARITY_SEARCH_ENABLED)
              , r = services.Configuration.getFeatureSetting(UTServerSettingsRepository.KEY.RARITY_PLAYER_SEARCH_ENABLED)
              , s = services.Configuration.getFeatureSetting(UTServerSettingsRepository.KEY.RARITY_VANITY_SEARCH_ENABLED);
            if (n && (o.type === SearchType.PLAYER && r || o.type !== SearchType.PLAYER && s)) {
                var a = this.getRarityDataEntries(o, e);
                this.generateFilter(enums.UISearchFilters.RARITY, a, o.rarities[0]),
                this.setFilterLock(enums.UISearchFilters.RARITY, a.length <= 1)
            }
        } else
            this.generateFilter(enums.UISearchFilters.LEVEL, factories.DataProvider.getItemLevelDP(), o.level),
            o.category === SearchCategory.HEALING && (this.setFilterValue(enums.UISearchFilters.LEVEL, 2),
            this.setFilterLock(enums.UISearchFilters.LEVEL, !0));
        if (o.type === SearchType.PLAYER) {
            var l = -1 !== o.zone ? o.zone : o.position
              , c = l !== SearchType.ANY ? l === PlayerPosition[PlayerPosition.GK] : void 0;
            this.generateFilter(enums.UISearchFilters.POSITION, factories.DataProvider.getPlayerPositionDP(t), l),
            this.generateFilter(enums.UISearchFilters.PLAYSTYLE, factories.DataProvider.getPlayStyleDP(c), o.playStyle),
            this.generateFilter(enums.UISearchFilters.NATION, factories.DataProvider.getNationDP(), o.nation),
            this.generateFilter(enums.UISearchFilters.LEAGUE, factories.DataProvider.getLeagueDP(!0), o.league),
            this.generateFilter(enums.UISearchFilters.CLUB, factories.DataProvider.getTeamDP(o.league), o.club),
            e.playerData ? this.setPlayerSearch(e.playerData) : this.resetPlayerName()
        } else if (o.category === SearchCategory.MANAGER)
            this.generateFilter(enums.UISearchFilters.NATION, factories.DataProvider.getNationDP(), o.nation),
            this.generateFilter(enums.UISearchFilters.LEAGUE, factories.DataProvider.getLeagueDP(e.isMarketSearch), o.league);
        else if (o.category === SearchCategory.PLAYSTYLE)
            this.generateFilter(enums.UISearchFilters.PLAYSTYLE, factories.DataProvider.getPlayStyleDP(), o.playStyle);
        else if (o.category === SearchCategory.MANAGER_LEAGUE)
            this.generateFilter(enums.UISearchFilters.LEAGUE, factories.DataProvider.getLeagueDP(!0), o.league);
        else if (e.searchCategoryGroup === SearchCategoryGroup.CLUB) {
            var d = o.category !== SearchCategory.ANY ? o.category : SearchCategory.KIT;
            this.generateFilter(enums.UISearchFilters.VANITY_CATEGORY, factories.DataProvider.getClubVanityTypesDP(), d),
            o.category !== SearchCategory.VANITY_PLAYER_CELEBRATION && o.category !== SearchCategory.VANITY_AUDIO_GOAL_SCORE && o.category !== SearchCategory.VANITY_AUDIO_CLUB_NICKNAME && (this.generateFilter(enums.UISearchFilters.AUTHENTICITY, factories.DataProvider.getVanityAuthenticityDP(), o.authenticity),
            o.category !== SearchCategory.BALL && (this.generateFilter(enums.UISearchFilters.LEAGUE, factories.DataProvider.getLeagueDP(!0), o.league),
            this.generateFilter(enums.UISearchFilters.CLUB, factories.DataProvider.getTeamDP(o.league), o.club)),
            o.category !== SearchCategory.KIT && o.category !== SearchCategory.BADGE && o.category !== SearchCategory.BALL || (this.generateFilter(enums.UISearchFilters.PRIMARY_COLOR, factories.DataProvider.getVanityColorDP(), o.primaryColor),
            o.category !== SearchCategory.BALL && this.generateFilter(enums.UISearchFilters.SECONDARY_COLOR, factories.DataProvider.getVanityColorDP(), o.secondaryColor)))
        } else if (e.searchCategoryGroup === SearchCategoryGroup.STANDS) {
            var u = o.category !== SearchCategory.ANY ? o.category : SearchCategory.VANITY_TIFO_BASE;
            this.generateFilter(enums.UISearchFilters.VANITY_CATEGORY, factories.DataProvider.getStandsVanityTypesDP(e.isMarketSearch), u),
            this.generateFilter(enums.UISearchFilters.AUTHENTICITY, factories.DataProvider.getVanityAuthenticityDP(), o.authenticity),
            this.generateFilter(enums.UISearchFilters.LEAGUE, factories.DataProvider.getLeagueDP(!0), o.league),
            this.generateFilter(enums.UISearchFilters.CLUB, factories.DataProvider.getTeamDP(o.league), o.club),
            this.generateFilter(enums.UISearchFilters.PRIMARY_COLOR, factories.DataProvider.getVanityColorDP(), o.primaryColor),
            this.generateFilter(enums.UISearchFilters.SECONDARY_COLOR, factories.DataProvider.getVanityColorDP(), o.secondaryColor)
        } else if (e.searchCategoryGroup === SearchCategoryGroup.STADIUM) {
            var h = o.category !== SearchCategory.ANY ? o.category : SearchCategory.STADIUM;
            this.generateFilter(enums.UISearchFilters.VANITY_CATEGORY, factories.DataProvider.getStadiumVanityTypesDP(), h),
            o.category !== SearchCategory.VANITY_STADIUM_BASE_SEAT_COLOR && o.category !== SearchCategory.VANITY_STADIUM_BASE_STRUCTURE_COLOR && (this.generateFilter(enums.UISearchFilters.AUTHENTICITY, factories.DataProvider.getVanityAuthenticityDP(), o.authenticity),
            this.generateFilter(enums.UISearchFilters.LEAGUE, factories.DataProvider.getLeagueDP(!0), o.league),
            this.generateFilter(enums.UISearchFilters.CLUB, factories.DataProvider.getTeamDP(o.league), o.club)),
            o.category !== SearchCategory.VANITY_VIP_AREA && o.category !== SearchCategory.STADIUM && (this.generateFilter(enums.UISearchFilters.PRIMARY_COLOR, factories.DataProvider.getVanityColorDP(), o.primaryColor),
            o.category !== SearchCategory.VANITY_STADIUM_BASE_SEAT_COLOR && this.generateFilter(enums.UISearchFilters.SECONDARY_COLOR, factories.DataProvider.getVanityColorDP(), o.secondaryColor))
        } else if (e.searchCategoryGroup === SearchCategoryGroup.PITCH) {
            var p = o.category !== SearchCategory.ANY ? o.category : SearchCategory.VANITY_STADIUM_BASE_PITCH_LINE_COLOR;
            this.generateFilter(enums.UISearchFilters.VANITY_CATEGORY, factories.DataProvider.getPitchVanityTypesDP(e.isMarketSearch), p),
            o.category !== SearchCategory.VANITY_STADIUM_BASE_PITCH_MOW_PATTERN && this.generateFilter(enums.UISearchFilters.PRIMARY_COLOR, factories.DataProvider.getVanityColorDP(), o.primaryColor),
            o.category === SearchCategory.VANITY_STADIUM_BASE_PITCH_GOAL_PACKAGE && this.generateFilter(enums.UISearchFilters.SECONDARY_COLOR, factories.DataProvider.getVanityColorDP(), o.secondaryColor)
        } else if (e.searchCategoryGroup === SearchCategoryGroup.TROPHIES) {
            p = o.category !== SearchCategory.ANY ? o.category : SearchCategory.VANITY_STADIUM_BASE_PITCH_PROP;
            this.generateFilter(enums.UISearchFilters.VANITY_CATEGORY, factories.DataProvider.getTrophiesVanityTypesDP(), p),
            this.setFilterLock(enums.UISearchFilters.VANITY_CATEGORY, !0)
        }
        var _ = JSUtils.isValid(e.playerData)
          , T = o.type !== SearchType.PLAYER && o.type !== SearchType.STAFF && "authentic" !== o.authenticity;
        this.setFilterLock(enums.UISearchFilters.NATION, _),
        this.setFilterLock(enums.UISearchFilters.LEAGUE, _ || T),
        this.setFilterLock(enums.UISearchFilters.CLUB, _ || T),
        this.searchFilters.forEach(function(e) {
            return i.setFilterImage(e)
        }),
        this.filters.forEach(function(e) {
            return i.getRootElement().appendChild(e.getRootElement())
        })
    }
    ,
    UTItemSearchView.prototype.setPlayerSearch = function(e) {
        this._playerNameSearch.setPlayerData(e),
        this.setFilterValue(enums.UISearchFilters.NATION, -1),
        this.setFilterValue(enums.UISearchFilters.LEAGUE, -1),
        this.setFilterValue(enums.UISearchFilters.CLUB, -1),
        this.setFilterLock(enums.UISearchFilters.NATION, !0),
        this.setFilterLock(enums.UISearchFilters.LEAGUE, !0),
        this.setFilterLock(enums.UISearchFilters.CLUB, !0)
    }
    ,
    UTItemSearchView.prototype.resetPlayerName = function() {
        this._playerNameSearch.clearInput(),
        this.setFilterLock(enums.UISearchFilters.NATION, !1),
        this.setFilterLock(enums.UISearchFilters.LEAGUE, !1),
        this.setFilterLock(enums.UISearchFilters.CLUB, !1)
    }
    ,
    UTItemSearchView.prototype.togglePlayerNameRow = function(e) {
        this._playerNameSearch.setDisplay(e)
    }
    ,
    UTItemSearchView.prototype.togglePileFilter = function(e) {
        this.pileFilter && this.pileFilter.setDisplay(e)
    }
    ,
    UTItemSearchView.prototype.setPileFilter = function(e, t) {
        var i = services.Localization;
        this.pileFilter || (this.pileFilter = new UTSearchFilterControl,
        this.pileFilter.init(),
        this.pileFilter.setIconTable(this.generatePileFilterIconTable()),
        this.pileFilter.setOptions(e),
        this.pileFilter.addTarget(this, this.handleSearchModeChange, EventType.CHANGE),
        this.pileFilter.setInteractionState(!0),
        DOMKit.insertAfter(this.pileFilter.getRootElement(), this._playerNameSearch.getRootElement())),
        this.pileFilter.setIndexByValue(t),
        this.pileFilter.setDefaultLabel(i.localize("search.pagination.searchmode")),
        this.setPileFilterImage()
    }
    ,
    UTItemSearchView.prototype.setPileFilterImage = function() {
        if (DebugUtils.Assert(JSUtils.isValid(this.pileFilter), "Attempted to set search pile image when no pile filter exists."),
        this.pileFilter) {
            var e = this.pileFilter.value;
            this.pileFilter.image = this.generatePileFilterImage("club" === e || "dream" === e ? e : "club")
        }
    }
    ,
    UTItemSearchView.prototype.getPlayerNameSearch = function() {
        return this._playerNameSearch
    }
    ,
    UTItemSearchView.prototype.handleFilterChange = function(e, t, i) {
        this.setFilterImage(e),
        this.onFilterChange.notify(e.setId, e.id, e.value)
    }
    ,
    UTItemSearchView.prototype.handleSearchModeChange = function(e, t, i) {
        this.setPileFilterImage(),
        this.onSearchModeChange.notify(e.value)
    }
    ,
    UTItemSearchView
}(UTView);
UTItemSearchView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-item-search-view"),
        this._playerNameSearch = new UTPlayerSearchControl,
        e.appendChild(this._playerNameSearch.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTItemSearchView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._playerNameSearch.destroy()
}
,
UTItemSearchView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTNumberInputControl = function(t) {
    function UTNumberInputControl() {
        var e = t.call(this) || this;
        return e.maxValue = Number.MAX_SAFE_INTEGER,
        e.minValue = Number.MIN_SAFE_INTEGER,
        e
    }
    return __extends(UTNumberInputControl, t),
    UTNumberInputControl.prototype.getInputValue = function() {
        var e = this.getRootElement()
          , t = JSUtils.parseNumber(e.value, services.Localization.locale.toBCPString());
        return JSUtils.isNumber(t) ? t : 0
    }
    ,
    UTNumberInputControl.prototype.setInputValue = function(e) {
        e > this.maxValue ? e = this.maxValue : e < this.minValue && (e = this.minValue),
        this.getRootElement().value = services.Localization.localizeNumber(e)
    }
    ,
    UTNumberInputControl.prototype.setInputPlaceholder = function(e) {
        this.getRootElement().setAttribute("placeholder", e)
    }
    ,
    Object.defineProperty(UTNumberInputControl.prototype, "value", {
        get: function() {
            return this.getInputValue()
        },
        set: function(e) {
            this.setInputValue(e)
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTNumberInputControl.prototype, "placeholder", {
        set: function(e) {
            this.setInputPlaceholder(e)
        },
        enumerable: !1,
        configurable: !0
    }),
    UTNumberInputControl.prototype.init = function() {
        t.prototype.init.call(this),
        this.setPlaceholder(services.Localization.localize("roles.defaultRole")),
        this.setInteractionState(!0)
    }
    ,
    UTNumberInputControl.prototype.dealloc = function() {
        window.clearTimeout(this.selectionTimeout),
        this.selectionTimeout = 0,
        t.prototype.dealloc.call(this)
    }
    ,
    UTNumberInputControl.prototype._startHandlingEvents = function(e) {
        t.prototype._startHandlingEvents.call(this, e),
        this.eventElement && (this._addListener(EventType.CHANGE, this.eventElement, this.onChange.bind(this)),
        this._addListener(EventType.FOCUS, this.eventElement, this.onFocus.bind(this)),
        this._addListener(EventType.BLUR, this.eventElement, this.onBlur.bind(this)))
    }
    ,
    UTNumberInputControl.prototype.setInteractionState = function(e) {
        if (this._setInteractionStateFlag(e)) {
            var t = this.getRootElement();
            this._interactionState ? this._startHandlingEvents(this.getRootElement()) : this._stopHandlingEvents(!0),
            t.disabled = !this._interactionState,
            this.toggleClass(enums.UIState.DISABLED, !this._interactionState),
            this._interactionState || t !== document.activeElement || t.blur()
        }
    }
    ,
    UTNumberInputControl.prototype.reset = function() {
        this.value = 0
    }
    ,
    UTNumberInputControl.prototype.setPlaceholder = function(e) {
        this.placeholder = e
    }
    ,
    UTNumberInputControl.prototype.setValue = function(e) {
        this.value = e
    }
    ,
    UTNumberInputControl.prototype.getValue = function() {
        return this.value
    }
    ,
    UTNumberInputControl.prototype.setMinValue = function(e) {
        e < Number.MIN_SAFE_INTEGER ? this.minValue = Number.MIN_SAFE_INTEGER : e > Number.MAX_SAFE_INTEGER ? this.minValue = Number.MAX_SAFE_INTEGER : e !== this.minValue && (this.minValue = e),
        this.maxValue < this.minValue && (this.maxValue = this.minValue),
        this.getValue() < this.minValue && this.setValue(this.minValue)
    }
    ,
    UTNumberInputControl.prototype.getMinValue = function() {
        return this.minValue
    }
    ,
    UTNumberInputControl.prototype.setMaxValue = function(e) {
        e > Number.MAX_SAFE_INTEGER ? this.maxValue = Number.MAX_SAFE_INTEGER : e < Number.MIN_SAFE_INTEGER ? this.maxValue = Number.MIN_SAFE_INTEGER : e !== this.maxValue && (this.maxValue = e,
        this.minValue = Math.min(this.minValue, this.maxValue)),
        this.minValue > this.maxValue && (this.minValue = this.maxValue),
        this.getValue() > this.maxValue && this.setValue(this.maxValue)
    }
    ,
    UTNumberInputControl.prototype.getMaxValue = function() {
        return this.maxValue
    }
    ,
    UTNumberInputControl.prototype.sanitizeValue = function() {
        var e = this.getRootElement()
          , t = JSUtils.parseNumber(e.value, services.Localization.locale.toBCPString());
        return JSUtils.isNumber(t) ? t > this.maxValue ? t = this.maxValue : t < this.minValue && (t = this.minValue) : t = 0,
        e.value = services.Localization.localizeNumber(t),
        t
    }
    ,
    UTNumberInputControl.prototype.onFocus = function(e) {
        var t = this.getRootElement();
        t.value = t.value.replace(/\D/g, ""),
        this.selectionTimeout = window.setTimeout(function() {
            return t.setSelectionRange(0, t.value.length)
        }, 50),
        this._triggerActions(EventType.FOCUS)
    }
    ,
    UTNumberInputControl.prototype.onBlur = function(e) {
        clearTimeout(this.selectionTimeout),
        this.selectionTimeout = 0,
        this.sanitizeValue(),
        this._triggerActions(EventType.BLUR)
    }
    ,
    UTNumberInputControl.prototype.onChange = function(e) {
        var t = this.sanitizeValue();
        this._triggerActions(EventType.CHANGE, t)
    }
    ,
    UTNumberInputControl
}(UTControl);
UTNumberInputControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("input");
        e.setAttribute("type", "tel"),
        e.classList.add("ut-number-input-control"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTNumberInputControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTNumberInputControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTCurrencyInputControl = function(t) {
    function UTCurrencyInputControl() {
        var e = t.call(this) || this;
        return e.defaultValue = 0,
        e
    }
    return __extends(UTCurrencyInputControl, t),
    UTCurrencyInputControl.prototype.roundToNearestStep = function(t) {
        var e = JSUtils.find(UTCurrencyInputControl.PRICE_TIERS, function(e) {
            return t >= e.min
        });
        return Math.round(t / e.inc) * e.inc
    }
    ,
    UTCurrencyInputControl.prototype.setInputValue = function(e) {
        var t = Math.max(Math.min(this.roundToNearestStep(0 === e ? this.defaultValue : e), this.maxValue), this.minValue)
          , i = this.getValue();
        this.toggleClass("filled", 0 !== t),
        this.getRootElement().value = 0 < t ? services.Localization.localizeNumber(t) : "",
        t !== i && this._triggerActions(EventType.CHANGE, {
            value: t,
            from: i,
            delta: t - i
        })
    }
    ,
    UTCurrencyInputControl.prototype.setMinValue = function(e) {
        var t = this.roundToNearestStep(e);
        t !== this.minValue && (this.minValue = t,
        this.maxValue = Math.max(this.maxValue, this.minValue),
        this.setValue(Math.max(this.getValue(), this.minValue)))
    }
    ,
    UTCurrencyInputControl.prototype.setMaxValue = function(e) {
        var t = this.roundToNearestStep(e);
        t !== this.maxValue && (this.maxValue = t,
        this.minValue = Math.min(this.minValue, this.maxValue),
        this.setValue(Math.min(this.getValue(), this.maxValue)))
    }
    ,
    UTCurrencyInputControl.prototype.setDefaultValue = function(e) {
        this.defaultValue = e
    }
    ,
    UTCurrencyInputControl.prototype.getDefaultValue = function() {
        return this.defaultValue
    }
    ,
    UTCurrencyInputControl.prototype.increase = function(e) {
        this.value = UTCurrencyInputControl.getIncrementAboveVal(JSUtils.isNumber(e) ? e : this.value)
    }
    ,
    UTCurrencyInputControl.prototype.decrease = function(e) {
        this.value = UTCurrencyInputControl.getIncrementBelowVal(JSUtils.isNumber(e) ? e : this.value)
    }
    ,
    UTCurrencyInputControl.getIncrementBelowVal = function(t) {
        if (DebugUtils.Assert(0 <= t, "Expected a number value greater than or equal to zero."),
        t <= 0)
            return 0;
        var e = JSUtils.find(UTCurrencyInputControl.PRICE_TIERS, function(e) {
            return t > e.min
        });
        return 0 < t - e.inc ? Math.round((t - e.inc) / e.inc) * e.inc : 0
    }
    ,
    UTCurrencyInputControl.getIncrementAboveVal = function(t) {
        if (DebugUtils.Assert(t <= AUCTION_MAX_BID, "Expected a number value no greater than the maximum auction limit."),
        t >= AUCTION_MAX_BID)
            return AUCTION_MAX_BID;
        var e = JSUtils.find(UTCurrencyInputControl.PRICE_TIERS, function(e) {
            return t >= e.min
        });
        return t + e.inc < AUCTION_MAX_BID ? Math.round((t + e.inc) / e.inc) * e.inc : AUCTION_MAX_BID
    }
    ,
    UTCurrencyInputControl.prototype.sanitizeValue = function() {
        var e = this.getRootElement()
          , t = JSUtils.parseNumber(e.value, services.Localization.locale.toBCPString())
          , i = Math.max(Math.min(this.roundToNearestStep(0 !== t && JSUtils.isNumber(t) ? t : this.defaultValue), this.maxValue), this.minValue);
        return e.value = 0 < i ? services.Localization.localizeNumber(i) : "",
        t
    }
    ,
    UTCurrencyInputControl.PRICE_TIERS = [{
        min: 1e5,
        inc: 1e3
    }, {
        min: 5e4,
        inc: 500
    }, {
        min: 1e4,
        inc: 250
    }, {
        min: 1e3,
        inc: 100
    }, {
        min: 150,
        inc: 50
    }, {
        min: 0,
        inc: 150
    }],
    UTCurrencyInputControl
}(UTNumberInputControl)
  , UTNumericInputSpinnerControl = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTNumericInputSpinnerControl() {
        var e = i.call(this) || this;
        return e.decreaseTimeout = 0,
        e.duration = 0,
        e.increaseTimeout = 0,
        e.speedInterval = 50,
        e.startInterval = 250,
        e
    }
    return __extends(UTNumericInputSpinnerControl, i),
    UTNumericInputSpinnerControl.prototype.endIncrease = function() {
        window.clearTimeout(this.increaseTimeout),
        this.increaseTimeout = 0,
        this.duration = 0
    }
    ,
    UTNumericInputSpinnerControl.prototype.endDecrease = function() {
        window.clearTimeout(this.decreaseTimeout),
        this.decreaseTimeout = 0,
        this.duration = 0
    }
    ,
    UTNumericInputSpinnerControl.prototype.beginIncrease = function() {
        if (!this.decreaseTimeout)
            if (this._currencyInput.value < this._currencyInput.getMaxValue()) {
                this._currencyInput.increase(),
                this.duration++;
                var e = this.duration <= 4 ? this.startInterval : this.speedInterval;
                this.increaseTimeout = window.setTimeout(this.beginIncrease.bind(this), e)
            } else
                this.endIncrease()
    }
    ,
    UTNumericInputSpinnerControl.prototype.beginDecrease = function() {
        if (!this.increaseTimeout)
            if (this._currencyInput.value > this._currencyInput.getMinValue()) {
                this._currencyInput.decrease(),
                this.duration++;
                var e = this.duration <= 4 ? this.startInterval : this.speedInterval;
                this.decreaseTimeout = window.setTimeout(this.beginDecrease.bind(this), e)
            } else
                this.endDecrease()
    }
    ,
    UTNumericInputSpinnerControl.prototype.init = function() {
        var t = this;
        i.prototype.init.call(this),
        this._currencyInput.init(),
        this._currencyInput.setPlaceholder(services.Localization.localize("post.spinnerDefaultValue")),
        this._currencyInput.addTarget(this, function() {
            var e = t.getValue();
            t._decrementBtn.setInteractionState(e > t._currencyInput.getMinValue()),
            t._incrementBtn.setInteractionState(e < t._currencyInput.getMaxValue())
        }, EventType.CHANGE);
        var e = this.getValue();
        this._decrementBtn.init(),
        this._decrementBtn.addTarget(this, this.beginDecrease, EventType.TOUCHSTART),
        this._decrementBtn.addTarget(this, this.endDecrease, EventType.TOUCHEND),
        this._decrementBtn.addTarget(this, this.endDecrease, EventType.TOUCHCANCEL),
        this._decrementBtn.setInteractionState(e > this._currencyInput.getMinValue()),
        this._incrementBtn.init(),
        this._incrementBtn.addTarget(this, this.beginIncrease, EventType.TOUCHSTART),
        this._incrementBtn.addTarget(this, this.endIncrease, EventType.TOUCHEND),
        this._incrementBtn.addTarget(this, this.endIncrease, EventType.TOUCHCANCEL),
        this._incrementBtn.setInteractionState(e < this._currencyInput.getMaxValue())
    }
    ,
    UTNumericInputSpinnerControl.prototype.reset = function() {
        this._currencyInput.reset()
    }
    ,
    UTNumericInputSpinnerControl.prototype.setInteractionState = function(e) {
        var t = this.getValue();
        i.prototype.setInteractionState.call(this, e),
        this._currencyInput.setInteractionState(e),
        this._decrementBtn.setInteractionState(e && t > this._currencyInput.getMinValue()),
        this._incrementBtn.setInteractionState(e && t < this._currencyInput.getMaxValue())
    }
    ,
    UTNumericInputSpinnerControl.prototype.getInput = function() {
        return this._currencyInput
    }
    ,
    UTNumericInputSpinnerControl.prototype.getValue = function() {
        return this._currencyInput.value
    }
    ,
    UTNumericInputSpinnerControl.prototype.setValue = function(e) {
        this._currencyInput.value = e
    }
    ,
    UTNumericInputSpinnerControl.prototype.getDefaultValue = function() {
        return this._currencyInput.getDefaultValue()
    }
    ,
    UTNumericInputSpinnerControl.prototype.setDefaultValue = function(e) {
        this._currencyInput.setDefaultValue(e)
    }
    ,
    UTNumericInputSpinnerControl.prototype.getMinValue = function() {
        return this._currencyInput.getMinValue()
    }
    ,
    UTNumericInputSpinnerControl.prototype.setMinValue = function(e) {
        this._currencyInput.setMinValue(e)
    }
    ,
    UTNumericInputSpinnerControl.prototype.getMaxValue = function() {
        return this._currencyInput.getMaxValue()
    }
    ,
    UTNumericInputSpinnerControl.prototype.setMaxValue = function(e) {
        this._currencyInput.setMaxValue(e)
    }
    ,
    UTNumericInputSpinnerControl.prototype.setLimits = function(e, t) {
        var i = this.getValue();
        this._currencyInput.setMinValue(e),
        this._currencyInput.setMaxValue(t),
        this._decrementBtn.setInteractionState(e < i),
        this._incrementBtn.setInteractionState(i < t)
    }
    ,
    UTNumericInputSpinnerControl
}(UTView));
UTNumericInputSpinnerControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-numeric-input-spinner-control"),
        this._decrementBtn = new UTStandardButtonControl,
        this._decrementBtn.getRootElement().classList.add("decrement-value"),
        e.appendChild(this._decrementBtn.getRootElement()),
        this._currencyInput = new UTCurrencyInputControl,
        e.appendChild(this._currencyInput.getRootElement()),
        this._incrementBtn = new UTStandardButtonControl,
        this._incrementBtn.getRootElement().classList.add("increment-value"),
        e.appendChild(this._incrementBtn.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTNumericInputSpinnerControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._decrementBtn.destroy(),
    this._currencyInput.destroy(),
    this._incrementBtn.destroy()
}
,
UTNumericInputSpinnerControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSearchCriteriaPriceView = function(t) {
    function UTSearchCriteriaPriceView() {
        var e = t.call(this) || this;
        return e.label = "",
        e.minPrice = 0,
        e.maxPrice = AUCTION_MAX_BID,
        e.value = 0,
        e
    }
    return __extends(UTSearchCriteriaPriceView, t),
    Object.defineProperty(UTSearchCriteriaPriceView.prototype, "minPrice", {
        get: function() {
            return this._currencyInput.getMinValue()
        },
        set: function(e) {
            this._currencyInput.setMinValue(e)
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTSearchCriteriaPriceView.prototype, "maxPrice", {
        get: function() {
            return this._currencyInput.getMaxValue()
        },
        set: function(e) {
            this._currencyInput.setMaxValue(e)
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTSearchCriteriaPriceView.prototype, "label", {
        get: function() {
            var e;
            return null !== (e = this.__label.textContent) && void 0 !== e ? e : ""
        },
        set: function(e) {
            this.__label.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTSearchCriteriaPriceView.prototype, "value", {
        get: function() {
            return this._currencyInput.getValue()
        },
        set: function(e) {
            this._currencyInput.setValue(e)
        },
        enumerable: !1,
        configurable: !0
    }),
    UTSearchCriteriaPriceView.prototype.init = function() {
        t.prototype.init.call(this),
        this._currencyInput.init()
    }
    ,
    UTSearchCriteriaPriceView.prototype.reset = function() {
        this._currencyInput.reset()
    }
    ,
    UTSearchCriteriaPriceView.prototype.getCurrencyInput = function() {
        return this._currencyInput.getInput()
    }
    ,
    UTSearchCriteriaPriceView
}(UTView);
UTSearchCriteriaPriceView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("price-filter");
        var t = document.createElement("div");
        t.classList.add("info"),
        this.__label = document.createElement("span"),
        this.__label.classList.add("label"),
        t.appendChild(this.__label),
        e.appendChild(t),
        this._currencyInput = new UTNumericInputSpinnerControl,
        e.appendChild(this._currencyInput.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSearchCriteriaPriceView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__label = null,
    this._currencyInput.destroy()
}
,
UTSearchCriteriaPriceView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTMarketSearchFiltersView = function(r) {
    function UTMarketSearchFiltersView() {
        var e = r.call(this) || this;
        return e.pinnedListRowItem = null,
        e
    }
    return __extends(UTMarketSearchFiltersView, r),
    UTMarketSearchFiltersView.prototype.init = function() {
        r.prototype.init.call(this);
        var e = services.Localization;
        this._minBidPriceRow.init(),
        this._minBidPriceRow.label = e.localize("abbr.minimum"),
        this._maxBidPriceRow.init(),
        this._maxBidPriceRow.label = e.localize("abbr.maximum"),
        this._minBuyNowPriceRow.init(),
        this._minBuyNowPriceRow.label = e.localize("abbr.minimum"),
        this._maxBuyNowPriceRow.init(),
        this._maxBuyNowPriceRow.label = e.localize("abbr.maximum");
        var t = this._minBidPriceRow.getCurrencyInput();
        t.addTarget(this, this.eMinBidPriceChanged, EventType.CHANGE),
        t.placeholder = e.localize("roles.defaultRole"),
        t.setMaxValue(UTCurrencyInputControl.getIncrementBelowVal(AUCTION_MAX_BID));
        var i = this._maxBidPriceRow.getCurrencyInput();
        i.addTarget(this, this.eMaxBidPriceChanged, EventType.CHANGE),
        i.placeholder = e.localize("roles.defaultRole"),
        i.setMaxValue(UTCurrencyInputControl.getIncrementBelowVal(AUCTION_MAX_BID));
        var o = this._minBuyNowPriceRow.getCurrencyInput();
        o.addTarget(this, this.eMinBuyPriceChanged, EventType.CHANGE),
        o.placeholder = e.localize("roles.defaultRole");
        var n = this._maxBuyNowPriceRow.getCurrencyInput();
        n.addTarget(this, this.eMaxBuyPriceChanged, EventType.CHANGE),
        n.placeholder = e.localize("roles.defaultRole"),
        this.__clearBidHeader.textContent = e.localize("auctioninfo.bidprice"),
        this.__clearBuyHeader.textContent = e.localize("auctioninfo.buynowprice"),
        this._clearBidPrice.init(),
        this._clearBidPrice.setText(e.localize("search.button.clear")),
        this._clearBidPrice.addTarget(this, this.eClearButtonSelected, EventType.TAP),
        this._clearBidPrice.setInteractionState(!1),
        this._clearBuyPrice.init(),
        this._clearBuyPrice.setText(e.localize("search.button.clear")),
        this._clearBuyPrice.addTarget(this, this.eClearButtonSelected, EventType.TAP),
        this._clearBuyPrice.setInteractionState(!1),
        this._resetButton.init(),
        this._resetButton.addTarget(this, this.eResetButtonSelected, EventType.TAP),
        this._resetButton.setText(e.localize("search.pagination.reset")),
        this._searchButton.init(),
        this._searchButton.addTarget(this, this.eSearchButtonSelected, EventType.TAP),
        this._searchButton.setText(e.localize("button.search")),
        this._searchFilters.init(),
        this._searchFilters.onFilterChange.observe(this, this.eFilterChanged)
    }
    ,
    UTMarketSearchFiltersView.prototype.dealloc = function() {
        this.pinnedListRowItem && (this.pinnedListRowItem.dealloc(),
        this.pinnedListRowItem = null),
        r.prototype.dealloc.call(this)
    }
    ,
    UTMarketSearchFiltersView.prototype.initTabMenuComponent = function() {
        var e = services.Localization;
        this._tabMenu.addTab(SearchBucket.PLAYER, e.localize("search.filters.players")),
        this._tabMenu.addTab(SearchBucket.STAFF, e.localize("search.filters.staff")),
        this._tabMenu.addTab(SearchBucket.CLUB, e.localize("search.filters.club")),
        this._tabMenu.addTab(SearchBucket.CONSUMABLE, e.localize("search.filters.consumables")),
        this._tabMenu.setActiveTab(SearchBucket.PLAYER),
        this._tabMenu.layoutSubviews()
    }
    ,
    UTMarketSearchFiltersView.prototype.setPinnedItem = function(e, t) {
        if (this.pinnedListRowItem && (this.pinnedListRowItem.dealloc(),
        this.pinnedListRowItem = null),
        this.pinnedListRowItem = new UTItemTableCellView,
        t && t.index < UTSquadEntity.FIELD_PLAYERS) {
            var i = new UTSquadSlotChemistryPointsView;
            i.isItemView(),
            i.render(t.chemistry, 0, t.inPreferredPosition),
            i.setState(UTSquadSlotChemistryPointsView.State.NEUTRAL),
            this.pinnedListRowItem.setChemistryPointsComponent(i)
        }
        this.pinnedListRowItem.setData(e),
        this.pinnedListRowItem.render(),
        t && t.index < UTSquadEntity.FIELD_PLAYERS && this.pinnedListRowItem.renderChemistryBreakdown(t.chemistry, t.nationChemistryPoints, t.leagueChemistryPoints, t.clubChemistryPoints),
        this.__pinnedItem.appendChild(this.pinnedListRowItem.getRootElement())
    }
    ,
    UTMarketSearchFiltersView.prototype.getTabMenuComponent = function() {
        return this._tabMenu
    }
    ,
    UTMarketSearchFiltersView.prototype.getPlayerNameSearch = function() {
        return this._searchFilters.getPlayerNameSearch()
    }
    ,
    UTMarketSearchFiltersView.prototype.getFilters = function() {
        return this._searchFilters
    }
    ,
    UTMarketSearchFiltersView.prototype.setFilters = function(e, t) {
        this._searchFilters.setFilters(e, t),
        this._searchFilters.togglePlayerNameRow(e.searchCriteria.type === SearchType.PLAYER)
    }
    ,
    UTMarketSearchFiltersView.prototype.setFilterValue = function(e, t) {
        this._searchFilters.setFilterValue(e, t)
    }
    ,
    UTMarketSearchFiltersView.prototype.setPlayerSearch = function(e) {
        this._searchFilters.setPlayerSearch(e)
    }
    ,
    UTMarketSearchFiltersView.prototype.resetPlayerName = function() {
        this._searchFilters.resetPlayerName()
    }
    ,
    UTMarketSearchFiltersView.prototype.setMinBidPrice = function(e) {
        this._minBidPriceRow.value = e
    }
    ,
    UTMarketSearchFiltersView.prototype.setMaxBidPrice = function(e) {
        this._maxBidPriceRow.value = e
    }
    ,
    UTMarketSearchFiltersView.prototype.setMinBuyNowPrice = function(e) {
        this._minBuyNowPriceRow.value = e
    }
    ,
    UTMarketSearchFiltersView.prototype.setMaxBuyNowPrice = function(e) {
        this._maxBuyNowPriceRow.value = e
    }
    ,
    UTMarketSearchFiltersView.prototype.eClearButtonSelected = function(e, t, i) {
        e === this._clearBidPrice ? (this._minBidPriceRow.value = 0,
        this._maxBidPriceRow.value = 0) : e === this._clearBuyPrice && (this._minBuyNowPriceRow.value = 0,
        this._maxBuyNowPriceRow.value = 0)
    }
    ,
    UTMarketSearchFiltersView.prototype.eMinBidPriceChanged = function(e, t, i) {
        var o = this._minBidPriceRow.value
          , n = this._maxBidPriceRow.value
          , r = this._minBuyNowPriceRow.value;
        this._clearBidPrice.setInteractionState(0 < o || 0 < n),
        0 !== n && n <= o && this.setMaxBidPrice(UTCurrencyInputControl.getIncrementAboveVal(o)),
        0 !== r && r <= o && this.setMinBuyNowPrice(UTCurrencyInputControl.getIncrementAboveVal(o)),
        this._triggerActions(UTMarketSearchFiltersView.Event.MIN_BID_PRICE_CHANGE, {
            value: o
        })
    }
    ,
    UTMarketSearchFiltersView.prototype.eMaxBidPriceChanged = function(e, t, i) {
        var o = this._minBidPriceRow.value
          , n = this._maxBidPriceRow.value
          , r = this._maxBuyNowPriceRow.value;
        this._clearBidPrice.setInteractionState(0 < o || 0 < n),
        0 !== n && n <= o && this.setMinBidPrice(UTCurrencyInputControl.getIncrementBelowVal(n)),
        0 !== r && r <= n && this.setMaxBuyNowPrice(UTCurrencyInputControl.getIncrementAboveVal(n)),
        this._triggerActions(UTMarketSearchFiltersView.Event.MAX_BID_PRICE_CHANGE, {
            value: n
        })
    }
    ,
    UTMarketSearchFiltersView.prototype.eMinBuyPriceChanged = function(e, t, i) {
        var o = this._minBidPriceRow.value
          , n = this._minBuyNowPriceRow.value
          , r = this._maxBuyNowPriceRow.value;
        this._clearBuyPrice.setInteractionState(0 < n || 0 < r),
        0 !== n && n < AUCTION_MIN_BUY ? this.setMinBuyNowPrice(0 < i.delta ? AUCTION_MIN_BUY : 0) : (0 !== n && n <= o && this.setMinBidPrice(UTCurrencyInputControl.getIncrementBelowVal(n)),
        0 !== r && r <= n && this.setMaxBuyNowPrice(UTCurrencyInputControl.getIncrementAboveVal(n)),
        this._triggerActions(UTMarketSearchFiltersView.Event.MIN_BUY_PRICE_CHANGE, {
            value: n
        }))
    }
    ,
    UTMarketSearchFiltersView.prototype.eMaxBuyPriceChanged = function(e, t, i) {
        var o = this._maxBidPriceRow.value
          , n = this._minBuyNowPriceRow.value
          , r = this._maxBuyNowPriceRow.value;
        this._clearBuyPrice.setInteractionState(0 < n || 0 < r),
        0 !== r && r < AUCTION_MIN_BUY ? this.setMaxBuyNowPrice(0 < i.delta ? AUCTION_MIN_BUY : 0) : (0 !== r && r <= o && this.setMaxBidPrice(UTCurrencyInputControl.getIncrementBelowVal(r)),
        0 !== r && r <= n && this.setMinBuyNowPrice(UTCurrencyInputControl.getIncrementBelowVal(r)),
        this._triggerActions(UTMarketSearchFiltersView.Event.MAX_BUY_PRICE_CHANGE, {
            value: r
        }))
    }
    ,
    UTMarketSearchFiltersView.prototype.eResetButtonSelected = function(e, t, i) {
        this._triggerActions(UTMarketSearchFiltersView.Event.RESET)
    }
    ,
    UTMarketSearchFiltersView.prototype.eSearchButtonSelected = function(e, t, i) {
        this._triggerActions(UTMarketSearchFiltersView.Event.SEARCH)
    }
    ,
    UTMarketSearchFiltersView.prototype.eFilterChanged = function(e, t, i, o) {
        this._triggerActions(UTMarketSearchFiltersView.Event.FILTER_CHANGE, {
            id: i,
            setId: t,
            value: o
        })
    }
    ,
    UTMarketSearchFiltersView.Event = Object.freeze({
        FILTER_CHANGE: "UTMarketSearchFiltersView.Event.FILTER_CHANGE",
        MIN_BID_PRICE_CHANGE: "UTMarketSearchFiltersView.Event.MIN_BID_PRICE_CHANGE",
        MAX_BID_PRICE_CHANGE: "UTMarketSearchFiltersView.Event.MAX_BID_PRICE_CHANGE",
        MIN_BUY_PRICE_CHANGE: "UTMarketSearchFiltersView.Event.MIN_BUY_PRICE_CHANGE",
        MAX_BUY_PRICE_CHANGE: "UTMarketSearchFiltersView.Event.MAX_BUY_PRICE_CHANGE",
        RESET: "UTMarketSearchFiltersView.Event.RESET",
        SEARCH: "UTMarketSearchFiltersView.Event.SEARCH"
    }),
    UTMarketSearchFiltersView
}(UTTargetActionView);
function UTMarketSearchFiltersViewController() {
    UTViewController.call(this),
    this._viewmodel = null,
    this._squadContext = null
}
UTMarketSearchFiltersView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-market-search-filters-view"),
        this._tabMenu = new EAFilterBarView,
        e.appendChild(this._tabMenu.getRootElement());
        var t = document.createElement("div");
        t.classList.add("ut-pinned-list-container"),
        t.classList.add("ut-content-container"),
        this.__searchContainer = document.createElement("div"),
        this.__searchContainer.classList.add("ut-content");
        var i = document.createElement("div");
        i.classList.add("ut-pinned-list"),
        this.__pinnedItem = document.createElement("ul"),
        this.__pinnedItem.classList.add("ut-pinned-item"),
        i.appendChild(this.__pinnedItem),
        this._searchFilters = new UTItemSearchView,
        i.appendChild(this._searchFilters.getRootElement());
        var o = document.createElement("div");
        o.classList.add("search-prices");
        var n = document.createElement("div");
        n.classList.add("search-price-header"),
        this.__clearBidHeader = document.createElement("h1"),
        n.appendChild(this.__clearBidHeader),
        this._clearBidPrice = new UTFlatButtonControl,
        this._clearBidPrice.getRootElement().classList.add("camel-case"),
        n.appendChild(this._clearBidPrice.getRootElement()),
        o.appendChild(n),
        this._minBidPriceRow = new UTSearchCriteriaPriceView,
        o.appendChild(this._minBidPriceRow.getRootElement()),
        this._maxBidPriceRow = new UTSearchCriteriaPriceView,
        o.appendChild(this._maxBidPriceRow.getRootElement());
        var r = document.createElement("div");
        r.classList.add("search-price-header"),
        this.__clearBuyHeader = document.createElement("h1"),
        r.appendChild(this.__clearBuyHeader),
        this._clearBuyPrice = new UTFlatButtonControl,
        this._clearBuyPrice.getRootElement().classList.add("camel-case"),
        r.appendChild(this._clearBuyPrice.getRootElement()),
        o.appendChild(r),
        this._minBuyNowPriceRow = new UTSearchCriteriaPriceView,
        o.appendChild(this._minBuyNowPriceRow.getRootElement()),
        this._maxBuyNowPriceRow = new UTSearchCriteriaPriceView,
        o.appendChild(this._maxBuyNowPriceRow.getRootElement()),
        i.appendChild(o),
        this.__searchContainer.appendChild(i);
        var s = document.createElement("div");
        s.classList.add("button-container"),
        this._resetButton = new UTStandardButtonControl,
        s.appendChild(this._resetButton.getRootElement()),
        this._searchButton = new UTStandardButtonControl,
        this._searchButton.getRootElement().classList.add("call-to-action"),
        s.appendChild(this._searchButton.getRootElement()),
        this.__searchContainer.appendChild(s),
        t.appendChild(this.__searchContainer),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTMarketSearchFiltersView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._tabMenu.destroy(),
    this.__searchContainer = null,
    this.__pinnedItem = null,
    this._searchFilters.destroy(),
    this.__clearBidHeader = null,
    this._clearBidPrice.destroy(),
    this._minBidPriceRow.destroy(),
    this._maxBidPriceRow.destroy(),
    this.__clearBuyHeader = null,
    this._clearBuyPrice.destroy(),
    this._minBuyNowPriceRow.destroy(),
    this._maxBuyNowPriceRow.destroy(),
    this._resetButton.destroy(),
    this._searchButton.destroy()
}
,
UTMarketSearchFiltersView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
JSUtils.inherits(UTMarketSearchFiltersViewController, UTViewController),
UTMarketSearchFiltersViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass(),
        this._viewmodel || (this._viewmodel = new UTBucketedItemSearchViewModel),
        this._viewmodel.searchCriteria.type === SearchType.ANY && (this._viewmodel.searchCriteria.type = SearchType.PLAYER);
        var e = getAppMain().getConfigRepository().getConfigObject(EAConfigurationRepository.KEY_ITEMS_PER_PAGE)
          , t = 1 + (JSUtils.isValid(e) ? e[EAConfigurationRepository.ITEMS_PER_PAGE.TRANSFER_MARKET] : 20);
        this._viewmodel.searchCriteria.count = t,
        this._viewmodel.searchFeature = ItemSearchFeature.MARKET;
        var i = this.getView();
        i.addTarget(this, this._eResetSelected, UTMarketSearchFiltersView.Event.RESET),
        i.addTarget(this, this._eSearchSelected, UTMarketSearchFiltersView.Event.SEARCH),
        i.addTarget(this, this._eFilterChanged, UTMarketSearchFiltersView.Event.FILTER_CHANGE),
        i.addTarget(this, this._eMinBidPriceChanged, UTMarketSearchFiltersView.Event.MIN_BID_PRICE_CHANGE),
        i.addTarget(this, this._eMaxBidPriceChanged, UTMarketSearchFiltersView.Event.MAX_BID_PRICE_CHANGE),
        i.addTarget(this, this._eMinBuyPriceChanged, UTMarketSearchFiltersView.Event.MIN_BUY_PRICE_CHANGE),
        i.addTarget(this, this._eMaxBuyPriceChanged, UTMarketSearchFiltersView.Event.MAX_BUY_PRICE_CHANGE),
        this._viewmodel.getCategoryTabVisible() && (i.initTabMenuComponent(),
        i.getTabMenuComponent().addTarget(this, this._eSearchCategoryChanged, EventType.TAP)),
        this._squadContext ? isPhone() || i.addClass("narrow") : i.addClass("floating"),
        i.getPlayerNameSearch().addTarget(this, this._ePlayerNameChanged, EventType.CHANGE),
        TelemetryManager.trackPage(TelemetryManager.Sections.AUCTIONS, "Transfer Market Search Filters")
    }
}
,
UTMarketSearchFiltersViewController.prototype.initWithSearchCriteria = function initWithSearchCriteria(e) {
    this.initialized || (this._viewmodel = new UTBucketedItemSearchViewModel,
    this._viewmodel.searchFeature = ItemSearchFeature.MARKET,
    this._viewmodel.defaultSearchCriteria.type = e.type,
    this._viewmodel.defaultSearchCriteria.category = e.category,
    this._viewmodel.updateSearchCriteria(e),
    this.init())
}
,
UTMarketSearchFiltersViewController.prototype.initWithSquadContext = function initWithSquadContext(e) {
    if (!this.initialized) {
        this._squadContext = e;
        var t = new UTSearchCriteriaDTO
          , i = this._squadContext.getCurrentSlot()
          , o = i.item;
        if (0 <= i.index) {
            var n = o.isManager();
            t.type = n ? SearchType.STAFF : SearchType.PLAYER,
            t.category = n ? SearchCategory.MANAGER : SearchCategory.ANY,
            t.position = i.generalPositionName || SearchType.ANY,
            o.concept && (t.maskedDefId = o.databaseId)
        }
        this.initWithSearchCriteria(t),
        this._viewmodel.setCategoryTabVisible(!1)
    }
}
,
UTMarketSearchFiltersViewController.prototype.dealloc = function dealloc() {
    this._viewmodel = null,
    this._squadContext = null,
    this.superclass()
}
,
UTMarketSearchFiltersViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTMarketSearchFiltersView
}
,
UTMarketSearchFiltersViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "Transfer Market Search"
}
,
UTMarketSearchFiltersViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.search")
}
,
UTMarketSearchFiltersViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var e = this.getView();
    if (this._viewmodel.getCategoryTabVisible() ? e.getTabMenuComponent().setActiveTab(this._viewmodel.searchBucket) : e.getTabMenuComponent().clearTabs(),
    e.setFilters(this._viewmodel),
    this._viewmodel.playerData && e.setPlayerSearch(this._viewmodel.playerData),
    this._squadContext && (e.setPinnedItem(this._squadContext.getCurrentSlot().getItem(), this._squadContext.getCurrentSlot()),
    this._squadContext.getCurrentSlot().getItem().isManager())) {
        var t = this.getView().getFilters();
        t.setFilterDefaultValue(enums.UISearchFilters.TYPE, SearchCategory.MANAGER),
        t.setFilterValue(enums.UISearchFilters.TYPE, SearchCategory.MANAGER),
        t.setFilterLock(enums.UISearchFilters.TYPE, !0)
    }
    e.setMinBidPrice(this._viewmodel.searchCriteria.minBid),
    e.setMaxBidPrice(this._viewmodel.searchCriteria.maxBid),
    e.setMinBuyNowPrice(this._viewmodel.searchCriteria.minBuy),
    e.setMaxBuyNowPrice(this._viewmodel.searchCriteria.maxBuy)
}
,
UTMarketSearchFiltersViewController.prototype._eMinBidPriceChanged = function _eMinBidPriceChanged(e, t, i) {
    JSUtils.isNumber(i.value) && (this._viewmodel.searchCriteria.minBid = i.value)
}
,
UTMarketSearchFiltersViewController.prototype._eMaxBidPriceChanged = function _eMaxBidPriceChanged(e, t, i) {
    JSUtils.isNumber(i.value) && (this._viewmodel.searchCriteria.maxBid = i.value)
}
,
UTMarketSearchFiltersViewController.prototype._eMinBuyPriceChanged = function _eMinBuyPriceChanged(e, t, i) {
    JSUtils.isNumber(i.value) && (this._viewmodel.searchCriteria.minBuy = i.value)
}
,
UTMarketSearchFiltersViewController.prototype._eMaxBuyPriceChanged = function _eMaxBuyPriceChanged(e, t, i) {
    JSUtils.isNumber(i.value) && (this._viewmodel.searchCriteria.maxBuy = i.value)
}
,
UTMarketSearchFiltersViewController.prototype._eResetSelected = function _eResetSelected() {
    var e = this.getView();
    this._viewmodel.resetSearch(),
    e.setFilters(this._viewmodel),
    e._minBidPriceRow.reset(),
    e._maxBidPriceRow.reset(),
    e._minBuyNowPriceRow.reset(),
    e._maxBuyNowPriceRow.reset(),
    services.User.getUser().marketSearchCriteria.reset()
}
,
UTMarketSearchFiltersViewController.prototype._eSearchSelected = function _eSearchSelected() {
    var n = this._viewmodel.searchCriteria
      , e = services.User.getUser().marketSearchCriteria;
    n.offset = 0,
    e.update(n),
    e.maskedDefId = 0;
    var r = this.getNavigationController();
    r && services.MyStadium.getStadium().observe(this, function _onGetStadiumComplete(e, t) {
        e.unobserve(this);
        var i = null;
        t.success && t.data.stadium && (i = t.data.stadium);
        var o = !(isPhone() || this._squadContext) ? new UTMarketSearchResultsSplitViewController : new UTMarketSearchResultsViewController;
        this._squadContext && (TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.BUTTON_PRESS, "Squad Slot Detail View - Search from Transfer Market Filters"),
        o.setSquadContext(this._squadContext)),
        services.Item.clearTransferMarketCache(),
        o.initWithSearchCriteria(n),
        i && o.setStadiumViewModel(new UTMyStadiumViewModel(i)),
        r.pushViewController(o, !0)
    })
}
,
UTMarketSearchFiltersViewController.prototype._eFilterChanged = function _eFilterChanged(e, t, i) {
    JSUtils.isValid(i.setId) && JSUtils.isValid(i.id) && JSUtils.isValid(i.value) && (this._viewmodel.updateFromFilterChange(i.setId, i.id, i.value),
    this.getView().setFilters(this._viewmodel))
}
,
UTMarketSearchFiltersViewController.prototype._ePlayerNameChanged = function _ePlayerNameChanged() {
    var e = this.getView()
      , t = e.getPlayerNameSearch().getSelected();
    JSUtils.isValid(t) ? this._viewmodel.setPlayerData(t) : this._viewmodel.clearPlayerData(),
    e.setFilters(this._viewmodel),
    JSUtils.isValid(t) && (e.setFilterValue(enums.UISearchFilters.NATION, -1),
    e.setFilterValue(enums.UISearchFilters.LEAGUE, -1),
    e.setFilterValue(enums.UISearchFilters.CLUB, -1))
}
,
UTMarketSearchFiltersViewController.prototype._eSearchCategoryChanged = function _eSearchCategoryChanged(e, t, i) {
    if (i.id !== this._viewmodel.searchBucket) {
        var o = this.getView();
        i.id !== SearchBucket.PLAYER && (this._viewmodel.clearPlayerData(),
        o.resetPlayerName()),
        this._viewmodel.setSearchBucket(i.id),
        o.setFilters(this._viewmodel)
    }
}
,
services.URL.registerDeepLinkID(DeepLinkSection.AUCTION, function(e) {
    var t = !getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_HIDE_TRANSFER_MARKET) && services.User.getUser().hasTradeAccess() && services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED)
      , i = getAppMain().getRootViewController();
    if (i.setGameViewTab(UTGameTabBarController.TabTag.TRANSFERS),
    t) {
        var o, n = i.getPresentedViewController().getCurrentViewController();
        if (services.Item.clearTransferMarketCache(),
        n && 0 === e.length)
            (o = new UTMarketSearchFiltersViewController).initWithSearchCriteria(services.User.getUser().marketSearchCriteria),
            n.pushViewController(o);
        else if (n) {
            var r = new UTSearchCriteriaDTO;
            r.defId = [parseInt(e[0], 10)],
            (o = isPhone() ? new UTMarketSearchResultsViewController : new UTMarketSearchResultsSplitViewController).initWithSearchCriteria(r),
            n.pushViewController(o)
        }
    }
});
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTQuickListPanelView = function(t) {
    function UTQuickListPanelView() {
        var e = t.call(this) || this;
        return e.priceLimitsSet = !1,
        e
    }
    return __extends(UTQuickListPanelView, t),
    UTQuickListPanelView.prototype.init = function() {
        t.prototype.init.call(this),
        this._bidNumericStepper.init(),
        this._bidNumericStepper.setMinValue(AUCTION_MIN_BID),
        this._bidNumericStepper.getInput().addTarget(this, this.onBidPriceChanged, EventType.CHANGE),
        this._buyNowNumericStepper.init(),
        this._buyNowNumericStepper.setMinValue(AUCTION_MIN_BUY),
        this._buyNowNumericStepper.getInput().addTarget(this, this.onBuyPriceChanged, EventType.CHANGE);
        var e = services.Localization;
        this._durationPicker.init(),
        this._durationPicker.setOptions([new UTDataProviderEntryDTO(0,3600,e.localize("auctionduration.hour.singular")), new UTDataProviderEntryDTO(1,10800,e.localize("auctionduration.hour.plural", [e.localizeNumber(3)])), new UTDataProviderEntryDTO(2,21600,e.localize("auctionduration.hour.plural", [e.localizeNumber(6)])), new UTDataProviderEntryDTO(3,43200,e.localize("auctionduration.hour.plural", [e.localizeNumber(12)])), new UTDataProviderEntryDTO(4,86400,e.localize("auctionduration.day.singular")), new UTDataProviderEntryDTO(5,259200,e.localize("auctionduration.day.plural", [e.localizeNumber(3)]))]),
        this._durationPicker.setIndex(repositories.Item.cachedDurationIndex),
        this._durationPicker.addTarget(this, this._eDurationChanged, EventType.CHANGE),
        this.__boughtPriceLabel.textContent = e.localize("auctioninfo.boughtfor"),
        this.__minPriceLabel.textContent = e.localize("auctioninfo.startprice"),
        this.__maxPriceLabel.textContent = e.localize("auctioninfo.buynowprice"),
        this.__duration.textContent = e.localize("auctioninfo.duration"),
        this._btnToggle.init(),
        this._btnToggle.addTarget(this, this._eToggle, EventType.TAP),
        this._listButton.init(),
        this._listButton.setText(e.localize("infopanel.label.listitem")),
        this._listButton.addTarget(this, this._eListSelected, EventType.TAP)
    }
    ,
    UTQuickListPanelView.prototype.dealloc = function() {
        this._durationPicker.removeTarget(this, this._eDurationChanged, EventType.CHANGE),
        t.prototype.dealloc.call(this)
    }
    ,
    UTQuickListPanelView.prototype.setTitle = function(e) {
        this._btnToggle.setText(e)
    }
    ,
    UTQuickListPanelView.prototype.onBidPriceChanged = function(e, t, i) {
        var o = this._bidNumericStepper.getValue()
          , n = this._buyNowNumericStepper.getValue();
        n <= o && (n < this._buyNowNumericStepper.getMaxValue() ? this._buyNowNumericStepper.getInput().increase(o) : this._bidNumericStepper.getInput().decrease(n))
    }
    ,
    UTQuickListPanelView.prototype.onBuyPriceChanged = function(e, t, i) {
        var o = this._bidNumericStepper.getValue()
          , n = this._buyNowNumericStepper.getValue();
        n <= o && o !== this._bidNumericStepper.getMinValue() && this._bidNumericStepper.getInput().decrease(n)
    }
    ,
    UTQuickListPanelView.prototype._eDurationChanged = function(e, t, i) {
        repositories.Item.cachedDurationIndex = e.getIndex()
    }
    ,
    UTQuickListPanelView.prototype.makeListButtonBusy = function(e) {
        this._listButton.setInteractionState(!e)
    }
    ,
    UTQuickListPanelView.prototype.setPriceLimits = function(e) {
        var t = this;
        this.priceLimitsSet = !!e;
        var i = services.Localization
          , o = e ? e.minimum : AUCTION_MIN_BID
          , n = UTCurrencyInputControl.getIncrementAboveVal(o)
          , r = e ? e.maximum : AUCTION_MAX_BID
          , s = UTCurrencyInputControl.getIncrementBelowVal(r);
        this.__minPrice.textContent = i.localize("auction.list.min") + " " + i.localizeNumber(o),
        this.__maxPrice.textContent = i.localize("auction.list.max") + " " + i.localizeNumber(r),
        this._bidNumericStepper.setLimits(o, s),
        this._bidNumericStepper.setValue(o),
        this._buyNowNumericStepper.setLimits(n, r),
        this._buyNowNumericStepper.setDefaultValue(r),
        this._buyNowNumericStepper.setValue(r),
        DOMKit.HTMLCollectionToArray(this.getRootElement().getElementsByClassName("buttonInfoLabel")).forEach(function(e) {
            DOMKit.toggleClass(e, "hasPriceBanding", t.priceLimitsSet)
        })
    }
    ,
    UTQuickListPanelView.prototype.setBidValue = function(e) {
        this._bidNumericStepper.setValue(0 < e ? Math.max(AUCTION_MIN_BID, Math.min(e, AUCTION_MAX_BID)) : AUCTION_MIN_BID),
        this._buyNowNumericStepper.getValue() <= this._bidNumericStepper.getValue() && this._buyNowNumericStepper.setValue(Math.min(UTCurrencyInputControl.getIncrementAboveVal(this._bidNumericStepper.getValue()), AUCTION_MAX_BID))
    }
    ,
    UTQuickListPanelView.prototype.setBuyNowValue = function(e) {
        this._buyNowNumericStepper.setValue(0 < e ? Math.max(UTCurrencyInputControl.getIncrementAboveVal(AUCTION_MIN_BID), Math.min(e, AUCTION_MAX_BID)) : 0);
        var t = this._bidNumericStepper.getValue()
          , i = this._buyNowNumericStepper.getValue();
        0 < i && i <= t && this._bidNumericStepper.setValue(UTCurrencyInputControl.getIncrementBelowVal(i))
    }
    ,
    UTQuickListPanelView.prototype.setBoughtPrice = function(e) {
        this.__boughtPriceValue.textContent = 0 < e ? services.Localization.localizeNumber(e) : "",
        DOMKit.toggleClass(this.__boughtPrice, "hasPreviousPrice", 0 < e)
    }
    ,
    UTQuickListPanelView.prototype.hasPriceLimits = function() {
        return this.priceLimitsSet
    }
    ,
    UTQuickListPanelView.prototype.toggle = function() {
        this._btnToggle.toggleClass("open", !this._btnToggle.hasClass("open")),
        DOMKit.toggleClass(this.__panelActions, "open")
    }
    ,
    UTQuickListPanelView.prototype.open = function() {
        this._btnToggle.addClass("open"),
        DOMKit.addClass(this.__panelActions, "open")
    }
    ,
    UTQuickListPanelView.prototype.close = function() {
        this._btnToggle.removeClass("open"),
        DOMKit.removeClass(this.__panelActions, "open")
    }
    ,
    UTQuickListPanelView.prototype.toggleDisplay = function(e) {
        this.setDisplay(e)
    }
    ,
    UTQuickListPanelView.prototype._eToggle = function(e, t, i) {
        this._triggerActions("panelToggle", {
            openState: this.hasClass("open")
        })
    }
    ,
    UTQuickListPanelView.prototype._eListSelected = function(e, t, i) {
        this._triggerActions(enums.UIItemActionEvent.LIST_ON_MARKET, {
            bidAmount: this._bidNumericStepper.getValue(),
            buyAmount: this._buyNowNumericStepper.getValue(),
            duration: parseInt(this._durationPicker.value, 10)
        })
    }
    ,
    UTQuickListPanelView
}(UTTargetActionView);
UTQuickListPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-quick-list-panel-view");
        var t = document.createElement("div");
        t.classList.add("ut-button-group"),
        this._btnToggle = new UTGroupButtonControl,
        this._btnToggle.getRootElement().classList.add("accordian"),
        t.appendChild(this._btnToggle.getRootElement()),
        e.appendChild(t),
        this.__panelActions = document.createElement("div"),
        this.__panelActions.classList.add("panelActions"),
        this.__boughtPrice = document.createElement("div"),
        this.__boughtPrice.classList.add("boughtPrice"),
        this.__boughtPrice.classList.add("panelActionRow"),
        this.__boughtPriceLabel = document.createElement("span"),
        this.__boughtPriceLabel.classList.add("boughtPriceLabel"),
        this.__boughtPrice.appendChild(this.__boughtPriceLabel),
        this.__boughtPriceValue = document.createElement("span"),
        this.__boughtPriceValue.classList.add("currency-coins"),
        this.__boughtPriceValue.classList.add("boughtPriceValue"),
        this.__boughtPrice.appendChild(this.__boughtPriceValue),
        this.__panelActions.appendChild(this.__boughtPrice);
        var i = document.createElement("div");
        i.classList.add("panelActionRow");
        var o = document.createElement("div");
        o.classList.add("buttonInfoLabel"),
        this.__minPriceLabel = document.createElement("span"),
        this.__minPriceLabel.classList.add("spinnerLabel"),
        o.appendChild(this.__minPriceLabel),
        this.__minPrice = document.createElement("span"),
        this.__minPrice.classList.add("currency-coins"),
        this.__minPrice.classList.add("bandingLabel"),
        o.appendChild(this.__minPrice),
        i.appendChild(o),
        this._bidNumericStepper = new UTNumericInputSpinnerControl,
        i.appendChild(this._bidNumericStepper.getRootElement()),
        this.__panelActions.appendChild(i);
        var n = document.createElement("div");
        n.classList.add("panelActionRow");
        var r = document.createElement("div");
        r.classList.add("buttonInfoLabel"),
        this.__maxPriceLabel = document.createElement("span"),
        this.__maxPriceLabel.classList.add("spinnerLabel"),
        r.appendChild(this.__maxPriceLabel),
        this.__maxPrice = document.createElement("span"),
        this.__maxPrice.classList.add("currency-coins"),
        this.__maxPrice.classList.add("bandingLabel"),
        r.appendChild(this.__maxPrice),
        n.appendChild(r),
        this._buyNowNumericStepper = new UTNumericInputSpinnerControl,
        n.appendChild(this._buyNowNumericStepper.getRootElement()),
        this.__panelActions.appendChild(n);
        var s = document.createElement("div");
        s.classList.add("panelActionRow"),
        this.__duration = document.createElement("div"),
        this.__duration.classList.add("durationLabel"),
        this.__duration.classList.add("buttonInfoLabel"),
        s.appendChild(this.__duration),
        this._durationPicker = new UTDropDownControl,
        s.appendChild(this._durationPicker.getRootElement()),
        this.__panelActions.appendChild(s),
        this._listButton = new UTStandardButtonControl,
        this._listButton.getRootElement().classList.add("call-to-action"),
        this.__panelActions.appendChild(this._listButton.getRootElement()),
        e.appendChild(this.__panelActions),
        this.__root = e,
        this._generated = !0
    }
}
,
UTQuickListPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._btnToggle.destroy(),
    this.__panelActions = null,
    this.__boughtPrice = null,
    this.__boughtPriceLabel = null,
    this.__boughtPriceValue = null,
    this.__minPriceLabel = null,
    this.__minPrice = null,
    this._bidNumericStepper.destroy(),
    this.__maxPriceLabel = null,
    this.__maxPrice = null,
    this._buyNowNumericStepper.destroy(),
    this.__duration = null,
    this._durationPicker.destroy(),
    this._listButton.destroy()
}
,
UTQuickListPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTQuickListPanelViewController = function(t) {
    function UTQuickListPanelViewController() {
        var e = t.call(this) || this;
        return e.item = null,
        e.onList = new EAObservable,
        e
    }
    return __extends(UTQuickListPanelViewController, t),
    UTQuickListPanelViewController.prototype.init = function() {
        if (!this.initialized) {
            t.prototype.init.call(this);
            var e = this.getView();
            e.addTarget(this, this._onList, enums.UIItemActionEvent.LIST_ON_MARKET),
            e.addTarget(this, this._onOpen, "panelToggle")
        }
    }
    ,
    UTQuickListPanelViewController.prototype.initWithItem = function(e) {
        this.initialized || (this.item = e,
        this.init())
    }
    ,
    UTQuickListPanelViewController.prototype.dealloc = function() {
        this.onList.dealloc(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTQuickListPanelViewController.prototype._getViewInstanceFromData = function() {
        return new UTQuickListPanelView
    }
    ,
    UTQuickListPanelViewController.prototype.renderView = function() {
        var e, t, i, o = this.getView(), n = null === (e = this.item) || void 0 === e ? void 0 : e.getAuctionData(), r = null === (t = this.item) || void 0 === t ? void 0 : t.getPriceLimits();
        r && o.setPriceLimits(r);
        var s = null === (i = this.item) || void 0 === i ? void 0 : i.lastSalePrice;
        o.setBoughtPrice(null != s ? s : 0),
        n && n.isValid() && n.isExpired() && n.tradeOwner && (o.setBidValue(0 < n.currentBid ? n.currentBid : n.startingBid),
        o.setBuyNowValue(n.buyNowPrice))
    }
    ,
    UTQuickListPanelViewController.prototype.setItem = function(e) {
        this.item = e,
        this.renderView()
    }
    ,
    UTQuickListPanelViewController.prototype.viewDidAppear = function() {
        this.renderView()
    }
    ,
    UTQuickListPanelViewController.prototype._onList = function(e, t, i) {
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.item && services.Item.list(this.item, i.bidAmount, i.buyAmount, i.duration).observe(this, function onListComplete(e, t) {
            if (e.unobserve(this),
            t.success)
                this.onList.notify();
            else {
                var i = t.error ? t.error.code : t.status;
                if (NetworkErrorManager.checkCriticalStatus(i))
                    NetworkErrorManager.handleStatus(i);
                else {
                    var o = void 0;
                    switch (i) {
                    case HttpStatusCode.FORBIDDEN:
                        o = "popup.error.list.forbidden.message";
                        break;
                    case UtasErrorCode.PERMISSION_DENIED:
                        o = "popup.error.list.PermissionDenied";
                        break;
                    case UtasErrorCode.STATE_INVALID:
                        o = "popup.error.list.InvalidState";
                        break;
                    case UtasErrorCode.DESTINATION_FULL:
                        o = "popup.error.tradetoken.SellItemTradePileFull";
                        break;
                    case UtasErrorCode.CARD_IN_TRADE:
                        o = "popup.error.tradetoken.ItemInTradeOffer";
                        break;
                    default:
                        o = "popup.error.list.InvalidState"
                    }
                    services.Notification.queue([services.Localization.localize(o), UINotificationType.NEGATIVE])
                }
            }
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    UTQuickListPanelViewController.prototype._onOpen = function(e, t, i) {
        var n = this
          , r = this.getView();
        function _onGetMarketDataComplete(e, t) {
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
            NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : (this.renderView(),
            r.open())
        }
        i && !i.openState ? services.Item.requestTransferItems().observe(this, function(e, t) {
            var i;
            e.unobserve(n);
            var o = (JSUtils.isObject(t.response) ? t.response.items : []).filter(function(e) {
                return e.getAuctionData().isSelling()
            });
            t.success && o && o.length >= repositories.Item.getPileSize(ItemPile.TRANSFER) ? utils.PopupManager.showAlert(utils.PopupManager.Alerts.HIT_MAX_LISTING) : n.item && !(null === (i = n.item) || void 0 === i ? void 0 : i.hasPriceLimits()) ? (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
            services.Item.requestMarketData(n.item).observe(n, _onGetMarketDataComplete)) : r.hasPriceLimits() ? r.toggle() : (n.renderView(),
            r.open())
        }) : r.close()
    }
    ,
    UTQuickListPanelViewController
}(UTViewController)
  , UTQuickSellPopupView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTQuickSellPopupView() {
        return e.call(this) || this
    }
    return __extends(UTQuickSellPopupView, e),
    UTQuickSellPopupView.prototype.init = function() {
        this._cancelBtn.init(),
        this._cancelBtn.setText(services.Localization.localize("common.dialog.cancel")),
        this._cancelBtn.setInteractionState(!0),
        this._confirmBtn.init(),
        this._confirmBtn.setInteractionState(!1),
        this._minusBtn.init(),
        this._minusBtn.setInteractionState(!0),
        this._plusBtn.init(),
        this._plusBtn.setInteractionState(!0),
        this._quickSellInput.init(),
        this._quickSellInput.setInteractionState(!0)
    }
    ,
    UTQuickSellPopupView.prototype.dealloc = function() {
        e.prototype.dealloc.call(this)
    }
    ,
    UTQuickSellPopupView.prototype.focus = function() {
        this._quickSellInput.getRootElement().focus()
    }
    ,
    UTQuickSellPopupView.prototype.render = function(e, t, i, o) {
        var n = services.Localization
          , r = n.localize("club.quicksell.hint", [o.toString()]);
        this.__titleText.textContent = e,
        this._confirmBtn.setText(t),
        this.__total.textContent = n.localize("club.quicksell.total", [i.toString()]),
        this.__hint.textContent = "[" + r + "]",
        this.__quickSellMsg.textContent = n.localize("club.quicksell.intro"),
        this.__quickSellInputLabel.textContent = n.localize("club.quicksell.label")
    }
    ,
    UTQuickSellPopupView.prototype.getSellCount = function() {
        return this._quickSellInput.value
    }
    ,
    UTQuickSellPopupView.prototype.setSellCount = function(e) {
        this._quickSellInput.value = e
    }
    ,
    UTQuickSellPopupView.prototype.getConfirmBtn = function() {
        return this._confirmBtn
    }
    ,
    UTQuickSellPopupView.prototype.getCancelBtn = function() {
        return this._cancelBtn
    }
    ,
    UTQuickSellPopupView.prototype.getIncrementBtn = function() {
        return this._plusBtn
    }
    ,
    UTQuickSellPopupView.prototype.getDecrementBtn = function() {
        return this._minusBtn
    }
    ,
    UTQuickSellPopupView.prototype.getSellCountInput = function() {
        return this._quickSellInput
    }
    ,
    UTQuickSellPopupView.prototype.setDiscardValue = function(e) {
        this.__quickSellTotalCoins.textContent = e.toString()
    }
    ,
    UTQuickSellPopupView.prototype.enableDisableIncrements = function(e) {
        this._minusBtn.setInteractionState(!1),
        this._plusBtn.setInteractionState(!1),
        1 < this.getSellCount() && this._minusBtn.setInteractionState(!0),
        this.getSellCount() < e && this._plusBtn.setInteractionState(!0)
    }
    ,
    UTQuickSellPopupView.prototype.setConfirmButtonEnabled = function(e) {
        this._confirmBtn.setInteractionState(e)
    }
    ,
    UTQuickSellPopupView.Event = Object.freeze({
        CHANGE: "change"
    }),
    UTQuickSellPopupView
}(UTTargetActionView));
UTQuickSellPopupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-quick-sell");
        var t = document.createElement("header");
        this.__titleText = document.createElement("h1"),
        t.appendChild(this.__titleText),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("bodySection"),
        this.__quickSellMsg = document.createElement("p"),
        this.__quickSellMsg.classList.add("ut-quick-sell--msg"),
        i.appendChild(this.__quickSellMsg);
        var o = document.createElement("div");
        o.classList.add("ut-quick-sell--input-container"),
        this.__quickSellInputLabel = document.createElement("label"),
        this.__quickSellInputLabel.classList.add("ut-sell-quick--label"),
        o.appendChild(this.__quickSellInputLabel);
        var n = document.createElement("div");
        n.classList.add("ut-quick-sell--input"),
        this._minusBtn = new UTStandardButtonControl,
        this._minusBtn.getRootElement().classList.add("call-to-action"),
        n.appendChild(this._minusBtn.getRootElement()),
        this._quickSellInput = new UTNumberInputControl,
        n.appendChild(this._quickSellInput.getRootElement()),
        this._plusBtn = new UTStandardButtonControl,
        this._plusBtn.getRootElement().classList.add("call-to-action"),
        n.appendChild(this._plusBtn.getRootElement());
        var r = document.createElement("div");
        r.classList.add("ut-quick-sell--total-coins"),
        this.__quickSellTotalCoins = document.createElement("span"),
        r.appendChild(this.__quickSellTotalCoins),
        n.appendChild(r),
        o.appendChild(n);
        var s = document.createElement("div");
        this.__total = document.createElement("span"),
        this.__total.classList.add("ut-quick-sell--total"),
        s.appendChild(this.__total),
        this.__hint = document.createElement("span"),
        this.__hint.classList.add("ut-quick-sell--hint"),
        s.appendChild(this.__hint),
        o.appendChild(s),
        i.appendChild(o),
        e.appendChild(i);
        var a = document.createElement("div");
        a.classList.add("ut-button-group"),
        this._confirmBtn = new UTGroupButtonControl,
        a.appendChild(this._confirmBtn.getRootElement()),
        this._cancelBtn = new UTGroupButtonControl,
        this._cancelBtn.getRootElement().classList.add("negative"),
        a.appendChild(this._cancelBtn.getRootElement()),
        e.appendChild(a),
        this.__root = e,
        this._generated = !0
    }
}
,
UTQuickSellPopupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__titleText = null,
    this.__quickSellMsg = null,
    this.__quickSellInputLabel = null,
    this._minusBtn.destroy(),
    this._quickSellInput.destroy(),
    this._plusBtn.destroy(),
    this.__quickSellTotalCoins = null,
    this.__total = null,
    this.__hint = null,
    this._confirmBtn.destroy(),
    this._cancelBtn.destroy()
}
,
UTQuickSellPopupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTQuickSellPopupViewController = function(n) {
    function UTQuickSellPopupViewController(e, t, i) {
        var o = n.call(this) || this;
        return o.discardValue = i,
        o.onConfirm = new EAObservable,
        o.totalCount = e,
        o.untradeableCount = t,
        o
    }
    return __extends(UTQuickSellPopupViewController, n),
    UTQuickSellPopupViewController.prototype.init = function() {
        n.prototype.init.call(this);
        var e = this.getView();
        e.getConfirmBtn().addTarget(this, this.eConfirm, EventType.TAP),
        e.getCancelBtn().addTarget(this, this.eCancel, EventType.TAP),
        e.getIncrementBtn().addTarget(this, this.eIncrement, EventType.TAP),
        e.getDecrementBtn().addTarget(this, this.eDecrement, EventType.TAP),
        e.getSellCountInput().addTarget(this, this.eChange, EventType.CHANGE)
    }
    ,
    UTQuickSellPopupViewController.prototype.dealloc = function() {
        this.onConfirm.dealloc(),
        n.prototype.dealloc.call(this)
    }
    ,
    UTQuickSellPopupViewController.prototype.viewDidAppear = function() {
        n.prototype.viewDidAppear.call(this);
        var e = services.Localization
          , t = this.getView();
        t.render(e.localize("club.quicksell.title"), e.localize("club.quicksell.title"), this.totalCount, this.untradeableCount),
        t.getSellCountInput().setMinValue(1),
        t.getSellCountInput().setMaxValue(this.totalCount),
        t.setSellCount(1),
        t.getConfirmBtn().setInteractionState(!0),
        this.updateConfirmButtonStatus()
    }
    ,
    UTQuickSellPopupViewController.prototype._getViewInstanceFromData = function() {
        return new UTQuickSellPopupView
    }
    ,
    UTQuickSellPopupViewController.prototype.eDecrement = function() {
        this.updateAmount(-1)
    }
    ,
    UTQuickSellPopupViewController.prototype.eIncrement = function() {
        this.updateAmount(1)
    }
    ,
    UTQuickSellPopupViewController.prototype.eChange = function() {
        this.updateInterface()
    }
    ,
    UTQuickSellPopupViewController.prototype.updateAmount = function(e) {
        var t = this.getView()
          , i = t.getSellCount();
        (i += e) < 1 ? i = 1 : i > this.totalCount && (i = this.totalCount),
        t.setSellCount(i),
        this.updateDiscardValue(),
        t.enableDisableIncrements(this.totalCount),
        this.updateConfirmButtonStatus()
    }
    ,
    UTQuickSellPopupViewController.prototype.updateDiscardValue = function() {
        var e = this.getView()
          , t = e.getSellCount()
          , i = t * this.discardValue;
        JSUtils.isNumber(i) || (i = 1 * this.discardValue,
        e.setSellCount(1)),
        t > this.totalCount - this.untradeableCount && (i = (this.totalCount - this.untradeableCount) * this.discardValue),
        e.setDiscardValue(i)
    }
    ,
    UTQuickSellPopupViewController.prototype.eCancel = function() {
        this.onExit.notify(enums.UIDialogOptions.CANCEL)
    }
    ,
    UTQuickSellPopupViewController.prototype.updateInterface = function() {
        this.updateConfirmButtonStatus()
    }
    ,
    UTQuickSellPopupViewController.prototype.updateConfirmButtonStatus = function() {
        var e = this.getView();
        e.setConfirmButtonEnabled(!1);
        var t = e.getSellCountInput().getValue();
        JSUtils.isNumber(t) || e.setSellCount(1),
        t > this.totalCount ? e.setSellCount(this.totalCount) : t < 1 && e.setSellCount(1),
        e.setConfirmButtonEnabled(!0),
        this.updateDiscardValue(),
        e.enableDisableIncrements(this.totalCount)
    }
    ,
    UTQuickSellPopupViewController.prototype.eConfirm = function() {
        this.confirmCount()
    }
    ,
    UTQuickSellPopupViewController.prototype.confirmCount = function() {
        var e = this.getView()
          , t = e.getSellCount();
        0 === t || t > this.totalCount || (e.setInteractionState(!1),
        this.onConfirm.notify(t),
        this.onExit.notify(enums.UIDialogOptions.OK))
    }
    ,
    UTQuickSellPopupViewController.prototype.handleKeyUpEvent = function(e) {
        e.key === KeyboardKey.ESCAPE || e.key === KeyboardKey.MS_ESCAPE ? this.onExit.notify(enums.UIDialogOptions.CANCEL) : e.key === KeyboardKey.ENTER && this.confirmCount()
    }
    ,
    UTQuickSellPopupViewController
}(BasePopupViewController)
  , UTItemDetailsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTItemDetailsView() {
        var e = t.call(this) || this;
        return e.items = new EAIterator([]),
        e.enableSwiping = !0,
        e
    }
    return __extends(UTItemDetailsView, t),
    UTItemDetailsView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTItemDetailsView.prototype.dealloc = function() {
        this.resetItems(),
        this.items = null,
        t.prototype.dealloc.call(this)
    }
    ,
    UTItemDetailsView.prototype.resetItems = function() {
        this.items && (this.items.values().forEach(function(e) {
            e.dealloc()
        }),
        this.items.resetCollection([]))
    }
    ,
    UTItemDetailsView.prototype.appendPanel = function(e) {
        this.removeSubviews(),
        this.addSubview(e),
        this.getRootElement().appendChild(e.getRootElement())
    }
    ,
    UTItemDetailsView.prototype.toggleCarouselDisplay = function(e) {
        DOMKit.toggleDisplayStyle(this._tnsCarousel.getRootElement(), e)
    }
    ,
    UTItemDetailsView.prototype.toggleCarouselSwiping = function(e) {
        this.enableSwiping = e,
        DOMKit.toggleDisplayStyle(this.__btnPrev, e),
        DOMKit.toggleDisplayStyle(this.__btnNext, e)
    }
    ,
    UTItemDetailsView.prototype.updatePrevNextState = function() {
        if (this.items) {
            var e = !this.items.startOfList
              , t = !this.items.endOfList;
            this.toggleClass("has-prev", e),
            this.toggleClass("has-next", t),
            this.enableSwiping ? (DOMKit.toggleDisplayStyle(this.__btnPrev, e),
            DOMKit.toggleDisplayStyle(this.__btnNext, t)) : (DOMKit.toggleDisplayStyle(this.__btnPrev, !1),
            DOMKit.toggleDisplayStyle(this.__btnNext, !1))
        }
    }
    ,
    UTItemDetailsView.prototype.render = function(e, t, i) {
        var o = this;
        if (void 0 === i && (i = !0),
        this.items) {
            if (0 === this.items.length || this.items.length !== e.length)
                this.populateIterator(e, t, i);
            else if (this._tnsCarousel.getCurrentSlide() !== t && t < this._tnsCarousel.getNumOfSlides())
                this.updateSlide(t, e[t], i),
                this._tnsCarousel.goTo(t);
            else {
                var n = this.items.values();
                this.items.resetCollection(e.map(function(e) {
                    return o.generateItemView(e, i)
                })),
                this.items.setIndex(t),
                this.items.values().forEach(function(e, t) {
                    o._tnsCarousel.dynamicSlideChange(t, e.getRootElement()),
                    n[t].dealloc()
                })
            }
            this.toggleCarouselDisplay(!0)
        }
    }
    ,
    UTItemDetailsView.prototype.updateSlide = function(e, t, i) {
        if (void 0 === i && (i = !0),
        this.items) {
            var o = this.items.get(e)
              , n = this.generateItemView(t, i);
            this.items.set(n, e),
            this._tnsCarousel.dynamicSlideChange(e, n.getRootElement()),
            null == o || o.dealloc()
        }
    }
    ,
    UTItemDetailsView.prototype.setSlotChemistry = function(e) {
        var r = this;
        e.forEach(function(e, t) {
            var i, o = null === (i = r.items) || void 0 === i ? void 0 : i.get(t);
            if (o && e.isValid() && e.index < UTSquadEntity.FIELD_PLAYERS) {
                o.renderChemistryBreakdown(e.chemistry, e.nationChemistryPoints, e.leagueChemistryPoints, e.clubChemistryPoints);
                var n = new UTSquadSlotChemistryPointsView;
                n.isItemView(),
                n.render(e.chemistry, 0, e.inPreferredPosition),
                n.setState(UTSquadSlotChemistryPointsView.State.NEUTRAL),
                o.renderChemistryPoints(n)
            }
        })
    }
    ,
    UTItemDetailsView.prototype.initializeIterator = function() {
        var t = this;
        this._tnsCarousel.emptyCarousel(),
        this.items && (this.items.values().forEach(function(e) {
            t._tnsCarousel.appendElem(e.getRootElement())
        }),
        this.setupCarousel(this.items.getIndex()))
    }
    ,
    UTItemDetailsView.prototype.setupCarousel = function(e) {
        if (this.items && 1 < this.items.length) {
            var t = new TNSPropertiesDTO;
            t.container = this._tnsCarousel.getRootElement(),
            t.controls = this.enableSwiping,
            t.mouseDrag = this.enableSwiping,
            t.preventActionWhenRunning = !0,
            t.startIndex = e,
            t.touch = this.enableSwiping,
            this._tnsCarousel.setup(t),
            this._tnsCarousel.afterChange(function(e) {
                this.items.setIndex(e),
                this.updatePrevNextState(),
                this._triggerActions(UTItemDetailsView.Event.INDEX_CHANGE, {
                    index: e
                })
            }
            .bind(this))
        }
        this.updatePrevNextState()
    }
    ,
    UTItemDetailsView.prototype.destroyCarousel = function() {
        DOMKit.toggleDisplayStyle(this._tnsCarousel.getRootElement(), !1),
        this._tnsCarousel.teardown(this.getRootElement())
    }
    ,
    UTItemDetailsView.prototype.populateIterator = function(e, t, i) {
        var o = this;
        if (this.items) {
            var n = this.items.values();
            this.items.resetCollection(e.map(function(e) {
                return o.generateItemView(e, i)
            })),
            this.items.setIndex(t),
            this._tnsCarousel.isOn() ? (this._tnsCarousel.teardown(this.getRootElement()),
            this.items.values().forEach(function(e) {
                o._tnsCarousel.appendElem(e.getRootElement())
            }),
            n.forEach(function(e) {
                return e.dealloc()
            }),
            this.setupCarousel(t)) : this.initializeIterator()
        }
    }
    ,
    UTItemDetailsView.prototype.generateItemView = function(e, t) {
        void 0 === t && (t = !0);
        var i = factories.ItemView.createLargeItem(e);
        return i.init(),
        i.renderRestrictions = t,
        i.render(e),
        i
    }
    ,
    UTItemDetailsView.prototype._tapDetected = function(e) {
        this.items && (e.target === this.__btnPrev ? (this.items.previous(),
        this._tnsCarousel.goTo(this.items.getIndex())) : e.target === this.__btnNext && (this.items.next(),
        this._tnsCarousel.goTo(this.items.getIndex())))
    }
    ,
    UTItemDetailsView.Event = Object.freeze({
        INDEX_CHANGE: "UTItemDetailsView.Event.INDEX_CHANGE"
    }),
    UTItemDetailsView
}(UTTargetActionView));
UTItemDetailsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("DetailView");
        var t = document.createElement("div");
        t.classList.add("detail-carousel"),
        this.__btnPrev = document.createElement("a"),
        this.__btnPrev.classList.add("alt"),
        this.__btnPrev.classList.add("btn-flat"),
        this.__btnPrev.classList.add("tapLeft"),
        t.appendChild(this.__btnPrev),
        this._tnsCarousel = new TNSContainerView,
        t.appendChild(this._tnsCarousel.getRootElement()),
        this.__btnNext = document.createElement("a"),
        this.__btnNext.classList.add("alt"),
        this.__btnNext.classList.add("btn-flat"),
        this.__btnNext.classList.add("tapRight"),
        t.appendChild(this.__btnNext),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTItemDetailsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__btnPrev = null,
    this._tnsCarousel.destroy(),
    this.__btnNext = null
}
,
UTItemDetailsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTToggleButtonControl = function(t) {
    function UTToggleButtonControl() {
        var e = t.call(this) || this;
        return e.checked = !1,
        e.textOn = "",
        e.textOff = "",
        e
    }
    return __extends(UTToggleButtonControl, t),
    UTToggleButtonControl.prototype.setChecked = function(e) {
        var t = this.checked;
        this.checked = e,
        this.updateText(),
        this.toggleClass("checked", this.checked),
        e !== t && this._triggerActions(EventType.CHANGE)
    }
    ,
    UTToggleButtonControl.prototype.getChecked = function() {
        return this.checked
    }
    ,
    UTToggleButtonControl.prototype.setTextOn = function(e) {
        this.textOn = e,
        this.updateText()
    }
    ,
    UTToggleButtonControl.prototype.setTextOff = function(e) {
        this.textOff = e,
        this.updateText()
    }
    ,
    UTToggleButtonControl.prototype.setAllText = function(e) {
        this.setTextOff(e),
        this.setTextOn(e)
    }
    ,
    UTToggleButtonControl.prototype.updateText = function() {
        this.setText(this.checked ? this.textOn : this.textOff)
    }
    ,
    UTToggleButtonControl.prototype._tapDetected = function(e) {
        this.setChecked(!this.checked),
        t.prototype._tapDetected.call(this, e)
    }
    ,
    UTToggleButtonControl
}(UTButtonControl);
UTToggleButtonControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("button");
        e.classList.add("ut-toggle-button-control"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTToggleButtonControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTToggleButtonControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTAuctionActionPanelView = function(t) {
    function UTAuctionActionPanelView() {
        var e = t.call(this) || this;
        return e.onWatch = new EAObservable,
        e.onBid = new EAObservable,
        e.onBuyNow = new EAObservable,
        e.onFindRelated = new EAObservable,
        e.onPlayerBio = new EAObservable,
        e.isOutbid = !1,
        e._enablePriceComparison = !0,
        e
    }
    return __extends(UTAuctionActionPanelView, t),
    UTAuctionActionPanelView.prototype.init = function() {
        var o = this;
        t.prototype.init.call(this);
        var e = services.Localization;
        this._bidNumericStepper.init(),
        this._watchButton.addTarget(this, function(e, t, i) {
            o.setWatchBusyState(!0),
            o.onWatch.notify()
        }, EventType.TAP),
        this._watchButton.setTextOn(e.localize("button.unwatch")),
        this._watchButton.setTextOff(e.localize("button.watch")),
        this._watchButton.init(),
        this._bidButton.addTarget(this, function(e, t, i) {
            o.setBidBuyBusyState(!0),
            o.onBid.notify(o._bidNumericStepper.getValue())
        }, EventType.TAP),
        this._bidButton.setText(e.localize("infopanel.button.placebid")),
        this._bidButton.init(),
        this._buyNowButton.addTarget(this, function(e, t, i) {
            o.setBidBuyBusyState(!0),
            o.onBuyNow.notify()
        }, EventType.TAP),
        this._buyNowButton.setText(e.localize("infopanel.label.buynow")),
        this._buyNowButton.init(),
        this._findRelatedButton.addTarget(this, function(e, t, i) {
            o.onFindRelated.notify()
        }, EventType.TAP),
        this._findRelatedButton.setText(e.localize("infopanel.label.findallitems")),
        this._findRelatedButton.init(),
        this._playerBioButton.addTarget(this, function(e, t, i) {
            o.onPlayerBio.notify()
        }, EventType.TAP),
        this._playerBioButton.setText(e.localize("extendedPlayerInfo.general.playerBio")),
        this._playerBioButton.init(),
        this.__timeRemainingTitle.textContent = e.localize("auctioninfo.timeremaining")
    }
    ,
    UTAuctionActionPanelView.prototype.dealloc = function() {
        this.onWatch.dealloc(),
        this.onBid.dealloc(),
        this.onBuyNow.dealloc(),
        this.onFindRelated.dealloc(),
        this.onPlayerBio.dealloc(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTAuctionActionPanelView.prototype.enablePriceComparison = function(e) {
        this._enablePriceComparison = !!e
    }
    ,
    UTAuctionActionPanelView.prototype.togglePlayerBio = function(e) {
        this._playerBioButton.setDisplay(e)
    }
    ,
    UTAuctionActionPanelView.prototype.toggleBuyNow = function(e) {
        0 < e ? (this._buyNowButton.setText(services.Localization.localize("infopanel.label.buynowfor", [services.Localization.localizeNumber(e)])),
        this._buyNowButton.setDisplay(!0),
        this._buyNowButton.addClass("currency-coins")) : (this._buyNowButton.setDisplay(!1),
        this._buyNowButton.removeClass("currency-coins"))
    }
    ,
    UTAuctionActionPanelView.prototype.toggleWatchedState = function(e) {
        this._watchButton.setChecked(e)
    }
    ,
    UTAuctionActionPanelView.prototype.setBidLimits = function(e, t) {
        this._bidNumericStepper.setLimits(e, t)
    }
    ,
    UTAuctionActionPanelView.prototype.getMinBidFromAuction = function(e) {
        var t = UTCurrencyInputControl.getIncrementAboveVal(e.currentBid);
        return 0 < e.currentBid ? t : e.startingBid
    }
    ,
    UTAuctionActionPanelView.prototype.getMaxBidFromAuction = function(e) {
        var t = UTCurrencyInputControl.getIncrementBelowVal(e.buyNowPrice)
          , i = 0 < e.buyNowPrice ? t : AUCTION_MAX_BID;
        return Math.max(i, this.getMinBidFromAuction(e))
    }
    ,
    UTAuctionActionPanelView.prototype.render = function(e, t) {
        var i = e.getAuctionData()
          , o = 0 < i.currentBid ? UTCurrencyInputControl.getIncrementAboveVal(i.currentBid) : i.startingBid
          , n = i.canBid(o, t);
        this._findRelatedButton.setDisplay(this._enablePriceComparison),
        this.togglePlayerBio(e.isPlayer()),
        this.toggleBuyNow(i.buyNowPrice),
        this.toggleWatchedState(i.watched),
        this.setBidLimits(this.getMinBidFromAuction(i), this.getMaxBidFromAuction(i)),
        this.setCurrentBidText(i),
        this._watchButton.setInteractionState(i.canWatch() || i.watched),
        this._buyNowButton.setInteractionState(i.canBuy(t)),
        this._bidButton.setInteractionState(n),
        this._bidNumericStepper.setInteractionState(n),
        this.onTimedUpdate(i)
    }
    ,
    UTAuctionActionPanelView.prototype.setCurrentBidText = function(e) {
        var t = services.Localization
          , i = e.currentBid
          , o = e.startingBid
          , n = o <= i ? i : o
          , r = "";
        r = e.isClosedTrade() ? "auctioninfo.finalprice" : o <= i ? e.isActiveTrade() ? "auctioninfo.currentbid" : "auctioninfo.finalprice" : "auctioninfo.startprice",
        this.__currentBidTitle.textContent = t.localize(r),
        this.__detailCurrentBidVal.textContent = t.localizeNumber(n)
    }
    ,
    UTAuctionActionPanelView.prototype.onTimedUpdate = function(e, t) {
        var i;
        void 0 === t && (t = e.getSecondsRemaining());
        var o = services.Localization;
        !this.isOutbid && e.isOutbid() && this.performOutbidAnimation(),
        this.isOutbid = e.isOutbid();
        var n = "";
        if (t <= 0 ? (n = o.localize(e.isPendingExpiry() ? "auctioninfo.timeremaining.pending" : "watchlist.dock.categories.expired.condensed"),
        this._watchButton.setInteractionState(e.watched),
        this._buyNowButton.setInteractionState(!1),
        this._bidButton.setInteractionState(!1),
        this._bidNumericStepper.setInteractionState(!1)) : n = t > AUCTION_COUNTDOWN_THRESHOLD ? o.localizeAuctionTimeRemaining(t) : o.localizeTimeRemaining(t),
        this.__timeRemainingVal.textContent = n,
        0 < t && t < AUCTION_COUNTDOWN_FLASING_THRESHOLD ? (DOMKit.addClass(this.__timeRemainingVal, "alarm-txt"),
        t <= AUCTION_COUNTDOWN_ALERT_THRESHOLD && DOMKit.addClass(this.__timeRemainingVal, "expiring")) : DOMKit.removeClass(this.__timeRemainingVal, "expiring alarm-txt"),
        0 < t) {
            this.setBidLimits(this.getMinBidFromAuction(e), this.getMaxBidFromAuction(e)),
            this.setCurrentBidText(e);
            var r = null === (i = services.User.getUser()) || void 0 === i ? void 0 : i.getCurrency(GameCurrency.COINS).amount
              , s = 0 < e.currentBid ? UTCurrencyInputControl.getIncrementAboveVal(e.currentBid) : e.startingBid
              , a = e.canBid(s, r);
            this._bidNumericStepper.setInteractionState(a)
        }
    }
    ,
    UTAuctionActionPanelView.prototype.setBidBusyState = function(e) {
        this._bidButton.setInteractionState(!e)
    }
    ,
    UTAuctionActionPanelView.prototype.setBuyBusyState = function(e) {
        this._buyNowButton.setInteractionState(!e)
    }
    ,
    UTAuctionActionPanelView.prototype.setBidBuyBusyState = function(e) {
        this.setBidBusyState(e),
        this.setBuyBusyState(e)
    }
    ,
    UTAuctionActionPanelView.prototype.setWatchBusyState = function(e) {
        this._watchButton.setInteractionState(!e)
    }
    ,
    UTAuctionActionPanelView.prototype._performBidAnimation = function(e) {
        requestAnimationFrame(function _addBidAnimationClass() {
            this.__currentBid.classList.add(e),
            setTimeout(function _removeBidAnimationClass() {
                this.__currentBid && this.__currentBid.classList.remove(e)
            }
            .bind(this), 3e3)
        }
        .bind(this))
    }
    ,
    UTAuctionActionPanelView.prototype.performOutbidAnimation = function() {
        this._performBidAnimation("currencyIncreaseRed")
    }
    ,
    UTAuctionActionPanelView.prototype.performBidIncreaseAnimation = function() {
        this._performBidAnimation("currencyIncrease")
    }
    ,
    UTAuctionActionPanelView
}(UTView);
UTAuctionActionPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("DetailPanel");
        var t = document.createElement("div");
        t.classList.add("ut-item-details--metadata"),
        this.__viewAuction = document.createElement("div"),
        this.__viewAuction.classList.add("auctionInfo");
        var i = document.createElement("div");
        i.classList.add("column"),
        this.__timeRemainingTitle = document.createElement("span"),
        this.__timeRemainingTitle.classList.add("subHeading"),
        i.appendChild(this.__timeRemainingTitle),
        this.__timeRemainingVal = document.createElement("span"),
        this.__timeRemainingVal.classList.add("subContent"),
        i.appendChild(this.__timeRemainingVal),
        this.__viewAuction.appendChild(i),
        this.__currentBid = document.createElement("div"),
        this.__currentBid.classList.add("currentBid"),
        this.__currentBid.classList.add("column"),
        this.__currentBidTitle = document.createElement("span"),
        this.__currentBidTitle.classList.add("subHeading"),
        this.__currentBid.appendChild(this.__currentBidTitle),
        this.__detailCurrentBidVal = document.createElement("span"),
        this.__detailCurrentBidVal.classList.add("currency-coins"),
        this.__detailCurrentBidVal.classList.add("subContent"),
        this.__currentBid.appendChild(this.__detailCurrentBidVal);
        var o = document.createElement("span");
        o.classList.add("currencyArrow"),
        this.__currentBid.appendChild(o),
        this.__viewAuction.appendChild(this.__currentBid);
        var n = document.createElement("div");
        n.classList.add("column"),
        this._watchButton = new UTToggleButtonControl,
        this._watchButton.getRootElement().classList.add("watch"),
        n.appendChild(this._watchButton.getRootElement()),
        this.__viewAuction.appendChild(n),
        t.appendChild(this.__viewAuction),
        e.appendChild(t);
        var r = document.createElement("div");
        r.classList.add("bidOptions"),
        this._bidNumericStepper = new UTNumericInputSpinnerControl,
        r.appendChild(this._bidNumericStepper.getRootElement()),
        this._bidButton = new UTStandardButtonControl,
        this._bidButton.getRootElement().classList.add("call-to-action"),
        this._bidButton.getRootElement().classList.add("bidButton"),
        r.appendChild(this._bidButton.getRootElement()),
        this._buyNowButton = new UTStandardButtonControl,
        this._buyNowButton.getRootElement().classList.add("buyButton"),
        r.appendChild(this._buyNowButton.getRootElement()),
        e.appendChild(r);
        var s = document.createElement("div");
        s.classList.add("ut-button-group"),
        this._playerBioButton = new UTGroupButtonControl,
        this._playerBioButton.getRootElement().classList.add("more"),
        s.appendChild(this._playerBioButton.getRootElement()),
        this._findRelatedButton = new UTGroupButtonControl,
        s.appendChild(this._findRelatedButton.getRootElement()),
        e.appendChild(s),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAuctionActionPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__viewAuction = null,
    this.__timeRemainingTitle = null,
    this.__timeRemainingVal = null,
    this.__currentBid = null,
    this.__currentBidTitle = null,
    this.__detailCurrentBidVal = null,
    this._watchButton.destroy(),
    this._bidNumericStepper.destroy(),
    this._bidButton.destroy(),
    this._buyNowButton.destroy(),
    this._playerBioButton.destroy(),
    this._findRelatedButton.destroy()
}
,
UTAuctionActionPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTDefaultActionPanelView = function(t) {
    function UTDefaultActionPanelView() {
        var e = t.call(this) || this;
        return e.quickListView = null,
        e
    }
    return __extends(UTDefaultActionPanelView, t),
    UTDefaultActionPanelView.prototype.init = function() {
        t.prototype.init.call(this),
        this._playerBioButton.init(),
        this._redeemButton.init(),
        this._applyConsumableButton.init(),
        this._makeItemActiveButton.init(),
        this._deactivateItemButton.init(),
        this._sendClubButton.init(),
        this._sendToSquadButton.init(),
        this._sendTransferButton.init(),
        this._comparePriceButton.init(),
        this._discardButton.init(),
        this._playerBioButton.addTarget(this, this._eButtonSelected, EventType.TAP),
        this._redeemButton.addTarget(this, this._eButtonSelected, EventType.TAP),
        this._applyConsumableButton.addTarget(this, this._eButtonSelected, EventType.TAP),
        this._makeItemActiveButton.addTarget(this, this._eButtonSelected, EventType.TAP),
        this._deactivateItemButton.addTarget(this, this._eButtonSelected, EventType.TAP),
        this._sendClubButton.addTarget(this, this._eButtonSelected, EventType.TAP),
        this._sendToSquadButton.addTarget(this, this._eButtonSelected, EventType.TAP),
        this._comparePriceButton.addTarget(this, this._eButtonSelected, EventType.TAP),
        this._sendTransferButton.addTarget(this, this._eButtonSelected, EventType.TAP),
        this._discardButton.addTarget(this, this._eButtonSelected, EventType.TAP),
        this._playerBioButton.setText(services.Localization.localize("extendedPlayerInfo.general.playerBio")),
        this._applyConsumableButton.setText(services.Localization.localize("panel.applyitem.button")),
        this._makeItemActiveButton.setText(services.Localization.localize("navbar.label.makeactive.item")),
        this._deactivateItemButton.setText(services.Localization.localize("panel.button.emptyStadiumSlot")),
        this._sendClubButton.setText(services.Localization.localize("infopanel.label.storeInClub")),
        this._sendToSquadButton.setText(services.Localization.localize("infopanel.button.sendtosquad")),
        this._sendTransferButton.setText(services.Localization.localize("infopanel.label.sendTradePile")),
        this._comparePriceButton.setText(services.Localization.localize("infopanel.label.findallitems")),
        this._discardButton.setText(services.Localization.localize("infopanel.label.quickSell")),
        this._discardButton.displayCurrencyIcon(!0)
    }
    ,
    UTDefaultActionPanelView.prototype.dealloc = function() {
        this.quickListView && this.removeQuickList(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTDefaultActionPanelView.prototype.render = function(e, t, i, o, n, r, s) {
        if (void 0 === n && (n = !1),
        void 0 === r && (r = !1),
        void 0 === s && (s = !1),
        e.isMiscItem()) {
            var a = "";
            return e.isFreeCoins() ? (DOMKit.toggleDisplayStyle(this.__auctionInfo, !0),
            a = "infopanel.label.collectcoins",
            this.__textInfo.textContent = services.Localization.localize("card.desc.FreeCreditsDesc"),
            this.__valueInfo.textContent = services.Localization.localizeNumber(e.getStaticData().amount)) : e.isFreePack() ? (DOMKit.toggleDisplayStyle(this.__auctionInfo, !1),
            a = "infopanel.label.claimpack") : e.isDraftToken() ? (DOMKit.toggleDisplayStyle(this.__auctionInfo, !1),
            a = "infopanel.label.claimdrafttoken") : e.isPlayerPickItem() && (DOMKit.toggleDisplayStyle(this.__auctionInfo, !0),
            DOMKit.toggleDisplayStyle(this.__valueInfo, !1),
            a = "infopanel.label.claimdraftitem",
            this.__textInfo.textContent = e.getStaticData().description),
            this._redeemButton.setText(services.Localization.localize(a)),
            this._redeemButton.setDisplay(!0),
            this._applyConsumableButton.setDisplay(!1),
            this._makeItemActiveButton.setDisplay(!1),
            this._deactivateItemButton.setDisplay(!1),
            this._sendClubButton.setDisplay(!1),
            this._sendToSquadButton.setDisplay(!1),
            this._sendTransferButton.setDisplay(!1),
            this._discardButton.setDisplay(!1),
            this._playerBioButton.setDisplay(!1),
            void this._comparePriceButton.setDisplay(!1)
        }
        var l = e.isDuplicate()
          , c = e.isClubItem()
          , d = e.concept;
        c && !l && (this._makeItemActiveButton.setInteractionState(!n),
        this._makeItemActiveButton.setText(n ? services.Localization.localize("navbar.label.itemalreadyactive") : services.Localization.localize("navbar.label.makeactive.item")));
        var u = e.pile !== ItemPile.TRANSFER && !n && e.isValid();
        this._sendTransferButton.setDisplay(u),
        u && (e.untradeable || e.isLoaned()) ? (this._sendTransferButton.setText(services.Localization.localize("infopanel.label.untradeable")),
        this._sendTransferButton.setInteractionState(!1)) : u && i && (this._sendTransferButton.setText(services.Localization.localize("popup.error.tradetoken.SellItemTradePileFullTitle")),
        this._sendTransferButton.setInteractionState(!1)),
        this._sendClubButton.setText(services.Localization.localize(l ? "infopanel.button.swap" : "infopanel.label.storeInClub")),
        this._discardButton.setSubtext(services.Localization.localizeNumber(e.discardValue)),
        e.isLoaned() && this._comparePriceButton.setText(services.Localization.localize("infopanel.button.searchmarket")),
        this._redeemButton.setDisplay(!1),
        this._makeItemActiveButton.setDisplay(c && !l && r),
        this._deactivateItemButton.setDisplay(n && s),
        this._sendClubButton.setDisplay(!d && e.pile !== ItemPile.CLUB),
        this._playerBioButton.setDisplay(e.isPlayer()),
        this._discardButton.setDisplay(!n && e.isDiscardable());
        var h = services.User.getUser()
          , p = !!h && h.hasTradeAccess()
          , _ = !getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_HIDE_TRANSFER_MARKET) && p && services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED)
          , T = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.PLATFORM_SPLIT_FOR_TRANSFER_MARKET);
        this._comparePriceButton.setDisplay(!UTItemEntity.isStoryMode(e.definitionId) && e.isValid() && _ && !T);
        var m = e.getAuctionData()
          , g = e.lastSalePrice
          , w = m.startingBid
          , v = m.currentBid
          , y = e.isConsumable() && t && !t.isDream() && e.isValid();
        this._applyConsumableButton.setDisplay(y || e.pile === ItemPile.CLUB && (e.isPlayer() || e.isManager())),
        o ? this._sendToSquadButton.setText(services.Localization.localize("infopanel.button.sendtosquad")) : t.isSBC() ? this._sendToSquadButton.setText(services.Localization.localize("infopanel.button.sendtosbc")) : this._sendToSquadButton.setText(services.Localization.localize("infopanel.button.sendtocurrentsquad")),
        this._sendToSquadButton.setDisplay(t && !t.isSBC() && !l && !d && (e.isPlayer() || e.isManager()) && !t.containsItem(e, !0));
        var C = !0;
        m && 0 < v && e.isValid() ? (this.__textInfo.textContent = services.Localization.localize("infopanel.label.congratulations"),
        this.__valueInfo.textContent = services.Localization.localizeNumber(v)) : m.isExpired() ? (this.__textInfo.textContent = services.Localization.localize("infopanel.label.lastListedPrice"),
        this.__valueInfo.textContent = services.Localization.localizeNumber(w)) : 0 < g && e.isValid() ? (this.__textInfo.textContent = services.Localization.localize("infopanel.label.prevBoughtPrice"),
        this.__valueInfo.textContent = services.Localization.localizeNumber(g)) : C = !1,
        DOMKit.toggleDisplayStyle(this.__auctionInfo, C);
        var S = e.isManager() ? "infopanel.label.managerInActiveSquad" : "infopanel.label.inActiveSquad"
          , f = t && t.containsItem(e, !0) && t.isActive();
        this.__activeSquadText.textContent = services.Localization.localize(S),
        DOMKit.toggleDisplayStyle(this.__activeSquadIndicator, f),
        DOMKit.toggleDisplayStyle(this.__metadata, f || C)
    }
    ,
    UTDefaultActionPanelView.prototype.appendQuickList = function(e) {
        this.quickListView = e,
        DOMKit.insertBefore(e.getRootElement(), this.__itemActions)
    }
    ,
    UTDefaultActionPanelView.prototype.removeQuickList = function() {
        this.quickListView && (DOMKit.remove(this.quickListView.getRootElement()),
        this.quickListView = null)
    }
    ,
    UTDefaultActionPanelView.prototype._eButtonSelected = function(e, t, i) {
        var o = enums.UIItemActionEvent.BIO;
        e === this._playerBioButton ? o = enums.UIItemActionEvent.BIO : e === this._redeemButton ? o = enums.UIItemActionEvent.REDEEM : e === this._applyConsumableButton ? o = enums.UIItemActionEvent.APPLY_CONSUMABLE : e === this._makeItemActiveButton ? o = enums.UIItemActionEvent.ACTIVATE : e === this._deactivateItemButton ? o = enums.UIItemActionEvent.DEACTIVATE : e === this._sendClubButton ? o = enums.UIItemActionEvent.SEND_TO_CLUB : e === this._sendToSquadButton ? o = enums.UIItemActionEvent.SEND_TO_SQUAD : e === this._sendTransferButton ? o = enums.UIItemActionEvent.SEND_TO_TRANSFERS : e === this._comparePriceButton ? o = enums.UIItemActionEvent.COMPARE : e === this._discardButton && (o = enums.UIItemActionEvent.DISCARD),
        this._triggerActions(o)
    }
    ,
    UTDefaultActionPanelView
}(UTTargetActionView);
UTDefaultActionPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("DetailPanel"),
        this.__metadata = document.createElement("div"),
        this.__metadata.classList.add("ut-item-details--metadata"),
        this.__activeSquadIndicator = document.createElement("div"),
        this.__activeSquadIndicator.classList.add("ut-item-details--squad-indicator");
        var t = document.createElement("span");
        t.classList.add("fut_icon"),
        t.classList.add("icon_squad"),
        this.__activeSquadIndicator.appendChild(t),
        this.__activeSquadText = document.createElement("span"),
        this.__activeSquadIndicator.appendChild(this.__activeSquadText),
        this.__metadata.appendChild(this.__activeSquadIndicator),
        this.__auctionInfo = document.createElement("div"),
        this.__auctionInfo.classList.add("auctionInfo");
        var i = document.createElement("div");
        i.classList.add("column"),
        this.__textInfo = document.createElement("span"),
        this.__textInfo.classList.add("subHeading"),
        i.appendChild(this.__textInfo),
        this.__valueInfo = document.createElement("span"),
        this.__valueInfo.classList.add("currency-coins"),
        this.__valueInfo.classList.add("subContent"),
        i.appendChild(this.__valueInfo),
        this.__auctionInfo.appendChild(i),
        this.__metadata.appendChild(this.__auctionInfo),
        e.appendChild(this.__metadata),
        this.__itemActions = document.createElement("div"),
        this.__itemActions.classList.add("ut-button-group"),
        this._playerBioButton = new UTGroupButtonControl,
        this._playerBioButton.getRootElement().classList.add("more"),
        this.__itemActions.appendChild(this._playerBioButton.getRootElement()),
        this._redeemButton = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._redeemButton.getRootElement()),
        this._applyConsumableButton = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._applyConsumableButton.getRootElement()),
        this._makeItemActiveButton = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._makeItemActiveButton.getRootElement()),
        this._deactivateItemButton = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._deactivateItemButton.getRootElement()),
        this._sendClubButton = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._sendClubButton.getRootElement()),
        this._sendToSquadButton = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._sendToSquadButton.getRootElement()),
        this._sendTransferButton = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._sendTransferButton.getRootElement()),
        this._comparePriceButton = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._comparePriceButton.getRootElement()),
        this._discardButton = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._discardButton.getRootElement()),
        e.appendChild(this.__itemActions),
        this.__root = e,
        this._generated = !0
    }
}
,
UTDefaultActionPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__metadata = null,
    this.__activeSquadIndicator = null,
    this.__activeSquadText = null,
    this.__auctionInfo = null,
    this.__textInfo = null,
    this.__valueInfo = null,
    this.__itemActions = null,
    this._playerBioButton.destroy(),
    this._redeemButton.destroy(),
    this._applyConsumableButton.destroy(),
    this._makeItemActiveButton.destroy(),
    this._deactivateItemButton.destroy(),
    this._sendClubButton.destroy(),
    this._sendToSquadButton.destroy(),
    this._sendTransferButton.destroy(),
    this._comparePriceButton.destroy(),
    this._discardButton.destroy()
}
,
UTDefaultActionPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTDiscardedItemActionPanelView = function(t) {
    function UTDiscardedItemActionPanelView() {
        return t.call(this) || this
    }
    return __extends(UTDiscardedItemActionPanelView, t),
    UTDiscardedItemActionPanelView.prototype.init = function() {
        var e = services.Localization;
        t.prototype.init.call(this),
        this._recoverButton.init(),
        this._playerBioButton.init(),
        this._recoverButton.setText(e.localize("undoDiscard.button.recover")),
        this._playerBioButton.setText(e.localize("extendedPlayerInfo.general.playerBio")),
        this._recoverButton.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._playerBioButton.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._recoverButton.displayCurrencyIcon(!0),
        this.setInteractionState(!0)
    }
    ,
    UTDiscardedItemActionPanelView.prototype.setInteractionState = function(e) {
        t.prototype.setInteractionState.call(this, e),
        this._recoverButton.setInteractionState(e),
        this._playerBioButton.setInteractionState(e)
    }
    ,
    UTDiscardedItemActionPanelView.prototype.setRecoverButtonInteractionState = function(e) {
        this._recoverButton.setInteractionState(e)
    }
    ,
    UTDiscardedItemActionPanelView.prototype.render = function(e) {
        DebugUtils.Assert(e.isRecoverable(), "Expected a discarded player"),
        this._recoverButton.setSubtext(services.Localization.localizeNumber(e.discardValue))
    }
    ,
    UTDiscardedItemActionPanelView.prototype.onButtonSelected = function(e, t, i) {
        e === this._playerBioButton ? this._triggerActions(enums.UIItemActionEvent.BIO) : e === this._recoverButton && this._triggerActions(enums.UIItemActionEvent.RECOVER)
    }
    ,
    UTDiscardedItemActionPanelView
}(UTTargetActionView);
UTDiscardedItemActionPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("DetailPanel"),
        this.__itemActions = document.createElement("div");
        var t = document.createElement("div");
        t.classList.add("ut-button-group"),
        this._recoverButton = new UTGroupButtonControl,
        t.appendChild(this._recoverButton.getRootElement()),
        this._playerBioButton = new UTGroupButtonControl,
        this._playerBioButton.getRootElement().classList.add("more"),
        t.appendChild(this._playerBioButton.getRootElement()),
        this.__itemActions.appendChild(t),
        e.appendChild(this.__itemActions),
        this.__root = e,
        this._generated = !0
    }
}
,
UTDiscardedItemActionPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__itemActions = null,
    this._recoverButton.destroy(),
    this._playerBioButton.destroy()
}
,
UTDiscardedItemActionPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTDuplicateLoanActionPanelView = function(t) {
    function UTDuplicateLoanActionPanelView() {
        var e = t.call(this) || this;
        return e.onDiscard = new EAObservable,
        e.onPlayerBio = new EAObservable,
        e
    }
    return __extends(UTDuplicateLoanActionPanelView, t),
    UTDuplicateLoanActionPanelView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._actionButton.init(),
        this._actionButton.setText(e.localize("common.dialog.ok").toUpperCase()),
        this._actionButton.addTarget(this, this.discardCallback, EventType.TAP),
        this._playerBioButton.init(),
        this._playerBioButton.setText(e.localize("extendedPlayerInfo.general.playerBio")),
        this._playerBioButton.addTarget(this, this.bioCallback, EventType.TAP)
    }
    ,
    UTDuplicateLoanActionPanelView.prototype.dealloc = function() {
        this.onDiscard.dealloc(),
        this.onPlayerBio.dealloc(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTDuplicateLoanActionPanelView.prototype.render = function(e) {
        DebugUtils.Assert(e.isDuplicateLoanPlayer(), "[UTDuplicateLoanActionPanelView] Invalid item data, expected a duplicate loan player.");
        function Bp(e) {
            return t.localize("panel.label.game" + (1 < e ? "s" : ""), [e.toString()])
        }
        var t = services.Localization
          , i = e.loans
          , o = e.duplicateItemLoans
          , n = o + i;
        this.__itemInfo1Label.textContent = t.localize("panel.label.currentContract"),
        this.__itemInfo1Value.textContent = Bp(o),
        this.__itemInfo2Label.textContent = t.localize("panel.label.addContract"),
        this.__itemInfo2Value.textContent = Bp(i),
        this.__itemInfo3Label.textContent = t.localize("panel.label.newContract"),
        this.__itemInfo3Value.textContent = Bp(n),
        this.__infoText1.textContent = t.localize("panel.text.loanDuplicatePlayer1"),
        this.__infoText2.textContent = t.localize("panel.text.loanDuplicatePlayer2"),
        this._actionButton.setInteractionState(e.isDuplicateLoanPlayer())
    }
    ,
    UTDuplicateLoanActionPanelView.prototype.discardCallback = function(e, t, i) {
        this.onDiscard.notify()
    }
    ,
    UTDuplicateLoanActionPanelView.prototype.bioCallback = function(e, t, i) {
        this.onPlayerBio.notify()
    }
    ,
    UTDuplicateLoanActionPanelView
}(UTView);
UTDuplicateLoanActionPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("DetailPanel");
        var t = document.createElement("div");
        t.classList.add("ut-item-details--metadata");
        var i = document.createElement("div");
        i.classList.add("auctionInfo");
        var o = document.createElement("div");
        o.classList.add("column"),
        this.__itemInfo1Label = document.createElement("span"),
        this.__itemInfo1Label.classList.add("subHeading"),
        o.appendChild(this.__itemInfo1Label),
        this.__itemInfo1Value = document.createElement("span"),
        this.__itemInfo1Value.classList.add("subContent"),
        o.appendChild(this.__itemInfo1Value),
        i.appendChild(o);
        var n = document.createElement("div");
        n.classList.add("column"),
        this.__itemInfo2Label = document.createElement("span"),
        this.__itemInfo2Label.classList.add("subHeading"),
        n.appendChild(this.__itemInfo2Label),
        this.__itemInfo2Value = document.createElement("span"),
        this.__itemInfo2Value.classList.add("subContent"),
        n.appendChild(this.__itemInfo2Value),
        i.appendChild(n);
        var r = document.createElement("div");
        r.classList.add("column"),
        this.__itemInfo3Label = document.createElement("span"),
        this.__itemInfo3Label.classList.add("subHeading"),
        r.appendChild(this.__itemInfo3Label),
        this.__itemInfo3Value = document.createElement("span"),
        this.__itemInfo3Value.classList.add("subContent"),
        r.appendChild(this.__itemInfo3Value),
        i.appendChild(r),
        t.appendChild(i),
        e.appendChild(t),
        this.__itemActions = document.createElement("div"),
        this.__itemActions.classList.add("loanPlayer"),
        this.__infoText1 = document.createElement("p"),
        this.__infoText1.classList.add("infoText"),
        this.__itemActions.appendChild(this.__infoText1),
        this.__infoText2 = document.createElement("p"),
        this.__infoText2.classList.add("infoText"),
        this.__itemActions.appendChild(this.__infoText2),
        this._actionButton = new UTStandardButtonControl,
        this._actionButton.getRootElement().classList.add("call-to-action"),
        this.__itemActions.appendChild(this._actionButton.getRootElement());
        var s = document.createElement("div");
        s.classList.add("ut-button-group"),
        this._playerBioButton = new UTGroupButtonControl,
        this._playerBioButton.getRootElement().classList.add("more"),
        s.appendChild(this._playerBioButton.getRootElement()),
        this.__itemActions.appendChild(s),
        e.appendChild(this.__itemActions),
        this.__root = e,
        this._generated = !0
    }
}
,
UTDuplicateLoanActionPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__itemInfo1Label = null,
    this.__itemInfo1Value = null,
    this.__itemInfo2Label = null,
    this.__itemInfo2Value = null,
    this.__itemInfo3Label = null,
    this.__itemInfo3Value = null,
    this.__itemActions = null,
    this.__infoText1 = null,
    this.__infoText2 = null,
    this._actionButton.destroy(),
    this._playerBioButton.destroy()
}
,
UTDuplicateLoanActionPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTransferActionPanelView = function(t) {
    function UTTransferActionPanelView() {
        var e = t.call(this) || this;
        return e.onClearSold = new EAObservable,
        e.onPlayerBio = new EAObservable,
        e.timeRemaining = 0,
        e
    }
    return __extends(UTTransferActionPanelView, t),
    UTTransferActionPanelView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._removeButton.init(),
        this._removeButton.setText(e.localize("infopanel.button.remove")),
        this._removeButton.addTarget(this, this.clearSoldCallback, EventType.TAP),
        this._playerBioButton.init(),
        this._playerBioButton.setText(e.localize("extendedPlayerInfo.general.playerBio")),
        this._playerBioButton.addTarget(this, this.playerBioCallback, EventType.TAP),
        this.__headerTimeRemaining.textContent = e.localize("auctioninfo.timeremaining"),
        this.__headerCurrentBuyNow.textContent = e.localize("auctioninfo.buynowprice"),
        this.__strTradeStatus.textContent = e.localize("auctioninfo.currentlylisted"),
        this.__headerBoughtFor.textContent = e.localize("auctioninfo.boughtfor")
    }
    ,
    UTTransferActionPanelView.prototype.dealloc = function() {
        this.onClearSold.dealloc(),
        this.onPlayerBio.dealloc(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTTransferActionPanelView.prototype.toggleRemove = function(e) {
        this._removeButton.setDisplay(e)
    }
    ,
    UTTransferActionPanelView.prototype.togglePlayerBio = function(e) {
        this._playerBioButton.setDisplay(e)
    }
    ,
    UTTransferActionPanelView.prototype.setBuyNowText = function(e) {
        this.__txtBuyValue.textContent = services.Localization.localizeNumber(e)
    }
    ,
    UTTransferActionPanelView.prototype.setCurrentBidText = function(e) {
        var t = e.currentBid >= e.startingBid
          , i = services.Localization
          , o = "auctioninfo.startprice";
        e.isSold() ? o = "auctioninfo.finalprice" : t && (o = "auctioninfo.currentbid"),
        this.__headerCurrentBid.textContent = i.localize(o),
        this.__txtBidValue.textContent = i.localizeNumber(t ? e.currentBid : e.startingBid)
    }
    ,
    UTTransferActionPanelView.prototype.setBoughtForText = function(e) {
        this.__txtBoughtForValue.textContent = 0 < e ? services.Localization.localizeNumber(e) : BLANK_STR
    }
    ,
    UTTransferActionPanelView.prototype.render = function(e) {
        var t = e.getAuctionData();
        this.toggleRemove(t.isClosedTrade()),
        this.togglePlayerBio(e.isPlayer()),
        DOMKit.toggleDisplayStyle(this.__strTradeStatus, !t.isClosedTrade()),
        this.setCurrentBidText(t),
        this.setBuyNowText(t.buyNowPrice),
        this.setBoughtForText(e.lastSalePrice),
        this.onTimedUpdate(t)
    }
    ,
    UTTransferActionPanelView.prototype.onTimedUpdate = function(e, t) {
        if (void 0 === t && (t = e.getSecondsRemaining()),
        this.timeRemaining = t,
        this.timeRemaining <= 0) {
            var i = e.isPendingExpiry() ? "auctioninfo.timeremaining.pending" : "watchlist.dock.categories.expired.condensed";
            DOMKit.removeClass(this.__txtTimeRemaining, "alarm-txt"),
            this.__txtTimeRemaining.textContent = services.Localization.localize(i)
        } else
            DOMKit.toggleClass(this.__txtTimeRemaining, "alarm-txt", this.timeRemaining < 15),
            this.__txtTimeRemaining.textContent = services.Localization.localizeTimeRemaining(this.timeRemaining)
    }
    ,
    UTTransferActionPanelView.prototype.clearSoldCallback = function(e, t, i) {
        this.onClearSold.notify()
    }
    ,
    UTTransferActionPanelView.prototype.playerBioCallback = function(e, t, i) {
        this.onPlayerBio.notify()
    }
    ,
    UTTransferActionPanelView
}(UTView);
UTTransferActionPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("DetailPanel");
        var t = document.createElement("div");
        t.classList.add("ut-item-details--metadata"),
        this.__activeTrade = document.createElement("div"),
        this.__activeTrade.classList.add("transferPanel"),
        this.__activeTrade.classList.add("auctionInfo");
        var i = document.createElement("div");
        i.classList.add("column"),
        this.__headerTimeRemaining = document.createElement("span"),
        this.__headerTimeRemaining.classList.add("subHeading"),
        i.appendChild(this.__headerTimeRemaining),
        this.__txtTimeRemaining = document.createElement("span"),
        this.__txtTimeRemaining.classList.add("subContent"),
        i.appendChild(this.__txtTimeRemaining),
        this.__activeTrade.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("column"),
        this.__headerCurrentBid = document.createElement("span"),
        this.__headerCurrentBid.classList.add("subHeading"),
        o.appendChild(this.__headerCurrentBid),
        this.__txtBidValue = document.createElement("span"),
        this.__txtBidValue.classList.add("currency-coins"),
        this.__txtBidValue.classList.add("subContent"),
        o.appendChild(this.__txtBidValue),
        this.__activeTrade.appendChild(o);
        var n = document.createElement("div");
        n.classList.add("column"),
        this.__headerCurrentBuyNow = document.createElement("span"),
        this.__headerCurrentBuyNow.classList.add("subHeading"),
        n.appendChild(this.__headerCurrentBuyNow),
        this.__txtBuyValue = document.createElement("span"),
        this.__txtBuyValue.classList.add("currency-coins"),
        this.__txtBuyValue.classList.add("subContent"),
        n.appendChild(this.__txtBuyValue),
        this.__activeTrade.appendChild(n);
        var r = document.createElement("div");
        r.classList.add("column"),
        this.__headerBoughtFor = document.createElement("span"),
        this.__headerBoughtFor.classList.add("subHeading"),
        r.appendChild(this.__headerBoughtFor),
        this.__txtBoughtForValue = document.createElement("span"),
        this.__txtBoughtForValue.classList.add("currency-coins"),
        this.__txtBoughtForValue.classList.add("subContent"),
        r.appendChild(this.__txtBoughtForValue),
        this.__activeTrade.appendChild(r),
        t.appendChild(this.__activeTrade),
        e.appendChild(t),
        this.__itemActions = document.createElement("div"),
        this.__itemActions.classList.add("tradeOptions"),
        this.__strTradeStatus = document.createElement("p"),
        this.__strTradeStatus.classList.add("tradeStatus"),
        this.__itemActions.appendChild(this.__strTradeStatus),
        this._removeButton = new UTStandardButtonControl,
        this._removeButton.getRootElement().classList.add("call-to-action"),
        this.__itemActions.appendChild(this._removeButton.getRootElement());
        var s = document.createElement("div");
        s.classList.add("ut-button-group"),
        this._playerBioButton = new UTGroupButtonControl,
        this._playerBioButton.getRootElement().classList.add("more"),
        s.appendChild(this._playerBioButton.getRootElement()),
        this.__itemActions.appendChild(s),
        e.appendChild(this.__itemActions),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTransferActionPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__activeTrade = null,
    this.__headerTimeRemaining = null,
    this.__txtTimeRemaining = null,
    this.__headerCurrentBid = null,
    this.__txtBidValue = null,
    this.__headerCurrentBuyNow = null,
    this.__txtBuyValue = null,
    this.__headerBoughtFor = null,
    this.__txtBoughtForValue = null,
    this.__itemActions = null,
    this.__strTradeStatus = null,
    this._removeButton.destroy(),
    this._playerBioButton.destroy()
}
,
UTTransferActionPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
NamespaceManager.Register("controllers.items"),
controllers.items.ItemDetails = function ItemDetailsViewController() {
    UTViewController.call(this),
    this._itemActionController = new UTItemActionController,
    this._panel = null,
    Object.defineProperty(this, "_panel", {
        writable: !0,
        enumerable: !1
    }),
    this._quickListPanel = new UTQuickListPanelViewController,
    Object.defineProperty(this, "_quickListPanel", {
        writable: !0,
        enumerable: !1
    }),
    this._viewmodel = null,
    Object.defineProperty(this, "_viewmodel", {
        writable: !0,
        enumerable: !1
    }),
    this._stadiumViewModel = null,
    this._squadContext = null,
    Object.defineProperty(this, "_squadContext", {
        writable: !0,
        enumerable: !1
    }),
    this._currentSquad = null,
    Object.defineProperty(this, "_currentSquad", {
        writable: !0,
        enumerable: !1
    }),
    this._currentAuction = null,
    Object.defineProperty(this, "_currentAuction", {
        writable: !0,
        enumerable: !1
    }),
    this._requestedBid = 0,
    Object.defineProperty(this, "_requestedBid", {
        writable: !0,
        enumerable: !1
    }),
    this._panelSwiping = !0,
    Object.defineProperty(this, "_panelSwiping", {
        writable: !0,
        enumerable: !1
    }),
    this._countdownIntervalController = null,
    Object.defineProperty(this, "_countdownIntervalController", {
        writable: !0,
        enumerable: !1
    }),
    this._clientCountdownAuctionId = "0",
    Object.defineProperty(this, "_clientCountdownAuctionId", {
        writable: !0,
        enumerable: !1
    }),
    this._clientCountdown = -1,
    Object.defineProperty(this, "_clientCountdown", {
        writable: !0,
        enumerable: !1
    }),
    this._enablePriceComparison = !0,
    Object.defineProperty(this, "_enablePriceComparison", {
        writable: !0,
        enumerable: !1
    })
}
,
JSUtils.inherits(controllers.items.ItemDetails, UTViewController),
controllers.items.ItemDetails.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass(),
        this._itemActionController.init(),
        this._quickListPanel.init(),
        this.getView().addTarget(this, this._eIndexChange, UTItemDetailsView.Event.INDEX_CHANGE);
        var e = getDefaultDispatcher();
        e.addObserver(AppNotification.ITEM_LIST, this, this._nItemListed),
        e.addObserver(AppNotification.ITEM_MOVE, this, this._nItemMoved),
        e.addObserver(AppNotification.ITEM_UNDO_DISCARD, this, this._nItemRecovered)
    }
}
,
controllers.items.ItemDetails.prototype.initWithIterator = function initWithIterator(e) {
    this.initialized || (DebugUtils.Assert(e instanceof EAIterator, "Initialization expected an instance of EAIterator."),
    this._viewmodel = e,
    this.init())
}
,
controllers.items.ItemDetails.prototype.setStadiumViewModel = function setStadiumViewModel(e) {
    this._stadiumViewModel = e
}
,
controllers.items.ItemDetails.prototype.setSquadContext = function setSquadContext(e) {
    DebugUtils.Assert(e instanceof UTSquadMarketSearchViewModel, "Initialization expected an instance of UTSquadMarketSearchViewModel."),
    this._squadContext = e
}
,
controllers.items.ItemDetails.prototype.dealloc = function dealloc() {
    var e = getDefaultDispatcher();
    e.removeObserver(AppNotification.ITEM_LIST, this),
    e.removeObserver(AppNotification.ITEM_MOVE, this),
    this._viewmodel = null,
    this._panel && (this._panel.dealloc(),
    this._panel = null),
    this._itemActionController.dealloc(),
    this._quickListPanel.dealloc(),
    this.superclass()
}
,
controllers.items.ItemDetails.prototype.enableSwiping = function enableSwiping(e) {
    this._panelSwiping = e
}
,
controllers.items.ItemDetails.prototype._getTelemetryId = function _getTelemetryId() {
    return "Item - Detail View"
}
,
controllers.items.ItemDetails.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.detailView")
}
,
controllers.items.ItemDetails.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTItemDetailsView
}
,
controllers.items.ItemDetails.prototype._getPanelViewInstanceFromData = function _getPanelViewInstanceFromData(e, t) {
    this._panel && this._panel.dealloc();
    var i = services.User.getUser()
      , o = e.getAuctionData();
    if (e.isRecoverable())
        this._panel = new UTDiscardedItemActionPanelView,
        this._panel.init(),
        this._panel.render(e),
        this._panel.addTarget(this, this._onRecover, enums.UIItemActionEvent.RECOVER),
        this._panel.addTarget(this, this._onPlayerBio, enums.UIItemActionEvent.BIO),
        this._panel.setRecoverButtonInteractionState(0 < services.Item.getDiscardRestoresLeft());
    else if (e.isDuplicateLoanPlayer())
        this._panel = new UTDuplicateLoanActionPanelView,
        this._panel.init(),
        this._panel.render(e),
        this._panel.onPlayerBio.observe(this, this._onPlayerBio),
        this._panel.onDiscard.observe(this, this._onCombineLoans);
    else if (o.isSelling() && o.isActiveTrade() || o.isSold())
        this._panel = new UTTransferActionPanelView,
        this._panel.init(),
        this._panel.render(e),
        this._panel.onClearSold.observe(this, this._onClearSold),
        this._panel.onPlayerBio.observe(this, this._onPlayerBio);
    else if (!o.isValid() || o.isWon() || o.tradeOwner) {
        var n = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED) && !getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_HIDE_TRANSFER_MARKET) && i.hasTradeAccess()
          , r = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.PLATFORM_SPLIT_FOR_TRANSFER_MARKET)
          , s = repositories.Item.isPileFull(ItemPile.TRANSFER)
          , a = !1
          , l = !1
          , c = !1;
        if (this._stadiumViewModel) {
            var d = this._stadiumViewModel.getCurrentSlot();
            a = e.id === this._stadiumViewModel.getSlotItemId(),
            c = !!(l = JSUtils.isValid(d)) && d.emptiable
        }
        if (this._panel = new UTDefaultActionPanelView,
        this._panel.init(),
        this._panel.render(e, t, s, !this._squadContext || this._squadContext.isActiveSquad(), a, l, c),
        this._panel.addTarget(this, this._onDiscard, enums.UIItemActionEvent.DISCARD),
        this._panel.addTarget(this, this._onMove, enums.UIItemActionEvent.SEND_TO_CLUB),
        this._panel.addTarget(this, this._onMove, enums.UIItemActionEvent.SEND_TO_TRANSFERS),
        this._panel.addTarget(this, this._onCompare, enums.UIItemActionEvent.COMPARE),
        this._panel.addTarget(this, this._onRedeem, enums.UIItemActionEvent.REDEEM),
        this._panel.addTarget(this, this._onApply, enums.UIItemActionEvent.APPLY_CONSUMABLE),
        this._panel.addTarget(this, this._onActivate, enums.UIItemActionEvent.ACTIVATE),
        this._panel.addTarget(this, this._onDeactivate, enums.UIItemActionEvent.DEACTIVATE),
        this._panel.addTarget(this, this._onSendToSquad, enums.UIItemActionEvent.SEND_TO_SQUAD),
        this._panel.addTarget(this, this._onPlayerBio, enums.UIItemActionEvent.BIO),
        !r && n && !e.untradeable && !a && !e.isInjured() && !e.isPlayerPickItem() && (!s || e.pile === ItemPile.TRANSFER) && e.isValid()) {
            var u, h = this._quickListPanel.getView();
            u = o.isExpired() ? "infopanel.label.relistitem" : "infopanel.label.quickList",
            h.setTitle(services.Localization.localize(u)),
            h.close(),
            this._panel.appendQuickList(h)
        }
    } else
        this._panel = new UTAuctionActionPanelView,
        this._panel.init(),
        this._panel.enablePriceComparison(this._enablePriceComparison),
        this._panel.render(e, i.getCurrency(GameCurrency.COINS).amount),
        this._panel.onWatch.observe(this, this._onWatch),
        this._panel.onBid.observe(this, this._onBid),
        this._panel.onBuyNow.observe(this, this._onBuyNow),
        this._panel.onFindRelated.observe(this, this._onFindRelated),
        this._panel.onPlayerBio.observe(this, this._onPlayerBio)
}
,
controllers.items.ItemDetails.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var e = this.getView();
    e && e.toggleCarouselSwiping(this._panelSwiping),
    services.Squad.requestSquadByType("active").observe(this, function(e, t) {
        if (e.unobserve(this),
        t.success && (this._currentSquad = t.data.squad),
        this.isViewDisplayed() && (this._renderView(),
        this._refreshPanel()),
        this._viewmodel) {
            var i = this._viewmodel.current();
            isPhone() && i.isClubConsumable() && 0 === i.stackCount && this._handleRemove([i.id]),
            this._viewmodel.conforms(interfaces.AuctionUpdater) && this._viewmodel.startAuctionUpdates()
        }
    })
}
,
controllers.items.ItemDetails.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass();
    var e = this.getView();
    e.resetItems(),
    e.destroyCarousel(),
    this._viewmodel && this._viewmodel.conforms(interfaces.AuctionUpdater) && this._viewmodel.stopAuctionUpdates(),
    this._stopClientTimer(),
    this._currentAuction && (this._currentAuction.onDataUpdated.unobserve(this),
    this._currentAuction = null)
}
,
controllers.items.ItemDetails.prototype.didDismiss = function didDismiss(e) {
    this.superclass(),
    e instanceof UTPlayerPicksViewController && e.isPendingSelectionContext() && !services.User.getUser().hasPlayerPicksPending && services.Item.redeem(this._viewmodel.current()).observe(this, this._eRedeemComplete),
    e.dealloc()
}
,
controllers.items.ItemDetails.prototype.enablePriceComparison = function enablePriceComparison(e) {
    this._enablePriceComparison = !!e,
    this._panel && this._panel instanceof UTAuctionActionPanelView && (this._panel.enablePriceComparison(this._enablePriceComparison),
    this._refreshPanel())
}
,
controllers.items.ItemDetails.prototype._getViewIteratorItems = function _getViewIteratorItems() {
    return this._viewmodel instanceof UTPaginatedItemListViewModel ? this._viewmodel.getPageItems() : this._viewmodel.values()
}
,
controllers.items.ItemDetails.prototype._getViewIteratorIndex = function _getViewIteratorIndex() {
    return this._viewmodel instanceof UTPaginatedItemListViewModel ? this._viewmodel.getPageIndex() : this._viewmodel.getIndex()
}
,
controllers.items.ItemDetails.prototype._setViewIteratorIndex = function _setViewIteratorIndex(e) {
    this._viewmodel instanceof UTPaginatedItemListViewModel && (e = this._viewmodel.numItemsPerPage * (this._viewmodel.getCurrentPage() - 1) + e);
    this._viewmodel.setIndex(e)
}
,
controllers.items.ItemDetails.prototype._checkStadiumSlot = function _checkStadiumSlot() {
    var e = !1
      , t = this._viewmodel.current();
    if (this._stadiumViewModel && t) {
        var i = this._stadiumViewModel.getCurrentSlot();
        hasSlotContext = JSUtils.isValid(i),
        e = t.id === this._stadiumViewModel.getSlotItemId(),
        hasSlotContext && i.modified && !e && services.MyStadium.saveStadium()
    }
}
,
controllers.items.ItemDetails.prototype._renderView = function _renderView() {
    var e = this._viewmodel.current();
    this._refreshView(),
    this._renderPanel(e),
    this._checkStadiumSlot()
}
,
controllers.items.ItemDetails.prototype._refreshView = function _refreshView() {
    this.isViewDisplayed() && this.getView().render(this._getViewIteratorItems(), this._getViewIteratorIndex())
}
,
controllers.items.ItemDetails.prototype._renderPanel = function _renderPanel(e) {
    this._currentAuction && this._currentAuction.onDataUpdated.unobserve(this),
    this._currentAuction = e.getAuctionData(),
    this._currentAuction.onDataUpdated.observe(this, this._onTimedUpdate),
    this._getPanelViewInstanceFromData(e, this._squadContext ? this._squadContext.getSquad() : this._currentSquad),
    this._quickListPanel.setItem(e),
    this._appendPanel(),
    (this._panel instanceof UTAuctionActionPanelView && this._currentAuction.getSecondsRemaining() <= AUCTION_COUNTDOWN_THRESHOLD || this._panel instanceof UTTransferActionPanelView) && this._startClientTimer()
}
,
controllers.items.ItemDetails.prototype._refreshPanel = function _refreshPanel() {
    var e = services.User.getUser()
      , t = this._viewmodel.current()
      , i = !1
      , o = !1
      , n = !1;
    if (this._stadiumViewModel) {
        var r = this._stadiumViewModel.getCurrentSlot();
        i = t.id === this._stadiumViewModel.getSlotItemId(),
        n = !!(o = JSUtils.isValid(r)) && r.emptiable
    }
    this._panel.conforms(UTAuctionActionPanelView) ? this._panel.render(t, e.getCurrency(GameCurrency.COINS).amount) : this._panel.conforms(UTDefaultActionPanelView) ? this._panel.render(t, this._squadContext ? this._squadContext.getSquad() : this._currentSquad, repositories.Item.isPileFull(ItemPile.TRANSFER), !this._squadContext || this._squadContext.isActiveSquad(), i, o, n) : this._panel.render(t)
}
,
controllers.items.ItemDetails.prototype._appendPanel = function _appendPanel() {
    this.getView().appendPanel(this._panel)
}
,
controllers.items.ItemDetails.prototype._eIndexChange = function _eIndexChange(e, t, i) {
    i.index !== this._getViewIteratorIndex() && (this._setViewIteratorIndex(i.index),
    this._renderPanel(this._viewmodel.current()))
}
,
controllers.items.ItemDetails.prototype.onIndexChange = function onIndexChange() {
    this._renderView()
}
,
controllers.items.ItemDetails.prototype.onPageChange = function onPageChange() {
    this.getView().resetItems()
}
,
controllers.items.ItemDetails.prototype._onBid = function _onBid(e, t) {
    var i = this._panel
      , o = this._viewmodel.current().getAuctionData();
    this._requestedBid = t,
    0 < o.getSecondsRemaining() && (repositories.Item.isPileFull(ItemPile.INBOX) && !o.watched ? (utils.PopupManager.showAlert(utils.PopupManager.Alerts.WATCH_LIST_FULL),
    i.setBidBuyBusyState(!1)) : this._requestedBid < o.currentBid || this._requestedBid < o.startingBid ? (utils.PopupManager.showAlert(utils.PopupManager.Alerts.BID_TOO_LOW),
    i.setBidBuyBusyState(!1)) : o.isHighestBid() ? utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.BID_WHEN_HIGHEST_BIDDER, null, this._eBidConfirmed.bind(this), this._eBidCancelled.bind(this)) : this._eBidConfirmed())
}
,
controllers.items.ItemDetails.prototype._eBidConfirmed = function _eBidConfirmed() {
    var n = this._viewmodel.current()
      , r = this._panel;
    JSUtils.isNumber(this._requestedBid) && 0 < this._requestedBid ? this._itemActionController.bid(n, this._requestedBid).observe(this, function _eBidComplete(e, t) {
        e.unobserve(this);
        var i = n.getAuctionData();
        if (t.success) {
            if (i.isWon() ? this._renderView() : (i.isHighestBid() && r.performBidIncreaseAnimation(),
            this._refreshView(),
            this._refreshPanel()),
            this._squadContext) {
                var o = "Squad Slot Detail View - SOTM " + (i.isWon() ? "Buy Now" : "Bid");
                TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.BUTTON_PRESS, o)
            }
        } else
            t.error && t.error.code === UtasErrorCode.LOCKED_TRANSFER_MARKET ? this.getNavigationController().popToRootViewController() : NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : (t.status,
            HttpStatusCode.RATE_LIMIT,
            r.setBidBuyBusyState(!1))
    }) : r.setBidBuyBusyState(!1)
}
,
controllers.items.ItemDetails.prototype._eBidCancelled = function _eBidCancelled() {
    var e = this._viewmodel.current().getAuctionData()
      , t = 0 < e.currentBid ? UTCurrencyInputControl.getIncrementAboveVal(e.currentBid) : e.startingBid
      , i = services.User.getUser().getCurrency(GameCurrency.COINS).amount
      , o = e.canBid(t, i);
    this._panel.setBuyBusyState(!e.canBuy(i)),
    this._panel.setBidBusyState(!o)
}
,
controllers.items.ItemDetails.prototype._onBuyNow = function _onBuyNow() {
    var e = services.User.getUser()
      , t = this._viewmodel.current().getAuctionData()
      , i = t.buyNowPrice;
    this._requestedBid = i,
    0 < t.getSecondsRemaining() && (repositories.Item.numItemsInCache(ItemPile.PURCHASED) >= MAX_NEW_ITEMS ? utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.NEW_ITEMS_FULL, null, this._goToUnassigned.bind(this), this._eBidCancelled.bind(this)) : t.canBuy(e.getCurrency(GameCurrency.COINS).amount) ? utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.CONFIRM_BUY_NOW, [services.Localization.localizeNumber(i)], this._eBidConfirmed.bind(this), this._eBidCancelled.bind(this)) : (services.Notification.queue([services.Localization.localize("popup.error.auctionInsufficientCoins"), UINotificationType.NEGATIVE]),
    this._eBidCancelled()))
}
,
controllers.items.ItemDetails.prototype._onCombineLoans = function _onCombineLoans() {
    this._itemActionController.combineLoans(this._viewmodel.current()).observe(this, function(e, t) {
        e.unobserve(this),
        t.success && this._handleRemove(t.data.itemIds)
    })
}
,
controllers.items.ItemDetails.prototype._onDiscard = function _onDiscard() {
    var e = this._viewmodel.current();
    if (e.isConsumable()) {
        var t = new UTQuickSellPopupViewController(e.stackCount,e.untradeableCount,e.discardValue);
        t.onConfirm.observe(this, this._onDiscardConfirmConsumable),
        gPopupClickShield.setActivePopup(t)
    } else
        utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.CONFIRM_DISCARD, [services.Localization.localizeNumber(e.discardValue)], this._onDiscardConfirm.bind(this))
}
,
controllers.items.ItemDetails.prototype._onDiscardConfirmConsumable = function _onDiscardConfirmConsumable(e, t) {
    this._itemActionController.discard(this._viewmodel.current(), t).observe(this, function(e, t) {
        e.unobserve(this),
        t.success && JSUtils.isObject(t.data) && this._handleRemove(t.data.itemIds)
    }
    .bind(this))
}
,
controllers.items.ItemDetails.prototype._onDiscardConfirm = function _onDiscardConfirm() {
    this._itemActionController.discard(this._viewmodel.current()).observe(this, function(e, t) {
        e.unobserve(this),
        t.success && JSUtils.isObject(t.data) && this._handleRemove(t.data.itemIds)
    }
    .bind(this))
}
,
controllers.items.ItemDetails.prototype._onMove = function _onMove(e, t) {
    var i = this._viewmodel.current()
      , o = t === enums.UIItemActionEvent.SEND_TO_TRANSFERS ? ItemPile.TRANSFER : ItemPile.CLUB;
    this._itemActionController.move(i, o).observe(this, function(e, t) {
        e.unobserve(this),
        t.success && this._handleItemMove(t.data.itemIds, t.data.clubDuplicates)
    })
}
,
controllers.items.ItemDetails.prototype._nItemMoved = function _nItemMoved(e, t, i) {
    this._viewmodel && 0 < this._viewmodel.length && (1 === i.itemIds.length ? this._handleItemMove(i.itemIds, i.clubDuplicates) : this._renderView())
}
,
controllers.items.ItemDetails.prototype._nItemRecovered = function _nItemRecovered(e, t, i) {
    this._viewmodel && 0 < this._viewmodel.length && (1 === i.itemIds.length ? this._handleRemove(i.itemIds) : this._renderView())
}
,
controllers.items.ItemDetails.prototype._handleItemMove = function _handleItemMove(e, t) {
    var i = this._viewmodel.current()
      , o = i.isConsumable();
    if (-1 < e.indexOf(i.id) || o && 0 === i.stackCount) {
        var n = this.getRootNavigationController()
          , r = this.getNavigationController()
          , s = this._viewmodel.getIndex()
          , a = JSUtils.find(t, function(e) {
            return e.id === i.duplicateId
        });
        this._viewmodel.remove(s),
        this._viewmodel.values().forEach(function(e) {
            e.compareResourceTo(i, !0) && i.pile === ItemPile.CLUB && (e.duplicateId = i.id,
            e.isLoaned() && i.isLoaned() && (e.duplicateItemLoans = i.loans))
        }),
        a && (this._viewmodel.add(a, s),
        this._setViewIteratorIndex(s)),
        0 < this._viewmodel.length ? (JSUtils.isValid(a) || this._renderPanel(this._viewmodel.current()),
        this._renderView()) : isPhone() && n && n !== r && n.getCurrentController() !== n.getRootController() && r.getCurrentController() === r.getRootController() ? n.popViewController() : r && r.getCurrentController() !== r.getRootController() && r.popViewController()
    } else
        o && 0 < i.stackCount && this._refreshConsumable(i)
}
,
controllers.items.ItemDetails.prototype._onCompare = function _onCompare() {
    var e = this.getNavigationController();
    if (e) {
        var t = new UTMarketSearchResultsViewController
          , i = new UTSearchCriteriaDTO
          , o = this._viewmodel.current();
        services.Item.clearTransferMarketCache(),
        o ? (i.defId = [o.definitionId],
        i.type = o.getSearchType(),
        t.initWithSearchCriteria(i),
        t.setPinnedItem(o)) : t.initWithSearchCriteria(i),
        e.pushViewController(t, !0)
    }
}
,
controllers.items.ItemDetails.prototype._onRedeem = function _onRedeem() {
    var e = this._viewmodel.current();
    e.isPlayerPickItem() && services.User.getUser().hasPlayerPicksPending ? services.Item.requestPendingPlayerPickItemSelection().observe(this, function(e, t) {
        e.unobserve(this),
        t.success ? this._showPlayerPicks(t.response.items, !0) : NetworkErrorManager.handleStatus(t.status)
    }) : services.Item.redeem(e).observe(this, this._eRedeemComplete)
}
,
controllers.items.ItemDetails.prototype._eRedeemComplete = function _eRedeemComplete(e, t) {
    e.unobserve(this),
    t.success ? (this._viewmodel.current().isPlayerPickItem() && this._showPlayerPicks(t.data.playerPicks),
    this._handleRemove(t.data.itemIds)) : NetworkErrorManager.handleStatus(t.status)
}
,
controllers.items.ItemDetails.prototype._nItemListed = function _nItemListed(e, t, i) {
    this._viewmodel.current() && -1 < i.itemIds.indexOf(this._viewmodel.current().id) && this._renderView()
}
,
controllers.items.ItemDetails.prototype._onClearSold = function _onClearSold() {
    services.Item.clearSoldItems(this._viewmodel.current()).observe(this, function _eClearSoldComplete(e, t) {
        e.unobserve(this),
        t.success && this._handleRemove(t.data.itemIds)
    })
}
,
controllers.items.ItemDetails.prototype._onActivate = function _onActivate(e, t) {
    var i = this._viewmodel.current();
    if (JSUtils.isValid(this._stadiumViewModel) && this._stadiumViewModel.assignItemToSlot(i)) {
        this._refreshView(),
        this._refreshPanel(),
        this._panel.removeQuickList();
        var o = new UTStadiumMessageProducer
          , n = o.createMessage(MessageType.STADIUM, {
            message: t
        });
        o.publishMessage(n)
    }
}
,
controllers.items.ItemDetails.prototype._onDeactivate = function _onDeactivate() {
    var e = JSUtils.isValid(this._stadiumViewModel);
    e && this._stadiumViewModel.assignItemToSlot(new UTNullItemEntity) ? (this._refreshView(),
    this._refreshPanel(),
    this._panel.removeQuickList(),
    services.Notification.queue([services.Localization.localize("notification.club.unassignSuccess"), UINotificationType.POSITIVE])) : services.Notification.queue([services.Localization.localize("notification.club.unassignFailed"), UINotificationType.NEGATIVE]),
    DebugUtils.Assert(e, "Item Detail controller is missing stadium context for deactivation.")
}
,
controllers.items.ItemDetails.prototype._onSendToSquad = function _onSendToSquad() {
    var e = this._viewmodel.current();
    function _saveSquad(o) {
        function _saveManagerToSquad(i) {
            i.addItemToSlot(UTSquadEntity.MANAGER_SLOT_INDEX, e),
            i.save().observe(this, function(e, t) {
                e.unobserve(this),
                t.success && (this._currentSquad = i,
                o && this._refreshPanel(),
                services.Notification.queue([services.Localization.localize("notification.item.toActiveSquad"), UINotificationType.NEUTRAL]))
            })
        }
        this._squadContext ? _saveManagerToSquad.call(this, this._squadContext.getSquad()) : services.Squad.requestSquadByType("active").observe(this, function(e, t) {
            e.unobserve(this),
            t.success && _saveManagerToSquad.call(this, t.data.squad)
        })
    }
    e.isPlayer() ? this._gotoSendToSquadFlow() : e.isManager() && (e.pile !== ItemPile.CLUB ? services.Item.move(e, ItemPile.CLUB).observe(this, function _eSquadMoveComplete(e, t) {
        e.unobserve(this),
        t.success ? (this._handleItemMove(t.data.itemIds, t.data.clubDuplicates),
        _saveSquad.call(this, !1)) : (services.Notification.queue([services.Localization.localize("notification.item.toActiveSquadFailed"), UINotificationType.NEGATIVE]),
        NetworkErrorManager.handleStatus(t.status))
    }) : _saveSquad.call(this, !0))
}
,
controllers.items.ItemDetails.prototype._onApply = function _onApply() {
    this._gotoApplyConsumableFlow()
}
,
controllers.items.ItemDetails.prototype._onWatch = function _onWatch() {
    var e = this._viewmodel.current().getAuctionData();
    e.watched ? e.isHighestBid() ? (utils.PopupManager.showAlert(utils.PopupManager.Alerts.CANT_UNWATCH_ACTIVE_BID),
    this._panel.setWatchBusyState(!1),
    this._panel.toggleWatchedState(!0)) : this._onUnwatchAction() : repositories.Item.isPileFull(ItemPile.INBOX) ? (utils.PopupManager.showAlert(utils.PopupManager.Alerts.WATCH_LIST_FULL),
    this._panel.setWatchBusyState(!1),
    this._panel.toggleWatchedState(!0)) : this._onWatchAction()
}
,
controllers.items.ItemDetails.prototype._onWatchAction = function _onWatchAction() {
    var o = this._viewmodel.current();
    this._itemActionController.target(o).observe(this, function(e, t) {
        e.unobserve(this);
        var i = this._panel;
        i.toggleWatchedState(o.getAuctionData().watched),
        i.setWatchBusyState(!1),
        t.error && (t.error.code === UtasErrorCode.LOCKED_TRANSFER_MARKET ? this.getNavigationController().popToRootViewController() : t.error.code !== UtasErrorCode.PERMISSION_DENIED && t.status !== HttpStatusCode.CONFLICT && NetworkErrorManager.handleStatus(t.status))
    })
}
,
controllers.items.ItemDetails.prototype._onUnwatchAction = function _onUnwatchAction() {
    var n = this._viewmodel.current();
    this._itemActionController.untarget(n).observe(this, function(e, t) {
        e.unobserve(this);
        var i = this._panel
          , o = n.getAuctionData();
        i.toggleWatchedState(o.watched),
        o.isExpired() || i.setWatchBusyState(!1),
        t.error && (t.error.code === UtasErrorCode.LOCKED_TRANSFER_MARKET ? this.getNavigationController().popToRootViewController() : t.error.code !== UtasErrorCode.PERMISSION_DENIED && NetworkErrorManager.handleStatus(t.status))
    })
}
,
controllers.items.ItemDetails.prototype._onPlayerBio = function _onPlayerBio() {
    var e = this._viewmodel.current();
    if (e.isValid() && e.isPlayer() && JSUtils.isValid(e.getMetaData())) {
        var t = new UTPlayerBioViewController;
        t.initWithItem(e),
        this.getNavigationController().pushViewController(t)
    } else
        services.Notification.queue([services.Localization.localize("playerbio.unavailable"), UINotificationType.NEGATIVE])
}
,
controllers.items.ItemDetails.prototype._onRecover = function _onRecover() {
    var i = this._viewmodel.current();
    DebugUtils.Assert(i.isRecoverable(), "Undo Discard: Trying to recover an item that can't be recovered."),
    i.isRecoverable() && services.Item.restoreDiscardedItem(i.id, i.discardDate, i.continuationId).observe(this, function(e, t) {
        e.unobserve(this),
        t.success ? services.Notification.queue([services.Localization.localize("notification.undoDiscard.success", [i.getStaticData().name]), UINotificationType.POSITIVE]) : services.Notification.queue([services.Localization.localize("notification.undoDiscard.fail", [i.getStaticData().name]), UINotificationType.NEGATIVE])
    })
}
,
controllers.items.ItemDetails.prototype._onFindRelated = function _onFindRelated() {
    var e = this.getNavigationController();
    if (e) {
        var t = new UTMarketSearchResultsViewController
          , i = new UTSearchCriteriaDTO
          , o = this._viewmodel.current();
        services.Item.clearTransferMarketCache(),
        o ? (i.defId = [o.definitionId],
        i.type = o.getSearchType(),
        t.initWithSearchCriteria(i),
        t.setPinnedItem(o)) : t.initWithSearchCriteria(i),
        e.pushViewController(t, !0)
    }
}
,
controllers.items.ItemDetails.prototype._onTimedUpdate = function _onTimedUpdate(e, t) {
    (this._panel instanceof UTAuctionActionPanelView || this._panel instanceof UTTransferActionPanelView) && (this._currentAuction.isWon() || this._currentAuction.isExpired() ? (this._stopClientTimer(),
    this._renderView(),
    this._refreshPanel()) : ((JSUtils.isValid(t.bidState) || JSUtils.isValid(t.tradeState)) && (this._refreshView(),
    this._refreshPanel()),
    this._clientCountdownAuctionId !== this._currentAuction.tradeId && this._stopClientTimer(),
    this._panel instanceof UTTransferActionPanelView || this._currentAuction.getSecondsRemaining() <= AUCTION_COUNTDOWN_THRESHOLD ? this._startClientTimer() : this._panel.onTimedUpdate(this._currentAuction)))
}
,
controllers.items.ItemDetails.prototype._startClientTimer = function _startClientTimer() {
    this._countdownIntervalController || (this._clientCountdownAuctionId = this._currentAuction.tradeId,
    this._clientCountdown = this._currentAuction.getSecondsRemaining(),
    this._panel.onTimedUpdate(this._currentAuction, this._clientCountdown),
    this._countdownIntervalController = new EAIntervalController(1e3,this._updateClientTimer.bind(this)),
    this._countdownIntervalController.start())
}
,
controllers.items.ItemDetails.prototype._stopClientTimer = function _stopClientTimer() {
    this._countdownIntervalController && (this._countdownIntervalController.dealloc(),
    this._countdownIntervalController = null)
}
,
controllers.items.ItemDetails.prototype._updateClientTimer = function _updateClientTimer() {
    if (this._clientCountdownAuctionId !== this._currentAuction.tradeId || this._clientCountdown < 0)
        this._stopClientTimer();
    else {
        this._clientCountdown--;
        var e = this._clientCountdown
          , t = Math.abs(this._currentAuction.expires - this._clientCountdown);
        (this._clientCountdown < 0 || this._currentAuction.expires < 0 || t > AUCTION_LATENCY_THRESHOLD) && (e = this._currentAuction.getSecondsRemaining(),
        0 <= this._clientCountdown && 0 <= this._currentAuction.expires && (this._clientCountdown = e)),
        this._panel.onTimedUpdate(this._currentAuction, e)
    }
}
,
controllers.items.ItemDetails.prototype._handleRemove = function _handleRemove(e) {
    if (Array.isArray(e) && 1 === e.length) {
        var t = this._viewmodel.current();
        if (t.isClubConsumable())
            isPhone() ? (this._refreshConsumable(t),
            this._refreshPanel(),
            this._refreshView()) : 0 < t.stackCount && this._refreshConsumable(t);
        else if (0 <= e.indexOf(t.id)) {
            var i = isPhone() ? this.getRootNavigationController() : this.getNavigationController();
            this._viewmodel.remove(this._viewmodel.getIndex()),
            0 < this._viewmodel.length ? (this._renderPanel(this._viewmodel.current()),
            this._renderView()) : i && i.getCurrentController() !== i.getRootController() && i.popViewController()
        }
    } else
        this._renderView()
}
,
controllers.items.ItemDetails.prototype._showPlayerPicks = function _showPlayerPicks(e, t) {
    var i = isPhone()
      , o = new UTPlayerPicksViewController;
    o.initWithPicks(e),
    t && o.setPendingSelectionContext(),
    o.modalDisplayStyle = i ? "fullscreen" : "form",
    i ? this.getNavigationController().getPreviousController().presentViewController(o, !0) : this.presentViewController(o, !0)
}
,
controllers.items.ItemDetails.prototype._refreshConsumable = function _refreshConsumable(e) {
    e.untradeable && this._refreshPanel(),
    this._renderView()
}
,
controllers.items.ItemDetails.prototype._gotoSendToSquadFlow = function _gotoSendToSquadFlow() {
    var e = this._viewmodel.current()
      , t = new UTSendToSquadViewController;
    this._squadContext && (t.setSquad(this._squadContext.getSquad()),
    t.setSelectedSlotIndex(this._squadContext.getCurrentSlot().getIndex())),
    e ? t.initWithItem(e) : t.init(),
    this.getNavigationController().pushViewController(t)
}
,
controllers.items.ItemDetails.prototype._gotoApplyConsumableFlow = function _gotoApplyConsumableFlow() {
    var e, t = this._viewmodel.current();
    t.isConsumable() ? (e = new UTClubSearchFiltersViewController).displayAsDetails = !0 : e = new UTConsumableCategoriesViewController,
    t ? e.initWithItem(t) : e.init(),
    this.getNavigationController().pushViewController(e)
}
,
controllers.items.ItemDetails.prototype._goToUnassigned = function _goToUnassigned() {
    gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Item.requestUnassignedItems().observe(this, function _onRequestUnassignedComplete(e, t) {
        e.unobserve(this);
        var i = this.getRootNavigationController();
        if (i) {
            var o = isPhone() ? new UTUnassignedItemsViewController : new UTUnassignedItemsSplitViewController;
            t.success ? o.initWithItems(t.response.items) : o.init(),
            services.Item.clearTransferMarketCache(),
            i.pushViewController(o)
        }
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    })
}
,
NamespaceManager.Register("controllers.navigation"),
controllers.navigation.ItemDetails = function ItemDetailNavigationController(e, t) {
    UTNavigationController.call(this, e, t)
}
,
JSUtils.inherits(controllers.navigation.ItemDetails, UTNavigationController),
controllers.navigation.ItemDetails.prototype.initWithIterator = function initWithIterator(e) {
    if (!this.initialized) {
        DebugUtils.Assert(e instanceof EAIterator, "Initialization expected an instance of EAIterator.");
        var t = this._getRootControllerInstance();
        t.initWithIterator(e),
        this.initWithRootController(t)
    }
}
,
controllers.navigation.ItemDetails.prototype._getRootControllerInstance = function _getRootControllerInstance() {
    return new controllers.items.ItemDetails
}
,
controllers.navigation.ItemDetails.prototype.setIndex = function setIndex(e) {
    this.popToRootViewController(),
    this.getRootController().onIndexChange(e)
}
,
controllers.navigation.ItemDetails.prototype.setStadiumViewModel = function setStadiumViewModel(e) {
    var t = this.getRootController();
    t instanceof controllers.items.ItemDetails && t.setStadiumViewModel(e)
}
,
controllers.navigation.ItemDetails.prototype.onPageChange = function onPageChange() {
    this.getRootController().onPageChange()
}
,
controllers.navigation.ItemDetails.prototype.enableSwiping = function enableSwiping(e) {
    this.getRootController().enableSwiping(e)
}
,
controllers.navigation.ItemDetails.prototype.enablePriceComparison = function enablePriceComparison(e) {
    this.getRootController().enablePriceComparison(e)
}
,
controllers.navigation.ItemDetails.prototype.didPush = function didPush(e) {
    this.superclass(),
    this.setNavigationVisibility(e !== this.getRootController(), !0)
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTClubSearchResultsViewController = function(s) {
    function UTClubSearchResultsViewController() {
        var e = s.call(this) || this;
        return e.activeSquad = null,
        e.clubViewModel = null,
        e.consumableItem = null,
        e.displayAsDetails = !1,
        e.onDataChange = new EAObservable,
        e.onItemSelected = new EAObservable,
        e.pinnedItemController = null,
        e.searchCriteria = new UTSearchCriteriaDTO,
        e.selectedItem = null,
        e.selectedSubType = null,
        e.stadiumViewModel = null,
        e
    }
    return __extends(UTClubSearchResultsViewController, s),
    UTClubSearchResultsViewController.prototype.init = function() {
        this.initialized || (s.prototype.init.call(this),
        this.searchCriteria.count = MAX_ITEMS_REQUEST + 1)
    }
    ,
    UTClubSearchResultsViewController.prototype.initWithSearchCriteria = function(e) {
        this.initialized || (this.clubViewModel || (this.clubViewModel = new UTClubViewModel([])),
        this.searchCriteria = e,
        this.init())
    }
    ,
    UTClubSearchResultsViewController.prototype.dealloc = function() {
        var e;
        this.getView().onSearch.unobserve(this),
        s.prototype.dealloc.call(this),
        this.clubViewModel = null,
        this.consumableItem = null,
        this.selectedItem = null,
        this.selectedSubType = null,
        this.onItemSelected.dealloc(),
        this.onDataChange.dealloc(),
        null === (e = this.pinnedItemController) || void 0 === e || e.dealloc(),
        this.pinnedItemController = null
    }
    ,
    UTClubSearchResultsViewController.prototype._getViewInstanceFromData = function() {
        return new UTClubSearchResultsView
    }
    ,
    UTClubSearchResultsViewController.prototype.validateCurrentItems = function() {
        var e, t, i, o = null !== (t = null === (e = this.clubViewModel) || void 0 === e ? void 0 : e.getItemList().filter(function(e) {
            var t = repositories.Item.getClub()
              , i = e.isConsumable() ? e.definitionId : e.id;
            return JSUtils.isNumber(i) && !t.getItem(e.type, e.subtype, i)
        }).map(function(e) {
            return e.id
        })) && void 0 !== t ? t : [];
        null === (i = this.clubViewModel) || void 0 === i || i.removeItemsById(o)
    }
    ,
    UTClubSearchResultsViewController.prototype.viewDidAppear = function() {
        var i = this;
        s.prototype.viewDidAppear.call(this);
        var o = this.getView()
          , e = 1 < this.searchCriteria.subtypes.length;
        if (o.toggleSubTypesOptions(e),
        e) {
            var t = o.getSubTypesDropDown()
              , n = factories.DataProvider.getDynamicSubTypesDP(this.searchCriteria.subtypes);
            o.setSubTypesOptions(n),
            this.selectedSubType && t.setIndexById(this.selectedSubType),
            t.addTarget(this, this.onDropDownChanged, EventType.CHANGE)
        }
        function Ju() {
            var e, t;
            i.setupHeader(),
            i.selectedItem && (null === (e = i.clubViewModel) || void 0 === e ? void 0 : e.canShowPage()) ? (i.validateCurrentItems(),
            i.clubViewModel.removeEmptyConsumables(),
            i.updateItemList(i.clubViewModel.getPageItems()),
            i.selectedItem = null) : (null === (t = i.clubViewModel) || void 0 === t || t.resetCollection([]),
            i._requestItems()),
            i.consumableItem && (i.generatePinnedItemView(),
            o.setPinnedItemData(i.consumableItem)),
            i.pinnedItemController && i.pinnedItemController.viewDidAppear(),
            o.updateListTopPosition(),
            i.setupTelemetry()
        }
        this.stadiumViewModel && this.stadiumViewModel.stadium.onDataUpdated.observe(this, this.onStadiumUpdated),
        this.searchCriteria.type === SearchType.PLAYER || this.searchCriteria.type === SearchType.STAFF ? services.Squad.requestSquadByType("active").observe(this, function(e, t) {
            e.unobserve(i),
            t.success && t.data && t.data.squad && i.setActiveSquadData(t.data.squad),
            Ju.call(i)
        }) : Ju.call(this),
        o.onSearch.observe(this, this.onSearch),
        o.addTarget(this, this.onTableCellSelected, enums.UIListEvent.ROW_SELECT),
        o.addTarget(this, this.onTableCellActionSelected, enums.UIListEvent.ROW_ACTION),
        o.addTarget(this, this.onNextPageSelected, enums.UIPaginationEvent.NEXT),
        o.addTarget(this, this.onPreviousPageSelected, enums.UIPaginationEvent.PREVIOUS);
        var r = getDefaultDispatcher();
        r.addObserver(AppNotification.ITEM_ACTIVATE, this, this.onItemActivated),
        r.addObserver(AppNotification.UI_ITEM_STATE_CHANGE, this, this.onItemViewStateChanged),
        r.addObserver(AppNotification.ITEM_APPLY, this, this.onConsumableApplied),
        r.addObserver(AppNotification.ITEM_DISCARD, this, this.onItemDiscarded),
        r.addObserver(AppNotification.ITEM_LIST, this, this.onItemListed),
        r.addObserver(AppNotification.ITEM_MOVE, this, this.onItemMoved),
        r.addObserver(AppNotification.SQUAD_SAVE, this, this._nSquadSaved)
    }
    ,
    UTClubSearchResultsViewController.prototype.viewWillDisappear = function() {
        s.prototype.viewWillDisappear.call(this),
        this.clubViewModel && this.clubViewModel.stopAuctionUpdates(),
        this.stadiumViewModel && this.stadiumViewModel.stadium.onDataUpdated.unobserve(this);
        var e = this.getView();
        e.removeTarget(this, this.onTableCellSelected, enums.UIListEvent.ROW_SELECT),
        e.removeTarget(this, this.onTableCellActionSelected, enums.UIListEvent.ROW_ACTION),
        e.removeTarget(this, this.onNextPageSelected, enums.UIPaginationEvent.NEXT),
        e.removeTarget(this, this.onPreviousPageSelected, enums.UIPaginationEvent.PREVIOUS);
        var t = getDefaultDispatcher();
        t.removeObserver(AppNotification.ITEM_ACTIVATE, this),
        t.removeObserver(AppNotification.ITEM_APPLY, this),
        t.removeObserver(AppNotification.ITEM_DISCARD, this),
        t.removeObserver(AppNotification.ITEM_LIST, this),
        t.removeObserver(AppNotification.ITEM_MOVE, this),
        t.removeObserver(AppNotification.SQUAD_SAVE, this),
        t.removeObserver(AppNotification.UI_ITEM_STATE_CHANGE, this)
    }
    ,
    UTClubSearchResultsViewController.prototype.getNavigationTitle = function() {
        return JSUtils.isValid(this.consumableItem) ? services.Localization.localize("panel.applyitem.button") : services.Localization.localize("navbar.label.club")
    }
    ,
    UTClubSearchResultsViewController.prototype.generatePinnedItemView = function() {
        this.pinnedItemController || (this.pinnedItemController = new UTPinnedItemViewController,
        this.consumableItem ? this.pinnedItemController.initWithItem(this.consumableItem) : this.pinnedItemController.init(),
        this.addChildViewController(this.pinnedItemController),
        this.getView().appendPinnedItemView(this.pinnedItemController.getView()))
    }
    ,
    UTClubSearchResultsViewController.prototype.setStadiumViewModel = function(e) {
        this.stadiumViewModel = e
    }
    ,
    UTClubSearchResultsViewController.prototype.setActiveSquadData = function(e) {
        e && (this.activeSquad = e,
        this.getView().setActiveSquadData(this.activeSquad))
    }
    ,
    UTClubSearchResultsViewController.prototype.setIterator = function(e) {
        this.clubViewModel = e
    }
    ,
    UTClubSearchResultsViewController.prototype.getIterator = function() {
        return this.clubViewModel
    }
    ,
    UTClubSearchResultsViewController.prototype.setConsumableToApply = function(e) {
        this.consumableItem = e
    }
    ,
    UTClubSearchResultsViewController.prototype.getItemTypeFromCriteria = function() {
        switch (this.searchCriteria.type) {
        case SearchType.PLAYER:
            return ItemType.PLAYER;
        case SearchType.STAFF:
            return ItemType.MANAGER;
        case SearchType.CLUB_INFO:
            return this.searchCriteria.category === SearchCategory.BADGE ? ItemType.BADGE : ItemType.KIT;
        case SearchType.BALL:
            return ItemType.BALL;
        case SearchType.STADIUM:
            return ItemType.STADIUM;
        case SearchType.VANITY:
            return ItemType.VANITY;
        case SearchType.CONSUMABLES_DEVELOPMENT:
            return this.searchCriteria.category === SearchCategory.HEALING ? ItemType.HEALTH : ItemType.CONTRACT;
        case SearchType.CONSUMABLES_TRAINING:
            return ItemType.TRAINING;
        case SearchType.ANY:
            return ItemType.NONE;
        default:
            return DebugUtils.Assert(!1, "Criteria type hasn't been defined."),
            ItemType.NONE
        }
    }
    ,
    UTClubSearchResultsViewController.prototype.updateClubHeader = function() {
        var e = this.getView()
          , t = e.getSubTypesDropDown()
          , i = [new UTImageView]
          , o = this.getItemTypeFromCriteria()
          , n = ItemSubType.NONE;
        0 < t.length ? n = t.id : 0 < this.searchCriteria.subtypes.length ? n = this.searchCriteria.subtypes[0] : this.searchCriteria.category === SearchCategory.POSITION ? n = ItemSubType.TRAINING_PLAYER_POS : this.searchCriteria.category === SearchCategory.MANAGER_LEAGUE ? n = ItemSubType.TRAINING_PLAYER_FORMATION_3412 : this.searchCriteria.category === SearchCategory.PLAYSTYLE && (n = ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_1),
        JSUtils.isValid(this.consumableItem) || e.setItemTypeHeader(n !== ItemSubType.NONE ? n : o, i)
    }
    ,
    UTClubSearchResultsViewController.prototype.setupHeader = function() {
        var e, t;
        if (!this.consumableItem) {
            this.updateClubHeader();
            var i = this.getItemTypeFromCriteria()
              , o = "navbar.label.club";
            if (i === ItemType.PLAYER)
                o += "players";
            else if (i === ItemType.MANAGER)
                o += "staff";
            else if (i === ItemType.CONTRACT || i === ItemType.HEALTH)
                o = "navbar.label.clubconsumables";
            else if (i === ItemType.TRAINING) {
                var n = null === (e = this.clubViewModel) || void 0 === e ? void 0 : e.get(0);
                n ? n.isPlayerPositionModifier() ? o = "card.title.advtraining" : n.isStyleModifier() ? o = "trainingtype.playStyle" : n.isManagerLeagueModifier() ? o = "card.title.leagueModifier" : n.isTraining() && (o = "search.filters.training") : o += "consumables"
            } else
                i !== ItemType.NONE && (o += "items");
            null === (t = this.getNavigationController()) || void 0 === t || t.setNavigationTitle(services.Localization.localize(o))
        }
    }
    ,
    UTClubSearchResultsViewController.prototype.setupTelemetry = function() {
        var e = this.getItemTypeFromCriteria();
        if (e !== ItemType.NONE) {
            var t = "Club - ";
            e === ItemType.PLAYER ? t += "Players" : e === ItemType.MANAGER ? t += "Staff" : e === ItemType.TRAINING ? t += "Consumables" : t += "Club Items",
            t += " - List View",
            services.PIN.sendData(PINEventType.PAGE_VIEW, {
                type: PIN_PAGEVIEW_EVT_TYPE,
                pgid: t
            }),
            TelemetryManager.trackPage(TelemetryManager.Sections.CLUB, t)
        }
    }
    ,
    UTClubSearchResultsViewController.prototype._requestItems = function(r) {
        var s = this;
        void 0 === r && (r = !1);
        var e = this.getView().getSubTypesDropDown()
          , t = new UTSearchCriteriaDTO;
        t.update(this.searchCriteria),
        0 < e.length && (t.subtypes = [e.id]),
        services.Club.search(t).observe(this, function(e, t) {
            var i;
            if (e.unobserve(s),
            s.clubViewModel && t.success && JSUtils.isObject(t.response)) {
                var o = s.clubViewModel.getIndex()
                  , n = s.searchCriteria.sortBy === SearchSortType.RECENCY;
                s.clubViewModel.sortByRecency = n,
                s.clubViewModel.sort = s.searchCriteria.sort,
                s.clubViewModel.sortType = s.searchCriteria.sortBy,
                s.clubViewModel.removeArray(t.response.items),
                s.clubViewModel.addArray(t.response.items),
                s.clubViewModel.isFull = t.response.retrievedAll,
                s.clubViewModel.setIndex(o),
                s.updateItemList(s.clubViewModel.getPageItems(), !r)
            } else
                services.Notification.queue([services.Localization.localize("notification.club.failedToLoad"), UINotificationType.NEGATIVE]),
                null === (i = s.getNavigationController()) || void 0 === i || i.popViewController(!0)
        })
    }
    ,
    UTClubSearchResultsViewController.prototype.updateItemList = function(e, t) {
        var i, o, n, r, s, a;
        void 0 === t && (t = !0);
        var l = this.getView();
        if (t && this.onDataChange.notify({
            items: e
        }),
        0 < e.length) {
            if (this.stadiumViewModel) {
                var c = this.stadiumViewModel.getSlotItemId()
                  , d = this.stadiumViewModel.getStadiumProgression(e.map(function(e) {
                    return e.subtype
                }));
                d ? l.setItems(e, c, d) : l.setItems(e, c)
            } else
                l.setItems(e);
            var u = this.searchCriteria.type === SearchType.CONSUMABLES_DEVELOPMENT || this.searchCriteria.type === SearchType.CONSUMABLES_TRAINING;
            if (l.toggleHeaderSearchBtn(0 < e.length && !u && !this.stadiumViewModel),
            !this.displayAsDetails && !isPhone()) {
                var h = null === (o = null === (i = this.clubViewModel) || void 0 === i ? void 0 : i.current()) || void 0 === o ? void 0 : o.id;
                JSUtils.isNumber(h) && l.selectListRow(h)
            }
            if (this.setTableCellCallbacks(),
            this.consumableItem) {
                var p = this.consumableItem
                  , _ = e.map(function(e) {
                    return p.canApplyTo(e)
                });
                l.setActionableStates(_)
            }
        } else
            l.setEmptyListMessage(!this.stadiumViewModel && this.searchCriteria.isModified()),
            l.toggleHeaderSearchBtn(!1);
        l.setPaginationState(null !== (r = null === (n = this.clubViewModel) || void 0 === n ? void 0 : n.hasPreviousPage()) && void 0 !== r && r, null !== (a = null === (s = this.clubViewModel) || void 0 === s ? void 0 : s.hasNextPage()) && void 0 !== a && a),
        this.refreshPinnedItem()
    }
    ,
    UTClubSearchResultsViewController.prototype.refreshList = function() {
        var e, t, i = this.getItemTypeFromCriteria();
        i !== ItemType.TRAINING && i !== ItemType.CONTRACT && i !== ItemType.HEALTH || null === (e = this.clubViewModel) || void 0 === e || e.removeEmptyConsumables(),
        (null === (t = this.clubViewModel) || void 0 === t ? void 0 : t.shouldRequestItems()) ? (this.searchCriteria.offset += this.searchCriteria.count,
        this._requestItems(!0)) : this.clubViewModel && this.updateItemList(this.clubViewModel.getPageItems(), !isPhone())
    }
    ,
    UTClubSearchResultsViewController.prototype.refreshPinnedItem = function() {
        var e;
        null === (e = this.pinnedItemController) || void 0 === e || e.refresh()
    }
    ,
    UTClubSearchResultsViewController.prototype.setTableCellCallbacks = function() {
        var e = this.getView();
        this.consumableItem ? e.setRowActionCallback() : e.setRowTapCallback()
    }
    ,
    UTClubSearchResultsViewController.prototype.onSearch = function() {
        var e;
        if (JSUtils.isValid(this.consumableItem) || this.searchCriteria.type === SearchType.CLUB_INFO || this.searchCriteria.type === SearchType.BALL || this.searchCriteria.type === SearchType.STADIUM || this.searchCriteria.type === SearchType.VANITY)
            null === (e = this.getNavigationController()) || void 0 === e || e.popViewController();
        else {
            var t = this.getNavigationController();
            if (t) {
                var i = new UTMyClubSearchFiltersViewController;
                this.searchCriteria.type === SearchType.STAFF && (this.searchCriteria.category = SearchCategory.MANAGER),
                i.initWithSearchCriteria(this.searchCriteria),
                this.clubViewModel && i.setSearchResultViewModel(this.clubViewModel),
                t.pushViewController(i)
            }
        }
    }
    ,
    UTClubSearchResultsViewController.prototype.onStadiumUpdated = function(e, t) {
        JSUtils.isObject(t) && (this.updateClubHeader(),
        this.clubViewModel && this.updateItemList(this.clubViewModel.getPageItems(), !isPhone()))
    }
    ,
    UTClubSearchResultsViewController.prototype.onPreviousPageSelected = function(e, t, i) {
        var o;
        (null === (o = this.clubViewModel) || void 0 === o ? void 0 : o.hasPreviousPage()) && this.updateItemList(this.clubViewModel.previousPage(), !0)
    }
    ,
    UTClubSearchResultsViewController.prototype.onNextPageSelected = function(e, t, i) {
        var o;
        (null === (o = this.clubViewModel) || void 0 === o ? void 0 : o.hasNextPage()) && (this.clubViewModel.nextPage(),
        this.clubViewModel.shouldRequestItems() ? (this.searchCriteria.offset += this.searchCriteria.count,
        this._requestItems()) : this.updateItemList(this.clubViewModel.getPageItems(), !0))
    }
    ,
    UTClubSearchResultsViewController.prototype.exitConsumableApplyFlow = function() {
        var e = this.getNavigationController();
        if (e)
            if (isPhone()) {
                var t = 0 < repositories.Item.getUnassignedItems().length ? 3 : 2
                  , i = e.getPreviousController(t);
                i ? e.popToViewController(i) : e.popToRootViewController(!0)
            } else
                e.popToRootViewController(!0)
    }
    ,
    UTClubSearchResultsViewController.prototype.openPositionSelectorModal = function(e, t) {
        var i = this;
        if (e && t.isPlayerPositionModifier()) {
            var o = new UTApplicablePositionSelectViewController(e,t);
            o.modalDisplayStyle = "form",
            o.init(),
            o.onExit.observe(this, function(e) {
                e.unobserve(i),
                i.exitConsumableApplyFlow()
            }),
            gPopupClickShield.setActivePopup(o)
        }
    }
    ,
    UTClubSearchResultsViewController.prototype.onTableCellActionSelected = function(e, t, i) {
        var o = this
          , n = i.item;
        if (this.consumableItem && n) {
            if (this.consumableItem.subtype === ItemSubType.TRAINING_PLAYER_POS)
                return void this.openPositionSelectorModal(n, this.consumableItem);
            services.Item.applyTo(this.consumableItem, n).observe(this, function(e, t) {
                if (e.unobserve(o),
                NetworkErrorManager.checkCriticalStatus(t.status))
                    NetworkErrorManager.handleStatus(t.status);
                else {
                    var i = services.Localization;
                    t.success ? services.Notification.queue([i.localize("notification.item.appliedConsumable"), UINotificationType.NEUTRAL]) : services.Notification.queue([i.localize("notification.item.unableToApplyConsumable"), UINotificationType.NEGATIVE]),
                    o.exitConsumableApplyFlow()
                }
            })
        }
    }
    ,
    UTClubSearchResultsViewController.prototype.onTableCellSelected = function(e, t, i) {
        var o, n, r, s = i.item;
        if (s) {
            var a = null !== (n = null === (o = this.clubViewModel) || void 0 === o ? void 0 : o.indexOf(function(e) {
                return e.id === s.id
            })) && void 0 !== n ? n : 0
              , l = !!this.clubViewModel && a !== this.clubViewModel.getIndex();
            if (l && (null === (r = this.clubViewModel) || void 0 === r || r.setIndex(a)),
            isPhone() && !this.consumableItem) {
                var c = this.getNavigationController();
                if (c) {
                    var d = new controllers.navigation.ItemDetails;
                    this.selectedItem = s,
                    this.clubViewModel ? d.initWithIterator(this.clubViewModel) : d.init(),
                    this.stadiumViewModel && d.setStadiumViewModel(this.stadiumViewModel),
                    c.pushViewController(d)
                }
            } else
                l && (this.onItemSelected.notify(s),
                JSUtils.isNumber(s.id) && this.getView().selectListRow(s.id))
        }
    }
    ,
    UTClubSearchResultsViewController.prototype.onDropDownChanged = function(e, t, i) {
        var o;
        this.selectedSubType = i.id,
        null === (o = this.clubViewModel) || void 0 === o || o.resetCollection([]),
        this.updateClubHeader(),
        this._requestItems(!1)
    }
    ,
    UTClubSearchResultsViewController.prototype.onItemActivated = function(e, t, i) {
        this.updateClubHeader(),
        this.refreshList()
    }
    ,
    UTClubSearchResultsViewController.prototype.onItemViewStateChanged = function(e, t, i) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.CLUB, TelemetryManager.Categories.BUTTON_PRESS, "Item Info Switch Button - Club Search Results")
    }
    ,
    UTClubSearchResultsViewController.prototype.onConsumableApplied = function(e, t, i) {
        this.refreshList()
    }
    ,
    UTClubSearchResultsViewController.prototype.onItemDiscarded = function(e, t, i) {
        var o;
        null === (o = this.clubViewModel) || void 0 === o || o.removeItemsById(i.itemIds),
        this.refreshList()
    }
    ,
    UTClubSearchResultsViewController.prototype.onItemListed = function(e, t, i) {
        var o;
        null === (o = this.clubViewModel) || void 0 === o || o.removeItemsById(i.itemIds),
        this.refreshList()
    }
    ,
    UTClubSearchResultsViewController.prototype.onItemMoved = function(e, t, i) {
        var o;
        null === (o = this.clubViewModel) || void 0 === o || o.removeItemsById(i.itemIds),
        this.refreshList()
    }
    ,
    UTClubSearchResultsViewController.prototype._nSquadSaved = function(e, t, i) {
        i.squad instanceof UTSquadEntity && this.setActiveSquadData(i.squad),
        this.refreshList()
    }
    ,
    UTClubSearchResultsViewController
}(UTViewController);
NamespaceManager.Register("controllers.club"),
controllers.club.ClubSearchResultsLandscape = function ClubSearchResultsSplitViewController() {
    UTSplitViewController.call(this),
    this._itemDetailController = new controllers.navigation.ItemDetails,
    this._listController = new UTClubSearchResultsViewController,
    this._viewmodel = this._listController.getIterator(),
    Object.defineProperty(this, "_viewmodel", {
        get: function() {
            return this._listController.getIterator()
        },
        set: function(e) {
            this._listController.setIterator(e)
        }
    }),
    this._searchCriteria = this._listController._searchCriteria,
    Object.defineProperty(this, "_searchCriteria", {
        get: function() {
            return this._listController._searchCriteria
        },
        set: function(e) {
            this._listController._searchCriteria = e
        }
    })
}
,
JSUtils.inherits(controllers.club.ClubSearchResultsLandscape, UTSplitViewController),
controllers.club.ClubSearchResultsLandscape.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass(),
        this._listController.init(),
        this._listController.onDataChange.observe(this, this._eListDataChanged),
        this._listController.onItemSelected.observe(this, this._eItemSelected);
        var e = this._listController.getView();
        e.addTarget(this, this._ePageChange, enums.UIPaginationEvent.NEXT),
        e.addTarget(this, this._ePageChange, enums.UIPaginationEvent.PREVIOUS),
        this._itemDetailController.initWithIterator(this._listController.getIterator()),
        this._itemDetailController.enableSwiping(!1),
        this.addChildViewController(this._listController),
        this.addChildViewController(this._itemDetailController)
    }
}
,
controllers.club.ClubSearchResultsLandscape.prototype.initWithSearchCriteria = function initWithSearchCriteria(e) {
    this.initialized || (this._listController.initWithSearchCriteria(e),
    this.init())
}
,
controllers.club.ClubSearchResultsLandscape.prototype.dealloc = function dealloc() {
    this._itemDetailController.dealloc(),
    this._itemDetailController = null,
    this._listController.dealloc(),
    this._listController = null,
    this.superclass()
}
,
controllers.club.ClubSearchResultsLandscape.prototype.viewDidAppear = function viewDidAppear() {
    this._rightController && 0 === this._listController.getIterator().length && this._removeRightController(),
    this.superclass(),
    this._setLeftController(this._listController),
    this._itemDetailController.setNavigationStyle(UTNavigationBarView.Style.SECONDARY)
}
,
controllers.club.ClubSearchResultsLandscape.prototype.setStadiumViewModel = function setStadiumViewModel(e) {
    this._listController.setStadiumViewModel(e),
    this._itemDetailController.setStadiumViewModel(e)
}
,
controllers.club.ClubSearchResultsLandscape.prototype.setConsumableToApply = function setConsumableToApply(e) {
    this._listController.setConsumableToApply(e)
}
,
controllers.club.ClubSearchResultsLandscape.prototype._ePageChange = function _ePageChange() {
    this._itemDetailController.onPageChange()
}
,
controllers.club.ClubSearchResultsLandscape.prototype._eItemSelected = function _eItemSelected(e, t) {
    this._itemDetailController.setIndex(this._listController.getIterator().indexOf(function(e) {
        return e.id === t.id
    }))
}
,
controllers.club.ClubSearchResultsLandscape.prototype._eListDataChanged = function _eListDataChanged(e, t) {
    t.items && (0 < t.items.length ? (this._setRightController(this._itemDetailController),
    this._itemDetailController.setIndex(this._listController.getIterator().getIndex())) : this._removeRightController())
}
;
var TileDimOverlayType;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
!function(e) {
    e.DEFAULT = "",
    e.LOCKED = "locked",
    e.MAINTENANCE = "maintenance"
}(TileDimOverlayType = TileDimOverlayType || {});
var UTTileDimOverlayView = function(e) {
    function UTTileDimOverlayView() {
        return e.call(this) || this
    }
    return __extends(UTTileDimOverlayView, e),
    UTTileDimOverlayView.prototype.setText = function(e) {
        this.__messageTextField.textContent = e
    }
    ,
    UTTileDimOverlayView.prototype.setType = function(e) {
        this.removeClass([TileDimOverlayType.LOCKED, TileDimOverlayType.MAINTENANCE].join(" ")),
        this.addClass(e)
    }
    ,
    UTTileDimOverlayView
}(UTView);
UTTileDimOverlayView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tile-dim-overlay-view"),
        this.__messageTextField = document.createElement("p"),
        this.__messageTextField.classList.add("ut-tile-dim-text"),
        e.appendChild(this.__messageTextField),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTileDimOverlayView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__messageTextField = null
}
,
UTTileDimOverlayView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTileView = function(i) {
    function UTTileView() {
        return i.call(this) || this
    }
    return __extends(UTTileView, i),
    Object.defineProperty(UTTileView.prototype, "title", {
        get: function() {
            return this.__tileTitle.textContent || ""
        },
        set: function(e) {
            this.__tileTitle.textContent = e
        },
        enumerable: !1,
        configurable: !0
    }),
    UTTileView.prototype.init = function() {
        i.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTTileView.prototype.dealloc = function() {
        window.clearTimeout(this.highlightTimeout),
        i.prototype.dealloc.call(this),
        this.dimOverlay && (this.dimOverlay.dealloc(),
        this.dimOverlay = null),
        this.contentView && (this.contentView.dealloc(),
        this.contentView = null)
    }
    ,
    UTTileView.prototype.setInteractionState = function(e) {
        var t = this._interactionState;
        i.prototype.setInteractionState.call(this, e),
        this._interactionState !== t && (this.toggleClass(enums.UIState.DISABLED, !this._interactionState),
        this._interactionState || this.removeClass(enums.UIState.ACTIVE))
    }
    ,
    UTTileView.prototype._getContentViewInstance = function() {
        return null
    }
    ,
    UTTileView.prototype.loadContentView = function() {
        return this.contentLoaded || (this.contentView = this._getContentViewInstance(),
        this.contentView && (this.contentView.init(),
        this.addSubview(this.contentView, this.__tileContent),
        this.layoutSubviews()),
        this.contentLoaded = !0),
        this.contentView
    }
    ,
    UTTileView.prototype.getContentView = function() {
        return this.contentView || this.loadContentView(),
        this.contentView
    }
    ,
    UTTileView.prototype.getTileContent = function() {
        return this.__tileContent
    }
    ,
    UTTileView.prototype.show = function() {
        this.setDisplay(!0)
    }
    ,
    UTTileView.prototype.hide = function() {
        this.setDisplay(!1)
    }
    ,
    UTTileView.prototype.enable = function() {
        this.setInteractionState(!0)
    }
    ,
    UTTileView.prototype.disable = function() {
        this.setInteractionState(!1)
    }
    ,
    UTTileView.prototype.setEnabled = function(e) {
        this.setInteractionState(e)
    }
    ,
    UTTileView.prototype.getTitle = function() {
        return this.title
    }
    ,
    UTTileView.prototype.setTitle = function(e) {
        this.title = e
    }
    ,
    UTTileView.prototype.getDimOverlay = function() {
        return this.dimOverlay || (this.dimOverlay = new UTTileDimOverlayView,
        this.dimOverlay.init()),
        this.dimOverlay
    }
    ,
    UTTileView.prototype.setContent = function(e) {
        var t = this;
        DOMKit.empty(this.__tileContent);
        function Sx(e) {
            e instanceof HTMLElement ? t.__tileContent.appendChild(e) : e instanceof UTView ? t.__tileContent.appendChild(e.getRootElement()) : t.__tileContent.textContent = e.toString()
        }
        Array.isArray(e) ? e.forEach(Sx, this) : e && Sx.call(this, e)
    }
    ,
    UTTileView.prototype.appendContent = function(e) {
        var t = this;
        JSUtils.valToArray(e).forEach(function(e) {
            return t.__tileContent.appendChild(e)
        })
    }
    ,
    UTTileView.prototype.removeContent = function() {
        DOMKit.empty(this.__tileContent)
    }
    ,
    UTTileView.prototype.setDimOverlayText = function(e) {
        this.getDimOverlay().setText(e)
    }
    ,
    UTTileView.prototype.setDimOverlayContent = function(e) {
        this.setDimOverlayText(e)
    }
    ,
    UTTileView.prototype.setDimmed = function(e) {
        var t = this.getDimOverlay();
        e ? this.addSubview(t) : t.removeFromSuperview(),
        this.layoutSubviews()
    }
    ,
    UTTileView.prototype.setDimOverlayType = function(e) {
        this.getDimOverlay().setType(e)
    }
    ,
    UTTileView.prototype.showLoadingState = function() {
        var e = this.getContentView();
        this.setInteractionState(!1),
        e && e.setVisibility(!1),
        this.addClass(UTTileView.Style.LOADING)
    }
    ,
    UTTileView.prototype.hideLoadingState = function() {
        var e = this.getContentView();
        e && e.setVisibility(!0),
        this.removeClass(UTTileView.Style.LOADING),
        this.setInteractionState(!0)
    }
    ,
    UTTileView.prototype._mouseLeave = function(e) {
        this.removeClass([enums.UIState.ACTIVE, enums.UIState.HOVER].join(" "))
    }
    ,
    UTTileView.prototype._mouseEnter = function(e) {
        this.addClass(enums.UIState.HOVER)
    }
    ,
    UTTileView.prototype._touchStarted = function(e) {
        i.prototype._touchStarted.call(this, e),
        this.addClass(enums.UIState.ACTIVE)
    }
    ,
    UTTileView.prototype._touchMoved = function(e) {
        i.prototype._touchMoved.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTTileView.prototype._touchEnded = function(e) {
        i.prototype._touchEnded.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTTileView.prototype._touchCancelled = function(e) {
        i.prototype._touchCancelled.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTTileView.prototype._tapDetected = function(e) {
        var t = this;
        i.prototype._tapDetected.call(this, e),
        this.hasClass(enums.UIState.ACTIVE) ? this.removeClass(enums.UIState.ACTIVE) : (this.addClass(enums.UIState.ACTIVE),
        this.highlightTimeout = window.setTimeout(function() {
            return t.removeClass(enums.UIState.ACTIVE)
        }, 100)),
        this.hasClass(enums.UIState.HOVER) && this.removeClass(enums.UIState.HOVER),
        this._triggerActions(EventType.TAP)
    }
    ,
    UTTileView.Style = Object.freeze({
        LOADING: "loading",
        LOADING_IMAGES: "loading-images"
    }),
    UTTileView
}(UTTargetActionView);
UTTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("tile");
        var t = document.createElement("div");
        t.classList.add("loadingSpinner"),
        e.appendChild(t);
        var i = document.createElement("header");
        this.__tileTitle = document.createElement("h1"),
        this.__tileTitle.classList.add("tileHeader"),
        i.appendChild(this.__tileTitle),
        e.appendChild(i),
        this.__tileContent = document.createElement("div"),
        this.__tileContent.classList.add("tileContent"),
        e.appendChild(this.__tileContent),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__tileTitle = null,
    this.__tileContent = null
}
,
UTTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTLabelView = function(e) {
    function UTLabelView() {
        return e.call(this) || this
    }
    return __extends(UTLabelView, e),
    UTLabelView.prototype.setLabel = function(e) {
        this.__label.textContent = e
    }
    ,
    UTLabelView.prototype.setAngle = function(e) {
        this.removeClass(JSUtils.getObjectValues(UTLabelView.Angle).join(" ")),
        this.addClass(e)
    }
    ,
    UTLabelView.prototype.setStyle = function(e) {
        this.removeClass(JSUtils.getObjectValues(UTLabelView.Style).join(" ")),
        this.addClass(e)
    }
    ,
    UTLabelView.Angle = {
        BOTTOM_LEFT: "angle-bottom-left",
        BOTTOM_RIGHT: "angle-bottom-right",
        TOP_LEFT: "angle-top-left",
        TOP_RIGHT: "angle-top-right"
    },
    UTLabelView.Style = {
        ACTIVE: "active",
        HIGHLIGHT: "highlight",
        LIGHT: "light",
        DISABLED: "disabled",
        NONE: ""
    },
    UTLabelView
}(UTView);
UTLabelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-label-view"),
        this.__label = document.createElement("span"),
        this.__label.classList.add("ut-label-view--label"),
        e.appendChild(this.__label),
        this.__root = e,
        this._generated = !0
    }
}
,
UTLabelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__label = null
}
,
UTLabelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTConsumablesHubView = function(t) {
    function UTConsumablesHubView() {
        return t.call(this) || this
    }
    return __extends(UTConsumablesHubView, t),
    UTConsumablesHubView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._contractsTile.init(),
        this._contractsTile.title = e.localize("card.title.contract"),
        this._healingTile.init(),
        this._healingTile.title = e.localize("club.category.healing"),
        this._managerLeagueTile.init(),
        this._managerLeagueTile.title = e.localize("card.title.leagueModifier"),
        this._chemistryTile.init(),
        this._chemistryTile.title = e.localize("trainingtype.playStyle"),
        this._positioningTile.init(),
        this._positioningTile.title = e.localize("card.title.advtraining")
    }
    ,
    UTConsumablesHubView.prototype.render = function(e) {
        function Qy(e, t) {
            var i = services.Localization
              , o = new UTLabelView;
            o.setAngle(UTLabelView.Angle.BOTTOM_RIGHT);
            var n = i.localize(1 === t ? "tile.label.itemCount" : "tile.label.itemsCount", [t.toString()]);
            o.setLabel(n),
            0 === t && (e.setInteractionState(!1),
            o.setStyle(UTLabelView.Style.DISABLED)),
            e.setContent(o)
        }
        services.Localization;
        Qy(this._contractsTile, e.contracts),
        Qy(this._healingTile, e.healing),
        Qy(this._managerLeagueTile, e.managerLeagueModifier),
        Qy(this._chemistryTile, e.playStyle),
        Qy(this._positioningTile, e.position)
    }
    ,
    UTConsumablesHubView.prototype.getContractsTile = function() {
        return this._contractsTile
    }
    ,
    UTConsumablesHubView.prototype.getHealingTile = function() {
        return this._healingTile
    }
    ,
    UTConsumablesHubView.prototype.getPositioningTile = function() {
        return this._positioningTile
    }
    ,
    UTConsumablesHubView.prototype.getManagerLeagueTile = function() {
        return this._managerLeagueTile
    }
    ,
    UTConsumablesHubView.prototype.getChemistryStyleTile = function() {
        return this._chemistryTile
    }
    ,
    UTConsumablesHubView
}(UTView);
UTConsumablesHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div")
          , t = document.createElement("div");
        t.classList.add("grid"),
        t.classList.add("layout-hub"),
        this._contractsTile = new UTTileView,
        this._contractsTile.getRootElement().classList.add("col-1-2"),
        this._contractsTile.getRootElement().classList.add("contracts-tile"),
        this._contractsTile.getRootElement().classList.add("consumable-tile"),
        t.appendChild(this._contractsTile.getRootElement()),
        this._healingTile = new UTTileView,
        this._healingTile.getRootElement().classList.add("col-1-2"),
        this._healingTile.getRootElement().classList.add("healing-tile"),
        this._healingTile.getRootElement().classList.add("consumable-tile"),
        t.appendChild(this._healingTile.getRootElement()),
        this._positioningTile = new UTTileView,
        this._positioningTile.getRootElement().classList.add("col-1-2"),
        this._positioningTile.getRootElement().classList.add("positioning-tile"),
        this._positioningTile.getRootElement().classList.add("consumable-tile"),
        t.appendChild(this._positioningTile.getRootElement()),
        this._chemistryTile = new UTTileView,
        this._chemistryTile.getRootElement().classList.add("col-1-2"),
        this._chemistryTile.getRootElement().classList.add("chemistry-tile"),
        this._chemistryTile.getRootElement().classList.add("consumable-tile"),
        t.appendChild(this._chemistryTile.getRootElement()),
        this._managerLeagueTile = new UTTileView,
        this._managerLeagueTile.getRootElement().classList.add("col-1-2"),
        this._managerLeagueTile.getRootElement().classList.add("managerLeague-tile"),
        this._managerLeagueTile.getRootElement().classList.add("consumable-tile"),
        t.appendChild(this._managerLeagueTile.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTConsumablesHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._contractsTile.destroy(),
    this._healingTile.destroy(),
    this._positioningTile.destroy(),
    this._chemistryTile.destroy(),
    this._managerLeagueTile.destroy()
}
,
UTConsumablesHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTConsumablesHubViewController = function(t) {
    function UTConsumablesHubViewController() {
        var e = t.call(this) || this;
        return e.viewmodel = null,
        e
    }
    return __extends(UTConsumablesHubViewController, t),
    UTConsumablesHubViewController.prototype.init = function() {
        this.initialized || (t.prototype.init.call(this),
        this.viewmodel || (this.viewmodel = new UTConsumableCategoriesViewModel([])))
    }
    ,
    UTConsumablesHubViewController.prototype.initWithConsumableCategories = function(e) {
        this.viewmodel = e,
        this.init()
    }
    ,
    UTConsumablesHubViewController.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.viewmodel = null
    }
    ,
    UTConsumablesHubViewController.prototype._getViewInstanceFromData = function() {
        return new UTConsumablesHubView
    }
    ,
    UTConsumablesHubViewController.prototype._getTelemetryId = function() {
        return "Club - Consumables"
    }
    ,
    UTConsumablesHubViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.clubconsumables")
    }
    ,
    UTConsumablesHubViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this.viewmodel && this.getView().render(this.viewmodel.getTotals());
        var e = this.getView();
        e.getContractsTile().addTarget(this, this._eContractsTileSelected, EventType.TAP),
        e.getHealingTile().addTarget(this, this._eHealingTileSelected, EventType.TAP),
        e.getPositioningTile().addTarget(this, this._ePositioningTileSelected, EventType.TAP),
        e.getManagerLeagueTile().addTarget(this, this._eManagerLeagueTileSelected, EventType.TAP),
        e.getChemistryStyleTile().addTarget(this, this._eChemistryStyleTileSelected, EventType.TAP),
        TelemetryManager.trackPage(TelemetryManager.Sections.CLUB, "Club Consumables Hub")
    }
    ,
    UTConsumablesHubViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.getContractsTile().removeTarget(this, this._eContractsTileSelected, EventType.TAP),
        e.getHealingTile().removeTarget(this, this._eHealingTileSelected, EventType.TAP),
        e.getPositioningTile().removeTarget(this, this._ePositioningTileSelected, EventType.TAP),
        e.getManagerLeagueTile().removeTarget(this, this._eManagerLeagueTileSelected, EventType.TAP),
        e.getChemistryStyleTile().removeTarget(this, this._eChemistryStyleTileSelected, EventType.TAP)
    }
    ,
    UTConsumablesHubViewController.prototype._goToSection = function(e) {
        var t = this.getNavigationController();
        if (t) {
            var i = isPhone() ? new UTClubSearchResultsViewController : new controllers.club.ClubSearchResultsLandscape
              , o = new UTSearchCriteriaDTO;
            o.category = e,
            i.initWithSearchCriteria(o),
            t.pushViewController(i)
        }
    }
    ,
    UTConsumablesHubViewController.prototype._eContractsTileSelected = function(e, t, i) {
        this._goToSection(SearchCategory.CONTRACT)
    }
    ,
    UTConsumablesHubViewController.prototype._eHealingTileSelected = function(e, t, i) {
        this._goToSection(SearchCategory.HEALING)
    }
    ,
    UTConsumablesHubViewController.prototype._ePositioningTileSelected = function(e, t, i) {
        this._goToSection(SearchCategory.POSITION)
    }
    ,
    UTConsumablesHubViewController.prototype._eManagerLeagueTileSelected = function(e, t, i) {
        this._goToSection(SearchCategory.MANAGER_LEAGUE)
    }
    ,
    UTConsumablesHubViewController.prototype._eChemistryStyleTileSelected = function(e, t, i) {
        this._goToSection(SearchCategory.PLAYSTYLE)
    }
    ,
    UTConsumablesHubViewController
}(UTViewController)
  , UTDiscardedItemsViewModel = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTDiscardedItemsViewModel(e) {
        var t = i.call(this) || this;
        return t.itemServiceObject = e,
        t.paginationList = null,
        t.hasMore = !1,
        t
    }
    return __extends(UTDiscardedItemsViewModel, i),
    UTDiscardedItemsViewModel.prototype.init = function() {
        i.prototype.init.call(this),
        this.paginationList = new UTPaginatedItemListViewModel([],this.getNumItemsPerPage())
    }
    ,
    UTDiscardedItemsViewModel.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.hasMore = !1,
        this.paginationList = null
    }
    ,
    UTDiscardedItemsViewModel.prototype.getIterator = function() {
        return this.paginationList
    }
    ,
    UTDiscardedItemsViewModel.prototype.setItems = function(e) {
        this.paginationList && (this.paginationList.resetCollection(e),
        this.paginationList.isFull = !this.hasMore)
    }
    ,
    UTDiscardedItemsViewModel.prototype.getIndexByItemId = function(t) {
        var e, i;
        return null !== (i = null === (e = this.paginationList) || void 0 === e ? void 0 : e.indexOf(function(e) {
            return e.id === t
        })) && void 0 !== i ? i : -1
    }
    ,
    UTDiscardedItemsViewModel.prototype.getCurrentPageItems = function() {
        var e, t;
        return null !== (t = null === (e = this.paginationList) || void 0 === e ? void 0 : e.getPageItems()) && void 0 !== t ? t : []
    }
    ,
    UTDiscardedItemsViewModel.prototype.getCurrentItem = function() {
        var e, t;
        return null !== (t = null === (e = this.paginationList) || void 0 === e ? void 0 : e.current()) && void 0 !== t ? t : null
    }
    ,
    UTDiscardedItemsViewModel.prototype.getItemCount = function() {
        var e, t;
        return null !== (t = null === (e = this.paginationList) || void 0 === e ? void 0 : e.length) && void 0 !== t ? t : 0
    }
    ,
    UTDiscardedItemsViewModel.prototype.hasPreviousPage = function() {
        var e, t;
        return null !== (t = null === (e = this.paginationList) || void 0 === e ? void 0 : e.hasPreviousPage()) && void 0 !== t && t
    }
    ,
    UTDiscardedItemsViewModel.prototype.hasNextPage = function() {
        var e, t;
        return null !== (t = null === (e = this.paginationList) || void 0 === e ? void 0 : e.hasNextPage()) && void 0 !== t && t
    }
    ,
    UTDiscardedItemsViewModel.prototype.previousPage = function() {
        var e, t;
        return null !== (t = null === (e = this.paginationList) || void 0 === e ? void 0 : e.previousPage()) && void 0 !== t ? t : []
    }
    ,
    UTDiscardedItemsViewModel.prototype.nextPage = function() {
        var e, t;
        return null !== (t = null === (e = this.paginationList) || void 0 === e ? void 0 : e.nextPage()) && void 0 !== t ? t : []
    }
    ,
    UTDiscardedItemsViewModel.prototype.setIndex = function(e) {
        var t;
        null === (t = this.paginationList) || void 0 === t || t.setIndex(e)
    }
    ,
    UTDiscardedItemsViewModel.prototype.getIndex = function() {
        var e, t;
        return null !== (t = null === (e = this.paginationList) || void 0 === e ? void 0 : e.getIndex()) && void 0 !== t ? t : 0
    }
    ,
    UTDiscardedItemsViewModel.prototype.getRestoreCount = function() {
        return this.itemServiceObject.getDiscardRestoresLeft()
    }
    ,
    UTDiscardedItemsViewModel.prototype.getDiscardEndTimestamp = function() {
        return this.itemServiceObject.getDiscardEndTimestamp()
    }
    ,
    UTDiscardedItemsViewModel.prototype.requestDiscardedData = function(e, s) {
        var a = this
          , t = JSUtils.isString(s) ? this.itemServiceObject.getDiscardedItems(e, s) : this.itemServiceObject.getDiscardedItems(e);
        this._trackRequest(t, !0);
        return t.observe(this, function(e, t) {
            var i, o, n;
            if (e.unobserve(a),
            JSUtils.isObject(t.response)) {
                var r = null !== (o = null === (i = a.paginationList) || void 0 === i ? void 0 : i.getIndex()) && void 0 !== o ? o : 0;
                a.hasMore = t.response.hasMore,
                a.setItems(t.response.items.sort(a.sortByDiscardedDate.bind(a))),
                JSUtils.isString(s) ? (null === (n = a.paginationList) || void 0 === n || n.setIndex(r),
                t.response.items = a.nextPage()) : t.response.items = a.getCurrentPageItems()
            }
        }),
        t
    }
    ,
    UTDiscardedItemsViewModel.prototype.getNumItemsPerPage = function() {
        var e = services.Configuration.getFeatureSetting(UTServerSettingsRepository.KEY.DISCARD_RETRIEVAL_LIMIT);
        return JSUtils.isValid(e) ? e - 1 : 14
    }
    ,
    UTDiscardedItemsViewModel.prototype.sortByDiscardedDate = function(e, t) {
        return e.discardDate === t.discardDate ? JSUtils.sortCompare(e.continuationId, t.continuationId) : JSUtils.sortCompare(e.discardDate, t.discardDate)
    }
    ,
    UTDiscardedItemsViewModel.prototype.shouldRequestItems = function() {
        return this.paginationList && !this.paginationList.isFull && this.paginationList.length <= this.paginationList.numItemsPerPage * this.paginationList.getCurrentPage() || this.hasMore
    }
    ,
    UTDiscardedItemsViewModel
}(UTViewModel))
  , UTUndoDiscardStatusBarView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTUndoDiscardStatusBarView() {
        var e = i.call(this) || this;
        return e.displayFilter = !1,
        e
    }
    return __extends(UTUndoDiscardStatusBarView, i),
    UTUndoDiscardStatusBarView.prototype.init = function() {
        i.prototype.init.call(this);
        var e = services.Localization;
        DOMKit.toggleDisplayStyle(this.__filterContainer, this.displayFilter),
        this._infoButton.init(),
        this._infoButton.addTarget(this, this._bubbleInfoEvent, EventType.TAP),
        this._infoButton.setInteractionState(!0),
        this._filterButton.init(),
        this._filterButton.addTarget(this, this.toggleFilterDisplay, EventType.TAP),
        this._filterButton.setInteractionState(!0),
        this.setLabel(e.localize("undoDiscard.label.dateFilter")),
        this.setButtonLabel(e.localize("undoDiscard.button.search")),
        this._search.init(),
        this._search.addTarget(this, this._bubbleSearchEvent, EventType.TAP),
        this._search.setInteractionState(!1);
        var t = factories.DataProvider.getUndoDiscardDateFilterDP();
        t && (this._dateDropDown.init(),
        this._dateDropDown.addTarget(this, this._eDropDownControlChange, EventType.CHANGE),
        this._dateDropDown.setOptions(t),
        this._dateDropDown.setDefaultIndexByValue("0", !0),
        this._dateDropDown.setInteractionState(!0)),
        this.setInteractionState(!0)
    }
    ,
    UTUndoDiscardStatusBarView.prototype.setLabel = function(e) {
        this.__label.textContent = e
    }
    ,
    UTUndoDiscardStatusBarView.prototype.setButtonLabel = function(e) {
        this._search.setText(e)
    }
    ,
    UTUndoDiscardStatusBarView.prototype.setRestoresLabel = function(e) {
        this.__restoresRemainingLabel.textContent = e
    }
    ,
    UTUndoDiscardStatusBarView.prototype.setRestoresValue = function(e) {
        this.__restoresRemainingValue.textContent = e
    }
    ,
    UTUndoDiscardStatusBarView.prototype.setReplenishValue = function(e) {
        this.__replenishTimeRemainingValue.textContent = e
    }
    ,
    UTUndoDiscardStatusBarView.prototype.toggleFilterDisplay = function(e, t, i) {
        this.displayFilter = !this.displayFilter,
        DOMKit.toggleDisplayStyle(this.__filterContainer, this.displayFilter)
    }
    ,
    UTUndoDiscardStatusBarView.prototype._eDropDownControlChange = function(e, t, i) {
        this.isInteractionEnabled() && (this._search.setInteractionState(!0),
        this._triggerActions(UTUndoDiscardStatusBarView.Event.DROP_DOWN_CHANGED, {
            id: i.id,
            value: i.value
        }))
    }
    ,
    UTUndoDiscardStatusBarView.prototype._bubbleInfoEvent = function(e, t, i) {
        this._triggerActions(UTUndoDiscardStatusBarView.Event.INFO)
    }
    ,
    UTUndoDiscardStatusBarView.prototype._bubbleSearchEvent = function(e, t, i) {
        this._search.setInteractionState(!1),
        this._triggerActions(UTUndoDiscardStatusBarView.Event.SEARCH)
    }
    ,
    UTUndoDiscardStatusBarView.Event = Object.freeze({
        INFO: "UTUndoDiscardStatusBarView.Event.INFO",
        DROP_DOWN_CHANGED: "UTUndoDiscardStatusBarView.Event.DROP_DOWN_CHANGED",
        SEARCH: "UTUndoDiscardStatusBarView.Event.SEARCH"
    }),
    UTUndoDiscardStatusBarView
}(UTTargetActionView));
UTUndoDiscardStatusBarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-undodiscard-status-bar");
        var t = document.createElement("div");
        t.classList.add("ut-undodiscard-status-bar--filter-button"),
        this._filterButton = new UTImageButtonControl,
        t.appendChild(this._filterButton.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-undodiscard-status-bar--restore"),
        this.__restoresRemainingLabel = document.createElement("span"),
        this.__restoresRemainingLabel.classList.add("label"),
        i.appendChild(this.__restoresRemainingLabel),
        this.__restoresRemainingValue = document.createElement("span"),
        this.__restoresRemainingValue.classList.add("value"),
        i.appendChild(this.__restoresRemainingValue),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-undodiscard-status-bar--replenish"),
        this.__replenishTimeRemainingLabel = document.createElement("span"),
        this.__replenishTimeRemainingLabel.classList.add("label"),
        o.appendChild(this.__replenishTimeRemainingLabel),
        this.__replenishTimeRemainingValue = document.createElement("span"),
        this.__replenishTimeRemainingValue.classList.add("value"),
        o.appendChild(this.__replenishTimeRemainingValue),
        e.appendChild(o);
        var n = document.createElement("div");
        n.classList.add("ut-undodiscard-status-bar--info-button"),
        this._infoButton = new UTImageButtonControl,
        this._infoButton.getRootElement().classList.add("info-btn"),
        n.appendChild(this._infoButton.getRootElement()),
        e.appendChild(n),
        this.__filterContainer = document.createElement("div"),
        this.__filterContainer.classList.add("ut-undodiscard-status-bar--filter-container"),
        this.__label = document.createElement("span"),
        this.__label.classList.add("label"),
        this.__filterContainer.appendChild(this.__label);
        var r = document.createElement("div");
        r.classList.add("ut-undodiscard-status-bar--filter-group"),
        this.__filterInput = document.createElement("div"),
        this._dateDropDown = new UTDropDownControl,
        this.__filterInput.appendChild(this._dateDropDown.getRootElement()),
        r.appendChild(this.__filterInput),
        this._search = new UTStandardButtonControl,
        this._search.getRootElement().classList.add("disabled"),
        this._search.getRootElement().classList.add("call-to-action"),
        this._search.getRootElement().classList.add("ut-search-filter-control--row-button"),
        r.appendChild(this._search.getRootElement()),
        this.__filterContainer.appendChild(r),
        e.appendChild(this.__filterContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTUndoDiscardStatusBarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._filterButton.destroy(),
    this.__restoresRemainingLabel = null,
    this.__restoresRemainingValue = null,
    this.__replenishTimeRemainingLabel = null,
    this.__replenishTimeRemainingValue = null,
    this._infoButton.destroy(),
    this.__filterContainer = null,
    this.__label = null,
    this.__filterInput = null,
    this._dateDropDown.destroy(),
    this._search.destroy()
}
,
UTUndoDiscardStatusBarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTUndoDiscardView = function(e) {
    function UTUndoDiscardView() {
        return e.call(this) || this
    }
    return __extends(UTUndoDiscardView, e),
    UTUndoDiscardView.prototype.init = function() {
        e.prototype.init.call(this),
        this._list.init(),
        this._list.addTarget(this, this.bubbleEvent, enums.UIListEvent.ROW_SELECT),
        this._list.addTarget(this, this.bubbleEvent, enums.UIPaginationEvent.NEXT),
        this._list.addTarget(this, this.bubbleEvent, enums.UIPaginationEvent.PREVIOUS),
        this._statusBar.init(),
        this._statusBar.addTarget(this, this.bubbleEvent, UTUndoDiscardStatusBarView.Event.INFO),
        this._statusBar.addTarget(this, this.bubbleEvent, UTUndoDiscardStatusBarView.Event.DROP_DOWN_CHANGED),
        this._statusBar.addTarget(this, this.bubbleEvent, UTUndoDiscardStatusBarView.Event.SEARCH),
        this._statusBar.setRestoresLabel(services.Localization.localize("undoDiscard.label.restoresRemaining")),
        this.setInteractionState(!0)
    }
    ,
    UTUndoDiscardView.prototype.setItems = function(e) {
        0 < e.length ? (this._list.setItems(e),
        this._list.renderItems(),
        this._list.setRowTapCallback()) : this.setEmptyListMessage()
    }
    ,
    UTUndoDiscardView.prototype.setRestoreValue = function(e) {
        this._statusBar.setRestoresValue(e.toString())
    }
    ,
    UTUndoDiscardView.prototype.setCountdownValue = function(e) {
        this._statusBar.setReplenishValue(e)
    }
    ,
    UTUndoDiscardView.prototype.removeItemsById = function(e) {
        this._list.removeItemsById(e)
    }
    ,
    UTUndoDiscardView.prototype.setEmptyListMessage = function() {
        this._list.appendEmptyListMessage(services.Localization.localize("undoDiscard.emptyListMessage"), services.Localization.localize("undoDiscard.emptyListDescription"))
    }
    ,
    UTUndoDiscardView.prototype.setRowTapCallback = function(e) {
        this._list.setRowTapCallback(e)
    }
    ,
    UTUndoDiscardView.prototype.setPaginationState = function(e, t) {
        this._list.setPaginationState(e, t)
    }
    ,
    UTUndoDiscardView.prototype.selectListRow = function(e) {
        this._list.selectRow(e)
    }
    ,
    UTUndoDiscardView.prototype.bubbleEvent = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(t, i)
    }
    ,
    UTUndoDiscardView.Event = Object.freeze({
        RECOVER: "UTUndoDiscardView.Event.RECOVER"
    }),
    UTUndoDiscardView
}(UTTargetActionView);
function UTUndoDiscardViewController() {
    UTViewController.call(this),
    this._itemListViewDelegate = null,
    Object.defineProperty(this, "_itemListViewDelegate", {
        writable: !0,
        enumerable: !1
    }),
    this._viewmodel = null,
    Object.defineProperty(this, "_viewmodel", {
        writable: !0,
        enumerable: !1
    }),
    this._intervalController = new EAIntervalController(1e4,this._handleEventTimer.bind(this)),
    Object.defineProperty(this, "_intervalController", {
        writable: !1,
        enumerable: !1
    }),
    this.onDataChange = new EAObservable,
    Object.defineProperty(this, "onDataChange", {
        writable: !1,
        enumerable: !0
    }),
    this._selectedStateDate = 0,
    Object.defineProperty(this, "_selectedStateDate", {
        writable: !0
    })
}
function UTUndoDiscardSplitViewController() {
    UTSplitViewController.call(this),
    this._listViewController = new UTUndoDiscardViewController,
    this._itemDetailController = new controllers.navigation.ItemDetails
}
UTUndoDiscardView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-pinned-list-container"),
        this._statusBar = new UTUndoDiscardStatusBarView,
        e.appendChild(this._statusBar.getRootElement()),
        this._list = new UTPaginatedItemListView,
        this._list.getRootElement().classList.add("ut-pinned-list"),
        e.appendChild(this._list.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTUndoDiscardView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._statusBar.destroy(),
    this._list.destroy()
}
,
UTUndoDiscardView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
JSUtils.inherits(UTUndoDiscardViewController, UTViewController),
UTUndoDiscardViewController.RENEWAL_PERIOD = {
    DAYS: 30,
    HOURS: 23,
    MINUTES: 59
},
UTUndoDiscardViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass(),
        this._viewmodel || (this._viewmodel = new UTDiscardedItemsViewModel(services.Item)),
        this._viewmodel.init();
        var e = this.getView();
        e.addTarget(this, this._eRowSelected, enums.UIListEvent.ROW_SELECT),
        e.addTarget(this, this._eNextPage, enums.UIPaginationEvent.NEXT),
        e.addTarget(this, this._ePrevPage, enums.UIPaginationEvent.PREVIOUS),
        e.addTarget(this, this._eOpenInfoPopup, UTUndoDiscardStatusBarView.Event.INFO),
        e.addTarget(this, this._eDateChange, UTUndoDiscardStatusBarView.Event.DROP_DOWN_CHANGED),
        e.addTarget(this, this._eSearchDate, UTUndoDiscardStatusBarView.Event.SEARCH);
        var t = new Date;
        t.setDate(t.getDate()),
        t.setHours(23, 59, 59),
        this._selectedStateDate = t.getTime()
    }
}
,
UTUndoDiscardViewController.prototype.initWithViewmodel = function initWithViewmodel(e) {
    this.initialized || (DebugUtils.Assert(e instanceof UTDiscardedItemsViewModel, "Expected a UTDiscardedItemsViewModel."),
    this._viewmodel = e,
    this.init())
}
,
UTUndoDiscardViewController.prototype.dealloc = function dealloc() {
    this._itemListViewDelegate && (this._itemListViewDelegate = null),
    this._viewmodel.dealloc(),
    this._viewmodel = null,
    this._intervalController.dealloc(),
    this._intervalController = null,
    this._selectedStateDate = 0,
    this.onDataChange.dealloc();
    var e = this.getView();
    e.removeTarget(this, this._eRowSelected, enums.UIListEvent.ROW_SELECT),
    e.removeTarget(this, this._eNextPage, enums.UIPaginationEvent.NEXT),
    e.removeTarget(this, this._ePrevPage, enums.UIPaginationEvent.PREVIOUS),
    e.removeTarget(this, this._eOpenInfoPopup, UTUndoDiscardStatusBarView.Event.INFO),
    e.removeTarget(this, this._eDateChange, UTUndoDiscardStatusBarView.Event.DROP_DOWN_CHANGED),
    e.removeTarget(this, this._eSearchDate, UTUndoDiscardStatusBarView.Event.SEARCH),
    this.superclass()
}
,
UTUndoDiscardViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTUndoDiscardView
}
,
UTUndoDiscardViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.undoDiscard")
}
,
UTUndoDiscardViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this.getNavigationController().setNavigationVisibility(!0, !0),
    this._requestItems(!1)
}
,
UTUndoDiscardViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass(),
    this._intervalController.stop()
}
,
UTUndoDiscardViewController.prototype.setItemListViewDelegate = function setItemListViewDelegate(e) {
    this._itemListViewDelegate = e
}
,
UTUndoDiscardViewController.prototype.getIterator = function getIterator() {
    return this._viewmodel.getIterator()
}
,
UTUndoDiscardViewController.prototype.getCurrentPageItems = function getCurrentPageItems() {
    return this._viewmodel.getCurrentPageItems()
}
,
UTUndoDiscardViewController.prototype.removeItemsById = function removeItemsById(e) {
    var t = this.getView();
    t.removeItemsById(e),
    0 < this._viewmodel.getItemCount() ? t.selectListRow(this._viewmodel.getCurrentItem().id) : t.setItems(this._viewmodel.getCurrentPageItems())
}
,
UTUndoDiscardViewController.prototype.updateRestoresLeftCount = function updateRestoresLeftCount() {
    this.getView().setRestoreValue(this._viewmodel.getRestoreCount())
}
,
UTUndoDiscardViewController.prototype._requestItemsFailed = function _requestItemsFailed() {
    services.Notification.queue([services.Localization.localize("notification.undoDiscard.loadFailed"), UINotificationType.NEGATIVE]),
    this.getNavigationController().popViewController()
}
,
UTUndoDiscardViewController.prototype._requestItems = function _requestItems(s, e) {
    function _onDiscardedDataRequested(e, t) {
        if (e.unobserve(this),
        t.success && this.isViewDisplayed()) {
            var i = this.getView()
              , o = t.response.items
              , n = t.response.endTimestamp;
            this._setItems(o);
            var r = Math.max(n - Math.round(Date.now() / MS_PER_SECOND), 0);
            this._intervalController.start(),
            i.setCountdownValue(services.Localization.localizeTimeRemaining(r)),
            i.setRestoreValue(t.response.restoresLeft),
            s && 0 === o.length && services.Notification.queue([services.Localization.localize("notification.undoDiscard.zeroResultsForPeriod"), UINotificationType.NEUTRAL]),
            this._triggerTelemetryPage()
        } else
            this._requestItemsFailed()
    }
    services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.UNDO_DISCARD_ENABLED) ? JSUtils.isString(e) ? this._viewmodel.requestDiscardedData(this._selectedStateDate, e).observe(this, _onDiscardedDataRequested) : this._viewmodel.requestDiscardedData(this._selectedStateDate).observe(this, _onDiscardedDataRequested) : this._requestItemsFailed()
}
,
UTUndoDiscardViewController.prototype._setItems = function _setItems(e) {
    var t = this.getView();
    t.setItems(e),
    t.setPaginationState(this._viewmodel.hasPreviousPage(), this._viewmodel.hasNextPage() || this._viewmodel.hasMore),
    this._itemListViewDelegate && 0 < e.length && this._itemListViewDelegate.selectListRow(this, 0, e[0]),
    this.onDataChange.notify({
        items: e
    })
}
,
UTUndoDiscardViewController.prototype._handleEventTimer = function _handleEventTimer() {
    var e = this.getView()
      , t = this._viewmodel.getDiscardEndTimestamp() - Math.round(Date.now() / MS_PER_SECOND);
    0 < t ? e.setCountdownValue(services.Localization.localizeTimeRemaining(t)) : (this._intervalController.stop(),
    e.setCountdownValue(services.Localization.localizeTimeRemaining(0)),
    this._requestItems(!1))
}
,
UTUndoDiscardViewController.prototype._ePrevPage = function _ePrevPage() {
    this._setItems(this._viewmodel.previousPage())
}
,
UTUndoDiscardViewController.prototype._eNextPage = function _eNextPage() {
    if (this._viewmodel.hasNextPage() || this._viewmodel.hasMore) {
        var e = this._viewmodel.getIterator().values();
        this._viewmodel.shouldRequestItems() ? this._requestItems(!0, e[e.length - 1].continuationId) : this._setItems(this._viewmodel.nextPage())
    }
}
,
UTUndoDiscardViewController.prototype._eRowSelected = function _eRowSelected(e, t, i) {
    var o = i.item || null
      , n = JSUtils.isValid(o) ? this._viewmodel.getIndexByItemId(o.id) : 0;
    if (o) {
        var r = n !== this._viewmodel.getIndex();
        if (r && this._viewmodel.setIndex(n),
        JSUtils.isValid(this._itemListViewDelegate))
            r && this._itemListViewDelegate.selectListRow(this, n, o);
        else {
            var s = this.getNavigationController();
            if (s) {
                var a = new controllers.items.ItemDetails;
                a.initWithIterator(this._viewmodel.getIterator()),
                s.pushViewController(a, !0)
            }
        }
    }
}
,
UTUndoDiscardViewController.prototype._triggerTelemetryPage = function _triggerTelemetryPage() {
    var e = "Undo Discard Hub";
    services.PIN.sendData(PINEventType.PAGE_VIEW, {
        type: PIN_PAGEVIEW_EVT_TYPE,
        pgid: e
    }),
    TelemetryManager.trackPage(TelemetryManager.Sections.MISC, e)
}
,
UTUndoDiscardViewController.prototype._eOpenInfoPopup = function _eOpenInfoPopup() {
    var e = services.Localization
      , t = new EADialogViewController({
        dialogOptions: [{
            labelEnum: enums.UIDialogOptions.OK
        }],
        message: e.localize("undoDiscard.popup.message", [this._viewmodel.getRestoreCount().toString(), UTUndoDiscardViewController.RENEWAL_PERIOD.DAYS.toString(), UTUndoDiscardViewController.RENEWAL_PERIOD.HOURS.toString(), UTUndoDiscardViewController.RENEWAL_PERIOD.MINUTES.toString()]),
        title: e.localize("undoDiscard.popup.title"),
        type: EADialogView.Type.MESSAGE
    });
    t.modalDisplayDimensions.width = "380px",
    t.init(),
    t.viewWillAppear(),
    gPopupClickShield.setActivePopup(t)
}
,
UTUndoDiscardViewController.prototype._eDateChange = function _eDateChange(e, t, i) {
    var o = Number(i.value);
    isNaN(o) ? DebugUtils.Assert(!1, "Expected a valid number value after conversion") : this._selectedStateDate = o
}
,
UTUndoDiscardViewController.prototype._eSearchDate = function _eSearchDate() {
    0 < this._selectedStateDate && this._requestItems(!0)
}
,
JSUtils.inherits(UTUndoDiscardSplitViewController, UTSplitViewController),
UTUndoDiscardSplitViewController.prototype.init = function init() {
    this.initialized || (this.superclass(),
    this._listViewController.init(),
    this._listViewController.setItemListViewDelegate(this),
    this._listViewController.onDataChange.observe(this, this._eListDataChanged),
    this._itemDetailController.initWithIterator(this._listViewController.getIterator()),
    this._itemDetailController.enableSwiping(!1),
    this.addChildViewController(this._listViewController),
    this.addChildViewController(this._itemDetailController))
}
,
UTUndoDiscardSplitViewController.prototype.dealloc = function dealloc() {
    this._itemDetailController.dealloc(),
    this._itemDetailController = null,
    this._listViewController.dealloc(),
    this._listViewController = null,
    this.superclass()
}
,
UTUndoDiscardSplitViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.undoDiscard")
}
,
UTUndoDiscardSplitViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this._setLeftController(this._listViewController),
    this._itemDetailController.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
    getDefaultDispatcher().addObserver(AppNotification.ITEM_UNDO_DISCARD, this, this._nItemUndiscarded)
}
,
UTUndoDiscardSplitViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass(),
    getDefaultDispatcher().removeObserver(AppNotification.ITEM_UNDO_DISCARD, this)
}
,
UTUndoDiscardSplitViewController.prototype.setSelectedItem = function setSelectedItem(e) {
    this._listViewController.setSelectedItem(e)
}
,
UTUndoDiscardSplitViewController.prototype.getSelectedItem = function getSelectedItem() {
    return this._listViewController.getSelectedItem()
}
,
UTUndoDiscardSplitViewController.prototype.selectListRow = function selectListRow(e, t, i) {
    e === this._listViewController && (this._listViewController.getView().selectListRow(i.id),
    this._itemDetailController.setIndex(t))
}
,
UTUndoDiscardSplitViewController.prototype._eListDataChanged = function _eListDataChanged(e, t) {
    t.items && (0 < t.items.length ? (this._setRightController(this._itemDetailController),
    this._itemDetailController.setIndex(this._listViewController.getIterator().getIndex())) : this.hideRightController())
}
,
UTUndoDiscardSplitViewController.prototype._nItemUndiscarded = function _nItemUndiscarded(e, t, i) {
    this._listViewController.removeItemsById(i.itemIds || []),
    this._listViewController.updateRestoresLeftCount(),
    this._listViewController.getCurrentPageItems().length || (this.hideRightController(),
    this._listViewController.getView().setEmptyListMessage())
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
NamespaceManager.Register("views.club");
var UTClubHubView = function(t) {
    function UTClubHubView() {
        return t.call(this) || this
    }
    return __extends(UTClubHubView, t),
    UTClubHubView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._playersTile.init(),
        this._consumablesTile.init(),
        this._staffTile.init(),
        this._playersTile.title = e.localize("search.filters.players"),
        this._consumablesTile.title = e.localize("search.filters.consumables"),
        this._staffTile.title = e.localize("search.filters.staff"),
        this._undoDiscardTile.init(),
        this._undoDiscardTile.title = e.localize("navbar.label.undoDiscard")
    }
    ,
    UTClubHubView.prototype.clearTileContent = function() {
        this._playersTile.setContent(null),
        this._consumablesTile.setContent(null),
        this._staffTile.setContent(null)
    }
    ,
    UTClubHubView.prototype.addTileStats = function(e, t) {
        var i = services.Localization
          , o = new UTLabelView;
        o.setAngle(UTLabelView.Angle.BOTTOM_RIGHT);
        var n = i.localize(1 === t ? "tile.label.itemCount" : "tile.label.itemsCount", [t.toString()]);
        o.setLabel(n),
        e.setContent(o)
    }
    ,
    UTClubHubView.prototype.getPlayersTile = function() {
        return this._playersTile
    }
    ,
    UTClubHubView.prototype.getConsumablesTile = function() {
        return this._consumablesTile
    }
    ,
    UTClubHubView.prototype.getStaffTile = function() {
        return this._staffTile
    }
    ,
    UTClubHubView.prototype.getUndoDiscardTile = function() {
        return this._undoDiscardTile
    }
    ,
    UTClubHubView
}(UTView);
function UTClubHubViewController() {
    UTViewController.call(this),
    this._viewmodel = new UTClubViewModel([])
}
function UTGoToLinkController() {
    EAObject.call(this),
    this._nc = null
}
UTClubHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-club-hub-view");
        var t = document.createElement("div");
        t.classList.add("grid"),
        t.classList.add("layout-hub"),
        this._playersTile = new UTTileView,
        this._playersTile.getRootElement().classList.add("col-2-3-md"),
        this._playersTile.getRootElement().classList.add("players-tile"),
        t.appendChild(this._playersTile.getRootElement()),
        this._undoDiscardTile = new UTGraphicalInfoTileView,
        this._undoDiscardTile.getRootElement().classList.add("col-1-3-md"),
        this._undoDiscardTile.getRootElement().classList.add("col-1-2"),
        this._undoDiscardTile.getRootElement().classList.add("ut-tile-hub-undo"),
        t.appendChild(this._undoDiscardTile.getRootElement()),
        this._consumablesTile = new UTTileView,
        this._consumablesTile.getRootElement().classList.add("col-1-3-md"),
        this._consumablesTile.getRootElement().classList.add("col-1-2"),
        this._consumablesTile.getRootElement().classList.add("consumables-tile"),
        t.appendChild(this._consumablesTile.getRootElement()),
        this._staffTile = new UTTileView,
        this._staffTile.getRootElement().classList.add("col-1-3-md"),
        this._staffTile.getRootElement().classList.add("col-1-2"),
        this._staffTile.getRootElement().classList.add("staff-tile"),
        t.appendChild(this._staffTile.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTClubHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._playersTile.destroy(),
    this._undoDiscardTile.destroy(),
    this._consumablesTile.destroy(),
    this._staffTile.destroy()
}
,
UTClubHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
JSUtils.inherits(UTClubHubViewController, UTViewController),
UTClubHubViewController.prototype.init = function init() {
    this.initialized || this.superclass()
}
,
UTClubHubViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._viewmodel = null
}
,
UTClubHubViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTClubHubView
}
,
UTClubHubViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "Hub - Club"
}
,
UTClubHubViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("nav.label.club")
}
,
UTClubHubViewController.prototype.viewDidAppear = function viewDidAppear() {
    var o = this.getView();
    this.superclass(),
    this.getNavigationController().setNavigationVisibility(!0, !0),
    o.clearTileContent();
    var e = new UTSearchCriteriaDTO;
    e.type = SearchType.CONSUMABLES_DEVELOPMENT,
    e.category = SearchCategory.ANY,
    services.Club.search(e).observe(this, function _onGetConsumables(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = t.response.items.reduce(function(e, t) {
                return e + t.stackCount
            }, 0);
            o.addTileStats(o.getConsumablesTile(), i)
        } else
            NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
    }),
    services.Club.getStats().observe(this, function _onGetStats(e, t) {
        e.unobserve(this),
        t.success ? t.response.stats.forEach(function(e) {
            var t;
            switch (e.type) {
            case ClubItemTypeEnum.PLAYERS:
                t = o.getPlayersTile();
                break;
            case ClubItemTypeEnum.STAFF:
                t = o.getStaffTile()
            }
            t && o.addTileStats(t, e.count)
        }, this) : NetworkErrorManager.checkCriticalStatus(response.status) && NetworkErrorManager.handleStatus(response.status)
    });
    var t = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.UNDO_DISCARD_ENABLED)
      , i = o.getUndoDiscardTile();
    t && i.setDescription(services.Localization.localize("undodiscard.tile.description")),
    i.setInteractionState(t),
    i.setDisplay(t),
    o.getPlayersTile().addTarget(this, this._ePlayersTileSelected, EventType.TAP),
    i.addTarget(this, this._eUndoDiscardTileSelected, EventType.TAP),
    o.getConsumablesTile().addTarget(this, this._eConsumablesTileSelected, EventType.TAP),
    o.getStaffTile().addTarget(this, this._eStaffTileSelected, EventType.TAP),
    TelemetryManager.trackPage(TelemetryManager.Sections.CLUB, "Club Hub")
}
,
UTClubHubViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass();
    var e = this.getView();
    e.getPlayersTile().removeTarget(this, this._ePlayersTileSelected, EventType.TAP),
    e.getUndoDiscardTile().removeTarget(this, this._eUndoDiscardTileSelected, EventType.TAP),
    e.getConsumablesTile().removeTarget(this, this._eConsumablesTileSelected, EventType.TAP),
    e.getStaffTile().removeTarget(this, this._eStaffTileSelected, EventType.TAP)
}
,
UTClubHubViewController.prototype._gotoConsumablesHub = function _gotoConsumablesHub() {
    var e = new UTSearchCriteriaDTO;
    e.type = SearchType.CONSUMABLES_DEVELOPMENT,
    e.category = SearchCategory.ANY,
    gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Club.search(e).observe(this, function _onGetConsumables(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = this.getNavigationController();
            if (i) {
                var o = new UTConsumablesHubViewController;
                o.initWithConsumableCategories(new UTConsumableCategoriesViewModel(t.response.items)),
                i.pushViewController(o)
            }
        } else
            NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : services.Notification.queue([services.Localization.localize("notification.error.loadConsumables"), UINotificationType.NEGATIVE]);
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    })
}
,
UTClubHubViewController.prototype._gotoClubSearchResults = function _gotoClubSearchResults(e) {
    var t = this.getNavigationController();
    if (t) {
        var i = isPhone() ? new UTClubSearchResultsViewController : new controllers.club.ClubSearchResultsLandscape;
        i.initWithSearchCriteria(e),
        t.pushViewController(i)
    }
}
,
UTClubHubViewController.prototype._ePlayersTileSelected = function _ePlayersTileSelected() {
    var e = new UTSearchCriteriaDTO;
    e.type = SearchType.PLAYER,
    this._gotoClubSearchResults(e)
}
,
UTClubHubViewController.prototype._eConsumablesTileSelected = function _eConsumablesTileSelected() {
    this._gotoConsumablesHub()
}
,
UTClubHubViewController.prototype._eStaffTileSelected = function _eStaffTileSelected() {
    var e = new UTSearchCriteriaDTO;
    e.type = SearchType.STAFF,
    e.category = SearchCategory.MANAGER,
    this._gotoClubSearchResults(e)
}
,
UTClubHubViewController.prototype._eUndoDiscardTileSelected = function _eUndoDiscardTileSelected() {
    var e = isPhone() ? new UTUndoDiscardViewController : new UTUndoDiscardSplitViewController;
    e.init(),
    this.getNavigationController().pushViewController(e)
}
,
UTGoToLinkController.StoreType = {
    PACK: "pack",
    ITEM: "item"
},
JSUtils.inherits(UTGoToLinkController, EAObject),
UTGoToLinkController.prototype.init = function init() {
    this.superclass()
}
,
UTGoToLinkController.prototype.initWithNavigationController = function initWithNavigationController(e) {
    this.initialized || (this.setNavigationController(e),
    this.init())
}
,
UTGoToLinkController.prototype.dealloc = function dealloc() {
    this._nc = null,
    this.superclass()
}
,
UTGoToLinkController.prototype.setNavigationController = function setNavigationController(e) {
    e instanceof UTNavigationController && (this._nc = e)
}
,
UTGoToLinkController.prototype.attemptNavigation = function attemptNavigation(e) {
    switch (e) {
    case RedirectId.AUCTION_SEARCH:
        this._gotoMarketSearch();
        break;
    case RedirectId.CLUB:
        this._gotoClubHub();
        break;
    case RedirectId.OBJECTIVES:
        this._gotoObjectives();
        break;
    case RedirectId.SBC:
    case RedirectId.SBC_SQUAD:
        this._gotoSquadBuildingChallengeHub();
        break;
    case RedirectId.SQUAD:
        this._gotoActiveSquadOverview();
        break;
    case RedirectId.SQUAD_SELECT:
        this._gotoSquadManagement();
        break;
    case RedirectId.STORE:
        this._gotoStore();
        break;
    case RedirectId.TOTW:
        this._gotoTOTWSquadOverview();
        break;
    case RedirectId.TRADE_PILE:
        this._gotoTransferList();
        break;
    case RedirectId.UNASSIGNED:
        this._gotoUnassigned();
        break;
    case RedirectId.WATCH_LIST:
        this._gotoTransferTargets();
        break;
    default:
        return DebugUtils.Assert(!1, "Unsupported goto link received: " + e),
        !1
    }
    return !0
}
,
UTGoToLinkController.prototype.attemptStoreNavigation = function attemptStoreNavigation(e, t) {
    switch (e) {
    case UTGoToLinkController.StoreType.PACK:
        this._goToPackStore(t);
        break;
    case UTGoToLinkController.StoreType.ITEM:
        this._goToVanityStore(t);
        break;
    default:
        return DebugUtils.Assert(!1, "Unsupported goto link received: " + link),
        !1
    }
    return !0
}
,
UTGoToLinkController.prototype._goToPackStore = function _goToPackStore(e) {
    if (this._nc) {
        var t = new UTStorePackViewController(e);
        t.init(),
        this._nc.pushViewController(t, !0)
    }
}
,
UTGoToLinkController.prototype._goToVanityStore = function _goToVanityStore(e) {
    if (this._nc) {
        var t = new UTStoreItemViewController(e);
        t.init(),
        this._nc.pushViewController(t, !0)
    }
}
,
UTGoToLinkController.prototype._gotoMarketSearch = function _gotoMarketSearch() {
    if (this._nc) {
        var e = !getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_HIDE_TRANSFER_MARKET) && services.User.getUser().hasTradeAccess() && services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED) ? new UTMarketSearchFiltersViewController : new UTTransfersHubViewController;
        e.init(),
        this._nc.pushViewController(e, !0)
    }
}
,
UTGoToLinkController.prototype._gotoClubHub = function _gotoClubHub() {
    if (this._nc) {
        var e = new UTClubHubViewController;
        e.init(),
        this._nc.pushViewController(e, !0)
    }
}
,
UTGoToLinkController.prototype.attemptObjectivesNavigation = function attemptObjectivesNavigation(e) {
    if (JSUtils.isNumber(e) && this._nc) {
        var t = new UTObjectivesViewModel(services.Objectives)
          , i = new UTObjectivesHubViewController;
        return t.currentCategoryId = e,
        i.initWithViewmodel(t),
        this._nc.pushViewController(i, !0),
        !0
    }
    return DebugUtils.Assert(!1, "Unsupported objectives category id received: " + e),
    !1
}
,
UTGoToLinkController.prototype._gotoObjectives = function _gotoObjectives() {
    if (this._nc) {
        var e = new UTObjectivesHubViewController;
        e.init(),
        this._nc.pushViewController(e, !0)
    }
}
,
UTGoToLinkController.prototype._gotoSquadBuildingChallengeHub = function _gotoSquadBuildingChallengeHub() {
    services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.SBC_ENABLED) ? this._nc && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.SBC.requestSets().observe(this, function _onRetrieveSBCSetsComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = new UTSBCHubViewController;
            i.initWithSBCSetCategories(t.data.sets, t.data.categories),
            this._nc.pushViewController(i, !0)
        } else {
            var o = t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED
              , n = o ? "sbc.notification.disabled" : "notification.sbcSets.failedToLoad";
            services.Notification.queue([services.Localization.localize(n), UINotificationType.NEGATIVE]),
            o && services.Configuration.setFeatureEnabled(UTServerSettingsRepository.KEY.SBC_ENABLED, !1)
        }
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    })) : services.Notification.queue([services.Localization.localize("sbc.notification.disabled"), UINotificationType.NEGATIVE])
}
,
UTGoToLinkController.prototype._gotoActiveSquadOverview = function _gotoActiveSquadOverview() {
    this._nc && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Squad.requestSquadByType("active").observe(this, function _onSquadLoadComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = isPhone() ? new UTSquadOverviewViewController : new UTSquadSplitViewController;
            i.initWithSquad(t.data.squad),
            this._nc.pushViewController(i)
        } else
            services.Notification.queue([services.Localization.localize("notification.squad.failedToLoad"), UINotificationType.NEGATIVE]);
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }))
}
,
UTGoToLinkController.prototype._gotoSquadManagement = function _gotoSquadManagement() {
    if (this._nc) {
        var e = isPhone() ? new UTSquadListViewController : new UTSquadListSplitViewController;
        e.init(),
        this._nc.pushViewController(e, !0)
    }
}
,
UTGoToLinkController.prototype._gotoStore = function _gotoStore() {
    if (this._nc) {
        var e = new UTStoreHubViewController;
        e.init(),
        this._nc.pushViewController(e, !0)
    }
}
,
UTGoToLinkController.prototype._gotoTOTWSquadOverview = function _gotoTOTWSquadOverview() {
    function _onRequestTOTWSquadComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = isPhone() ? new UTTOTWSquadOverviewViewController : new UTTOTWSquadSplitViewController;
            i.initWithSquad(t.data.squad),
            this._nc.pushViewController(i)
        } else
            services.Notification.queue([services.Localization.localize("notification.TOTW.loadfail"), UINotificationType.NEGATIVE])
    }
    this._nc && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Squad.requestTOTWHistory().observe(this, function _onRequestHistoryComplete(e, t) {
        if (e.unobserve(this),
        this._nc && t.success && 0 < t.data.squads.length) {
            var i = t.data.squads[0];
            if (i && i.isValid()) {
                var o = isPhone() ? new UTTOTWSquadOverviewViewController : new UTTOTWSquadSplitViewController;
                o.initWithSquad(i),
                this._nc.pushViewController(o)
            } else
                services.Squad.requestTOTWSquad(i.getId()).observe(this, _onRequestTOTWSquadComplete)
        } else
            services.Notification.queue([services.Localization.localize("notification.TOTW.loadfail"), UINotificationType.NEGATIVE]);
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }))
}
,
UTGoToLinkController.prototype._gotoTransferList = function _gotoTransferList() {
    if (this._nc) {
        var e = isPhone() ? new UTTransferListViewController : new UTTransferListSplitViewController;
        e.init(),
        this._nc.pushViewController(e, !0)
    }
}
,
UTGoToLinkController.prototype._gotoUnassigned = function _gotoUnassigned() {
    this._nc && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Item.requestUnassignedItems().observe(this, function _onRequestUnassignedComplete(e, t) {
        e.unobserve(this);
        var i = isPhone() ? new UTUnassignedItemsViewController : new UTUnassignedItemsSplitViewController;
        t.success ? i.initWithItems(t.response.items) : i.init(),
        this._nc.pushViewController(i, !0),
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }))
}
,
UTGoToLinkController.prototype._gotoTransferTargets = function _gotoTransferTargets() {
    var e;
    this._nc && ((e = !getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_HIDE_TRANSFER_MARKET) && services.User.getUser().hasTradeAccess() && services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED) ? isPhone() ? new UTWatchListViewController : new UTWatchListSplitViewController : new UTTransfersHubViewController).init(),
    this._nc.pushViewController(e, !0))
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTMyStadiumViewModel = function(i) {
    function UTMyStadiumViewModel(e) {
        var t = i.call(this) || this;
        return t.currentArea = MyStadiumSlotCategory.NONE,
        t.currentSlotId = -1,
        t.currentTierId = -1,
        t.stadiumEntity = e,
        t
    }
    return __extends(UTMyStadiumViewModel, i),
    UTMyStadiumViewModel.prototype.getCurrentSlot = function() {
        return this.stadiumEntity.getTierSlotById(this.currentTierId, this.currentSlotId)
    }
    ,
    UTMyStadiumViewModel.prototype.getCurrentAreaSlots = function() {
        return this.stadiumEntity.getAreaSlots(this.currentArea, this.stadiumEntity.lastUsedTierLevel).sort(this.sortSlots)
    }
    ,
    UTMyStadiumViewModel.prototype.assignItemToSlot = function(e) {
        return this.stadiumEntity.getActiveClubItemIds().includes(e.id) ? (services.Notification.queue([services.Localization.localize("notification.club.itemAlreadyAssigned"), UINotificationType.NEGATIVE]),
        !0) : this.stadiumEntity.setSlot(this.currentSlotId, this.currentTierId, e)
    }
    ,
    Object.defineProperty(UTMyStadiumViewModel.prototype, "stadium", {
        get: function() {
            return this.stadiumEntity
        },
        enumerable: !1,
        configurable: !0
    }),
    UTMyStadiumViewModel.prototype.getStadiumProgression = function(e) {
        var i = this;
        if (!this.stadiumEntity)
            return null;
        var o = {};
        return e.forEach(function(e) {
            var t = i.stadiumEntity.getTierUnlockForSubType(e);
            o[e] = {
                locked: !i.stadiumEntity.canUseSubtype(e),
                inThisTier: t <= i.stadiumEntity.lastUsedTierLevel,
                unlockTier: t
            }
        }),
        o
    }
    ,
    UTMyStadiumViewModel.prototype.getSlotItemId = function(e) {
        return (e = e || this.getCurrentSlot()) ? e.item.id : 0
    }
    ,
    UTMyStadiumViewModel.prototype.getAssetUriForSlot = function(e) {
        var t = e.item
          , i = t.getStaticData();
        if (t.authenticity && t.type === ItemType.VANITY)
            return AssetLocationUtils.getBadgeImageUri(t.getItemAssetId(), enums.UIThemeVariation.DARK);
        switch (t.type) {
        case ItemType.BALL:
            return AssetLocationUtils.getBallImageUri(i.assetId);
        case ItemType.STADIUM:
            return AssetLocationUtils.getStadiumImageUri(i.assetId);
        case ItemType.BADGE:
            return AssetLocationUtils.getBadgeImageUri(t.teamId, enums.UIThemeVariation.DARK);
        case ItemType.KIT:
            var o = i instanceof UTStaticKitItemDataDTO ? i.kitType : KitType.HOME;
            return AssetLocationUtils.getKitImageUri(o, t.teamId);
        case ItemType.VANITY:
            return t.authenticity && t.subtype === ItemSubType.VANITY_STADIUM_THEME ? AssetLocationUtils.getBadgeImageUri(t.getItemAssetId(), enums.UIThemeVariation.DARK) : AssetLocationUtils.getVanityImageUri(t.subtype, t.getItemAssetId());
        default:
            return DebugUtils.Assert(t.type === ItemType.NONE, "Unsupported item type: " + t.type),
            ""
        }
    }
    ,
    UTMyStadiumViewModel.prototype.setSlotTierFromData = function(i) {
        var o = this;
        this.stadiumEntity.tiers.values().forEach(function(e) {
            var t = e.getSlotById(i.id);
            t && t.globalId === i.globalId && (o.currentTierId = e.id)
        })
    }
    ,
    UTMyStadiumViewModel.prototype.sortSlots = function(e, t) {
        return e.sortOrder < t.sortOrder ? -1 : e.sortOrder > t.sortOrder ? 1 : 0
    }
    ,
    UTMyStadiumViewModel
}(UTViewModel)
  , UTImageListView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTImageListView() {
        return t.call(this) || this
    }
    return __extends(UTImageListView, t),
    UTImageListView.prototype.init = function() {
        t.prototype.init.call(this)
    }
    ,
    UTImageListView.prototype.render = function() {
        this.setStrings(),
        this.setImage(this.imageUri)
    }
    ,
    Object.defineProperty(UTImageListView.prototype, "placeholderUrl", {
        get: function() {
            return this._placeholderUrl
        },
        set: function(e) {
            this._placeholderUrl = 0 < e.length ? e : this.buildPlaceholderUrl()
        },
        enumerable: !1,
        configurable: !0
    }),
    UTImageListView.prototype.setImage = function(e) {
        this._listImage.placeholderURL = this.placeholderUrl ? this.placeholderUrl : this.buildPlaceholderUrl(),
        this._listImage.setResource(e, !0)
    }
    ,
    UTImageListView.prototype.buildPlaceholderUrl = function() {
        function mF(e, t) {
            return e.replace(/\d+\.png/, t + ".png")
        }
        var e = this._listImage.path;
        switch (this.itemType) {
        case ItemType.BADGE:
            return 0 < e.length ? mF(e, UTItemEntity.DEFAULT_ASSET_ID) : AssetLocationUtils.getBadgeImageUri(UTItemEntity.DEFAULT_ASSET_ID, enums.UIThemeVariation.DARK);
        case ItemType.BALL:
            return 0 < e.length ? mF(e, UTItemEntity.DEFAULT_BALL_ASSET_ID) : AssetLocationUtils.getBallImageUri(UTItemEntity.DEFAULT_BALL_ASSET_ID);
        case ItemType.KIT:
            return 0 < e.length ? mF(e, UTItemEntity.DEFAULT_ASSET_ID) : AssetLocationUtils.getKitImageUri(KitType.HOME, UTItemEntity.DEFAULT_ASSET_ID);
        case ItemType.STADIUM:
            return 0 < e.length ? mF(e, UTItemEntity.DEFAULT_ASSET_ID) : AssetLocationUtils.getStadiumImageUri(UTItemEntity.DEFAULT_ASSET_ID);
        case ItemType.VANITY:
            return 0 < e.length ? mF(e, UTItemEntity.DEFAULT_ASSET_ID) : AssetLocationUtils.getVanityImageUri(ItemSubType.NONE, UTItemEntity.DEFAULT_ASSET_ID);
        default:
            return DebugUtils.Assert(this.itemType === ItemType.NONE, "Unsupported item type: " + this.itemType),
            e
        }
    }
    ,
    UTImageListView.prototype.setStrings = function() {
        this.__primaryText.textContent = this.primaryText,
        this.__secondaryText.textContent = this.secondaryText
    }
    ,
    UTImageListView.prototype.setInteractionState = function(e) {
        t.prototype.setInteractionState.call(this, e),
        this.toggleClass(enums.UIState.DISABLED, !this._interactionState),
        DOMKit.toggleClass(this.__rowContent, "has-tap-callback", e),
        this._interactionState || this.removeClass([enums.UIState.ACTIVE, enums.UIState.HOVER].join(" "))
    }
    ,
    UTImageListView.prototype._touchStarted = function(e) {
        t.prototype._touchStarted.call(this, e),
        this.addClass(enums.UIState.ACTIVE)
    }
    ,
    UTImageListView.prototype._touchMoved = function(e) {
        t.prototype._touchMoved.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTImageListView.prototype._touchEnded = function(e) {
        t.prototype._touchEnded.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTImageListView.prototype._touchCancelled = function(e) {
        t.prototype._touchCancelled.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTImageListView.prototype._mouseLeave = function(e) {
        t.prototype._mouseLeave.call(this, e),
        this.removeClass(enums.UIState.ACTIVE),
        this.removeClass(enums.UIState.HOVER)
    }
    ,
    UTImageListView.prototype._mouseEnter = function(e) {
        t.prototype._mouseEnter.call(this, e),
        this.addClass(enums.UIState.HOVER)
    }
    ,
    UTImageListView.prototype._tapDetected = function(e) {
        t.prototype._tapDetected.call(this, e),
        this._triggerActions(EventType.TAP)
    }
    ,
    UTImageListView.UI_STATE = Object.freeze({
        NONE: "",
        NEUTRAL: "neutral",
        DISABLED: "disabled"
    }),
    UTImageListView
}(UTTargetActionView));
UTImageListView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("li");
        e.classList.add("ut-image-list");
        var t = document.createElement("div");
        t.classList.add("image-container"),
        this._listImage = new UTItemImageView,
        t.appendChild(this._listImage.getRootElement()),
        e.appendChild(t),
        this.__rowContent = document.createElement("div"),
        this.__rowContent.classList.add("rowContent"),
        this.__primaryText = document.createElement("span"),
        this.__primaryText.classList.add("primary-text"),
        this.__rowContent.appendChild(this.__primaryText),
        this.__secondaryText = document.createElement("span"),
        this.__secondaryText.classList.add("secondary-text"),
        this.__rowContent.appendChild(this.__secondaryText),
        e.appendChild(this.__rowContent),
        this.__root = e,
        this._generated = !0
    }
}
,
UTImageListView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._listImage.destroy(),
    this.__rowContent = null,
    this.__primaryText = null,
    this.__secondaryText = null
}
,
UTImageListView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTCustomSlotListView = function(t) {
    function UTCustomSlotListView() {
        var e = t.call(this) || this;
        return e.listRows = [],
        e
    }
    return __extends(UTCustomSlotListView, t),
    UTCustomSlotListView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTCustomSlotListView.prototype.render = function() {
        this.renderItems()
    }
    ,
    UTCustomSlotListView.prototype.renderItems = function() {
        var t = this;
        DOMKit.empty(this.__slotRows),
        this.listRows.forEach(function(e) {
            e.render(),
            e.addTarget(t, t.onSlotTapped, EventType.TAP),
            t.__slotRows.appendChild(e.getRootElement())
        })
    }
    ,
    Object.defineProperty(UTCustomSlotListView.prototype, "rows", {
        get: function() {
            return this.listRows
        },
        set: function(e) {
            e.forEach(function(e) {
                e.init()
            }),
            this.listRows = e
        },
        enumerable: !1,
        configurable: !0
    }),
    UTCustomSlotListView.prototype.onSlotTapped = function(e) {
        this._triggerActions(EventType.TAP, {
            index: this.rows.indexOf(e)
        })
    }
    ,
    UTCustomSlotListView
}(UTTargetActionView);
UTCustomSlotListView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-custom-slot-list"),
        this.__slotRows = document.createElement("ul"),
        e.appendChild(this.__slotRows),
        this.__root = e,
        this._generated = !0
    }
}
,
UTCustomSlotListView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__slotRows = null
}
,
UTCustomSlotListView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTCustomizeProgressHeader = function(e) {
    function UTCustomizeProgressHeader() {
        return e.call(this) || this
    }
    return __extends(UTCustomizeProgressHeader, e),
    UTCustomizeProgressHeader.prototype.init = function() {
        e.prototype.init.call(this),
        this.setInteractionState(!0),
        this._progressBar.init(),
        this._objectivesButton.init(),
        this._objectivesButton.addTarget(this, this._eObjectivesButtonSelected, EventType.TAP),
        this._objectivesButton.setText(services.Localization.localize("stadium.progressHeader.button"))
    }
    ,
    UTCustomizeProgressHeader.prototype.render = function(e, t) {
        if (this.__progressTitle) {
            var i = services.Localization
              , o = document.createElement("span");
            o.textContent = i.localize("stadium.entity.tier" + e),
            this.__progressTitle.innerHTML = i.localize("stadium.progressHeader.description", [o.outerHTML]),
            this._progressBar.setProgress(t)
        }
    }
    ,
    UTCustomizeProgressHeader.prototype.renderMax = function() {
        this.__progressTitle && (this.__progressTitle.textContent = services.Localization.localize("stadium.progressHeader.limit"),
        this._progressBar.setProgress(100),
        this.addClass(UTCustomizeProgressHeader.Style.COMPLETE))
    }
    ,
    UTCustomizeProgressHeader.prototype._eObjectivesButtonSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTCustomizeProgressHeader.Events.GO_TO_OBJECTIVES)
    }
    ,
    UTCustomizeProgressHeader.Style = {
        COMPLETE: "COMPLETE"
    },
    UTCustomizeProgressHeader.Events = {
        GO_TO_OBJECTIVES: "GO_TO_OBJECTIVES"
    },
    UTCustomizeProgressHeader
}(UTTargetActionView);
UTCustomizeProgressHeader.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-customize-progress-header");
        var t = document.createElement("div");
        t.classList.add("ut-customize-progress-header--info"),
        this.__progressTitle = document.createElement("p"),
        this.__progressTitle.classList.add("ut-customize-progress-header--title"),
        t.appendChild(this.__progressTitle),
        this._progressBar = new UTProgressBarView,
        this._progressBar.getRootElement().classList.add("rounded"),
        t.appendChild(this._progressBar.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-customize-progress-header--actions"),
        this._objectivesButton = new UTStandardButtonControl,
        this._objectivesButton.getRootElement().classList.add("mini"),
        this._objectivesButton.getRootElement().classList.add("call-to-action"),
        this._objectivesButton.getRootElement().classList.add("btn-standard"),
        i.appendChild(this._objectivesButton.getRootElement()),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTCustomizeProgressHeader.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__progressTitle = null,
    this._progressBar.destroy(),
    this._objectivesButton.destroy()
}
,
UTCustomizeProgressHeader.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTCustomizeHubView = function(t) {
    function UTCustomizeHubView() {
        return t.call(this) || this
    }
    return __extends(UTCustomizeHubView, t),
    UTCustomizeHubView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this.setInteractionState(!0),
        this.initTabMenu(),
        this._slotList.init(),
        this._searchFilters.init(),
        this._header.init(),
        this._resetButton = this._searchFilters.getResetButton(),
        this._searchButton = this._searchFilters.getSearchButton(),
        this._resetButton.init(),
        this._resetButton.setText(e.localize("search.pagination.reset")),
        this._resetButton.addTarget(this, this._eResetButtonSelected, EventType.TAP),
        this._searchButton.init(),
        this._searchButton.setText(e.localize("button.search")),
        this._searchButton.addTarget(this, this._eSearchButtonSelected, EventType.TAP),
        this._searchFilters.onFilterChange.observe(this, this._eFilterChanged),
        this._searchFilters.setupSearchOptions(!0, !1),
        this._searchFilters.setSortOptions(factories.DataProvider.getStaffSortTypeDP()),
        this._searchFilters.getSortOptions().addTarget(this, this._eSearchOptionChanged, EventType.CHANGE),
        this._searchFilters.getSortDropDown().addTarget(this, this._eDropDownChanged, EventType.CHANGE),
        this._slotList.addTarget(this, this.handleSlotSelect, EventType.TAP),
        this._header.addTarget(this, this._eGoToObjectivesSelected, UTCustomizeProgressHeader.Events.GO_TO_OBJECTIVES)
    }
    ,
    UTCustomizeHubView.prototype.render = function(e) {
        this._searchFilters.toggleDisplay(!1),
        this._header.setDisplay(e),
        this._slotList.setDisplay(!0),
        this._slotList.render()
    }
    ,
    UTCustomizeHubView.prototype.renderSearch = function() {
        this._slotList.setDisplay(!1),
        this._header.setDisplay(!1),
        this._searchFilters.toggleDisplay(!0)
    }
    ,
    UTCustomizeHubView.prototype.getFilters = function() {
        return this._searchFilters
    }
    ,
    UTCustomizeHubView.prototype.setFilterLock = function(e, t) {
        this._searchFilters.setFilterLock(e, t)
    }
    ,
    UTCustomizeHubView.prototype.setFilters = function(e) {
        this._searchFilters.setFilters(e, !1),
        this._searchFilters.togglePileFilter(!1),
        this._searchFilters.togglePlayerNameRow(e.searchCriteria.type === SearchType.PLAYER)
    }
    ,
    UTCustomizeHubView.prototype.setFilterValue = function(e, t) {
        this._searchFilters.setFilterValue(e, t)
    }
    ,
    Object.defineProperty(UTCustomizeHubView.prototype, "slotList", {
        get: function() {
            return this._slotList
        },
        enumerable: !1,
        configurable: !0
    }),
    Object.defineProperty(UTCustomizeHubView.prototype, "tabMenu", {
        get: function() {
            return this._tabMenu
        },
        enumerable: !1,
        configurable: !0
    }),
    UTCustomizeHubView.prototype.setProgressHeader = function(e, t) {
        this._header.render(e, t)
    }
    ,
    UTCustomizeHubView.prototype.setProgressLimitReached = function() {
        this._header.renderMax()
    }
    ,
    UTCustomizeHubView.prototype.disableProgressHeader = function() {
        this._header.setDisplay(!1)
    }
    ,
    UTCustomizeHubView.prototype.setSlotRows = function(e) {
        this._slotList.rows = e
    }
    ,
    UTCustomizeHubView.prototype.initTabMenu = function() {
        this._tabMenu.init(),
        this._tabMenu.addTab(MyStadiumSlotCategory.NONE, services.Localization.localize("customize.tabTitle.all")),
        this._tabMenu.addTab(MyStadiumSlotCategory.CLUB, services.Localization.localize("customize.tabTitle.club")),
        this._tabMenu.addTab(MyStadiumSlotCategory.STADIUM, services.Localization.localize("customize.tabTitle.stadium")),
        this._tabMenu.addTab(MyStadiumSlotCategory.STANDS, services.Localization.localize("customize.tabTitle.stands")),
        this._tabMenu.addTab(MyStadiumSlotCategory.PITCH, services.Localization.localize("customize.tabTitle.pitch")),
        this._tabMenu.addTab(MyStadiumSlotCategory.TROPHIES, services.Localization.localize("customize.tabTitle.trophies")),
        this._tabMenu.setActiveTab(MyStadiumSlotCategory.NONE),
        this._tabMenu.layoutSubviews(),
        this._tabMenu.addTarget(this, this.handleTabSelect, EventType.TAP)
    }
    ,
    UTCustomizeHubView.prototype.handleTabSelect = function(e, t, i) {
        this.isInteractionEnabled() && (this._triggerActions(UTCustomizeHubView.Events.TAB_SELECTED, i),
        this._tabMenu.setActiveTab(i.id))
    }
    ,
    UTCustomizeHubView.prototype.handleSlotSelect = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTCustomizeHubView.Events.SLOT_SELECTED, i)
    }
    ,
    UTCustomizeHubView.prototype._eResetButtonSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTCustomizeHubView.Events.RESET)
    }
    ,
    UTCustomizeHubView.prototype._eSearchButtonSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTCustomizeHubView.Events.SEARCH)
    }
    ,
    UTCustomizeHubView.prototype._eFilterChanged = function(e, t, i, o) {
        this.isInteractionEnabled() && this._triggerActions(UTCustomizeHubView.Events.FILTER_CHANGE, {
            id: i,
            setId: t,
            value: o
        })
    }
    ,
    UTCustomizeHubView.prototype._eSearchOptionChanged = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTCustomizeHubView.Events.SEARCH_OPTION_CHANGE, i)
    }
    ,
    UTCustomizeHubView.prototype._eDropDownChanged = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTCustomizeHubView.Events.SORT_CHANGE, i)
    }
    ,
    UTCustomizeHubView.prototype._eGoToObjectivesSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTCustomizeProgressHeader.Events.GO_TO_OBJECTIVES)
    }
    ,
    UTCustomizeHubView.Events = {
        TAB_SELECTED: "TAB_SELECTED",
        SLOT_SELECTED: "SLOT_SELECTED",
        RESET: "RESET",
        SEARCH: "SEARCH",
        FILTER_CHANGE: "FILTER_CHANGE",
        SEARCH_OPTION_CHANGE: "SEARCH_OPTION_CHANGE",
        SORT_CHANGE: "SORT_CHANGE"
    },
    UTCustomizeHubView
}(UTTargetActionView);
UTCustomizeHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-customize-hub-view"),
        this._tabMenu = new EAFilterBarView,
        e.appendChild(this._tabMenu.getRootElement()),
        this._header = new UTCustomizeProgressHeader,
        e.appendChild(this._header.getRootElement());
        var t = document.createElement("div");
        t.classList.add("ut-content-container"),
        this._searchFilters = new UTClubSearchFiltersView,
        t.appendChild(this._searchFilters.getRootElement()),
        this._slotList = new UTCustomSlotListView,
        t.appendChild(this._slotList.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTCustomizeHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._tabMenu.destroy(),
    this._header.destroy(),
    this._searchFilters.destroy(),
    this._slotList.destroy()
}
,
UTCustomizeHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTCustomizeHubViewController = function(i) {
    function UTCustomizeHubViewController() {
        var e = i.call(this) || this;
        return e.displayProgressHeader = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.OBJECTIVES_ENABLED),
        e.goToLinkController = null,
        e.goToObjectivesCategory = null,
        e.searchViewModel = new UTItemSearchViewModel,
        e.viewmodel = null,
        e
    }
    return __extends(UTCustomizeHubViewController, i),
    UTCustomizeHubViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.customizeHub")
    }
    ,
    UTCustomizeHubViewController.prototype.init = function() {
        this.initialized || (i.prototype.init.call(this),
        this.searchViewModel.searchCategoryGroup = SearchCategoryGroup.CLUB,
        this.searchViewModel.searchCriteria.type = SearchType.CLUB_INFO,
        this.searchViewModel.defaultSearchCriteria.type = SearchType.CLUB_INFO,
        this.goToLinkController = new UTGoToLinkController,
        this.goToLinkController.init())
    }
    ,
    UTCustomizeHubViewController.prototype.dealloc = function() {
        this.goToLinkController && (this.goToLinkController.dealloc(),
        this.goToLinkController = null),
        this.goToObjectivesCategory = null,
        i.prototype.dealloc.call(this)
    }
    ,
    UTCustomizeHubViewController.prototype.setupStadium = function() {
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.MyStadium.getStadium().observe(this, function _onGetStadiumComplete(e, t) {
            var i, o, n;
            e.unobserve(this);
            var r = null === (i = t.data) || void 0 === i ? void 0 : i.stadium;
            if (t.success && r) {
                var s = null !== (n = null === (o = this.viewmodel) || void 0 === o ? void 0 : o.currentArea) && void 0 !== n ? n : MyStadiumSlotCategory.NONE;
                this.viewmodel = new UTMyStadiumViewModel(r),
                this.viewmodel.currentTierId = r.lastUsedTierLevel,
                this.viewmodel.currentArea = s,
                this.viewmodel.currentArea === MyStadiumSlotCategory.NONE ? this.setSearchCriteria() : this.setViewSlots(),
                this.getStadiumProgress(),
                gClickShield.isShowing() && gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
            } else
                services.Notification.queue([services.Localization.localize("notification.stadium.loadfail"), UINotificationType.NEGATIVE]),
                gClickShield.isShowing() && gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
                this.getNavigationController().popToRootViewController()
        })
    }
    ,
    UTCustomizeHubViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this),
        this.setupStadium(),
        services.Club.getStats();
        var e = this.getNavigationController();
        e && e.setNavigationVisibility(!0, !0),
        e && this.goToLinkController && this.goToLinkController.setNavigationController(e);
        var t = this.getView();
        t.addTarget(this, this._eTabSelected, UTCustomizeHubView.Events.TAB_SELECTED),
        t.addTarget(this, this._eRowSelected, UTCustomizeHubView.Events.SLOT_SELECTED),
        t.addTarget(this, this._eResetSelected, UTCustomizeHubView.Events.RESET),
        t.addTarget(this, this._eSearchSelected, UTCustomizeHubView.Events.SEARCH),
        t.addTarget(this, this._eFilterChanged, UTCustomizeHubView.Events.FILTER_CHANGE),
        t.addTarget(this, this._eSearchOptionChanged, UTCustomizeHubView.Events.SEARCH_OPTION_CHANGE),
        t.addTarget(this, this._eDropDownChanged, UTCustomizeHubView.Events.SORT_CHANGE),
        t.addTarget(this, this._eGoToObjectivesSelected, UTCustomizeProgressHeader.Events.GO_TO_OBJECTIVES)
    }
    ,
    UTCustomizeHubViewController.prototype.viewWillDisappear = function() {
        i.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this._eTabSelected, UTCustomizeHubView.Events.TAB_SELECTED),
        e.removeTarget(this, this._eRowSelected, UTCustomizeHubView.Events.SLOT_SELECTED),
        e.removeTarget(this, this._eResetSelected, UTCustomizeHubView.Events.RESET),
        e.removeTarget(this, this._eSearchSelected, UTCustomizeHubView.Events.SEARCH),
        e.removeTarget(this, this._eFilterChanged, UTCustomizeHubView.Events.FILTER_CHANGE),
        e.removeTarget(this, this._eSearchOptionChanged, UTCustomizeHubView.Events.SEARCH_OPTION_CHANGE),
        e.removeTarget(this, this._eDropDownChanged, UTCustomizeHubView.Events.SORT_CHANGE)
    }
    ,
    UTCustomizeHubViewController.prototype.getStadiumProgress = function() {
        var n = this;
        if (DebugUtils.Assert(JSUtils.isValid(this.viewmodel), "Executed stadium progress retrieval before the viewmodel is set."),
        this.viewmodel) {
            var r = this.getView();
            if (services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.OBJECTIVES_ENABLED)) {
                var e = this.viewmodel.stadium.getStadiumInProgressTier();
                if (e < this.viewmodel.stadium.getStadiumLastTierId()) {
                    var s = e + 1;
                    services.Objectives.requestCategories().observe(this, function(e, t) {
                        if (e.unobserve(n),
                        t.success && t.data) {
                            var i = t.data.categories.find(function(e) {
                                return e.isMilestone()
                            });
                            if (i) {
                                var o = (n.goToObjectivesCategory = i).groups.find(function(e) {
                                    return e.subGroupType === ObjectiveSubGroupType.STADIUM && e.subGroupTypeAttribute === s
                                });
                                if (o)
                                    return n.displayProgressHeader = !0,
                                    void r.setProgressHeader(s, o.getProgress())
                            }
                        }
                        n.displayProgressHeader = !1,
                        r.disableProgressHeader()
                    })
                } else
                    this.displayProgressHeader = !0,
                    r.setProgressLimitReached()
            } else
                this.displayProgressHeader = !1,
                r.disableProgressHeader()
        }
    }
    ,
    UTCustomizeHubViewController.prototype.getItemNameString = function(e) {
        var t = services.Localization;
        if (!e.isValid())
            return t.localize("listImageLabel.none");
        var i = e.getStaticData();
        switch (e.type) {
        case ItemType.BADGE:
        case ItemType.KIT:
            return UTLocalizationUtil.teamIdToAbbr15(e.teamId, t);
        case ItemType.BALL:
            return t.localize(i.description);
        case ItemType.STADIUM:
            return i.description;
        case ItemType.VANITY:
        default:
            return t.localize(i.name)
        }
    }
    ,
    UTCustomizeHubViewController.prototype.setViewSlots = function() {
        var n = this;
        if (DebugUtils.Assert(JSUtils.isValid(this.viewmodel), "Executed slot assignment before the viewmodel is set."),
        this.viewmodel) {
            var r = this.viewmodel
              , e = this.getView()
              , t = r.getCurrentAreaSlots().map(function(e) {
                var t = new UTImageListView
                  , i = e.item;
                if (t.imageUri = r.getAssetUriForSlot(e),
                t.itemType = i.type,
                t.primaryText = services.Localization.localize(e.name),
                t.secondaryText = n.getItemNameString(i),
                i.authenticity && i.isVanityItem()) {
                    var o = AssetLocationUtils.getBadgeImageUri(i.teamId, enums.UIThemeVariation.DARK);
                    t.placeholderUrl = o
                }
                return t.setInteractionState(!e.locked),
                t
            });
            e.setSlotRows(t),
            e.render(this.displayProgressHeader)
        }
    }
    ,
    UTCustomizeHubViewController.prototype._getViewInstanceFromData = function() {
        return new UTCustomizeHubView
    }
    ,
    UTCustomizeHubViewController.prototype.setSearchCriteria = function() {
        var e = this.getView();
        e.setFilters(this.searchViewModel),
        e.setFilterValue(enums.UISearchFilters.TYPE, SearchType.ANY),
        e.renderSearch()
    }
    ,
    UTCustomizeHubViewController.prototype._eRowSelected = function(e, t, i) {
        if (DebugUtils.Assert(JSUtils.isValid(this.viewmodel), "Row selected before the viewmodel is set."),
        this.viewmodel && i && JSUtils.isNumber(i.index)) {
            var o = this.viewmodel.getCurrentAreaSlots()[i.index]
              , n = new UTSearchCriteriaDTO;
            switch (this.viewmodel.currentSlotId = o.id,
            this.viewmodel.setSlotTierFromData(o),
            o.validSubTypes[0]) {
            case ItemSubType.BADGE:
                n.type = SearchType.CLUB_INFO,
                n.category = SearchCategory.BADGE;
                break;
            case ItemSubType.BALL:
                n.type = SearchType.BALL,
                n.category = SearchCategory.BALL;
                break;
            case ItemSubType.KIT:
                n.type = SearchType.CLUB_INFO,
                n.category = SearchCategory.KIT;
                break;
            case ItemSubType.STADIUM:
                n.type = SearchType.STADIUM,
                n.category = SearchCategory.STADIUM;
                break;
            default:
                n.type = SearchType.VANITY,
                n.category = SearchCategory.VANITY,
                n.subtypes = o.validSubTypes
            }
            this.gotoClubSearchResults(n, !0)
        }
    }
    ,
    UTCustomizeHubViewController.prototype._eTabSelected = function(e, t, i) {
        DebugUtils.Assert(JSUtils.isValid(this.viewmodel), "Tab selected before the viewmodel is set."),
        this.viewmodel && i && (this.viewmodel.currentArea = i.id,
        this.viewmodel.currentArea === MyStadiumSlotCategory.NONE ? this.setSearchCriteria() : this.setViewSlots())
    }
    ,
    UTCustomizeHubViewController.prototype.gotoClubSearchResults = function(e, t) {
        var i = this.getNavigationController();
        if (i) {
            var o = isPhone() ? new UTClubSearchResultsViewController : new controllers.club.ClubSearchResultsLandscape;
            o.initWithSearchCriteria(e),
            t && this.viewmodel && o.setStadiumViewModel(this.viewmodel),
            i.pushViewController(o)
        }
    }
    ,
    UTCustomizeHubViewController.prototype._eResetSelected = function(e, t, i) {
        var o = this.getView();
        this.searchViewModel.resetSearch(),
        o.setFilters(this.searchViewModel)
    }
    ,
    UTCustomizeHubViewController.prototype._eSearchSelected = function(e, t, i) {
        this.gotoClubSearchResults(this.searchViewModel.searchCriteria, !1)
    }
    ,
    UTCustomizeHubViewController.prototype._eFilterChanged = function(e, t, i) {
        JSUtils.isValid(i.setId) && JSUtils.isValid(i.id) && JSUtils.isValid(i.value) && (this.searchViewModel.updateFromFilterChange(i.setId, i.id, i.value),
        this.getView().setFilters(this.searchViewModel))
    }
    ,
    UTCustomizeHubViewController.prototype._eSearchOptionChanged = function(e, t, i) {
        var o = this;
        i.id === enums.UISortOptionType.UNTRADEABLE ? this.searchViewModel.searchCriteria.untradeables = i.checked ? SearchUntradeables.ONLY : SearchUntradeables.DEFAULT : i.id === enums.UISortOptionType.EXCLUDE_SQUAD && (i.checked ? this.searchViewModel.requestActiveSquadDefIds().observe(this, function(e, t) {
            e.unobserve(o),
            t.success && t.data && t.data.defIds && (o.searchViewModel.searchCriteria.excludeDefIds = t.data.defIds)
        }) : this.searchViewModel.searchCriteria.excludeDefIds = [])
    }
    ,
    UTCustomizeHubViewController.prototype._eDropDownChanged = function(e, t, i) {
        switch (this.searchViewModel.searchCriteria.sort = i.value,
        i.id) {
        case SearchSortID.VALUE_ASC:
        case SearchSortID.VALUE_DESC:
            this.searchViewModel.searchCriteria.sortBy = SearchSortType.VALUE;
            break;
        case SearchSortID.RECENCY_DESC:
            this.searchViewModel.searchCriteria.sortBy = SearchSortType.RECENCY;
            break;
        default:
            DebugUtils.Assert(!1, "Stadium ClubSearchFilters :: Passed an invalid SearchSort Enums.")
        }
    }
    ,
    UTCustomizeHubViewController.prototype._eGoToObjectivesSelected = function(e, t, i) {
        this.goToLinkController && this.goToObjectivesCategory ? this.goToLinkController.attemptObjectivesNavigation(this.goToObjectivesCategory.id) : DebugUtils.Assert(!1, "Controller and category must be valid to redirect")
    }
    ,
    UTCustomizeHubViewController
}(UTViewController)
  , UTUnassignedItemStatsDTO = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTUnassignedItemStatsDTO() {
        var e = t.call(this) || this;
        return e.entities = [],
        e.count = 0,
        e.value = 0,
        e
    }
    return __extends(UTUnassignedItemStatsDTO, t),
    UTUnassignedItemStatsDTO
}(EAObject))
  , UTUnassignedItemsViewModel = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTUnassignedItemsViewModel(e) {
        var t = i.call(this, e) || this;
        return t.requests = [],
        t.setSection(UTUnassignedItemsViewModel.SECTION.ITEMS, function(e) {
            return e instanceof UTSquadSlotEntity && (e = e.item),
            e.isMovable() || e.isMiscItem()
        }, UTUnassignedItemsViewModel.SECTION.ITEMS),
        t.setSection(UTUnassignedItemsViewModel.SECTION.DUPLICATES, function(e) {
            return e instanceof UTSquadSlotEntity && (e = e.item),
            !e.isMovable() && !e.isMiscItem()
        }, UTUnassignedItemsViewModel.SECTION.DUPLICATES),
        t.organizeItems(),
        t
    }
    return __extends(UTUnassignedItemsViewModel, i),
    UTUnassignedItemsViewModel.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.cancelRequests()
    }
    ,
    UTUnassignedItemsViewModel.prototype.cancelRequests = function() {
        0 < this.requests.length && (this.requests.forEach(function(e) {
            e.clearObservers(),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }),
        this.requests = [])
    }
    ,
    UTUnassignedItemsViewModel.prototype.completeRequest = function(e, t) {
        e.unobserve(this),
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING);
        var i = this.requests.indexOf(e);
        0 <= i && this.requests.splice(i, 1)
    }
    ,
    UTUnassignedItemsViewModel.prototype.getStorableSection = function() {
        return this.getSectionItems(UTUnassignedItemsViewModel.SECTION.ITEMS)
    }
    ,
    UTUnassignedItemsViewModel.prototype.getDuplicateSection = function() {
        return this.getSectionItems(UTUnassignedItemsViewModel.SECTION.DUPLICATES)
    }
    ,
    UTUnassignedItemsViewModel.prototype.hasMovableItems = function() {
        return -1 < this.indexOf(function(e) {
            return e.isMovable()
        })
    }
    ,
    UTUnassignedItemsViewModel.prototype.getMovableItems = function() {
        return this.values().filter(function(e) {
            return e.isMovable()
        })
    }
    ,
    UTUnassignedItemsViewModel.prototype.hasTradeableDuplicates = function() {
        return -1 < this.indexOf(function(e) {
            return !e.isMovable() && !e.untradeable
        })
    }
    ,
    UTUnassignedItemsViewModel.prototype.getTradeableDuplicates = function() {
        return this.values().filter(function(e) {
            return e.isDuplicate() && !e.untradeable
        })
    }
    ,
    UTUnassignedItemsViewModel.prototype.getDiscardableInfo = function() {
        var i = {
            items: new UTUnassignedItemStatsDTO,
            duplicates: new UTUnassignedItemStatsDTO
        };
        return this.values().forEach(function(e) {
            if (e.isDiscardable() && !e.isDuplicateLoanPlayer()) {
                var t = e.isDuplicate() ? i.duplicates : i.items;
                t.entities.push(e),
                t.count++,
                t.value += e.discardValue
            }
        }),
        i
    }
    ,
    UTUnassignedItemsViewModel.prototype.requestUnassignedItems = function() {
        var i = this
          , e = services.Item.requestUnassignedItems();
        return gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.requests.push(e.observe(this, function(e, t) {
            t.success && JSUtils.isObject(t.response) && (i.dataUpdated.clearObservers(),
            i.resetCollection([]),
            i.addArray(t.response.items)),
            i.completeRequest(e, t)
        })),
        e
    }
    ,
    UTUnassignedItemsViewModel.SECTION = {
        ITEMS: 0,
        DUPLICATES: 1
    },
    UTUnassignedItemsViewModel
}(UTItemSectionListViewModel))
  , UTUnassignedItemsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTUnassignedItemsView() {
        var e = t.call(this) || this;
        return e.sections = [],
        e.emptyListView = null,
        e
    }
    return __extends(UTUnassignedItemsView, t),
    UTUnassignedItemsView.prototype.dealloc = function() {
        this.cleanEmptyListView(),
        this.clearSections(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTUnassignedItemsView.prototype.selectListRow = function(t) {
        this.sections.forEach(function(e) {
            return e.selectRowByItemId(t)
        })
    }
    ,
    UTUnassignedItemsView.prototype.getSection = function(e) {
        var t;
        return null !== (t = this.sections[e]) && void 0 !== t ? t : null
    }
    ,
    UTUnassignedItemsView.prototype.clearSections = function() {
        this.sections.forEach(function(e) {
            return e.dealloc()
        }),
        this.sections = []
    }
    ,
    UTUnassignedItemsView.prototype.cleanEmptyListView = function() {
        this.emptyListView && (this.emptyListView.dealloc(),
        this.emptyListView = null)
    }
    ,
    UTUnassignedItemsView.prototype.renderSection = function(e, t, i, o) {
        var n = this.sections[t];
        if (n ? n.clearList() : ((n = new UTSectionedItemListView).init(),
        this.sections[t] = n),
        0 === e.length)
            DOMKit.remove(n.getRootElement());
        else {
            n.addItems(e, i, ListItemPriority.PLAYER_STATS, o),
            n.render();
            var r = this.getRootElement();
            DOMKit.empty(r),
            this.sections.forEach(function(e) {
                return r.appendChild(e.getRootElement())
            })
        }
        return n
    }
    ,
    UTUnassignedItemsView.prototype.renderEmptyView = function(e, t, i) {
        this.clearSections(),
        this.cleanEmptyListView(),
        this.emptyListView = new UTListNoResultsView,
        this.emptyListView.init(),
        this.emptyListView.setText(e),
        i && t && this.emptyListView.setupButton(t, i),
        this.getRootElement().append(this.emptyListView.getRootElement())
    }
    ,
    UTUnassignedItemsView.prototype.removeItemsById = function(t) {
        this.sections.forEach(function(e) {
            return e.removeItemsById(t)
        })
    }
    ,
    UTUnassignedItemsView
}(UTView));
function UTUnassignedItemsViewController() {
    UTViewController.call(this),
    this._itemListViewDelegate = null,
    Object.defineProperty(this, "_itemListViewDelegate", {
        writable: !0,
        enumerable: !1
    }),
    this._viewmodel = null,
    Object.defineProperty(this, "_viewmodel", {
        writable: !0,
        enumerable: !1
    }),
    this._stadiumViewmodel = null,
    Object.defineProperty(this, "_stadiumViewmodel", {
        writable: !0,
        enumerable: !1
    }),
    this.onDataChange = new EAObservable,
    Object.defineProperty(this, "onDataChange", {
        writable: !1,
        enumerable: !0
    })
}
function UTUnassignedItemsSplitViewController() {
    UTSplitViewController.call(this),
    this._listViewController = new UTUnassignedItemsViewController,
    this._itemDetailsController = null
}
UTUnassignedItemsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("section");
        e.classList.add("ut-unassigned-view"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTUnassignedItemsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTUnassignedItemsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
JSUtils.inherits(UTUnassignedItemsViewController, UTViewController),
UTUnassignedItemsViewController.prototype.init = function init() {
    this.initialized || (this.superclass(),
    this._viewmodel || this._updateViewModel([]))
}
,
UTUnassignedItemsViewController.prototype.initWithItems = function initWithItems(e) {
    this.initialized || (this._updateViewModel(e),
    this.init())
}
,
UTUnassignedItemsViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._itemListViewDelegate && (this._itemListViewDelegate = null),
    this._viewmodel && (this._viewmodel = null),
    this._stadiumViewmodel && (this._stadiumViewmodel = null),
    this.onDataChange.dealloc(),
    this.onDataChange = null
}
,
UTUnassignedItemsViewController.prototype.setStadiumViewModel = function setStadiumViewModel(e) {
    this._stadiumViewmodel = e
}
,
UTUnassignedItemsViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTUnassignedItemsView
}
,
UTUnassignedItemsViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "Unassigned Items - List View"
}
,
UTUnassignedItemsViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.assigncards")
}
,
UTUnassignedItemsViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this._getUnassignedItems(!1),
    services.User.requestCurrencies(),
    TelemetryManager.trackPage(TelemetryManager.Sections.MISC, "Unassigned List"),
    getDefaultDispatcher().addObserver(AppNotification.UNASSIGNED_ITEM_ADDED, this, this._nItemAdded)
}
,
UTUnassignedItemsViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass(),
    getDefaultDispatcher().removeObserver(AppNotification.UNASSIGNED_ITEM_ADDED, this)
}
,
UTUnassignedItemsViewController.prototype.getViewModel = function getViewModel() {
    return this._viewmodel
}
,
UTUnassignedItemsViewController.prototype._updateViewModel = function _updateViewModel(e) {
    this._viewmodel ? (this._viewmodel.dataUpdated.clearObservers(),
    this._viewmodel.resetCollection([]),
    this._viewmodel.addArray(e)) : this._viewmodel = new UTUnassignedItemsViewModel(e)
}
,
UTUnassignedItemsViewController.prototype.setItemListViewDelegate = function setItemListViewDelegate(e) {
    this._itemListViewDelegate = e
}
,
UTUnassignedItemsViewController.prototype.removeItemsById = function removeItemsById() {
    this._renderView(),
    0 === this._viewmodel.length && this.onDataChange.notify()
}
,
UTUnassignedItemsViewController.prototype._updateItemSectionOptions = function _updateItemSectionOptions() {
    var o = this._viewmodel.getStorableSection()
      , n = this._viewmodel.getDiscardableInfo()
      , e = this.getView().getSection(UTUnassignedItemsViewModel.SECTION.ITEMS);
    if (e)
        if (e.setHeader(services.Localization.localize("dock.label.items"), services.Localization.localize("infopanel.label.storeAllInClub"), this._viewmodel.hasMovableItems() ? this._storeInClub.bind(this) : null),
        0 < n.items.count) {
            var t = 1 === n.items.count ? services.Localization.localize("unassigned.sectionFooter.quickSellItem") : services.Localization.localize("unassigned.sectionFooter.quickSellItems", [n.items.count]);
            e.setFooter(t, services.Localization.localizeNumber(n.items.value), !0, function(e, t, i) {
                this._quickSell(o, n.items.value)
            }
            .bind(this))
        } else
            e.removeFooter()
}
,
UTUnassignedItemsViewController.prototype._updateDuplicateSectionOptions = function _updateDuplicateSectionOptions() {
    var e = this.getView().getSection(UTUnassignedItemsViewModel.SECTION.DUPLICATES);
    if (e) {
        var t = this._viewmodel.getDuplicateSection()
          , o = this._viewmodel.getDiscardableInfo()
          , i = repositories.Item.numItemsInCache(ItemPile.TRANSFER) + t.length <= repositories.Item.getPileSize(ItemPile.TRANSFER);
        if (e.setHeader(services.Localization.localize("dock.label.duplicates"), services.Localization.localize("infopanel.label.sendTradePile"), this._viewmodel.hasTradeableDuplicates() && i ? this._sendToTransferList.bind(this) : null),
        0 < o.duplicates.count) {
            var n = 1 === o.duplicates.count ? services.Localization.localize("unassigned.sectionFooter.quickSellDuplicate") : services.Localization.localize("unassigned.sectionFooter.quickSellDuplicates", [o.duplicates.count]);
            e.setFooter(n, services.Localization.localizeNumber(o.duplicates.value), !0, function(e, t, i) {
                this._quickSell(o.duplicates.entities, o.duplicates.value)
            }
            .bind(this))
        } else
            e.removeFooter()
    }
}
,
UTUnassignedItemsViewController.prototype._renderView = function _renderView() {
    var e = this.getView();
    if (0 === this._viewmodel.length)
        e.renderEmptyView(services.Localization.localize(hasConnection() ? "newitems.emptymessage" : "newitems.unavailable"));
    else {
        e.clearSections();
        var t = this._viewmodel.getStorableSection()
          , i = this._viewmodel.getDuplicateSection()
          , o = null
          , n = t.concat(i).map(function(e) {
            return e.subtype
        });
        this._stadiumViewmodel && 0 < n.length && (o = this._stadiumViewmodel.getStadiumProgression(n)),
        0 < t.length && (e.renderSection(t, UTUnassignedItemsViewModel.SECTION.ITEMS, this._eListRowSelected.bind(this), o),
        this._updateItemSectionOptions()),
        0 < i.length && (e.renderSection(i, UTUnassignedItemsViewModel.SECTION.DUPLICATES, this._eListRowSelected.bind(this), o),
        this._updateDuplicateSectionOptions()),
        isPhone() || e.selectListRow(this._viewmodel.current().id)
    }
}
,
UTUnassignedItemsViewController.prototype._storeInClub = function _storeInClub() {
    TelemetryManager.trackEvent(TelemetryManager.Sections.MISC, TelemetryManager.Categories.BUTTON_PRESS, "Unassigned - Store All In Club"),
    this.getView().setInteractionState(!1);
    var e = this._viewmodel.getMovableItems();
    0 === e.length ? (utils.PopupManager.showAlert(utils.PopupManager.Alerts.ALL_NEED_TO_BE_CLAIMED),
    this.getView().setInteractionState(!0)) : services.Item.move(e, ItemPile.CLUB).observe(this, this._onMoveToClubComplete)
}
,
UTUnassignedItemsViewController.prototype._sendToTransferList = function _sendToTransferList() {
    TelemetryManager.trackEvent(TelemetryManager.Sections.MISC, TelemetryManager.Categories.BUTTON_PRESS, "Unassigned - Send Duplicates To Transfer List"),
    this.getView().setInteractionState(!1);
    var e = this._viewmodel.getTradeableDuplicates();
    if (0 === e.length)
        utils.PopupManager.showAlert(utils.PopupManager.Alerts.ALL_NEED_TO_BE_CLAIMED),
        this.getView().setInteractionState(!0);
    else {
        var t = 1 < e.length ? utils.PopupManager.Confirmations.SEND_ALL_TO_TRANSFER_LIST : utils.PopupManager.Confirmations.SEND_TO_TRANSFER_LIST;
        utils.PopupManager.showConfirmation(t, null, function _sendToTransferListConfirmed() {
            services.Item.move(e, ItemPile.TRANSFER).observe(this, this._onMoveToTransferListComplete)
        }
        .bind(this), this._confirmationCancelled.bind(this))
    }
}
,
UTUnassignedItemsViewController.prototype._getUnassignedItems = function _getUnassignedItems(i) {
    i = !JSUtils.isBoolean(i) || i,
    this._viewmodel.requestUnassignedItems().observe(this, function _onRequestUnassignedItemsComplete(e, t) {
        e.unobserve(this),
        this.getView().setInteractionState(!0),
        t.success ? (this._renderView(),
        i && this.onDataChange.notify()) : NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : services.Notification.queue([services.Localization.localize("newitems.loaderror"), UINotificationType.NEGATIVE])
    })
}
,
UTUnassignedItemsViewController.prototype._onMoveToClubComplete = function _onMoveToClubComplete(e, t) {
    if (e.unobserve(this),
    t.success) {
        var i = t.data.itemIds.length
          , o = 1 < i ? services.Localization.localize("notification.item.allToClub", [i]) : services.Localization.localize("notification.item.oneToClub");
        this._getUnassignedItems(),
        services.Notification.queue([o, UINotificationType.NEUTRAL])
    } else
        services.Notification.queue([services.Localization.localize("notification.item.moveFailed"), UINotificationType.NEGATIVE]),
        NetworkErrorManager.handleStatus(t.status)
}
,
UTUnassignedItemsViewController.prototype._onMoveToTransferListComplete = function _onMoveToTransferListComplete(e, t) {
    if (e.unobserve(this),
    t.success) {
        var i = t.data.itemIds.length
          , o = 1 < i ? services.Localization.localize("notification.item.allToTradePile", [i]) : services.Localization.localize("notification.item.oneToTradePile");
        this._getUnassignedItems(),
        services.Notification.queue([o, UINotificationType.NEUTRAL])
    } else
        services.Notification.queue([services.Localization.localize("notification.item.moveFailed"), UINotificationType.NEGATIVE]),
        NetworkErrorManager.handleStatus(t.status)
}
,
UTUnassignedItemsViewController.prototype._quickSell = function _quickSell(e, t) {
    var o = JSUtils.isValid(e[0]) && e[0].isDuplicate()
      , i = "Unassigned - Quick Sell " + (o ? "Duplicates" : "Items");
    function _quickSellComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = "notification." + (o ? "duplicate" : "item") + (1 < t.data.itemIds.length ? ".allQuickSold" : ".sold");
            services.Notification.queue([services.Localization.localize(i), UINotificationType.POSITIVE]),
            this._getUnassignedItems()
        } else
            services.Notification.queue([services.Localization.localize("notification.item.quickSellFailed"), UINotificationType.NEGATIVE])
    }
    TelemetryManager.trackEvent(TelemetryManager.Sections.MISC, TelemetryManager.Categories.BUTTON_PRESS, i),
    this.getView().setInteractionState(!1),
    utils.PopupManager.showConfirmation(1 < e.length ? utils.PopupManager.Confirmations.CONFIRM_DISCARD_ALL : utils.PopupManager.Confirmations.CONFIRM_DISCARD, [services.Localization.localizeNumber(t)], function _quickSellConfirmed() {
        services.Item.discard(e).observe(this, _quickSellComplete)
    }
    .bind(this), this._confirmationCancelled.bind(this))
}
,
UTUnassignedItemsViewController.prototype._confirmationCancelled = function _confirmationCancelled() {
    this.getView().setInteractionState(!0)
}
,
UTUnassignedItemsViewController.prototype._eListRowSelected = function _eListRowSelected(t) {
    var e = this._viewmodel.indexOf(function(e) {
        return e.id === t.id
    })
      , i = e !== this._viewmodel.getIndex();
    if (i && this._viewmodel.setIndex(e),
    JSUtils.isValid(this._itemListViewDelegate))
        i && this._itemListViewDelegate.selectListRow(this, e, t);
    else {
        var o = this.getNavigationController();
        if (o) {
            var n = new controllers.items.ItemDetails;
            n.initWithIterator(this._viewmodel),
            o.pushViewController(n, !0)
        }
    }
}
,
UTUnassignedItemsViewController.prototype._nItemAdded = function _nItemAdded(e, t, i) {
    var o = 0 < this._viewmodel.length ? this._viewmodel.current().id : -1;
    this._viewmodel.addArray(i.items),
    -1 < o && this._viewmodel.setIndex(this._viewmodel.indexOf(function(e) {
        return e.id === o
    })),
    this._renderView(),
    this.onDataChange.notify()
}
,
services.URL.registerDeepLinkID(DeepLinkSection.UNASSIGNED, function(e) {
    var t, o;
    (t = getAppMain().getRootViewController().getPresentedViewController()) && t.isSubClass(UTTabBarController) && (o = t.getCurrentViewController()) && o.isSubClass(UTNavigationController) && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Item.requestUnassignedItems().observe(this, function _onRequestUnassignedComplete(e, t) {
        e.unobserve(this);
        var i = isPhone() ? new UTUnassignedItemsViewController : new UTUnassignedItemsSplitViewController;
        t.success ? i.initWithItems(t.response.items) : i.init(),
        o.pushViewController(i, !0),
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }))
}),
JSUtils.inherits(UTUnassignedItemsSplitViewController, UTSplitViewController),
UTUnassignedItemsSplitViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass(),
        this._listViewController.init(),
        this._listViewController.onDataChange.observe(this, this._unassignedListChanged),
        this.addChildViewController(this._listViewController);
        var e = getDefaultDispatcher();
        e.addObserver(AppNotification.ITEM_ACTIVATE, this, this._nItemActivated),
        e.addObserver(AppNotification.ITEM_DISCARD, this, this._nItemDiscarded),
        e.addObserver(AppNotification.ITEM_LIST, this, this._nItemListed),
        e.addObserver(AppNotification.ITEM_MOVE, this, this._nItemMoved),
        e.addObserver(AppNotification.ITEM_REDEEM, this, this._nItemRedeemed)
    }
}
,
UTUnassignedItemsSplitViewController.prototype.initWithItems = function initWithItems(e) {
    this.initialized || (this._listViewController.initWithItems(e),
    this._listViewController.setItemListViewDelegate(this),
    0 < e.length && (this._itemDetailController = new controllers.navigation.ItemDetails,
    this._itemDetailController.initWithIterator(this._listViewController.getViewModel()),
    this._itemDetailController.enableSwiping(!1),
    this.addChildViewController(this._itemDetailController)),
    this.init())
}
,
UTUnassignedItemsSplitViewController.prototype.dealloc = function dealloc() {
    this._listViewController.dealloc(),
    this._listViewController = null,
    JSUtils.isValid(this._itemDetailController) && (this._itemDetailController.dealloc(),
    this._itemDetailController = null);
    var e = getDefaultDispatcher();
    e.removeObserver(AppNotification.ITEM_ACTIVATE, this),
    e.removeObserver(AppNotification.ITEM_DISCARD, this),
    e.removeObserver(AppNotification.ITEM_LIST, this),
    e.removeObserver(AppNotification.ITEM_MOVE, this),
    e.removeObserver(AppNotification.ITEM_REDEEM, this),
    this.superclass()
}
,
UTUnassignedItemsSplitViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.assigncards")
}
,
UTUnassignedItemsSplitViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this._setLeftController(this._listViewController),
    JSUtils.isValid(this._itemDetailController) && (this._setRightController(this._itemDetailController),
    this._itemDetailController.setNavigationStyle(UTNavigationBarView.Style.SECONDARY))
}
,
UTUnassignedItemsSplitViewController.prototype.setStadiumViewModel = function setStadiumViewModel(e) {
    this._listViewController.setStadiumViewModel(e),
    this._itemDetailController.setStadiumViewModel(e)
}
,
UTUnassignedItemsSplitViewController.prototype.selectListRow = function selectListRow(e, t, i) {
    e === this._listViewController && (this._listViewController.getView().selectListRow(i.id),
    this._itemDetailController.setIndex(t))
}
,
UTUnassignedItemsSplitViewController.prototype._unassignedListChanged = function _unassignedListChanged() {
    var e = this._listViewController.getViewModel();
    0 === e.length ? this._removeRightController() : (JSUtils.isValid(this._rightController) || this._setRightController(this._itemDetailController),
    this._itemDetailController.setIndex(e.getIndex()))
}
,
UTUnassignedItemsSplitViewController.prototype._nItemActivated = function _nItemActivated(e, t, i) {
    this._listViewController.removeItemsById(i.itemIds || [])
}
,
UTUnassignedItemsSplitViewController.prototype._nItemDiscarded = function _nItemDiscarded(e, t, i) {
    this._listViewController.removeItemsById(i.itemIds || [])
}
,
UTUnassignedItemsSplitViewController.prototype._nItemListed = function _nItemListed(e, t, i) {
    this._listViewController.removeItemsById(i.itemIds || [])
}
,
UTUnassignedItemsSplitViewController.prototype._nItemMoved = function _nItemMoved(e, t, i) {
    this._listViewController.removeItemsById(i.itemIds || [])
}
,
UTUnassignedItemsSplitViewController.prototype._nItemRedeemed = function _nItemRedeemed(e, t, i) {
    this._listViewController.removeItemsById(i.itemIds || [])
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTLeaderboardsViewModel = function(t) {
    function UTLeaderboardsViewModel() {
        var e = t.call(this) || this;
        return e.permutation = new UTLeaderboardPermutationDTO,
        e.requests = [],
        e
    }
    return __extends(UTLeaderboardsViewModel, t),
    UTLeaderboardsViewModel.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.cancelRequests()
    }
    ,
    UTLeaderboardsViewModel.prototype.setCategory = function(e) {
        this.permutation.category = e
    }
    ,
    UTLeaderboardsViewModel.prototype.setPeriod = function(e) {
        this.permutation.period = e
    }
    ,
    UTLeaderboardsViewModel.prototype.setView = function(e) {
        this.permutation.view = e
    }
    ,
    UTLeaderboardsViewModel.prototype.setPlatform = function(e) {
        this.permutation.platform = e
    }
    ,
    UTLeaderboardsViewModel.prototype.setStateByPermutation = function(e) {
        this.setCategory(e.category),
        this.setPeriod(e.period),
        this.setView(e.view),
        this.setPlatform(e.platform)
    }
    ,
    UTLeaderboardsViewModel.prototype.cancelRequests = function() {
        0 < this.requests.length && (this.requests.forEach(function(e) {
            e.clearObservers(),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }),
        this.requests = [])
    }
    ,
    UTLeaderboardsViewModel.prototype.requestLeaderboardOptions = function() {
        var e = services.Leaderboards.requestOptions();
        return gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.requests.push(e.observe(this, this.completeRequest)),
        e
    }
    ,
    UTLeaderboardsViewModel.prototype.requestLeaderboardData = function() {
        var e = services.Leaderboards.requestLeaderboardByPermutation(this.permutation);
        return gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.requests.push(e.observe(this, this.completeRequest)),
        e
    }
    ,
    UTLeaderboardsViewModel.prototype.completeRequest = function(e, t) {
        e.unobserve(this),
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING);
        var i = this.requests.indexOf(e);
        0 <= i && this.requests.splice(i, 1)
    }
    ,
    UTLeaderboardsViewModel
}(EAObject)
  , UTFloatingImageButtonControl = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTFloatingImageButtonControl() {
        return e.call(this) || this
    }
    return __extends(UTFloatingImageButtonControl, e),
    UTFloatingImageButtonControl
}(UTImageButtonControl));
UTFloatingImageButtonControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("button");
        e.classList.add("ut-image-button-control"),
        e.classList.add("ut-floating-image-button"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTFloatingImageButtonControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTFloatingImageButtonControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTLeaderboardsEntryView = function(e) {
    function UTLeaderboardsEntryView() {
        return e.call(this) || this
    }
    return __extends(UTLeaderboardsEntryView, e),
    UTLeaderboardsEntryView.prototype.setRank = function(e) {
        this.__rank.textContent = 0 < e ? e.toString() : BLANK_STR,
        DOMKit.toggleClass(this.__rank, "first", 1 === e),
        DOMKit.toggleClass(this.__rank, "second", 2 === e),
        DOMKit.toggleClass(this.__rank, "third", 3 === e)
    }
    ,
    UTLeaderboardsEntryView.prototype.setBadge = function(e) {
        var i = this
          , t = AssetLocationUtils.getBadgeImageUri(e, enums.UIThemeVariation.DARK);
        this._badge.setResource(t, !0).observe(this, function(e, t) {
            e.unobserve(i),
            t || i._badge.setResource(AssetLocationUtils.getBadgeImageUri(UTItemEntity.DEFAULT_ASSET_ID, enums.UIThemeVariation.DARK))
        })
    }
    ,
    UTLeaderboardsEntryView.prototype.setGamerTag = function(e) {
        this.__gametag.textContent = e.toString()
    }
    ,
    UTLeaderboardsEntryView.prototype.setScore = function(e, t) {
        var i = services.Localization;
        this.__score.textContent = i.localizeNumber(Number(e)),
        this.__mobileScore.textContent = i.localizeNumber(Number(e)),
        DOMKit.removeClass(this.__score, UTLeaderboardsEntryView.ScoreType.COINS),
        DOMKit.removeClass(this.__mobileScore, UTLeaderboardsEntryView.ScoreType.COINS),
        JSUtils.isString(t) && t !== UTLeaderboardsEntryView.ScoreType.NONE && (DOMKit.addClass(this.__score, t),
        DOMKit.addClass(this.__mobileScore, t))
    }
    ,
    UTLeaderboardsEntryView.prototype.setPlatform = function(e, t, i) {
        var o, n;
        DOMKit.removeClass(this.__platform, JSUtils.getObjectValues(UTLeaderboardsEntryView.PlatformType).join(" "));
        var r = t ? UTLeaderboardsEntryView.PlatformType.GENERICPC : UTLeaderboardsEntryView.PlatformType.EA
          , s = ((o = {})[GamePlatform.PC] = r,
        o[GamePlatform.STADIA] = UTLeaderboardsEntryView.PlatformType.GENERICCLOUDGAMING,
        o[GamePlatform.PSN] = UTLeaderboardsEntryView.PlatformType.GENERICCONSOLE,
        o[GamePlatform.XBL] = UTLeaderboardsEntryView.PlatformType.GENERICCONSOLE,
        o[GamePlatform.SWI] = UTLeaderboardsEntryView.PlatformType.GENERICCONSOLE,
        o)
          , a = ((n = {})[GamePlatform.PC] = r,
        n[GamePlatform.STADIA] = UTLeaderboardsEntryView.PlatformType.STADIA,
        n[GamePlatform.PSN] = UTLeaderboardsEntryView.PlatformType.PLAYSTATION,
        n[GamePlatform.XBL] = UTLeaderboardsEntryView.PlatformType.XBOX,
        n[GamePlatform.SWI] = UTLeaderboardsEntryView.PlatformType.GENERICCONSOLE,
        n)
          , l = services.Authentication.getUtasSession()
          , c = l.user ? l.user.getSelectedPersona() : null
          , d = ((null == c ? void 0 : c.platform) == e ? a : s)[e];
        i && null != d && DOMKit.addClass(this.__platform, d)
    }
    ,
    UTLeaderboardsEntryView.PlatformType = Object.freeze({
        NONE: "",
        EA: "ea",
        GENERICCLOUDGAMING: "genericCloudGaming",
        GENERICCONSOLE: "genericConsole",
        GENERICPC: "genericPC",
        PLAYSTATION: "playstation",
        STADIA: "stadia",
        STEAM: "steam",
        XBOX: "xbox"
    }),
    UTLeaderboardsEntryView.ScoreType = Object.freeze({
        NONE: "",
        COINS: "currency-coins"
    }),
    UTLeaderboardsEntryView
}(UTView);
UTLeaderboardsEntryView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-leaderboards-entry"),
        this.__rank = document.createElement("div"),
        this.__rank.classList.add("ut-leaderboards-entry--rank"),
        e.appendChild(this.__rank),
        this._badge = new UTImageView,
        this._badge.getRootElement().classList.add("ut-leaderboards-entry--badge"),
        e.appendChild(this._badge.getRootElement());
        var t = document.createElement("div");
        t.classList.add("ut-leaderboards-entry--gametag"),
        this.__gametag = document.createElement("span"),
        this.__gametag.classList.add("ut-leaderboards-entry--tag"),
        t.appendChild(this.__gametag),
        this.__mobileScore = document.createElement("span"),
        this.__mobileScore.classList.add("ut-leaderboards-entry--mobile-score"),
        t.appendChild(this.__mobileScore),
        e.appendChild(t),
        this.__platform = document.createElement("div"),
        this.__platform.classList.add("ut-leaderboards-entry--platform"),
        e.appendChild(this.__platform),
        this.__score = document.createElement("div"),
        this.__score.classList.add("ut-leaderboards-entry--score"),
        e.appendChild(this.__score),
        this.__root = e,
        this._generated = !0
    }
}
,
UTLeaderboardsEntryView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__rank = null,
    this._badge.destroy(),
    this.__gametag = null,
    this.__mobileScore = null,
    this.__platform = null,
    this.__score = null
}
,
UTLeaderboardsEntryView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTLeaderboardsHubView = function(t) {
    function UTLeaderboardsHubView() {
        var e = t.call(this) || this;
        return e.pinnedEntryView = null,
        e.entryViews = [],
        e._showGlobalPlatforms = !1,
        e
    }
    return __extends(UTLeaderboardsHubView, t),
    UTLeaderboardsHubView.prototype.init = function() {
        t.prototype.init.call(this),
        this._filterBtn.init(),
        this._floatingFilterBtn.init();
        var e = services.Localization;
        this.__rankTitle.textContent = e.localize("LOC_LB_RANK"),
        this.__platformTitle.textContent = e.localize("leaderboard.filters.platform"),
        this.showGlobalPlatforms(!1)
    }
    ,
    UTLeaderboardsHubView.prototype.dealloc = function() {
        this.clearLeaderboardEntries(),
        this.pinnedEntryView && (this.pinnedEntryView.dealloc(),
        this.pinnedEntryView = null),
        t.prototype.dealloc.call(this)
    }
    ,
    UTLeaderboardsHubView.prototype.setInteractionState = function(e) {
        t.prototype.setInteractionState.call(this, e),
        this._tabMenu.setInteractionState(e)
    }
    ,
    UTLeaderboardsHubView.prototype.getTabMenu = function() {
        return this._tabMenu
    }
    ,
    UTLeaderboardsHubView.prototype.getFilterButton = function() {
        return this._filterBtn
    }
    ,
    UTLeaderboardsHubView.prototype.getFloatingFilterButton = function() {
        return this._floatingFilterBtn
    }
    ,
    UTLeaderboardsHubView.prototype.clearLeaderboardEntries = function() {
        this.entryViews && (this.entryViews.forEach(function(e) {
            return e.dealloc()
        }),
        this.entryViews = [])
    }
    ,
    UTLeaderboardsHubView.prototype.setCategories = function(e) {
        var t = this;
        this._tabMenu.clearTabs(),
        e.forEach(function(e) {
            t._tabMenu.addTab(e.id, services.Localization.localize(e.display))
        }, this),
        this._tabMenu.layoutSubviews(),
        this.__contentContainer.style.height = "calc(100% - " + this._tabMenu.getRootElement().offsetHeight + "px)"
    }
    ,
    UTLeaderboardsHubView.prototype.setActiveCategory = function(e) {
        this._tabMenu.setActiveTab(e)
    }
    ,
    UTLeaderboardsHubView.prototype.setUserEntry = function(e) {
        if (e) {
            this.pinnedEntryView || (this.pinnedEntryView = new UTLeaderboardsEntryView,
            this.pinnedEntryView.init(),
            this.addSubview(this.pinnedEntryView, this.__pinnedEntry),
            this.layoutSubviews());
            var t = "builder" !== e.category ? UTLeaderboardsEntryView.ScoreType.COINS : UTLeaderboardsEntryView.ScoreType.NONE
              , i = "friends" !== e.view;
            this.pinnedEntryView.setRank(e.rank),
            this.pinnedEntryView.setBadge(e.badge),
            this.pinnedEntryView.setGamerTag(e.persona),
            this.pinnedEntryView.setScore(e.score, t),
            this.pinnedEntryView.setPlatform(e.platform, i, this._showGlobalPlatforms)
        } else
            this.pinnedEntryView && this.pinnedEntryView.removeFromSuperview()
    }
    ,
    UTLeaderboardsHubView.prototype.setLeaderboardEntries = function(e) {
        var n = this;
        this.clearLeaderboardEntries(),
        e.forEach(function(e) {
            var t = new UTLeaderboardsEntryView
              , i = "builder" !== e.category ? UTLeaderboardsEntryView.ScoreType.COINS : UTLeaderboardsEntryView.ScoreType.NONE
              , o = "friends" !== e.view;
            t.init(),
            t.setRank(e.rank),
            t.setBadge(e.teamId),
            t.setGamerTag(e.persona),
            t.setScore(e.score, i),
            t.setPlatform(e.platform, o, n._showGlobalPlatforms),
            n.addSubview(t, n.__leaderboardList),
            n.entryViews.push(t)
        }, this),
        this.layoutSubviews(),
        this.__leaderboardList.scrollTop = 0
    }
    ,
    UTLeaderboardsHubView.prototype.setCategoryIcon = function(e) {
        switch (DOMKit.removeClass(this.__leaderboardListHeader, JSUtils.getObjectValues(UTLeaderboardsHubView.Style).join(" ")),
        e) {
        case UTLeaderboardsHubView.CategoryIcon.TRADER:
            DOMKit.addClass(this.__leaderboardListHeader, UTLeaderboardsHubView.Style.TRADER);
            break;
        case UTLeaderboardsHubView.CategoryIcon.COLLECTOR:
            DOMKit.addClass(this.__leaderboardListHeader, UTLeaderboardsHubView.Style.COLLECTOR);
            break;
        case UTLeaderboardsHubView.CategoryIcon.COMPETITOR:
            DOMKit.addClass(this.__leaderboardListHeader, UTLeaderboardsHubView.Style.COMPETITOR);
            break;
        case UTLeaderboardsHubView.CategoryIcon.BUILDER:
        default:
            DOMKit.addClass(this.__leaderboardListHeader, UTLeaderboardsHubView.Style.BUILDER)
        }
    }
    ,
    UTLeaderboardsHubView.prototype.setCategoryTitle = function(e) {
        this.__categoryTitle.textContent = e
    }
    ,
    UTLeaderboardsHubView.prototype.setGameTagTitle = function(e) {
        this.__gametagTitle.textContent = e
    }
    ,
    UTLeaderboardsHubView.prototype.setScoreTitle = function(e) {
        this.__scoreTitle.textContent = e
    }
    ,
    UTLeaderboardsHubView.prototype.showGlobalPlatforms = function(e) {
        this._showGlobalPlatforms = e,
        this.__platformTitle.style.display = e ? "block" : "none"
    }
    ,
    UTLeaderboardsHubView.CategoryIcon = Object.freeze({
        BUILDER: 0,
        COLLECTOR: 1,
        COMPETITOR: 2,
        TRADER: 3
    }),
    UTLeaderboardsHubView.Style = Object.freeze({
        BUILDER: "ut-leaderboards-hub--builder",
        COLLECTOR: "ut-leaderboards-hub--collector",
        COMPETITOR: "ut-leaderboards-hub--competitor",
        TRADER: "ut-leaderboards-hub--trader"
    }),
    UTLeaderboardsHubView
}(UTView);
UTLeaderboardsHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-leaderboards-hub"),
        this._tabMenu = new EAFilterBarView,
        e.appendChild(this._tabMenu.getRootElement()),
        this.__contentContainer = document.createElement("div"),
        this.__contentContainer.classList.add("sm-ut-content-container"),
        this.__contentContainer.classList.add("ut-content-container"),
        this.__listContainer = document.createElement("div"),
        this.__listContainer.classList.add("ut-pinned-list-container"),
        this.__listContainer.classList.add("ut-content"),
        this.__leaderboardListHeader = document.createElement("header"),
        this.__leaderboardListHeader.classList.add("ut-leaderboards-hub--header"),
        this.__categoryTitle = document.createElement("h1"),
        this.__categoryTitle.classList.add("ut-leaderboards-hub--category"),
        this.__leaderboardListHeader.appendChild(this.__categoryTitle),
        this._filterBtn = new UTImageButtonControl,
        this._filterBtn.getRootElement().classList.add("filter-btn"),
        this.__leaderboardListHeader.appendChild(this._filterBtn.getRootElement()),
        this.__listContainer.appendChild(this.__leaderboardListHeader);
        var t = document.createElement("div");
        t.classList.add("ut-leaderboards-hub--titles"),
        this.__rankTitle = document.createElement("span"),
        this.__rankTitle.classList.add("ut-leaderboards-hub--title-rank"),
        t.appendChild(this.__rankTitle),
        this.__gametagTitle = document.createElement("span"),
        this.__gametagTitle.classList.add("ut-leaderboards-hub--title-gametag"),
        t.appendChild(this.__gametagTitle),
        this.__platformTitle = document.createElement("span"),
        this.__platformTitle.classList.add("ut-leaderboards-hub--title-platform"),
        t.appendChild(this.__platformTitle),
        this.__scoreTitle = document.createElement("span"),
        this.__scoreTitle.classList.add("ut-leaderboards-hub--title-score"),
        t.appendChild(this.__scoreTitle),
        this.__listContainer.appendChild(t),
        this.__pinnedEntry = document.createElement("div"),
        this.__pinnedEntry.classList.add("ut-pinned-item"),
        this.__listContainer.appendChild(this.__pinnedEntry),
        this._floatingFilterBtn = new UTFloatingImageButtonControl,
        this._floatingFilterBtn.getRootElement().classList.add("filter-btn"),
        this._floatingFilterBtn.getRootElement().classList.add("ut-leaderboards-hub--floating-filter-btn"),
        this.__listContainer.appendChild(this._floatingFilterBtn.getRootElement()),
        this.__leaderboardList = document.createElement("div"),
        this.__leaderboardList.classList.add("ut-pinned-list"),
        this.__listContainer.appendChild(this.__leaderboardList),
        this.__contentContainer.appendChild(this.__listContainer),
        e.appendChild(this.__contentContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTLeaderboardsHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._tabMenu.destroy(),
    this.__contentContainer = null,
    this.__listContainer = null,
    this.__leaderboardListHeader = null,
    this.__categoryTitle = null,
    this._filterBtn.destroy(),
    this.__rankTitle = null,
    this.__gametagTitle = null,
    this.__platformTitle = null,
    this.__scoreTitle = null,
    this.__pinnedEntry = null,
    this._floatingFilterBtn.destroy(),
    this.__leaderboardList = null
}
,
UTLeaderboardsHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTLeaderboardFiltersView = function(t) {
    function UTLeaderboardFiltersView() {
        return t.call(this) || this
    }
    return __extends(UTLeaderboardFiltersView, t),
    UTLeaderboardFiltersView.prototype.init = function() {
        t.prototype.init.call(this),
        this._ddViewOptions.init(),
        this._ddPlatformOptions.init(),
        this._ddPeriodOptions.init(),
        this._resetBtn.init(),
        this._submitBtn.init();
        var e = services.Localization;
        this.__viewOptionLabel.textContent = e.localize("LOC_LB_VIEW"),
        this.__periodOptionLabel.textContent = e.localize("LOC_LB_PERIOD"),
        this.__platformOptionLabel.textContent = e.localize("leaderboard.filters.platform"),
        this._resetBtn.addTarget(this, this._resetPressed, EventType.TAP),
        this._submitBtn.addTarget(this, this._submitPressed, EventType.TAP)
    }
    ,
    UTLeaderboardFiltersView.prototype.dealloc = function() {
        this._resetBtn.removeTarget(this, this._resetPressed, EventType.TAP),
        this._submitBtn.removeTarget(this, this._submitPressed, EventType.TAP),
        t.prototype.dealloc.call(this)
    }
    ,
    UTLeaderboardFiltersView.prototype._submitPressed = function(e, t, i) {
        this._triggerActions(UTLeaderboardFiltersView.Event.SUBMIT)
    }
    ,
    UTLeaderboardFiltersView.prototype._resetPressed = function(e, t, i) {
        this._triggerActions(UTLeaderboardFiltersView.Event.RESET)
    }
    ,
    UTLeaderboardFiltersView.prototype.render = function() {
        var e = services.Localization;
        this._submitBtn.setText(e.localize("search.filter.submit")),
        this._resetBtn.setText(e.localize("search.filter.reset"))
    }
    ,
    UTLeaderboardFiltersView.prototype.getSubmitBtn = function() {
        return this._submitBtn
    }
    ,
    UTLeaderboardFiltersView.prototype.getViewOptionDropDown = function() {
        return this._ddViewOptions
    }
    ,
    UTLeaderboardFiltersView.prototype.getPeriodOptionDropDown = function() {
        return this._ddPeriodOptions
    }
    ,
    UTLeaderboardFiltersView.prototype.getPlatformOptionDropDown = function() {
        return this._ddPlatformOptions
    }
    ,
    UTLeaderboardFiltersView.prototype.setPeriodOptions = function(e) {
        var t = e.map(function(e, t) {
            return new UTDataProviderEntryDTO(t,e.id,services.Localization.localize(e.display))
        });
        this._ddPeriodOptions.setOptions(t)
    }
    ,
    UTLeaderboardFiltersView.prototype.setViewOptions = function(e) {
        var t = e.map(function(e, t) {
            return new UTDataProviderEntryDTO(t,e.id,services.Localization.localize(e.display))
        });
        this._ddViewOptions.setOptions(t)
    }
    ,
    UTLeaderboardFiltersView.prototype.setPlatformOptions = function(e) {
        var t = e.map(function(e, t) {
            return new UTDataProviderEntryDTO(t,e.id,services.Localization.localize(e.display))
        });
        this._ddPlatformOptions.setOptions(t)
    }
    ,
    UTLeaderboardFiltersView.prototype.setSelectedView = function(e) {
        this._ddViewOptions.setIndexByValue(e)
    }
    ,
    UTLeaderboardFiltersView.prototype.setSelectedPeriod = function(e) {
        this._ddPeriodOptions.setIndexByValue(e)
    }
    ,
    UTLeaderboardFiltersView.prototype.setSelectedPlatform = function(e) {
        this._ddPlatformOptions.setIndexByValue(e)
    }
    ,
    UTLeaderboardFiltersView.Event = {
        SUBMIT: "UTLeaderboardFiltersView.SUBMIT",
        RESET: "UTLeaderboardFiltersView.RESET"
    },
    UTLeaderboardFiltersView
}(UTTargetActionView);
UTLeaderboardFiltersView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-leaderboards-filter-view");
        var t = document.createElement("div");
        t.classList.add("ut-leaderboards-filter--dropdown-container"),
        this.__platformOptionLabel = document.createElement("span"),
        this.__platformOptionLabel.classList.add("ut-leaderboards-filter--dropdown-label"),
        t.appendChild(this.__platformOptionLabel),
        this._ddPlatformOptions = new UTDropDownControl,
        t.appendChild(this._ddPlatformOptions.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-leaderboards-filter--dropdown-container"),
        this.__viewOptionLabel = document.createElement("span"),
        this.__viewOptionLabel.classList.add("ut-leaderboards-filter--dropdown-label"),
        i.appendChild(this.__viewOptionLabel),
        this._ddViewOptions = new UTDropDownControl,
        i.appendChild(this._ddViewOptions.getRootElement()),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-leaderboards-filter--dropdown-container"),
        this.__periodOptionLabel = document.createElement("span"),
        this.__periodOptionLabel.classList.add("ut-leaderboards-filter--dropdown-label"),
        o.appendChild(this.__periodOptionLabel),
        this._ddPeriodOptions = new UTDropDownControl,
        o.appendChild(this._ddPeriodOptions.getRootElement()),
        e.appendChild(o);
        var n = document.createElement("div");
        n.classList.add("ut-leaderboards-button-group"),
        this._resetBtn = new UTStandardButtonControl,
        n.appendChild(this._resetBtn.getRootElement()),
        this._submitBtn = new UTStandardButtonControl,
        this._submitBtn.getRootElement().classList.add("call-to-action"),
        n.appendChild(this._submitBtn.getRootElement()),
        e.appendChild(n),
        this.__root = e,
        this._generated = !0
    }
}
,
UTLeaderboardFiltersView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__platformOptionLabel = null,
    this._ddPlatformOptions.destroy(),
    this.__viewOptionLabel = null,
    this._ddViewOptions.destroy(),
    this.__periodOptionLabel = null,
    this._ddPeriodOptions.destroy(),
    this._resetBtn.destroy(),
    this._submitBtn.destroy()
}
,
UTLeaderboardFiltersView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTLeaderboardFiltersViewController = function(t) {
    function UTLeaderboardFiltersViewController() {
        var e = t.call(this) || this;
        return e.onFilterSubmit = new EAObservable,
        e
    }
    return __extends(UTLeaderboardFiltersViewController, t),
    UTLeaderboardFiltersViewController.prototype.init = function() {
        t.prototype.init.call(this),
        this.onFilterSubmit.init()
    }
    ,
    UTLeaderboardFiltersViewController.prototype.dealloc = function() {
        this.onFilterSubmit.dealloc(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTLeaderboardFiltersViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        TelemetryManager.trackEvent(TelemetryManager.Sections.LEADERBOARDS, TelemetryManager.Categories.FILTER, "Leaderboard filters - Sheet opened");
        var e = this.getView();
        e.setSelectedView(this.lastSelection.view),
        e.setSelectedPeriod(this.lastSelection.period),
        e.setSelectedPlatform(this.lastSelection.platform),
        e.addTarget(this, this.submitTap, UTLeaderboardFiltersView.Event.SUBMIT),
        e.addTarget(this, this.resetTap, UTLeaderboardFiltersView.Event.RESET),
        e.getViewOptionDropDown().addTarget(this, this.eViewOptionChanged, EventType.CHANGE),
        e.getPeriodOptionDropDown().addTarget(this, this.ePeriodOptionChanged, EventType.CHANGE),
        e.getPlatformOptionDropDown().addTarget(this, this.ePlatformOptionChanged, EventType.CHANGE),
        e.render()
    }
    ,
    UTLeaderboardFiltersViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this.submitTap, UTLeaderboardFiltersView.Event.SUBMIT),
        e.removeTarget(this, this.resetTap, UTLeaderboardFiltersView.Event.RESET),
        e.getViewOptionDropDown().removeTarget(this, this.eViewOptionChanged, EventType.CHANGE),
        e.getPeriodOptionDropDown().removeTarget(this, this.ePeriodOptionChanged, EventType.CHANGE),
        e.getPlatformOptionDropDown().removeTarget(this, this.ePlatformOptionChanged, EventType.CHANGE)
    }
    ,
    UTLeaderboardFiltersViewController.prototype.update = function(e, t, i) {
        var o = this.getView();
        o.setViewOptions(t),
        o.setPeriodOptions(i),
        o.setPlatformOptions(factories.DataProvider.getLeaderboardPlatformFilterDP()),
        o.setSelectedView(e.view),
        o.setSelectedPeriod(e.period),
        o.setSelectedPlatform(e.platform),
        this.lastSelection = e
    }
    ,
    UTLeaderboardFiltersViewController.prototype._getViewInstanceFromData = function() {
        return new UTLeaderboardFiltersView
    }
    ,
    UTLeaderboardFiltersViewController.prototype.submitTap = function(e, t) {
        var i = new UTLeaderboardPermutationDTO;
        i.view = e.getViewOptionDropDown().value,
        i.period = e.getPeriodOptionDropDown().value,
        i.platform = e.getPlatformOptionDropDown().value,
        this.onFilterSubmit.notify(i),
        this.lastSelection = i,
        this.onExit.notify()
    }
    ,
    UTLeaderboardFiltersViewController.prototype.resetTap = function(e, t) {
        var i = new UTLeaderboardPermutationDTO;
        e.setSelectedView(i.view),
        e.setSelectedPeriod(i.period),
        e.setSelectedPlatform(i.platform)
    }
    ,
    UTLeaderboardFiltersViewController.prototype.eViewOptionChanged = function(e, t) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.LEADERBOARDS, TelemetryManager.Categories.FILTER, "Leaderboard filters - View Option Changed")
    }
    ,
    UTLeaderboardFiltersViewController.prototype.ePeriodOptionChanged = function(e, t) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.LEADERBOARDS, TelemetryManager.Categories.FILTER, "Leaderboard filters - Period Option Changed")
    }
    ,
    UTLeaderboardFiltersViewController.prototype.ePlatformOptionChanged = function(e, t) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.LEADERBOARDS, TelemetryManager.Categories.FILTER, "Leaderboard filters - Platform Option Changed")
    }
    ,
    UTLeaderboardFiltersViewController
}(BasePopupViewController)
  , UTLeaderboardsHubViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(r) {
    function UTLeaderboardsHubViewController() {
        var e = r.call(this) || this;
        return e.viewModel = null,
        e
    }
    return __extends(UTLeaderboardsHubViewController, r),
    UTLeaderboardsHubViewController.prototype.init = function() {
        var e = this;
        if (!this.initialized) {
            r.prototype.init.call(this),
            this.viewModel = new UTLeaderboardsViewModel,
            this.viewModel.init();
            var t = services.Localization;
            this.filtersModal = new UTLeaderboardFiltersViewController,
            this.filtersModal.init(),
            this.filtersModal.modalDisplayStyle = "sheet",
            this.filtersModal.modalCanDismissFromShield = !0,
            this.filtersModal.modalSheetTitle = t.localize("leaderboard.filters.title"),
            this.filtersModal.onExit.observe(this, function() {
                return e.dismissViewController()
            }),
            this.filtersModal.onFilterSubmit.observe(this, this._onFilterSubmit);
            var i = this.getView();
            i.getTabMenu().addTarget(this, this.eTabSelected, EventType.TAP);
            function cP() {
                return e.presentViewController(e.filtersModal)
            }
            i.getFilterButton().addTarget(this, cP, EventType.TAP),
            i.getFloatingFilterButton().addTarget(this, cP, EventType.TAP)
        }
    }
    ,
    UTLeaderboardsHubViewController.prototype.dealloc = function() {
        this.filtersModal.onFilterSubmit.unobserve(this),
        this.filtersModal.onExit.unobserve(this),
        this.filtersModal.dealloc(),
        r.prototype.dealloc.call(this),
        this.viewModel && (this.viewModel.dealloc(),
        this.viewModel = null)
    }
    ,
    UTLeaderboardsHubViewController.prototype._getViewInstanceFromData = function() {
        return new UTLeaderboardsHubView
    }
    ,
    UTLeaderboardsHubViewController.prototype._getTelemetryId = function() {
        return "Leaderboards - Hub"
    }
    ,
    UTLeaderboardsHubViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.leaderboards")
    }
    ,
    UTLeaderboardsHubViewController.prototype.viewDidAppear = function() {
        var e, t;
        r.prototype.viewDidAppear.call(this),
        null === (e = this.getNavigationController()) || void 0 === e || e.setNavigationVisibility(!0, !0),
        this.retrieveLeaderboardsData();
        var i = null === (t = services.User.getUser()) || void 0 === t ? void 0 : t.getSelectedPersona();
        if (i) {
            var o = services.Localization
              , n = this.getView();
            i.isPC ? n.setGameTagTitle(o.localize("LOC_LB_PERSONA_PC")) : i.isPlaystation ? n.setGameTagTitle(o.localize("LOC_LB_PERSONA_PS3")) : n.setGameTagTitle(o.localize("LOC_LB_PERSONA_360"))
        }
        TelemetryManager.trackPage(TelemetryManager.Sections.LEADERBOARDS, "Leaderboards - Hub")
    }
    ,
    UTLeaderboardsHubViewController.prototype.viewWillDisappear = function() {
        var e;
        r.prototype.viewWillDisappear.call(this),
        null === (e = this.viewModel) || void 0 === e || e.cancelRequests()
    }
    ,
    UTLeaderboardsHubViewController.prototype.getIconTypeFromCategory = function(e) {
        switch (e) {
        case "builder":
            return UTLeaderboardsHubView.CategoryIcon.BUILDER;
        case "trader":
            return UTLeaderboardsHubView.CategoryIcon.TRADER;
        case "collector":
            return UTLeaderboardsHubView.CategoryIcon.COLLECTOR;
        case "competitor":
            return UTLeaderboardsHubView.CategoryIcon.COMPETITOR
        }
        return UTLeaderboardsHubView.CategoryIcon.COMPETITOR
    }
    ,
    UTLeaderboardsHubViewController.prototype.onRequestLeaderboardComplete = function(e, t) {
        e.unobserve(this),
        t.success && JSUtils.isObject(t.response) ? this.getView().setLeaderboardEntries(t.response.entries) : NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : (t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED ? (services.Notification.queue([services.Localization.localize("popup.error.LeaderboardsDown"), UINotificationType.NEGATIVE]),
        services.Configuration.setFeatureEnabled(UTServerSettingsRepository.KEY.LEADERBOARDS_ENABLED, !1)) : services.Notification.queue([services.Localization.localize("popup.body.genericError"), UINotificationType.NEGATIVE]),
        getAppMain().getRootViewController().setGameViewTab(UTGameTabBarController.TabTag.HOME))
    }
    ,
    UTLeaderboardsHubViewController.prototype.retrieveLeaderboardsData = function() {
        var e, l = this.getView();
        null === (e = this.viewModel) || void 0 === e || e.requestLeaderboardOptions().observe(this, function onRequestOptionsComplete(e, t) {
            var i;
            if (e.unobserve(this),
            t.success && t.response && !JSUtils.isString(t.response)) {
                var o = t.response.selection.category
                  , n = []
                  , r = []
                  , s = [];
                t.response.options.forEach(function(e) {
                    "category" === e.groupId ? n.push(e) : "view" === e.groupId ? r.push(e) : "period" === e.groupId && s.push(e)
                }, this);
                var a = services.Localization;
                l.setCategories(n),
                l.setActiveCategory(null === (i = t.response.selection) || void 0 === i ? void 0 : i.category),
                this.filtersModal.update(t.response.selection, r, s),
                l.setCategoryTitle(a.localize("LOC_LB_INSET_" + o.toUpperCase())),
                l.setScoreTitle(a.localize("LOC_LB_SCORE_" + o.toUpperCase())),
                l.setCategoryIcon(this.getIconTypeFromCategory(o)),
                this.viewModel.setStateByPermutation(t.response.selection),
                this.viewModel.requestLeaderboardData().observe(this, this.onRequestLeaderboardComplete)
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : (t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED ? (services.Notification.queue([services.Localization.localize("popup.error.LeaderboardsDown"), UINotificationType.NEGATIVE]),
                services.Configuration.setFeatureEnabled(UTServerSettingsRepository.KEY.LEADERBOARDS_ENABLED, !1)) : services.Notification.queue([services.Localization.localize("popup.body.genericError"), UINotificationType.NEGATIVE]),
                getAppMain().getRootViewController().setGameViewTab(UTGameTabBarController.TabTag.HOME))
        })
    }
    ,
    UTLeaderboardsHubViewController.prototype.eTabSelected = function(e, t, i) {
        var o, n, r = i.id.toString(), s = this.getView();
        null === (o = this.viewModel) || void 0 === o || o.setCategory(r),
        null === (n = this.viewModel) || void 0 === n || n.requestLeaderboardData().observe(this, this.onRequestLeaderboardComplete);
        var a = services.Localization;
        s.setCategoryTitle(a.localize("LOC_LB_INSET_" + r.toUpperCase())),
        s.setScoreTitle(a.localize("LOC_LB_SCORE_" + r.toUpperCase())),
        s.setCategoryIcon(this.getIconTypeFromCategory(r)),
        TelemetryManager.trackEvent(TelemetryManager.Sections.LEADERBOARDS, TelemetryManager.Categories.BUTTON_PRESS, "Leaderboard filters - Category Selected - " + r)
    }
    ,
    UTLeaderboardsHubViewController.prototype._updateViewGlobal = function(e) {
        this.getView().showGlobalPlatforms(e)
    }
    ,
    UTLeaderboardsHubViewController.prototype._onFilterSubmit = function(e, t) {
        var i, o, n, r;
        this._updateViewGlobal("global" == t.platform),
        null === (i = this.viewModel) || void 0 === i || i.setPlatform(t.platform),
        null === (o = this.viewModel) || void 0 === o || o.setPeriod(t.period),
        null === (n = this.viewModel) || void 0 === n || n.setView(t.view),
        null === (r = this.viewModel) || void 0 === r || r.requestLeaderboardData().observe(this, this.onRequestLeaderboardComplete),
        TelemetryManager.trackEvent(TelemetryManager.Sections.LEADERBOARDS, TelemetryManager.Categories.FILTER, "Leaderboard filters - Filters popup submit")
    }
    ,
    UTLeaderboardsHubViewController
}(UTViewController))
  , UTClaimCampaignRewardsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTClaimCampaignRewardsView() {
        return e.call(this) || this
    }
    return __extends(UTClaimCampaignRewardsView, e),
    UTClaimCampaignRewardsView.prototype.init = function() {
        e.prototype.init.call(this),
        this._btnClaim.init(),
        this._btnClaim.addTarget(this, this.handleButtonEvent, EventType.TAP),
        this._crest.init(),
        this._crest.setLocalResource("images/dynamicObjectives/generic.png")
    }
    ,
    UTClaimCampaignRewardsView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTClaimCampaignRewardsView.prototype.setDescription = function(e) {
        this.__desc.textContent = e
    }
    ,
    UTClaimCampaignRewardsView.prototype.setButtonLabel = function(e) {
        this._btnClaim.setText(e)
    }
    ,
    UTClaimCampaignRewardsView.prototype.setButtonInteractionState = function(e) {
        this._btnClaim.setInteractionState(e)
    }
    ,
    UTClaimCampaignRewardsView.prototype.handleButtonEvent = function(e, t, i) {
        t === EventType.TAP && this._triggerActions(UTClaimCampaignRewardsView.Event.CLAIM_REWARD)
    }
    ,
    UTClaimCampaignRewardsView.Event = {
        CLAIM_REWARD: "UTClaimCampaignRewardsView.CLAIM_REWARD"
    },
    UTClaimCampaignRewardsView
}(UTTargetActionView));
UTClaimCampaignRewardsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-claim-campaign-rewards-view");
        var t = document.createElement("div");
        t.classList.add("ut-claim-campaign-rewards-view--container"),
        this._crest = new UTImageView,
        this._crest.getRootElement().classList.add("ut-claim-campaign-rewards-view--crest"),
        t.appendChild(this._crest.getRootElement()),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-claim-campaign-rewards-view--title"),
        t.appendChild(this.__title),
        this.__desc = document.createElement("p"),
        this.__desc.classList.add("ut-claim-campaign-rewards-view--description"),
        t.appendChild(this.__desc),
        this._btnClaim = new UTStandardButtonControl,
        this._btnClaim.getRootElement().classList.add("call-to-action"),
        t.appendChild(this._btnClaim.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTClaimCampaignRewardsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._crest.destroy(),
    this.__title = null,
    this.__desc = null,
    this._btnClaim.destroy()
}
,
UTClaimCampaignRewardsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTClaimCampaignRewardsViewController = function(r) {
    function UTClaimCampaignRewardsViewController(e) {
        var t = r.call(this) || this;
        return t.objectivesViewModel = e.objectivesViewModel,
        t
    }
    return __extends(UTClaimCampaignRewardsViewController, r),
    UTClaimCampaignRewardsViewController.prototype._getTelemetryId = function() {
        return "Objectives - Claim Campaign Rewards"
    }
    ,
    UTClaimCampaignRewardsViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.objectives")
    }
    ,
    UTClaimCampaignRewardsViewController.prototype._getViewInstanceFromData = function() {
        return new UTClaimCampaignRewardsView
    }
    ,
    UTClaimCampaignRewardsViewController.prototype.viewDidAppear = function() {
        var e;
        r.prototype.viewDidAppear.call(this);
        var t = this.objectivesViewModel.getCurrentCategoryId() === UTObjectivesViewModel.TabId.WORLD ? this.objectivesViewModel.worldCampaign : this.objectivesViewModel.getCampaign()
          , i = t instanceof UTWorldCampaignEntity ? t.name : null !== (e = null == t ? void 0 : t.title) && void 0 !== e ? e : BLANK_STR
          , o = services.Localization
          , n = this.getView();
        n.setTitle(o.localize("scmp.claimrewards.title", [i])),
        n.setDescription(o.localize("scmp.claimrewards.desc")),
        n.setButtonLabel(o.localize("objective.rewards.claim")),
        n.addTarget(this, this.handleViewEvent, UTClaimCampaignRewardsView.Event.CLAIM_REWARD)
    }
    ,
    UTClaimCampaignRewardsViewController.prototype.showCampaignRewards = function(e) {
        var t = services.Localization
          , i = new UTGameRewardsViewController(e)
          , o = i.getView();
        i.init(),
        i.modalDisplayDimensions.width = "24em",
        o.setTitle(t.localize("scmp.generic.rewards.title")),
        o.setDescription(t.localize(0 < e.length ? "objective.rewards.claimAlldescription" : "objective.rewards.autoclaimed")),
        o.setButtonText(t.localize("common.dialog.ok")),
        gPopupClickShield.setActivePopup(i)
    }
    ,
    UTClaimCampaignRewardsViewController.prototype.claimCampaignRewards = function() {
        var n = this;
        this.objectivesViewModel.getCurrentCategoryId() === UTObjectivesViewModel.TabId.WORLD ? this.objectivesViewModel.claimExpiredWorldRewards().observe(this, function(e, t) {
            var i, o;
            e.unobserve(n),
            t.success && t.data ? (n.showCampaignRewards(t.data.rewards),
            n.getView().setButtonInteractionState(!1)) : NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : (services.Notification.queue(["notification.scmp.claimrewards.error", UINotificationType.NEGATIVE]),
            (null === (i = t.error) || void 0 === i ? void 0 : i.code) === UtasErrorCode.SERVICE_IS_DISABLED && (null === (o = n.getNavigationController()) || void 0 === o || o.popToRootViewController()))
        }) : this.objectivesViewModel.claimExpiredSeasonRewards().observe(this, function(e, t) {
            var i, o;
            e.unobserve(n),
            t.success && t.data ? (n.showCampaignRewards(t.data.rewards),
            n.getView().setButtonInteractionState(!1)) : NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : (services.Notification.queue(["notification.scmp.claimrewards.error", UINotificationType.NEGATIVE]),
            (null === (i = t.error) || void 0 === i ? void 0 : i.code) === UtasErrorCode.SERVICE_IS_DISABLED && (null === (o = n.getNavigationController()) || void 0 === o || o.popToRootViewController()))
        })
    }
    ,
    UTClaimCampaignRewardsViewController.prototype.handleViewEvent = function(e, t, i) {
        t === UTClaimCampaignRewardsView.Event.CLAIM_REWARD && this.claimCampaignRewards()
    }
    ,
    UTClaimCampaignRewardsViewController
}(UTViewController)
  , UTNoCampaignView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTNoCampaignView(e) {
        var t = i.call(this) || this;
        return t.loc = e.localization,
        t
    }
    return __extends(UTNoCampaignView, i),
    UTNoCampaignView.prototype.init = function() {
        i.prototype.init.call(this),
        this._crest.init(),
        this._crest.setLocalResource("images/dynamicObjectives/generic.png"),
        this.__title.textContent = this.loc.localize("scmp.nocampaign.title"),
        this.__desc.textContent = this.loc.localize("scmp.nocampaign.description")
    }
    ,
    UTNoCampaignView
}(UTView));
UTNoCampaignView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-no-campaign-view"),
        this._crest = new UTImageView,
        this._crest.getRootElement().classList.add("ut-no-campaign-view--crest"),
        e.appendChild(this._crest.getRootElement()),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-no-campaign-view--title"),
        e.appendChild(this.__title),
        this.__desc = document.createElement("p"),
        this.__desc.classList.add("ut-no-campaign-view--description"),
        e.appendChild(this.__desc),
        this.__root = e,
        this._generated = !0
    }
}
,
UTNoCampaignView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._crest.destroy(),
    this.__title = null,
    this.__desc = null
}
,
UTNoCampaignView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var GameRewardStyle, UTNoCampaignViewController = function(e) {
    function UTNoCampaignViewController() {
        return e.call(this) || this
    }
    return __extends(UTNoCampaignViewController, e),
    UTNoCampaignViewController.prototype._getTelemetryId = function() {
        return "Objectives - No Active Campaign"
    }
    ,
    UTNoCampaignViewController.prototype._getViewInstanceFromData = function() {
        return new UTNoCampaignView({
            localization: services.Localization
        })
    }
    ,
    UTNoCampaignViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.objectives")
    }
    ,
    UTNoCampaignViewController
}(UTViewController), UTCampaignRewardsCarouselView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTCampaignRewardsCarouselView() {
        var e = t.call(this) || this;
        return e.defaultIndex = 0,
        e.showDots = !1,
        e
    }
    return __extends(UTCampaignRewardsCarouselView, t),
    UTCampaignRewardsCarouselView.prototype.hasDotsNavigation = function() {
        return this.showDots
    }
    ,
    UTCampaignRewardsCarouselView.prototype.setDefaultIndex = function(e) {
        this.defaultIndex = e
    }
    ,
    UTCampaignRewardsCarouselView.prototype.setupRewards = function(e) {
        var i = this;
        this.preSetup(e.length),
        e.forEach(function(e) {
            var t = i.generateCarouselElem(e);
            i._tnsCarousel.appendElem(t.elems, t.containerClass)
        }, this),
        1 < this.rewardsCount && (this.showDots = 1 === this.visibleItems,
        this.instantiateCarousel())
    }
    ,
    UTCampaignRewardsCarouselView.prototype.setupCampaignRewards = function(e) {
        var i = this;
        this.preSetup(e.length),
        e.forEach(function(e) {
            var t = i.generateCarouselElem(e.rewards[0], e.hidden);
            i._tnsCarousel.appendElem(t.elems, t.containerClass)
        }, this),
        1 < this.rewardsCount && (this.showDots = 1 === this.visibleItems,
        this.instantiateCarousel())
    }
    ,
    UTCampaignRewardsCarouselView.prototype.generateCarouselElem = function(e, t) {
        void 0 === t && (t = !1);
        var i = ["reward", "small"]
          , o = [];
        if (t)
            i.push(GameRewardStyle.HIDDEN_REWARD);
        else if (e.isStadiumSlotUnlock)
            i.push(GameRewardStyle.MYSTADIUM_SLOT);
        else if (e.isCoin)
            i.push(GameRewardStyle.COIN);
        else if (e.isChampionQualificationPoints)
            i.push(GameRewardStyle.CHAMPION_POINTS);
        else if (e.isXP)
            i.push(GameRewardStyle.XP);
        else if (e.itemData)
            if (e.itemData.isCoinBoost())
                i.push(GameRewardStyle.COIN_BOOST);
            else {
                var n = this.generateItemView(e.itemData, !0);
                o.push(n.getRootElement()),
                this.playerItems.push(n)
            }
        else if (e.isPack) {
            var r = this.generatePackGraphicView(e);
            o.push(r.getRootElement()),
            this.packs.push(r)
        } else
            e.isChampionStageEntry && i.push(GameRewardStyle.CHAMPION_STAGE_ENTRY);
        if (e && !t) {
            var s = ""
              , a = document.createElement("p");
            DOMKit.addClass(a, "objective-reward-label"),
            0 <= [RewardType.CHAMPION_QUALIFICATION_POINTS, RewardType.XP, RewardType.COIN].indexOf(e.type) && (s = services.Localization.localizeNumber(e.value)),
            a.textContent = s + " " + e.buildString(),
            a.textContent.length && o.push(a)
        }
        return 0 === o.length && o.push(document.createElement("div")),
        {
            elems: o,
            containerClass: i.join(" ")
        }
    }
    ,
    UTCampaignRewardsCarouselView.prototype.generateTNSPropertiesDTO = function() {
        var e = new TNSPropertiesDTO;
        return e.nav = this.showDots,
        e.touch = isPhone(),
        e.mouseDrag = isPhone(),
        e.startIndex = this.defaultIndex,
        e.speed = 600,
        e.prevButton = this.__tapAreaLeft,
        e.nextButton = this.__tapAreaRight,
        e.items = this.visibleItems,
        e.container = this._tnsCarousel.getRootElement(),
        e
    }
    ,
    UTCampaignRewardsCarouselView
}(UTRewardsCarouselView));
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
!function(e) {
    e.COIN = "coin-reward",
    e.COIN_BOOST = "coin_boost-reward",
    e.CHAMPION_POINTS = "champions_qualification_points-reward",
    e.CHAMPION_STAGE_ENTRY = "champions-stage-entry-reward",
    e.HIDDEN_REWARD = "hidden-reward",
    e.ITEM_REWARD = "item-reward",
    e.MYSTADIUM_TIER = "reward--mystadium-tier",
    e.MYSTADIUM_SLOT = "reward--mystadium-slot",
    e.PACK_REWARD = "pack-reward",
    e.REWARD = "reward",
    e.TITLE = "reward-title",
    e.XP = "xp-reward"
}(GameRewardStyle = GameRewardStyle || {});
var UTRewardView = function(i) {
    function UTRewardView(e) {
        var t = i.call(this) || this;
        return t.reward = e,
        t
    }
    return __extends(UTRewardView, i),
    Object.defineProperty(UTRewardView.prototype, "data", {
        get: function() {
            return this.reward
        },
        enumerable: !1,
        configurable: !0
    }),
    UTRewardView.prototype.setValue = function(e) {
        this.__value.textContent = services.Localization.localizeNumber(e) + " "
    }
    ,
    UTRewardView.prototype.setRewardTypeClass = function(e) {
        var t = [GameRewardStyle.CHAMPION_STAGE_ENTRY, RewardType.CHAMPION_QUALIFICATION_POINTS, RewardType.XP, RewardType.COIN, RewardType.PACK, RewardType.ITEM, RewardType.MYSTADIUM_SLOT, RewardType.MYSTADIUM_TIER].join(" ");
        switch (DOMKit.removeClass(this.__image, t),
        e) {
        case RewardType.CHAMPION_STAGE_ENTRY:
            DOMKit.addClass(this.__image, GameRewardStyle.CHAMPION_STAGE_ENTRY);
            break;
        default:
            DOMKit.addClass(this.__image, e)
        }
    }
    ,
    UTRewardView.prototype.setPackTierClass = function(e) {
        switch (DOMKit.removeClass(this.__image, "bronze silver gold"),
        e) {
        case 1:
            DOMKit.addClass(this.__image, "bronze");
            break;
        case 2:
            DOMKit.addClass(this.__image, "silver");
            break;
        case 3:
            DOMKit.addClass(this.__image, "gold")
        }
    }
    ,
    UTRewardView.prototype.setItemClass = function(e) {
        if (e.isCoinBoost())
            DOMKit.addClass(this.__image, GameRewardStyle.COIN_BOOST);
        else if (e.isPlayerPickItem())
            DOMKit.addClass(this.__image, "player-pick");
        else if (!e.isSpecial()) {
            var t = void 0;
            t = e.isBronzeRating() ? "bronze" : e.isSilverRating() ? "silver" : "gold",
            DOMKit.addClass(this.__image, t)
        }
    }
    ,
    UTRewardView.prototype.render = function(e) {
        switch (void 0 === e && (e = !1),
        e || (this.__type.textContent = this.reward.buildString()),
        this.setRewardTypeClass(this.reward.type),
        this.reward.type) {
        case RewardType.MYSTADIUM_SLOT:
        case RewardType.CHAMPION_QUALIFICATION_POINTS:
        case RewardType.CHAMPION_STAGE_ENTRY:
        case RewardType.XP:
        case RewardType.COIN:
            this.setValue(this.reward.value);
            break;
        case RewardType.PACK:
            this.setPackTierClass(this.reward.assetId);
            break;
        case RewardType.MYSTADIUM_TIER:
        case RewardType.ITEM:
            DebugUtils.Assert(JSUtils.isValid(this.reward.itemData), "Missing item entity from item reward."),
            this.reward.itemData && this.setItemClass(this.reward.itemData)
        }
    }
    ,
    UTRewardView
}(UTView);
UTRewardView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("li");
        this.__image = document.createElement("div"),
        this.__image.classList.add("image"),
        e.appendChild(this.__image);
        var t = document.createElement("div");
        t.classList.add("reward-info");
        var i = document.createElement("div");
        i.classList.add("reward-container"),
        this.__value = document.createElement("span"),
        this.__value.classList.add("value"),
        i.appendChild(this.__value),
        this.__type = document.createElement("span"),
        this.__type.classList.add("type"),
        i.appendChild(this.__type),
        t.appendChild(i),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRewardView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__image = null,
    this.__value = null,
    this.__type = null
}
,
UTRewardView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTRewardsFooterView = function(t) {
    function UTRewardsFooterView() {
        var e = t.call(this) || this;
        return e.rewards = [],
        e.rewardViews = [],
        e
    }
    return __extends(UTRewardsFooterView, t),
    UTRewardsFooterView.prototype.dealloc = function() {
        this.rewardViews.forEach(function(e) {
            return e.dealloc()
        }),
        this.rewardViews = [],
        this.rewards = [],
        t.prototype.dealloc.call(this)
    }
    ,
    UTRewardsFooterView.prototype.setData = function(e) {
        this.rewards = e,
        this.rewardViews.forEach(function(e) {
            return e.dealloc()
        }),
        0 < this.rewards.length ? this.rewardViews = this.rewards.map(function(e) {
            return new UTRewardView(e)
        }) : this.rewardViews = []
    }
    ,
    UTRewardsFooterView.prototype.getData = function() {
        return this.rewards
    }
    ,
    UTRewardsFooterView.prototype.render = function(t) {
        if (void 0 === t && (t = !1),
        0 !== this.rewards.length) {
            var i = this.getRootElement();
            DOMKit.empty(i),
            this.rewardViews.forEach(function(e) {
                e.init(),
                e.render(t),
                i.appendChild(e.getRootElement())
            }, this)
        }
    }
    ,
    UTRewardsFooterView
}(UTView);
UTRewardsFooterView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("ul");
        e.classList.add("rewards-footer"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRewardsFooterView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTRewardsFooterView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTObjectiveEntryView = function(i) {
    function UTObjectiveEntryView() {
        var e = i.call(this) || this;
        return e.actionButtonEvent = UTObjectiveEntryView.Event.CLAIM_REWARD,
        e.id = -1,
        e.isGroup = !1,
        e.lockedByGroups = [],
        e.rewards = null,
        e
    }
    return __extends(UTObjectiveEntryView, i),
    UTObjectiveEntryView.prototype.init = function() {
        i.prototype.init.call(this),
        this._actionBtn.init(),
        this._actionBtn.addTarget(this, this.onButtonSelected, EventType.TAP),
        this.setActionButtonState(!1, ""),
        this._rewardsInfoBtn.init(),
        this._rewardsInfoBtn.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._rewardsInfoBtn.setInteractionState(!0),
        this._rewardsInfoBtn.setDisplay(!0),
        this._tag.init(),
        this._tag.setAngle(UTLabelView.Angle.BOTTOM_RIGHT),
        this.setInteractionState(!0)
    }
    ,
    UTObjectiveEntryView.prototype.dealloc = function() {
        this.resetRewardsCarousel(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTObjectiveEntryView.prototype.setId = function(e) {
        this.id = e
    }
    ,
    UTObjectiveEntryView.prototype.getId = function() {
        return this.id
    }
    ,
    UTObjectiveEntryView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTObjectiveEntryView.prototype.setGroupType = function(e) {
        this.isGroup = e !== ObjectiveGroupType.INVALID,
        DOMKit.toggleDisplayStyle(this.__footerCountdown, this.isGroup),
        this.toggleClass("is-entry", !this.isGroup),
        this.toggleClass("is-world", e === ObjectiveGroupType.WORLD)
    }
    ,
    UTObjectiveEntryView.prototype.setLockedbyGroups = function(e) {
        this.lockedByGroups = e
    }
    ,
    UTObjectiveEntryView.prototype.getLockedbyGroups = function() {
        return this.lockedByGroups
    }
    ,
    UTObjectiveEntryView.prototype.setFocused = function() {
        var e = this;
        this.addClass(UTObjectiveEntryView.Class.FOCUS),
        window.setTimeout(function() {
            return e.removeClass(UTObjectiveEntryView.Class.FOCUS)
        }, 200)
    }
    ,
    UTObjectiveEntryView.prototype.setOverlayText = function(e) {
        this.__overlayText.textContent = e
    }
    ,
    UTObjectiveEntryView.prototype.setRewards = function(e) {
        this.rewards = e
    }
    ,
    UTObjectiveEntryView.prototype.setRewardsTag = function(e) {
        this._tag.setLabel(e.toString()),
        this._tag.toggleClass("empty", 0 === e)
    }
    ,
    UTObjectiveEntryView.prototype.renderRewardsFooter = function() {
        var e = this.rewards ? this.rewards.rewards.slice(1, 5) : [];
        if (this.rewards && 0 < e.length) {
            var t = this.rewards.rewards.length;
            this._rewardsFooter.setData(e),
            this._rewardsFooter.render(!0),
            5 < t && (this.__additionalRewards.textContent = services.Localization.localize("scmp.group.plusXRewards", [(t - 5).toString()])),
            DOMKit.toggleDisplayStyle(this.__actionAndSubrewards, !0)
        }
    }
    ,
    UTObjectiveEntryView.prototype.setupRewardsCarousel = function() {
        if (this.rewards && 0 < this.rewards.rewards.length) {
            var e = this.rewards.rewards[0];
            this._rewardsCarousel.setupRewards([e])
        }
    }
    ,
    UTObjectiveEntryView.prototype.resetRewardsCarousel = function() {
        this._rewardsCarousel.reset()
    }
    ,
    UTObjectiveEntryView.prototype.setProgress = function(e) {
        this._progressBar.setProgress(e)
    }
    ,
    UTObjectiveEntryView.prototype.setProgressLabel = function(e) {
        this._progressBar.setProgressLabel(e)
    }
    ,
    UTObjectiveEntryView.prototype.setDescription = function(e) {
        if (100 < e.length) {
            var t = e.substring(100)
              , i = " " !== t.charAt(0) ? t.split(" ")[0] : "";
            this.__description.textContent = "" + e.substring(0, 100) + i + "…"
        } else
            this.__description.textContent = e
    }
    ,
    UTObjectiveEntryView.prototype.setCountdown = function(e) {
        this.__footerCountdown.textContent = e
    }
    ,
    UTObjectiveEntryView.prototype.toggleCountdown = function(e) {
        DOMKit.toggleDisplayStyle(this.__footerCountdown, e)
    }
    ,
    UTObjectiveEntryView.prototype.setGroupLocked = function(e) {
        var i = this;
        e.forEach(function(e) {
            var t = new UTStandardButtonControl;
            t.init(),
            t.setText(e.title),
            t.addTarget(i, i.onLockedButtonSelected.bind(i, e), EventType.TAP),
            t.addClass("mini"),
            i.__lockedByGroups.appendChild(t.getRootElement())
        }, this),
        this.setObjectiveLockedState(!0)
    }
    ,
    UTObjectiveEntryView.prototype.setGroupScheduled = function() {
        this.setObjectiveLockedState(!1)
    }
    ,
    UTObjectiveEntryView.prototype.setGroupComingSoon = function() {
        this.setInteractionState(!1),
        this.toggleClass(UTObjectiveEntryView.Class.COMING_SOON, !0),
        this._actionBtn.setDisplay(!0),
        this._actionBtn.setInteractionState(!1),
        this._actionBtn.setText(services.Localization.localize("scmp.group.comingsoon")),
        this._rewardsInfoBtn.setDisplay(!1)
    }
    ,
    UTObjectiveEntryView.prototype.setGoToButtonLink = function(e) {
        switch (e) {
        case RedirectId.AUCTION_SEARCH:
            this.setActionButtonState(!0, services.Localization.localize("watchlist.button.gotoauctionsearch"), UTObjectiveEntryView.Event.TAKE_ME_THERE);
            break;
        case RedirectId.SBC:
        case RedirectId.SBC_SQUAD:
            this.setActionButtonState(!0, services.Localization.localize("button.gotosbc"), UTObjectiveEntryView.Event.TAKE_ME_THERE);
            break;
        case RedirectId.SQUAD:
            this.setActionButtonState(!0, services.Localization.localize("manage.squadlist.gotoactivequad"), UTObjectiveEntryView.Event.TAKE_ME_THERE);
            break;
        case RedirectId.TRADE_PILE:
            this.setActionButtonState(!0, services.Localization.localize("button.gototransferlist"), UTObjectiveEntryView.Event.TAKE_ME_THERE)
        }
    }
    ,
    UTObjectiveEntryView.prototype.setState = function(e) {
        var t = ""
          , i = JSUtils.getObjectValues(UTObjectiveEntryView.Class).join(" ");
        switch (e) {
        case ObjectiveGroupStateEnum.UNDEFINED:
        case ObjectiveGroupStateEnum.IN_PROGRESS:
        case ObjectiveProgressState.INVALID:
        case ObjectiveProgressState.IN_PROGRESS:
            t = UTObjectiveEntryView.Class.IN_PROGRESS;
            break;
        case ObjectiveProgressState.XP_REDEEMED:
            t = UTObjectiveEntryView.Class.XP_REDEEMED,
            this.setActionButtonState(!0, services.Localization.localize("scmp.campaign.claim"), UTObjectiveEntryView.Event.CLAIM_REWARD, !0),
            this._rewardsInfoBtn.setDisplay(!1);
            break;
        case ObjectiveGroupStateEnum.COMPLETED:
        case ObjectiveGroupStateEnum.REDEEM_FAILURE:
        case ObjectiveProgressState.COMPLETED:
            t = UTObjectiveEntryView.Class.COMPLETED,
            this.setActionButtonState(!0, services.Localization.localize("scmp.campaign.claim"), UTObjectiveEntryView.Event.CLAIM_REWARD, !0);
            break;
        case ObjectiveGroupStateEnum.REWARDED:
        case ObjectiveProgressState.REDEEMED:
            t = UTObjectiveEntryView.Class.REDEEMED,
            this.setOverlayText(services.Localization.localize("scmp.campaign.claimed")),
            this.setActionButtonState(!1, services.Localization.localize("scmp.campaign.complete")),
            this._rewardsInfoBtn.setDisplay(!1),
            this.setInteractionState(!1);
            break;
        default:
            this.setInteractionState(!1)
        }
        this.removeClass(i),
        this.addClass(t)
    }
    ,
    UTObjectiveEntryView.prototype.setObjectiveLockedState = function(e) {
        var t = e ? UTObjectiveEntryView.Class.LOCKED : UTObjectiveEntryView.Class.SCHEDULED
          , i = JSUtils.getObjectValues(UTObjectiveEntryView.Class).join(" ");
        this.removeClass(i),
        this.addClass(t),
        this._rewardsInfoBtn.setDisplay(!1)
    }
    ,
    UTObjectiveEntryView.prototype.setActionButtonState = function(e, t, i, o) {
        void 0 === o && (o = !1),
        this._actionBtn.setDisplay(e),
        this._actionBtn.setInteractionState(e),
        this._actionBtn.setText(t),
        o && this._actionBtn.addClass("call-to-action"),
        DOMKit.toggleDisplayStyle(this.__actionAndSubrewards, e),
        e && i && (this.actionButtonEvent = i)
    }
    ,
    UTObjectiveEntryView.prototype.onButtonSelected = function(e, t, i) {
        if (this.isInteractionEnabled()) {
            var o = {
                id: this.id,
                title: this.__title.textContent,
                rewards: this.rewards
            };
            e === this._rewardsInfoBtn ? this._triggerActions(this.isGroup ? UTObjectiveEntryView.Event.GROUP_REWARDS_INFO : UTObjectiveEntryView.Event.ENTRY_REWARDS_INFO, o) : e === this._actionBtn && this._triggerActions(this.actionButtonEvent, o)
        }
    }
    ,
    UTObjectiveEntryView.prototype.onLockedButtonSelected = function(e, t, i) {
        var o = {
            id: e.compositeId
        };
        this._triggerActions(UTObjectiveEntryView.Event.LOCKED_BY, o)
    }
    ,
    UTObjectiveEntryView.prototype._tapDetected = function(t) {
        if (this.isGroup && 0 === this.lockedByGroups.length) {
            var e = [this._rewardsCarousel.getTapAreaLeft(), this._rewardsCarousel.getTapAreaRight()];
            if (this._rewardsCarousel.hasDotsNavigation() && (e = e.concat(DOMKit.findElements(this._rewardsCarousel.getRootElement(), ".tns-nav"))),
            JSUtils.isValid(JSUtils.find(e, function(e) {
                return e.contains(t.target)
            })))
                return t.preventDefault(),
                void t.stopPropagation();
            i.prototype._tapDetected.call(this, t)
        }
    }
    ,
    UTObjectiveEntryView.prototype._touchStarted = function(e) {
        !this.isGroup || this.isGroup && 0 < this.lockedByGroups.length || i.prototype._touchStarted.call(this, e)
    }
    ,
    UTObjectiveEntryView.Class = {
        IN_PROGRESS: "in-progress",
        COMPLETED: "complete",
        XP_REDEEMED: "xp-redeemed",
        REDEEMED: "redeemed",
        LOCKED: "locked",
        SCHEDULED: "scheduled",
        COMING_SOON: "coming-soon",
        FOCUS: "focus"
    },
    UTObjectiveEntryView.Event = {
        CLAIM_REWARD: "UTObjectiveEntryView.CLAIM_REWARD",
        TAKE_ME_THERE: "UTObjectiveEntryView.TAKE_ME_THERE",
        ENTRY_REWARDS_INFO: "UTObjectiveEntryView.ENTRY_REWARDS_INFO",
        GROUP_REWARDS_INFO: "UTObjectiveEntryView.GROUP_REWARDS_INFO",
        LOCKED_BY: "UTObjectiveEntryView.LOCKED_BY"
    },
    UTObjectiveEntryView
}(UTTileView);
UTObjectiveEntryView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-objective-entry-view"),
        this.__overlay = document.createElement("div"),
        this.__overlay.classList.add("ut-objective-entry-view--overlay"),
        this.__overlayText = document.createElement("span"),
        this.__overlay.appendChild(this.__overlayText),
        this.__lockedByGroups = document.createElement("div"),
        this.__lockedByGroups.classList.add("ut-objective-entry-view--locked-by"),
        this.__overlay.appendChild(this.__lockedByGroups),
        e.appendChild(this.__overlay);
        var t = document.createElement("div");
        t.classList.add("ut-objective-entry-view--body"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-objective-entry-view--title"),
        t.appendChild(this.__title),
        this.__description = document.createElement("p"),
        this.__description.classList.add("ut-objective-entry-view--description"),
        t.appendChild(this.__description),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-objective-entry-view--body-rewards");
        var o = document.createElement("div");
        o.classList.add("ut-objective-entry-view--rewards"),
        this._rewardsCarousel = new UTCampaignRewardsCarouselView,
        o.appendChild(this._rewardsCarousel.getRootElement()),
        i.appendChild(o),
        this.__actionAndSubrewards = document.createElement("div"),
        this.__actionAndSubrewards.classList.add("ut-objective-entry-view--secondary-rewards"),
        this._actionBtn = new UTStandardButtonControl,
        this._actionBtn.getRootElement().classList.add("mini"),
        this._actionBtn.getRootElement().classList.add("ut-objective-entry-view--button"),
        this.__actionAndSubrewards.appendChild(this._actionBtn.getRootElement()),
        this._rewardsFooter = new UTRewardsFooterView,
        this.__actionAndSubrewards.appendChild(this._rewardsFooter.getRootElement()),
        this.__additionalRewards = document.createElement("div"),
        this.__additionalRewards.classList.add("ut-objective-entry-view--additional-rewards"),
        this.__actionAndSubrewards.appendChild(this.__additionalRewards),
        i.appendChild(this.__actionAndSubrewards),
        e.appendChild(i),
        this._tag = new UTLabelView,
        this._tag.getRootElement().classList.add("ut-objective-entry-view--tag"),
        e.appendChild(this._tag.getRootElement());
        var n = document.createElement("div");
        n.classList.add("ut-objective-entry-view--footer"),
        this._progressBar = new UTProgressBarView,
        n.appendChild(this._progressBar.getRootElement()),
        this.__footerCountdown = document.createElement("span"),
        this.__footerCountdown.classList.add("ut-objective-entry-view--countdown"),
        n.appendChild(this.__footerCountdown),
        e.appendChild(n),
        this._rewardsInfoBtn = new UTImageButtonControl,
        this._rewardsInfoBtn.getRootElement().classList.add("info-btn"),
        this._rewardsInfoBtn.getRootElement().classList.add("ut-objective-entry-view--button--info"),
        e.appendChild(this._rewardsInfoBtn.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTObjectiveEntryView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__overlay = null,
    this.__overlayText = null,
    this.__lockedByGroups = null,
    this.__title = null,
    this.__description = null,
    this._rewardsCarousel.destroy(),
    this.__actionAndSubrewards = null,
    this._actionBtn.destroy(),
    this._rewardsFooter.destroy(),
    this.__additionalRewards = null,
    this._tag.destroy(),
    this._progressBar.destroy(),
    this.__footerCountdown = null,
    this._rewardsInfoBtn.destroy()
}
,
UTObjectiveEntryView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTObjectiveCategoryView = function(t) {
    function UTObjectiveCategoryView() {
        var e = t.call(this) || this;
        return e.groups = [],
        e
    }
    return __extends(UTObjectiveCategoryView, t),
    UTObjectiveCategoryView.prototype.init = function() {
        t.prototype.init.call(this),
        this._sortGroupDrop.init(),
        this._sortGroupDrop.setOptions(factories.DataProvider.getObjectiveGroupSortDP()),
        this._sortGroupDrop.addTarget(this, this.onDropDownChange, EventType.CHANGE),
        this._filterGroupDrop.init(),
        this._filterGroupDrop.setOptions(factories.DataProvider.getObjectiveGroupFilterDP()),
        this._filterGroupDrop.addTarget(this, this.onDropDownChange, EventType.CHANGE),
        this.setInteractionState(!0)
    }
    ,
    UTObjectiveCategoryView.prototype.dealloc = function() {
        this.clearViews(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTObjectiveCategoryView.prototype.clearViews = function() {
        this.groups.forEach(function(e) {
            return e.dealloc()
        }),
        this.groups = []
    }
    ,
    UTObjectiveCategoryView.prototype.setCategoryGroups = function(t, e) {
        var i = this;
        this.clearViews(),
        this.groups = e.map(function(e) {
            return i.generateObjectiveGroupTile(t, e)
        }),
        this.layoutSubviews(),
        this.groups.forEach(function(e) {
            return e.setupRewardsCarousel()
        })
    }
    ,
    UTObjectiveCategoryView.prototype.scrollToObjective = function(e) {
        var t = e.getRootElement().offsetTop - 16;
        this.__objectivesMainContainer.scrollTop = t,
        e.setFocused()
    }
    ,
    UTObjectiveCategoryView.prototype.focusTile = function(t) {
        var e = JSUtils.find(this.groups, function(e) {
            return e.getId() === t
        });
        e && this.scrollToObjective(e)
    }
    ,
    UTObjectiveCategoryView.prototype.updateGroupsTimeRemaining = function(i) {
        this.groups.forEach(function(t) {
            var e = JSUtils.find(i, function(e) {
                return e.compositeId === t.getId()
            });
            e ? e.isComingSoon() ? t.setCountdown(services.Localization.localize("scmp.group.opens", [services.Localization.localizeTimeRemaining(e.getTimeUntilStart())])) : e.isMilestone() || (e.hasExpired() ? t.setCountdown(services.Localization.localize("objectives.tile.expired")) : t.setCountdown(services.Localization.localize("scmp.group.countdown", [services.Localization.localizeTimeRemaining(e.getTimeRemaining())]))) : t.setCountdown(services.Localization.localize("objectives.tile.expired"))
        }, this)
    }
    ,
    UTObjectiveCategoryView.prototype.setGroupTileInteractionState = function(t, e) {
        var i = JSUtils.find(this.groups, function(e) {
            return e.getId() === t
        });
        DebugUtils.Assert(JSUtils.isValid(i), "Cannot find objective tile associated with composite id: " + t),
        null == i || i.setInteractionState(e)
    }
    ,
    UTObjectiveCategoryView.prototype.generateObjectiveGroupTile = function(e, t) {
        var i = new UTObjectiveEntryView;
        if (i.init(),
        i.setGroupType(t.type),
        i.setId(t.compositeId),
        i.setTitle(t.title),
        i.setDescription(t.subtitle),
        i.setRewardsTag(t.objectivesReadyToRedeem),
        i.setProgress(t.getProgress()),
        i.setProgressLabel(services.Localization.localize("scmp.group.objectivescompleted", [(t.getNumberOfCompletedObjectives() || 0).toString(), t.objectivesNumber.toString()])),
        t.isMilestone() ? i.toggleCountdown(!1) : t.hasExpired() ? i.setCountdown(services.Localization.localize("objectives.tile.expired")) : i.setCountdown(services.Localization.localize("scmp.group.countdown", [services.Localization.localizeTimeRemaining(t.getTimeRemaining())])),
        t.isComingSoon())
            i.setGroupComingSoon(),
            i.setCountdown(services.Localization.localize("scmp.group.opens", [services.Localization.localizeTimeRemaining(t.getTimeUntilStart())]));
        else {
            i.setRewards(t.rewards);
            var o = e.getLockingGroups(t.compositeId);
            0 < o.length ? (i.setOverlayText(services.Localization.localize("scmp.group.description.lockedBy")),
            i.setGroupLocked(o),
            i.setLockedbyGroups(o.map(function(e) {
                return e.compositeId
            }))) : t.isLockedBehindStartTime() ? (i.setOverlayText(services.Localization.localize("scmp.group.description.locked")),
            i.setGroupScheduled()) : i.setState(t.state),
            i.renderRewardsFooter()
        }
        return i.addTarget(this, this.onGroupSelected, EventType.TAP),
        i.addTarget(this, this.onLockedGroupSelected, UTObjectiveEntryView.Event.LOCKED_BY),
        i.addTarget(this, this.onClaimSelected, UTObjectiveEntryView.Event.CLAIM_REWARD),
        i.addTarget(this, this.onRewardInfoSelected, UTObjectiveEntryView.Event.GROUP_REWARDS_INFO),
        this.addSubview(i, this.__groupsDetails),
        i
    }
    ,
    UTObjectiveCategoryView.prototype.onGroupSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTObjectiveCategoryView.Event.SELECT_GROUP, {
            id: e.getId()
        })
    }
    ,
    UTObjectiveCategoryView.prototype.onLockedGroupSelected = function(e, t, i) {
        this.isInteractionEnabled() && this.focusTile(i.id)
    }
    ,
    UTObjectiveCategoryView.prototype.onRewardInfoSelected = function(e, t, i) {
        this.isInteractionEnabled() && t === UTObjectiveEntryView.Event.GROUP_REWARDS_INFO && this._triggerActions(UTObjectiveCategoryView.Event.REWARD_INFO, i)
    }
    ,
    UTObjectiveCategoryView.prototype.onClaimSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTObjectiveCategoryView.Event.CLAIM_REWARD, i)
    }
    ,
    UTObjectiveCategoryView.prototype.onDropDownChange = function(e, t, i) {
        if (this.isInteractionEnabled()) {
            var o = parseInt(i.value, 10);
            e === this._sortGroupDrop ? this._triggerActions(UTObjectiveCategoryView.Event.SORT_CHANGE, {
                value: o
            }) : e === this._filterGroupDrop && this._triggerActions(UTObjectiveCategoryView.Event.FILTER_CHANGE, {
                value: o
            })
        }
    }
    ,
    UTObjectiveCategoryView.Event = {
        FILTER_CHANGE: "UTObjectiveCategoryView.FILTER_CHANGE",
        SELECT_GROUP: "UTObjectiveCategoryView.SELECT_GROUP",
        CLAIM_REWARD: "UTObjectiveCategoryView.CLAIM_REWARD",
        REWARD_INFO: "UTObjectiveCategoryView.REWARD_INFO",
        SORT_CHANGE: "UTObjectiveCategoryView.SORT_CHANGE"
    },
    UTObjectiveCategoryView
}(UTTargetActionView);
UTObjectiveCategoryView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-objective-category");
        var t = document.createElement("div");
        t.classList.add("ut-objective-category--group-options");
        var i = document.createElement("div");
        i.classList.add("ut-objective-category--group-option"),
        this._sortGroupDrop = new UTDropDownControl,
        i.appendChild(this._sortGroupDrop.getRootElement()),
        t.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-objective-category--group-option"),
        this._filterGroupDrop = new UTDropDownControl,
        o.appendChild(this._filterGroupDrop.getRootElement()),
        t.appendChild(o),
        e.appendChild(t),
        this.__objectivesMainContainer = document.createElement("div"),
        this.__objectivesMainContainer.classList.add("ut-objective-category--content"),
        this.__objectivesDetailsContainer = document.createElement("div"),
        this.__objectivesDetailsContainer.classList.add("ut-objective-category--details"),
        this.__groupsDetails = document.createElement("div"),
        this.__groupsDetails.classList.add("ut-objective-category--groups"),
        this.__objectivesDetailsContainer.appendChild(this.__groupsDetails),
        this.__objectivesMainContainer.appendChild(this.__objectivesDetailsContainer),
        e.appendChild(this.__objectivesMainContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTObjectiveCategoryView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._sortGroupDrop.destroy(),
    this._filterGroupDrop.destroy(),
    this.__objectivesMainContainer = null,
    this.__objectivesDetailsContainer = null,
    this.__groupsDetails = null
}
,
UTObjectiveCategoryView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTObjectiveCategoryViewController = function(o) {
    function UTObjectiveCategoryViewController(e) {
        var t = o.call(this) || this;
        return t.intervalController = new EAIntervalController(1e4,t.handleEventTimer.bind(t)),
        t.objectivesViewModel = e,
        t
    }
    return __extends(UTObjectiveCategoryViewController, o),
    UTObjectiveCategoryViewController.prototype.init = function() {
        o.prototype.init.call(this),
        this.intervalController.init()
    }
    ,
    UTObjectiveCategoryViewController.prototype.dealloc = function() {
        this.intervalController.dealloc(),
        o.prototype.dealloc.call(this)
    }
    ,
    UTObjectiveCategoryViewController.prototype._getTelemetryId = function() {
        var e = this.objectivesViewModel.getCurrentCategory();
        return e ? "Objectives - " + e.name : null
    }
    ,
    UTObjectiveCategoryViewController.prototype._getViewInstanceFromData = function() {
        return new UTObjectiveCategoryView
    }
    ,
    UTObjectiveCategoryViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.objectives")
    }
    ,
    UTObjectiveCategoryViewController.prototype.viewDidAppear = function() {
        o.prototype.viewDidAppear.call(this),
        this.intervalController.start(),
        this.loadCategory();
        var e = getDefaultDispatcher();
        e.addObserver(AppNotification.APP_PAUSE, this, this.onAppPaused),
        e.addObserver(AppNotification.APP_RESUME, this, this.onAppResumed);
        var t = this.getView();
        t.addTarget(this, this.onGroupSelected, UTObjectiveCategoryView.Event.SELECT_GROUP),
        t.addTarget(this, this.onClaimGroupReward, UTObjectiveCategoryView.Event.CLAIM_REWARD),
        t.addTarget(this, this.onGroupRewardsInfoSelected, UTObjectiveCategoryView.Event.REWARD_INFO),
        t.addTarget(this, this.onGroupOptionChange, UTObjectiveCategoryView.Event.SORT_CHANGE),
        t.addTarget(this, this.onGroupOptionChange, UTObjectiveCategoryView.Event.FILTER_CHANGE);
        var i = this.objectivesViewModel.getCurrentCategory();
        i && TelemetryManager.trackPage(TelemetryManager.Sections.OBJECTIVES, "Objective Category - " + i.name)
    }
    ,
    UTObjectiveCategoryViewController.prototype.viewWillDisappear = function() {
        o.prototype.viewWillDisappear.call(this),
        this.intervalController.stop();
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.APP_PAUSE, this),
        e.removeObserver(AppNotification.APP_RESUME, this);
        var t = this.getView();
        t.removeTarget(this, this.onGroupSelected, UTObjectiveCategoryView.Event.SELECT_GROUP),
        t.removeTarget(this, this.onClaimGroupReward, UTObjectiveCategoryView.Event.CLAIM_REWARD),
        t.removeTarget(this, this.onGroupRewardsInfoSelected, UTObjectiveCategoryView.Event.REWARD_INFO),
        t.removeTarget(this, this.onGroupOptionChange, UTObjectiveCategoryView.Event.SORT_CHANGE),
        t.removeTarget(this, this.onGroupOptionChange, UTObjectiveCategoryView.Event.FILTER_CHANGE)
    }
    ,
    UTObjectiveCategoryViewController.prototype.loadCategory = function() {
        var o = this;
        this.objectivesViewModel.requestCategories().observe(this, function(e, t) {
            e.unobserve(o);
            var i = o.objectivesViewModel.getCurrentCategory();
            t.success && i ? o.populateCategoryGroups() : services.Notification.queue([services.Localization.localize("notification.scmp.categories.loadFailed"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTObjectiveCategoryViewController.prototype.handleEventTimer = function() {
        var t = this
          , e = this.objectivesViewModel.getCurrentCategory();
        e && !e.isMilestone() && this.getView().updateGroupsTimeRemaining(this.objectivesViewModel.getCurrentCategoryGroups());
        this.objectivesViewModel.hasUnclaimedExpiredGroups() && function() {
            t.intervalController.stop();
            var e = new UTSeasonalCampaignPopupViewController("group-rewards");
            e.onExit.observe(t, t.onSCMPInfoPopupClosed),
            e.getView().setCancelButtonDisplay(!1),
            gPopupClickShield.setActivePopup(e)
        }
        .call(this)
    }
    ,
    UTObjectiveCategoryViewController.prototype.onSCMPInfoPopupClosed = function(e, t, i) {
        var n = this;
        e.unobserve(this);
        function yV(e, t) {
            var i;
            e.unobserve(n);
            var o = n.objectivesViewModel.getCurrentCategory();
            t.success && o && n.isViewDisplayed() ? n.populateCategoryGroups() : (services.Notification.queue([r.localize("notification.scmp.categories.loadFailed"), UINotificationType.NEGATIVE]),
            null === (i = n.getNavigationController()) || void 0 === i || i.popViewController())
        }
        var r = services.Localization;
        services.Objectives.claimExpiredRewards().observe(this, function(e, t) {
            if (e.unobserve(n),
            t.success && t.data) {
                var i = new UTGameRewardsViewController(t.data.rewards);
                i.init(),
                i.modalDisplayDimensions.width = "24em";
                var o = i.getView();
                o.setTitle(r.localize("scmp.generic.rewards.title")),
                o.setDescription(r.localize(0 < t.data.rewards.length ? "objective.rewards.claimAlldescription" : "objective.rewards.autoclaimed")),
                o.setButtonText(r.localize("objective.rewards.claim")),
                gPopupClickShield.setActivePopup(i),
                n.objectivesViewModel.requestCategories().observe(n, yV)
            }
        })
    }
    ,
    UTObjectiveCategoryViewController.prototype.navigateToGroup = function(e) {
        if (e.hasExpired() && !e.isCompleted())
            return this.refreshView(),
            void services.Notification.queue([services.Localization.localize("notification.scmp.group.expired"), UINotificationType.NEGATIVE]);
        var t = this.getNavigationController();
        if (t && this.objectivesViewModel) {
            this.objectivesViewModel.setCurrentGroup(e);
            var i = new UTObjectiveGroupViewController(this.objectivesViewModel);
            i.init(),
            t.pushViewController(i)
        }
    }
    ,
    UTObjectiveCategoryViewController.prototype.populateCategoryGroups = function() {
        var e = this.objectivesViewModel.worldCampaign
          , t = this.objectivesViewModel.getCurrentCategory()
          , i = this.objectivesViewModel.getCurrentCategoryGroups()
          , o = this.getView();
        if (t && (o.setCategoryGroups(t, i),
        e && e.type === WorldCampaignType.FACTION && 0 < i.length)) {
            var n = JSUtils.isValid(e.getSelectedFaction());
            i.filter(function(e) {
                return e.type === ObjectiveGroupType.WORLD
            }).forEach(function(e) {
                return o.setGroupTileInteractionState(e.compositeId, n)
            })
        }
    }
    ,
    UTObjectiveCategoryViewController.prototype.refreshView = function() {
        this.populateCategoryGroups()
    }
    ,
    UTObjectiveCategoryViewController.prototype.claimGroupReward = function(e) {
        var r = this
          , i = this.objectivesViewModel.getCurrentCategory()
          , t = i ? i.getGroup(e) : null
          , s = services.Localization;
        i && t && this.objectivesViewModel.requestGroupDetails(i, t.compositeId).observe(this, function(e, t) {
            if (e.unobserve(r),
            t.success && t.data && t.data.group) {
                var n = t.data.group;
                n.isClaimable() ? r.objectivesViewModel.claimGroupRewards(i, n.compositeId).observe(r, function(e, t) {
                    if (r.onRewardClaimed(e, t),
                    t.success && t.response && !JSUtils.isString(t.response) && 0 < t.response.rewards.length) {
                        var i = new UTGameRewardsViewController(t.response.rewards);
                        i.init(),
                        i.modalDisplayDimensions.width = "24em";
                        var o = i.getView();
                        o.setTitle(s.localize("scmp.group.rewards.title")),
                        o.setDescription(s.localize("scmp.group.rewards.description", [n.title])),
                        o.setButtonText(s.localize("objective.rewards.claim")),
                        gPopupClickShield.setActivePopup(i)
                    }
                }) : n.isClaimable() || r.navigateToGroup(n)
            } else
                services.Notification.queue([s.localize("notification.scmp.rewardsInfoFailed"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTObjectiveCategoryViewController.prototype.onGroupSelected = function(e, t, i) {
        var n = this
          , o = i.id;
        if (this.objectivesViewModel) {
            var r = this.objectivesViewModel.getCurrentCategory();
            r && this.objectivesViewModel.requestGroupDetails(r, o).observe(this, function(e, t) {
                if (e.unobserve(n),
                t.success && t.data && t.data.group)
                    n.navigateToGroup(t.data.group);
                else {
                    var i = n.objectivesViewModel ? n.objectivesViewModel.getCurrentCategory() : null
                      , o = i && i.isMilestone() ? "notification.scmp.milestone.loadFailed" : "notification.scmp.group.loadFailed";
                    services.Notification.queue([services.Localization.localize(o), UINotificationType.NEGATIVE])
                }
            })
        }
    }
    ,
    UTObjectiveCategoryViewController.prototype.onClaimGroupReward = function(e, t, i) {
        this.claimGroupReward(i.id)
    }
    ,
    UTObjectiveCategoryViewController.prototype.triggerConsolidatedRewardsPopup = function(e, t, i, o) {
        var n = new UTRewardSelectionChoiceViewController(e);
        n.setTitleText(t),
        n.setClaimableState(i),
        n.getView().addTarget(this, o, UTRewardSelectionChoiceView.Event.CONFIRM),
        gPopupClickShield.setActivePopup(n)
    }
    ,
    UTObjectiveCategoryViewController.prototype.onGroupRewardsInfoSelected = function(e, t, i) {
        var o = this;
        DebugUtils.Assert(JSUtils.isString(i.id), "Expected a string for group composite ID.");
        var n = i.id;
        if (i.rewards) {
            var r = this.objectivesViewModel.getCurrentCategory();
            r && this.objectivesViewModel.requestGroupDetails(r, n).observe(this, function(e, t) {
                if (e.unobserve(o),
                t.success && t.data && t.data.group) {
                    var i = t.data.group;
                    o.objectivesViewModel.setCurrentGroup(i),
                    o.triggerConsolidatedRewardsPopup([i.rewards], services.Localization.localize("scmp.group.rewards.title"), i.isClaimable(), function() {
                        return o.claimGroupReward(i.compositeId)
                    })
                } else
                    services.Notification.queue([services.Localization.localize("notification.scmp.rewardsInfoFailed"), UINotificationType.NEGATIVE])
            })
        }
    }
    ,
    UTObjectiveCategoryViewController.prototype.onGroupOptionChange = function(e, t, i) {
        this.objectivesViewModel && (t === UTObjectiveCategoryView.Event.SORT_CHANGE ? this.objectivesViewModel.sortBy = i.value : t === UTObjectiveCategoryView.Event.FILTER_CHANGE && (this.objectivesViewModel.filterBy = i.value)),
        this.refreshView()
    }
    ,
    UTObjectiveCategoryViewController.prototype.onRewardClaimed = function(e, t) {
        e.unobserve(this),
        TelemetryManager.trackEvent(TelemetryManager.Sections.OBJECTIVES, TelemetryManager.Categories.OBJECTIVE_REWARDS_CLAIMED, "Claim Season Objectives Rewards"),
        t.success ? (services.Notification.queue([services.Localization.localize("notification.scmp.claimSuccess"), UINotificationType.POSITIVE]),
        this.refreshView()) : services.Notification.queue([services.Localization.localize("notification.scmp.claimFail"), UINotificationType.NEGATIVE])
    }
    ,
    UTObjectiveCategoryViewController.prototype.onAppPaused = function(e, t, i) {
        this.intervalController.stop()
    }
    ,
    UTObjectiveCategoryViewController.prototype.onAppResumed = function(e, t, i) {
        this.intervalController.start()
    }
    ,
    UTObjectiveCategoryViewController
}(UTViewController)
  , UTObjectivesViewModel = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTObjectivesViewModel(e) {
        var t = i.call(this) || this;
        return t.campaign = null,
        t.categories = [],
        t.currentCategoryId = UTObjectivesViewModel.TabId.SEASON,
        t.currentGroup = null,
        t.filterBy = ObjectiveFilterOption.NONE,
        t.objectiveService = e,
        t.selectedRewardId = -1,
        t.sortBy = ObjectiveSortOption.NONE,
        t.worldCampaign = null,
        t
    }
    return __extends(UTObjectivesViewModel, i),
    UTObjectivesViewModel.prototype.setSelectedRewardId = function(e) {
        this.selectedRewardId = e
    }
    ,
    UTObjectivesViewModel.prototype.resetSelectedRewardId = function() {
        this.selectedRewardId = -1
    }
    ,
    UTObjectivesViewModel.prototype.getCurrentCategoryId = function() {
        return this.currentCategoryId
    }
    ,
    UTObjectivesViewModel.prototype.setCurrentCategoryId = function(e) {
        this.currentCategoryId = e
    }
    ,
    UTObjectivesViewModel.prototype.getCurrentCategory = function() {
        var t = this;
        if (0 === this.categories.length)
            return DebugUtils.Assert(!1, "Expected categories to have been already retrieved."),
            null;
        var e = JSUtils.find(this.categories, function(e) {
            return t.currentCategoryId === e.id
        });
        return DebugUtils.Assert(JSUtils.isValid(e), "Category " + this.currentCategoryId + " wasn't found."),
        e
    }
    ,
    UTObjectivesViewModel.prototype.getCurrentCategoryGroups = function() {
        var i = this
          , o = this.getCurrentCategory();
        if (o) {
            o.getGroups();
            return (this.filterBy === ObjectiveFilterOption.LOCKED ? o.getGroups().filter(function(e) {
                return !(o.isGroupLockedBehindGroups(e.compositeId) || e.isLockedBehindStartTime() || e.isComingSoon() || e.hasExpired())
            }) : this.filterBy === ObjectiveFilterOption.LOCKED_COMPLETE ? o.getGroups().filter(function(e) {
                return !(o.isGroupLockedBehindGroups(e.compositeId) || e.isLockedBehindStartTime() || e.isComingSoon() || e.isRedeemed() || e.hasExpired())
            }) : o.getGroups().filter(function(e) {
                return !e.hasExpired()
            })).sort(function(e, t) {
                return i.sortGroups(o, e, t)
            })
        }
        return []
    }
    ,
    UTObjectivesViewModel.prototype.getCampaign = function() {
        return this.campaign
    }
    ,
    UTObjectivesViewModel.prototype.getCategories = function() {
        return this.categories
    }
    ,
    UTObjectivesViewModel.prototype.getMilestonesCategory = function() {
        return JSUtils.find(this.categories, function(e) {
            return e.isMilestone() || e.isExpiringMilestone()
        })
    }
    ,
    UTObjectivesViewModel.prototype.getCurrentWorldGroups = function() {
        var t = [];
        return this.categories.forEach(function(e) {
            return t = t.concat(e.getGroupsByType(ObjectiveGroupType.WORLD))
        }),
        t
    }
    ,
    UTObjectivesViewModel.prototype.getCategoryByGroup = function(t) {
        return JSUtils.find(this.categories, function(e) {
            return JSUtils.isValid(JSUtils.find(e.getGroups(), function(e) {
                return e === t
            }))
        })
    }
    ,
    UTObjectivesViewModel.prototype.getWorldGroupById = function(t) {
        return JSUtils.find(this.getCurrentWorldGroups(), function(e) {
            return e.id === t
        })
    }
    ,
    UTObjectivesViewModel.prototype.getCurrentGroup = function() {
        return this.currentGroup
    }
    ,
    UTObjectivesViewModel.prototype.setCurrentGroup = function(e) {
        this.currentGroup = e
    }
    ,
    UTObjectivesViewModel.prototype.getCurrentGroupObjectives = function() {
        return this.currentGroup ? this.currentGroup.getObjectives().sort(this.sortObjectives.bind(this)) : []
    }
    ,
    UTObjectivesViewModel.prototype.getCurrentGroupObjectiveById = function(e) {
        return this.currentGroup ? this.currentGroup.getObjectiveById(e) : null
    }
    ,
    UTObjectivesViewModel.prototype.hasUnclaimedGroupRewards = function() {
        return JSUtils.isValid(JSUtils.find(this.categories, function(e) {
            return e.hasUnclaimedGroupReward()
        }))
    }
    ,
    UTObjectivesViewModel.prototype.hasUnclaimedExpiredGroups = function() {
        return JSUtils.isValid(JSUtils.find(this.categories, function(e) {
            return e.hasUnclaimedExpiredGroup()
        }))
    }
    ,
    UTObjectivesViewModel.prototype.requestActiveWorldCampaign = function() {
        var t = this
          , e = this.objectiveService.requestActiveWorldCampaign();
        return this._trackRequest(e, !0, function(e) {
            t.worldCampaign = e.data ? e.data.campaign : null
        }),
        e
    }
    ,
    UTObjectivesViewModel.prototype.requestActiveCampaignDetails = function() {
        var t = this
          , e = this.objectiveService.requestCampaignDetails(ObjectiveCampaignIteration.ACTIVE);
        return this._trackRequest(e, this.objectiveService.isCampaignCacheExpired(), function(e) {
            t.campaign = e.data ? e.data.campaign : null
        }),
        e
    }
    ,
    UTObjectivesViewModel.prototype.requestCategories = function() {
        var i = this
          , e = this.objectiveService.requestCategories();
        return this._trackRequest(e, this.objectiveService.isObjectivesCacheExpired() || 0 === this.categories.length, function(e) {
            var t;
            t = e.success && e.data && !JSUtils.isString(e.data) ? e.data.categories.filter(function(e) {
                return !e.isFoundation()
            }) : [],
            i.categories = t.sort(function(e, t) {
                return JSUtils.sortCompare(e.priority, t.priority)
            })
        }
        .bind(this)),
        e
    }
    ,
    UTObjectivesViewModel.prototype.requestGroupDetails = function(e, t) {
        var i = this.objectiveService.requestGroup(e, t);
        return this._trackRequest(i, !0),
        i
    }
    ,
    UTObjectivesViewModel.prototype.claimLevelRewards = function(e) {
        var t = this.objectiveService.claimLevelReward(this.selectedRewardId, e);
        return this._trackRequest(t, !0),
        t
    }
    ,
    UTObjectivesViewModel.prototype.claimGroupRewards = function(e, t) {
        var i = e.claimGroupRewards(t);
        return this._trackRequest(i, !0),
        i
    }
    ,
    UTObjectivesViewModel.prototype.claimObjectiveRewards = function(e, t, i) {
        var o = e.claimObjectiveRewards(t, i);
        return this._trackRequest(o, !0),
        o
    }
    ,
    UTObjectivesViewModel.prototype.claimWorldMilestoneRewards = function(e, t) {
        var i = e.claimMilestoneRewards(t);
        return this._trackRequest(i, !0),
        i
    }
    ,
    UTObjectivesViewModel.prototype.claimExpiredSeasonRewards = function() {
        var e = services.Objectives.claimExpiredRewards();
        return this._trackRequest(e, !0),
        e
    }
    ,
    UTObjectivesViewModel.prototype.claimExpiredMilestoneRewards = function() {
        var e = services.Objectives.claimExpiredLearningRewards();
        return this._trackRequest(e, !0),
        e
    }
    ,
    UTObjectivesViewModel.prototype.claimExpiredWorldRewards = function() {
        var e = services.Objectives.claimExpiredWorldRewards();
        return this._trackRequest(e, !0),
        e
    }
    ,
    UTObjectivesViewModel.prototype.sortFactionsByDisplayOrder = function(e) {
        return e.sort(function(e, t) {
            return JSUtils.sortCompare(e.displayOrder, t.displayOrder)
        })
    }
    ,
    UTObjectivesViewModel.prototype.sortGroups = function(e, t, i) {
        if (this.sortBy === ObjectiveSortOption.EXPIRY)
            return t.endTime < i.endTime ? -1 : i.endTime < t.endTime ? 1 : 0;
        if (this.sortBy === ObjectiveSortOption.RECENT)
            return t.startTime > i.startTime ? -1 : i.startTime > t.startTime ? 1 : 0;
        if (!i.isClaimable() && t.isClaimable())
            return -1;
        if (!t.isClaimable() && i.isClaimable())
            return 1;
        if (!i.isCompleted() && t.isCompleted())
            return -1;
        if (!t.isCompleted() && i.isCompleted())
            return 1;
        if (!i.isInProgress() && t.isInProgress())
            return -1;
        if (!t.isInProgress() && i.isInProgress())
            return 1;
        if (!i.isNotStarted() && t.isNotStarted())
            return -1;
        if (!t.isNotStarted() && i.isNotStarted())
            return 1;
        if (i.isComingSoon() && !t.isComingSoon())
            return -1;
        if (t.isComingSoon() && !i.isComingSoon())
            return 1;
        var o = e.isGroupLockedBehindGroups(t.compositeId)
          , n = e.isGroupLockedBehindGroups(i.compositeId)
          , r = t.isLockedBehindStartTime()
          , s = i.isLockedBehindStartTime();
        return !n && !s || o || r ? !o && !r || n || s ? t.endTime < i.endTime ? -1 : i.endTime < t.endTime ? 1 : t.priority < i.priority ? -1 : i.priority < t.priority ? 1 : !i.isRedeemed() && t.isRedeemed() ? -1 : !t.isRedeemed() && i.isRedeemed() ? 1 : 0 : 1 : -1
    }
    ,
    UTObjectivesViewModel.prototype.sortObjectives = function(e, t) {
        return !t.isClaimable() && e.isClaimable() ? -1 : !e.isClaimable() && t.isClaimable() ? 1 : !t.isInProgress() && e.isInProgress() ? -1 : !e.isInProgress() && t.isInProgress() ? 1 : !t.hasRedirectLink() && e.hasRedirectLink() ? -1 : !e.hasRedirectLink() && t.hasRedirectLink() ? 1 : !t.isNotStarted() && e.isNotStarted() ? -1 : !e.isNotStarted() && t.isNotStarted() ? 1 : !t.isRedeemed() && e.isRedeemed() ? -1 : !e.isRedeemed() && t.isRedeemed() ? 1 : 0
    }
    ,
    UTObjectivesViewModel.TabId = {
        SEASON: -2,
        WORLD: -1
    },
    UTObjectivesViewModel
}(UTViewModel))
  , UTObjectiveGroupProgressionView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTObjectiveGroupProgressionView() {
        var e = t.call(this) || this;
        return e.id = -1,
        e
    }
    return __extends(UTObjectiveGroupProgressionView, t),
    UTObjectiveGroupProgressionView.prototype.init = function() {
        t.prototype.init.call(this),
        this._rewardsInfoBtn.init(),
        this._rewardsInfoBtn.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._rewardsInfoBtn.setInteractionState(!0),
        this.setInteractionState(!0)
    }
    ,
    UTObjectiveGroupProgressionView.prototype.setId = function(e) {
        this.id = e
    }
    ,
    UTObjectiveGroupProgressionView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTObjectiveGroupProgressionView.prototype.setProgress = function(e) {
        this._progressBar.setProgress(e)
    }
    ,
    UTObjectiveGroupProgressionView.prototype.setProgressLabel = function(e) {
        this._progressBar.setProgressLabel(e)
    }
    ,
    UTObjectiveGroupProgressionView.prototype.setSubtitle = function(e) {
        this.__subtitle.textContent = e
    }
    ,
    UTObjectiveGroupProgressionView.prototype.setCountdown = function(e) {
        this.__countdown.textContent = e
    }
    ,
    UTObjectiveGroupProgressionView.prototype.toggleCountdown = function(e) {
        DOMKit.toggleDisplayStyle(this.__countdown, e)
    }
    ,
    UTObjectiveGroupProgressionView.prototype.onButtonSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTObjectiveGroupProgressionView.Event.REWARDS_INFO, {
            id: this.id
        })
    }
    ,
    UTObjectiveGroupProgressionView.Event = {
        REWARDS_INFO: "UTObjectiveGroupProgressionView.REWARDS_INFO"
    },
    UTObjectiveGroupProgressionView
}(UTTargetActionView));
UTObjectiveGroupProgressionView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-objective-group-progression-view");
        var t = document.createElement("div");
        t.classList.add("ut-objective-group-progression-view--body"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-objective-group-progression-view--title"),
        t.appendChild(this.__title),
        this.__subtitle = document.createElement("p"),
        this.__subtitle.classList.add("ut-objective-group-progression-view--subtitle"),
        t.appendChild(this.__subtitle),
        this.__countdown = document.createElement("p"),
        this.__countdown.classList.add("ut-objective-group-progression-view--countdown"),
        t.appendChild(this.__countdown),
        e.appendChild(t),
        this._rewardsInfoBtn = new UTImageButtonControl,
        this._rewardsInfoBtn.getRootElement().classList.add("info-btn"),
        this._rewardsInfoBtn.getRootElement().classList.add("ut-objective-group-progression-view--button--info"),
        e.appendChild(this._rewardsInfoBtn.getRootElement()),
        this._progressBar = new UTProgressBarView,
        this._progressBar.getRootElement().classList.add("mini"),
        e.appendChild(this._progressBar.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTObjectiveGroupProgressionView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__subtitle = null,
    this.__countdown = null,
    this._rewardsInfoBtn.destroy(),
    this._progressBar.destroy()
}
,
UTObjectiveGroupProgressionView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTObjectiveGroupView = function(t) {
    function UTObjectiveGroupView() {
        var e = t.call(this) || this;
        return e.objectiveViews = [],
        e
    }
    return __extends(UTObjectiveGroupView, t),
    UTObjectiveGroupView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTObjectiveGroupView.prototype.dealloc = function() {
        this.clearObjectiveViews(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTObjectiveGroupView.prototype.clearObjectiveViews = function() {
        0 < this.objectiveViews.length && (this.objectiveViews.forEach(function(e) {
            return e.dealloc()
        }),
        this.objectiveViews = [])
    }
    ,
    UTObjectiveGroupView.prototype.setupNavigation = function(e, t) {
        var i = this;
        this._objectivesTM.clearTabs(),
        e.forEach(function(e) {
            return i._objectivesTM.addTab(e.id, e.name)
        }),
        this._objectivesTM.setActiveTab(t),
        this._objectivesTM.layoutSubviews()
    }
    ,
    UTObjectiveGroupView.prototype.addNavigationTarget = function(e, t) {
        this._objectivesTM.addTarget(e, t, EventType.TAP)
    }
    ,
    UTObjectiveGroupView.prototype.setTab = function(e) {
        this._objectivesTM.setActiveTab(e)
    }
    ,
    UTObjectiveGroupView.prototype.renderGroupProgression = function(e) {
        this._groupProgression.init(),
        this._groupProgression.setId(e.id),
        this._groupProgression.setTitle(e.title),
        this._groupProgression.setProgress(e.getProgress()),
        this._groupProgression.setSubtitle(services.Localization.localize("scmp.group.objectivescompleted", [(e.getNumberOfCompletedObjectives() || 0).toString(), e.objectivesNumber.toString()])),
        e.isMilestone() ? this._groupProgression.toggleCountdown(!1) : e.hasExpired() ? this._groupProgression.setCountdown(services.Localization.localize("objectives.tile.expired")) : this.updateGroupProgressionTimeRemaining(e.getTimeRemaining()),
        this._groupProgression.addTarget(this, this.onInfoSelected, UTObjectiveGroupProgressionView.Event.REWARDS_INFO)
    }
    ,
    UTObjectiveGroupView.prototype.updateGroupProgressionTimeRemaining = function(e) {
        this._groupProgression.setCountdown(services.Localization.localize("scmp.group.countdown", [services.Localization.localizeTimeRemaining(e)]))
    }
    ,
    UTObjectiveGroupView.prototype.renderObjectives = function(e) {
        var t = this;
        this.clearObjectiveViews(),
        this.objectiveViews = e.map(function(e) {
            return t.generateObjectiveView(e)
        }),
        this.layoutSubviews(),
        this.objectiveViews.forEach(function(e) {
            return e.setupRewardsCarousel()
        })
    }
    ,
    UTObjectiveGroupView.prototype.generateObjectiveView = function(e) {
        var t = new UTObjectiveEntryView;
        return t.init(),
        t.setGroupType(ObjectiveGroupType.INVALID),
        t.setId(e.id),
        t.setTitle(e.title),
        t.setDescription(e.description),
        t.setRewards(e.rewards),
        t.setState(e.state),
        t.renderRewardsFooter(),
        t.setProgress(e.getProgressPercentage()),
        t.setProgressLabel(services.Localization.localize("scmp.objective.progress", [e.currentProgress.toString(), e.multiplier.toString()])),
        (e.isNotStarted() || e.isInProgress()) && e.hasRedirectLink() && t.setGoToButtonLink(e.link),
        t.addTarget(this, this.onClaimSelected, UTObjectiveEntryView.Event.CLAIM_REWARD),
        t.addTarget(this, this.onDeepLinkSelected, UTObjectiveEntryView.Event.TAKE_ME_THERE),
        t.addTarget(this, this.onInfoSelected, UTObjectiveEntryView.Event.ENTRY_REWARDS_INFO),
        this.addSubview(t, this.__groupDetails),
        t
    }
    ,
    UTObjectiveGroupView.prototype.onClaimSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTObjectiveGroupView.Event.OBJECTIVE_CLAIM_REWARD, i)
    }
    ,
    UTObjectiveGroupView.prototype.onDeepLinkSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTObjectiveGroupView.Event.TAKE_ME_THERE, i)
    }
    ,
    UTObjectiveGroupView.prototype.onInfoSelected = function(e, t, i) {
        this.isInteractionEnabled() && (t === UTObjectiveGroupProgressionView.Event.REWARDS_INFO ? this._triggerActions(UTObjectiveGroupView.Event.GROUP_REWARDS_INFO, i) : t == UTObjectiveEntryView.Event.ENTRY_REWARDS_INFO ? this._triggerActions(UTObjectiveGroupView.Event.ENTRY_REWARDS_INFO, i) : this._triggerActions(t, i))
    }
    ,
    UTObjectiveGroupView.Event = {
        TAKE_ME_THERE: "UTObjectiveGroupView.TAKE_ME_THERE",
        OBJECTIVE_CLAIM_REWARD: "UTObjectiveGroupView.OBJECTIVE_CLAIM_REWARD",
        GROUP_REWARDS_INFO: "UTObjectiveGroupView.GROUP_REWARDS_INFO",
        ENTRY_REWARDS_INFO: "UTObjectiveGroupView.ENTRY_REWARDS_INFO"
    },
    UTObjectiveGroupView
}(UTTargetActionView);
UTObjectiveGroupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-objective-group"),
        this._objectivesTM = new EAFilterBarView,
        e.appendChild(this._objectivesTM.getRootElement());
        var t = document.createElement("div");
        t.classList.add("ut-objective-group--content");
        var i = document.createElement("div");
        i.classList.add("ut-objective-group--header"),
        this._groupProgression = new UTObjectiveGroupProgressionView,
        i.appendChild(this._groupProgression.getRootElement()),
        t.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-objective-group--details"),
        this.__groupDetails = document.createElement("div"),
        this.__groupDetails.classList.add("ut-objective-group--groups-container"),
        o.appendChild(this.__groupDetails),
        t.appendChild(o),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTObjectiveGroupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._objectivesTM.destroy(),
    this._groupProgression.destroy(),
    this.__groupDetails = null
}
,
UTObjectiveGroupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var TierViewState, UTObjectiveGroupViewController = function(o) {
    function UTObjectiveGroupViewController(e) {
        var t = o.call(this) || this;
        return t.goToLinkController = null,
        t.intervalController = new EAIntervalController(1e4,t.handleEventTimer.bind(t)),
        t.objectivesViewModel = e,
        t
    }
    return __extends(UTObjectiveGroupViewController, o),
    UTObjectiveGroupViewController.prototype.init = function() {
        this.initialized || (o.prototype.init.call(this),
        this.goToLinkController = new UTGoToLinkController,
        this.goToLinkController.init(),
        this.getView().addNavigationTarget(this, this.onTabSelected))
    }
    ,
    UTObjectiveGroupViewController.prototype.dealloc = function() {
        this.goToLinkController && (this.goToLinkController.dealloc(),
        this.goToLinkController = null),
        this.intervalController.dealloc(),
        o.prototype.dealloc.call(this)
    }
    ,
    UTObjectiveGroupViewController.prototype._getViewInstanceFromData = function() {
        return new UTObjectiveGroupView
    }
    ,
    UTObjectiveGroupViewController.prototype.getNavigationTitle = function() {
        var e = this.objectivesViewModel.getCurrentGroup();
        return e ? e.title : ""
    }
    ,
    UTObjectiveGroupViewController.prototype.viewDidAppear = function() {
        o.prototype.viewDidAppear.call(this);
        var e = this.getNavigationController();
        e && this.goToLinkController && this.goToLinkController.setNavigationController(e),
        this.renderView(),
        this.startTimer();
        var t = getDefaultDispatcher();
        t.addObserver(AppNotification.APP_PAUSE, this, this.onAppPaused),
        t.addObserver(AppNotification.APP_RESUME, this, this.onAppResumed);
        var i = this.getView();
        i.addTarget(this, this.onRedirect, UTObjectiveGroupView.Event.TAKE_ME_THERE),
        i.addTarget(this, this.onClaimReward, UTObjectiveGroupView.Event.OBJECTIVE_CLAIM_REWARD),
        i.addTarget(this, this.onSelectGroupRewardInfo, UTObjectiveGroupView.Event.GROUP_REWARDS_INFO),
        i.addTarget(this, this.onSelectEntryRewardInfo, UTObjectiveGroupView.Event.ENTRY_REWARDS_INFO)
    }
    ,
    UTObjectiveGroupViewController.prototype.viewWillDisappear = function() {
        this.intervalController.stop();
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.APP_PAUSE, this),
        e.removeObserver(AppNotification.APP_RESUME, this);
        var t = this.getView();
        t.removeTarget(this, this.onRedirect, UTObjectiveGroupView.Event.TAKE_ME_THERE),
        t.removeTarget(this, this.onClaimReward, UTObjectiveGroupView.Event.OBJECTIVE_CLAIM_REWARD),
        t.removeTarget(this, this.onSelectGroupRewardInfo, UTObjectiveGroupView.Event.GROUP_REWARDS_INFO),
        t.removeTarget(this, this.onSelectEntryRewardInfo, UTObjectiveGroupView.Event.ENTRY_REWARDS_INFO),
        o.prototype.viewWillDisappear.call(this)
    }
    ,
    UTObjectiveGroupViewController.prototype.renderView = function() {
        var r = this
          , s = this.getView();
        s.setupNavigation(this.objectivesViewModel.getCategories(), this.objectivesViewModel.getCurrentCategoryId());
        var e = this.objectivesViewModel.getCurrentCategory()
          , t = this.objectivesViewModel.getCurrentGroup();
        DebugUtils.Assert(JSUtils.isValid(e), "Objective category could not be found."),
        DebugUtils.Assert(JSUtils.isValid(t), "Objective group could not be found."),
        e && t && this.objectivesViewModel.requestGroupDetails(e, t.compositeId).observe(this, function(e, t) {
            if (e.unobserve(r),
            t.success)
                r.objectivesViewModel.setCurrentGroup(t.data.group),
                s.renderGroupProgression(t.data.group),
                s.renderObjectives(r.objectivesViewModel.getCurrentGroupObjectives());
            else if (!t.success) {
                var i = r.objectivesViewModel.getCurrentGroup()
                  , o = !!i && (i.isMilestone() || i.isExpiringMilestone())
                  , n = i && o ? "notification.scmp.milestone.loadFailed" : "notification.scmp.group.loadFailed";
                services.Notification.queue([services.Localization.localize(n), UINotificationType.NEGATIVE])
            }
        })
    }
    ,
    UTObjectiveGroupViewController.prototype.startTimer = function() {
        this.intervalController.start()
    }
    ,
    UTObjectiveGroupViewController.prototype.handleEventTimer = function() {
        var i = this;
        if (this.objectivesViewModel) {
            var e = this.objectivesViewModel.getCampaign()
              , t = this.objectivesViewModel.getCurrentGroup();
            !t || t.isMilestone() || t.hasExpired() || this.getView().updateGroupProgressionTimeRemaining(t.getTimeRemaining());
            function f$(e) {
                i.intervalController.stop();
                var t = new UTSeasonalCampaignPopupViewController(e);
                t.onExit.observe(i, i.onSCMPInfoPopupClosed),
                t.getView().setCancelButtonDisplay(!1),
                gPopupClickShield.setActivePopup(t)
            }
            if (e && e.hasEnded() && (e.hasNextCampaignStarted() || e.isLastCampaign()))
                f$(e.hasUnclaimedRewards() || this.objectivesViewModel.hasUnclaimedGroupRewards() ? "season-rewards" : "season-campaign");
            else
                this.objectivesViewModel.hasUnclaimedExpiredGroups() && f$("group-rewards")
        }
    }
    ,
    UTObjectiveGroupViewController.prototype.claimObjectiveRewards = function(e) {
        var n = this
          , t = this.objectivesViewModel.getCurrentCategory()
          , i = this.objectivesViewModel.getCurrentGroup()
          , r = i ? i.getObjectiveById(e) : null
          , s = services.Localization;
        DebugUtils.Assert(JSUtils.isValid(t), "Missing category when attempting to claim objective rewards"),
        DebugUtils.Assert(JSUtils.isValid(i), "Missing group when attempting to claim objective rewards"),
        DebugUtils.Assert(JSUtils.isValid(r), "Missing objective when attempting to claim objective rewards"),
        t && i && r && this.objectivesViewModel.claimObjectiveRewards(t, i.compositeId, e).observe(this, function(e, t) {
            if (e.unobserve(n),
            TelemetryManager.trackEvent(TelemetryManager.Sections.OBJECTIVES, TelemetryManager.Categories.OBJECTIVE_REWARDS_CLAIMED, "Claim Milestones Rewards"),
            t.success && t.response && !JSUtils.isString(t.response)) {
                services.Notification.queue([s.localize("notification.scmp.claimSuccess"), UINotificationType.POSITIVE]);
                var i = new UTGameRewardsViewController(t.response.rewards);
                i.init(),
                i.modalDisplayDimensions.width = "24em";
                var o = i.getView();
                o.setTitle(s.localize("scmp.objective.rewards.title")),
                o.setDescription(s.localize("scmp.objective.rewards.description", [r ? r.title : ""])),
                o.setButtonText(s.localize("objective.rewards.claim")),
                gPopupClickShield.setActivePopup(i),
                n.renderView()
            } else
                services.Notification.queue([s.localize("notification.scmp.claimFail"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTObjectiveGroupViewController.prototype.onSCMPInfoPopupClosed = function(e, t, i) {
        var a = this;
        if (e.unobserve(this),
        "group-rewards" !== t) {
            services.Objectives.reset(),
            this.objectivesViewModel.currentCategoryId = UTObjectivesViewModel.TabId.SEASON;
            var o = this.getNavigationController();
            o ? o.popViewController() : getAppMain().getRootViewController().setGameViewTab(UTGameTabBarController.TabTag.HOME)
        } else
            services.Objectives.claimExpiredRewards().observe(this, function(e, t) {
                if (e.unobserve(a),
                t.success && t.data) {
                    var i = services.Localization
                      , o = a.getNavigationController()
                      , n = a.objectivesViewModel ? a.objectivesViewModel.getCurrentGroup() : null
                      , r = new UTGameRewardsViewController(t.data.rewards);
                    r.init(),
                    r.modalDisplayDimensions.width = "24em";
                    var s = r.getView();
                    s.setTitle(i.localize("scmp.generic.rewards.title")),
                    s.setDescription(i.localize(0 < t.data.rewards.length ? "objective.rewards.claimAlldescription" : "objective.rewards.autoclaimed")),
                    s.setButtonText(i.localize("objective.rewards.claim")),
                    gPopupClickShield.setActivePopup(r),
                    o && n && n.hasExpired() ? o.popViewController() : a.startTimer()
                }
            })
    }
    ,
    UTObjectiveGroupViewController.prototype.onTabSelected = function(e, t, i) {
        var o = JSUtils.isNumber(i.id) ? i.id : parseInt(i.id, 10);
        if (this.objectivesViewModel && o !== this.objectivesViewModel.getCurrentCategoryId()) {
            var n = this.getNavigationController();
            this.objectivesViewModel.setCurrentCategoryId(o),
            n && n.popViewController()
        }
    }
    ,
    UTObjectiveGroupViewController.prototype.onRedirect = function(e, t, i) {
        if (this.objectivesViewModel && this.goToLinkController) {
            var o = this.objectivesViewModel.getCurrentGroupObjectiveById(i.id);
            o && this.goToLinkController.attemptNavigation(o.link) && TelemetryManager.trackEvent(TelemetryManager.Sections.OBJECTIVES, TelemetryManager.Categories.BUTTON_PRESS, "Take Me There - " + o.link)
        }
    }
    ,
    UTObjectiveGroupViewController.prototype.onClaimReward = function(e, t, i) {
        this.claimObjectiveRewards(i.id)
    }
    ,
    UTObjectiveGroupViewController.prototype.onSelectGroupRewardInfo = function(e, t, i) {
        var o = this.objectivesViewModel.getCurrentGroup()
          , n = o ? [o.rewards] : []
          , r = new UTRewardSelectionChoiceViewController(n);
        r.setTitleText(services.Localization.localize("scmp.objectivegroup.rewards.title", [o ? o.title : ""])),
        r.setClaimableState(!!o && o.isClaimable()),
        r.getView().addTarget(this, this.onGroupRewardChosen, UTRewardSelectionChoiceView.Event.CONFIRM),
        gPopupClickShield.setActivePopup(r)
    }
    ,
    UTObjectiveGroupViewController.prototype.onSelectEntryRewardInfo = function(e, t, i) {
        var o = this
          , n = i.id
          , r = this.objectivesViewModel.getCurrentGroupObjectiveById(n)
          , s = i.rewards ? [i.rewards] : []
          , a = new UTRewardSelectionChoiceViewController(s);
        a.setTitleText(i.title ? i.title : ""),
        a.setClaimableState(!!r && r.isClaimable()),
        a.getView().addTarget(this, function(e, t, i) {
            o.claimObjectiveRewards(n)
        }, UTRewardSelectionChoiceView.Event.CONFIRM),
        gPopupClickShield.setActivePopup(a)
    }
    ,
    UTObjectiveGroupViewController.prototype.onGroupRewardChosen = function(e, t, i) {
        var o = this;
        e.removeTarget(this, this.onGroupRewardChosen, UTRewardSelectionChoiceView.Event.CONFIRM);
        var n = this.objectivesViewModel.getCurrentCategory()
          , r = this.objectivesViewModel.getCurrentGroup();
        DebugUtils.Assert(JSUtils.isValid(n), "Missing category in objectives view model."),
        DebugUtils.Assert(JSUtils.isValid(r), "Missing group in objectives view model."),
        n && r && this.objectivesViewModel.claimGroupRewards(n, r.compositeId).observe(this, function(e, t) {
            if (e.unobserve(o),
            TelemetryManager.trackEvent(TelemetryManager.Sections.OBJECTIVES, TelemetryManager.Categories.OBJECTIVE_REWARDS_CLAIMED, "Claim Season Objectives Rewards"),
            t.success) {
                var i = o.getNavigationController();
                services.Notification.queue([services.Localization.localize("notification.scmp.claimSuccess"), UINotificationType.POSITIVE]),
                i && i.popViewController()
            } else
                services.Notification.queue([services.Localization.localize("notification.scmp.claimFail"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTObjectiveGroupViewController.prototype.onAppPaused = function(e, t, i) {
        this.intervalController.stop()
    }
    ,
    UTObjectiveGroupViewController.prototype.onAppResumed = function(e, t, i) {
        var o = this.getNavigationController()
          , n = this.objectivesViewModel ? this.objectivesViewModel.getCurrentGroup() : null;
        o && n && n.hasExpired() ? o.popViewController() : this.startTimer()
    }
    ,
    UTObjectiveGroupViewController
}(UTViewController);
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
!function(e) {
    e[e.NONE = 0] = "NONE",
    e[e.IN_PROGRESS = 1] = "IN_PROGRESS",
    e[e.REDEEM_REWARDS = 2] = "REDEEM_REWARDS",
    e[e.COMPLETE = 3] = "COMPLETE",
    e[e.SURPASSED = 4] = "SURPASSED",
    e[e.OBTAINED = 5] = "OBTAINED"
}(TierViewState = TierViewState || {});
var UTTierView = function(e) {
    function UTTierView() {
        return e.call(this) || this
    }
    return __extends(UTTierView, e),
    UTTierView.prototype.init = function() {
        e.prototype.init.call(this),
        this.__overlayText.textContent = services.Localization.localize("common.event.complete"),
        this.setInteractionState(!0)
    }
    ,
    UTTierView.prototype.dealloc = function() {
        this._rewardsCarousel && this.resetRewardsCarousel(),
        e.prototype.dealloc.call(this)
    }
    ,
    UTTierView.prototype.setId = function(e) {
        this.id = e
    }
    ,
    UTTierView.prototype.setStyle = function(e) {
        this.removeClass("horizontal vertical"),
        this.addClass(e)
    }
    ,
    UTTierView.prototype.setTierLevelRewardOptions = function(e) {}
    ,
    UTTierView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTTierView.prototype.setState = function(e) {
        if (e === TierViewState.NONE)
            this.removeClass("in-progress redeem complete obtained");
        else {
            var t = e === TierViewState.REDEEM_REWARDS;
            services.Localization;
            this.toggleClass("in-progress", e === TierViewState.IN_PROGRESS),
            this.toggleClass("redeem", t),
            this.toggleClass("complete", e === TierViewState.COMPLETE),
            this.toggleClass("obtained", e === TierViewState.OBTAINED)
        }
    }
    ,
    UTTierView.prototype.resetRewardsCarousel = function() {
        this._rewardsCarousel.reset()
    }
    ,
    UTTierView.prototype.toggleRewardsInfoButton = function(e) {
        this._rewardsInfoBtn.setDisplay(e),
        this._rewardsInfoBtn.setInteractionState(e)
    }
    ,
    UTTierView.prototype.onButtonSelected = function(e, t, i) {}
    ,
    UTTierView
}(UTTargetActionView);
UTTierView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tier-view"),
        this.__overlay = document.createElement("div"),
        this.__overlay.classList.add("ut-tier-view--overlay"),
        this.__overlayText = document.createElement("span"),
        this.__overlay.appendChild(this.__overlayText),
        e.appendChild(this.__overlay);
        var t = document.createElement("section");
        t.classList.add("ut-tier-view--meta"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-tier-view--title"),
        t.appendChild(this.__title),
        this.__label = document.createElement("div"),
        this.__label.classList.add("ut-tier-view--label"),
        t.appendChild(this.__label),
        this._claimBtn = new UTStandardButtonControl,
        this._claimBtn.getRootElement().classList.add("call-to-action"),
        this._claimBtn.getRootElement().classList.add("mini"),
        this._claimBtn.getRootElement().classList.add("ut-tier-view--button"),
        t.appendChild(this._claimBtn.getRootElement()),
        e.appendChild(t),
        this._rewardsCarousel = new UTCampaignRewardsCarouselView,
        this._rewardsCarousel.getRootElement().classList.add("carousel"),
        e.appendChild(this._rewardsCarousel.getRootElement()),
        this.__choiceNumContainer = document.createElement("div"),
        this.__choiceNumContainer.classList.add("ut-tier-view--choices"),
        this.__choiceNum = document.createElement("span"),
        this.__choiceNumContainer.appendChild(this.__choiceNum),
        e.appendChild(this.__choiceNumContainer),
        this._rewardsInfoBtn = new UTImageButtonControl,
        this._rewardsInfoBtn.getRootElement().classList.add("ut-tier-view--button--info"),
        this._rewardsInfoBtn.getRootElement().classList.add("info-btn"),
        e.appendChild(this._rewardsInfoBtn.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTierView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__overlay = null,
    this.__overlayText = null,
    this.__title = null,
    this.__label = null,
    this._claimBtn.destroy(),
    this._rewardsCarousel.destroy(),
    this.__choiceNumContainer = null,
    this.__choiceNum = null,
    this._rewardsInfoBtn.destroy()
}
,
UTTierView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTCampaignTierView = function(t) {
    function UTCampaignTierView() {
        var e = t.call(this) || this;
        return e.id = -1,
        e.levelRewards = [],
        e
    }
    return __extends(UTCampaignTierView, t),
    UTCampaignTierView.prototype.init = function() {
        t.prototype.init.call(this),
        this._rewardsInfoBtn.init(),
        this._rewardsInfoBtn.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._rewardsInfoBtn.setInteractionState(!1),
        this._claimBtn.init(),
        this._claimBtn.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._claimBtn.setInteractionState(!1),
        this.setInteractionState(!0)
    }
    ,
    UTCampaignTierView.prototype.setState = function(e) {
        if (e === TierViewState.NONE)
            this.removeClass("in-progress redeem complete");
        else {
            var t = e === TierViewState.REDEEM_REWARDS
              , i = services.Localization;
            this.toggleClass("in-progress", e === TierViewState.IN_PROGRESS),
            this.toggleClass("redeem", t),
            this.toggleClass("complete", e === TierViewState.COMPLETE),
            this._claimBtn.setInteractionState(t),
            this._claimBtn.getRootElement().textContent = t ? i.localize("scmp.campaign.claim") : i.localize("scmp.campaign.complete")
        }
    }
    ,
    UTCampaignTierView.prototype.setTierLevelRewardOptions = function(e) {
        this.levelRewards = e
    }
    ,
    UTCampaignTierView.prototype.setupRewardsCarousel = function(e) {
        0 !== this.levelRewards.length ? (0 < e && this._rewardsCarousel.setDefaultIndex(e),
        1 < this.levelRewards.length && (this.__choiceNum.textContent = services.Localization.localize("scmp.campaign.reward.optionNumber", [(e + 1).toString()]),
        DOMKit.addClass(this.__choiceNumContainer, "ut-tier-view--choices--visible"),
        this._rewardsCarousel.setAfterChangeFunction(this.onCarouselSlideChange.bind(this))),
        this._rewardsCarousel.setupCampaignRewards(this.levelRewards)) : DebugUtils.Assert(!1, "Tried to setup rewards for a level that has no reward data.")
    }
    ,
    UTCampaignTierView.prototype.onCarouselSlideChange = function() {
        this.__choiceNum.textContent = services.Localization.localize("scmp.campaign.reward.optionNumber", [(this._rewardsCarousel.getCurrentSlide() + 1).toString()])
    }
    ,
    UTCampaignTierView.prototype.onButtonSelected = function(e, t, i) {
        if (this.isInteractionEnabled()) {
            var o = {
                id: this.id,
                rewardOptions: this.levelRewards
            };
            e === this._rewardsInfoBtn && this._triggerActions(UTCampaignTierView.Event.REWARDS_INFO, o),
            e === this._claimBtn && this._triggerActions(UTCampaignTierView.Event.CLAIM_REWARD, o)
        }
    }
    ,
    UTCampaignTierView.prototype.setProgress = function(e) {
        var t = services.Localization;
        this.__label.textContent = 0 < e ? t.localize("scmp.campaign.xpNeeded", [t.localizeNumber(e)]) : ""
    }
    ,
    UTCampaignTierView.Event = {
        REWARDS_INFO: "UTCampaignTierView.Event.REWARDS_INFO",
        CLAIM_REWARD: "UTCampaignTierView.Event.CLAIM_REWARD"
    },
    UTCampaignTierView
}(UTTierView);
UTCampaignTierView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tier-view"),
        this.__overlay = document.createElement("div"),
        this.__overlay.classList.add("ut-tier-view--overlay"),
        this.__overlayText = document.createElement("span"),
        this.__overlay.appendChild(this.__overlayText),
        e.appendChild(this.__overlay);
        var t = document.createElement("section");
        t.classList.add("ut-tier-view--meta"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-tier-view--title"),
        t.appendChild(this.__title),
        this.__label = document.createElement("div"),
        this.__label.classList.add("ut-tier-view--label"),
        t.appendChild(this.__label),
        this._claimBtn = new UTStandardButtonControl,
        this._claimBtn.getRootElement().classList.add("call-to-action"),
        this._claimBtn.getRootElement().classList.add("mini"),
        this._claimBtn.getRootElement().classList.add("ut-tier-view--button"),
        t.appendChild(this._claimBtn.getRootElement()),
        e.appendChild(t),
        this._rewardsCarousel = new UTCampaignRewardsCarouselView,
        this._rewardsCarousel.getRootElement().classList.add("carousel"),
        e.appendChild(this._rewardsCarousel.getRootElement()),
        this.__choiceNumContainer = document.createElement("div"),
        this.__choiceNumContainer.classList.add("ut-tier-view--choices"),
        this.__choiceNum = document.createElement("span"),
        this.__choiceNumContainer.appendChild(this.__choiceNum),
        e.appendChild(this.__choiceNumContainer),
        this._rewardsInfoBtn = new UTImageButtonControl,
        this._rewardsInfoBtn.getRootElement().classList.add("ut-tier-view--button--info"),
        this._rewardsInfoBtn.getRootElement().classList.add("info-btn"),
        e.appendChild(this._rewardsInfoBtn.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTCampaignTierView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__overlay = null,
    this.__overlayText = null,
    this.__title = null,
    this.__label = null,
    this._claimBtn.destroy(),
    this._rewardsCarousel.destroy(),
    this.__choiceNumContainer = null,
    this.__choiceNum = null,
    this._rewardsInfoBtn.destroy()
}
,
UTCampaignTierView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
var TierProgressBarDirection;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
!function(e) {
    e[e.HORIZONTAL = 0] = "HORIZONTAL",
    e[e.VERTICAL = 1] = "VERTICAL"
}(TierProgressBarDirection = TierProgressBarDirection || {});
var UTTierProgressBarView = function(t) {
    function UTTierProgressBarView() {
        var e = t.call(this) || this;
        return e.direction = TierProgressBarDirection.HORIZONTAL,
        e
    }
    return __extends(UTTierProgressBarView, t),
    UTTierProgressBarView.prototype.setProgress = function(e) {
        (e = Math.max(Math.min(e, 100), 0)) !== this.progress && (this.progress = e,
        this.direction === TierProgressBarDirection.VERTICAL ? this.__fill.style.height = this.progress + "%" : this.__fill.style.width = this.progress + "%")
    }
    ,
    UTTierProgressBarView.prototype.setProgressMarker = function(e) {
        this.__progressLabel.textContent = JSUtils.isNumber(e) ? e.toString() : e
    }
    ,
    UTTierProgressBarView.prototype.addProgressMarkerClass = function(e) {
        this.__fill.className = this.__fill.className + " " + e
    }
    ,
    UTTierProgressBarView.prototype.setTierState = function(e) {
        this.removeClass("inprogress complete redeem"),
        "" !== e && this.addClass(e)
    }
    ,
    UTTierProgressBarView
}(UTProgressBarView);
UTTierProgressBarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tier-progress-bar--section"),
        this.__fill = document.createElement("div"),
        this.__fill.classList.add("ut-tier-progress-bar--fill"),
        this.__progressLabel = document.createElement("span"),
        this.__fill.appendChild(this.__progressLabel),
        e.appendChild(this.__fill);
        var t = document.createElement("div");
        t.classList.add("ut-tier-progress-bar--label"),
        this.__label = document.createElement("span"),
        t.appendChild(this.__label),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTierProgressBarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__fill = null,
    this.__progressLabel = null,
    this.__label = null
}
,
UTTierProgressBarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTObjectiveSeasonView = function(t) {
    function UTObjectiveSeasonView() {
        var e = t.call(this) || this;
        return e.activeProgressBar = null,
        e.levels = [],
        e.progressBars = [],
        e
    }
    return __extends(UTObjectiveSeasonView, t),
    UTObjectiveSeasonView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTObjectiveSeasonView.prototype.dealloc = function() {
        this.clearViews(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTObjectiveSeasonView.prototype.clearViews = function() {
        this.levels.forEach(function(e) {
            return e.dealloc()
        }),
        this.progressBars.forEach(function(e) {
            return e.dealloc()
        }),
        this.levels = [],
        this.progressBars = [],
        this.activeProgressBar = null
    }
    ,
    UTObjectiveSeasonView.prototype.scrollToActiveCampaignTier = function() {
        this.activeProgressBar && (isPhone() ? this.getRootElement().scrollTop = this.activeProgressBar.getRootElement().offsetTop + this.__campaignHeader.clientHeight - 32 : this.__objectivesDetailsContainer.scrollLeft = this.activeProgressBar.getRootElement().offsetLeft)
    }
    ,
    UTObjectiveSeasonView.prototype.updateCampaignTimeRemaining = function(e) {
        this.__campaignTimeRemaining.textContent = services.Localization.localize("scmp.campaign.countdown", [services.Localization.localizeTimeRemaining(e)])
    }
    ,
    UTObjectiveSeasonView.prototype.generateCampaignTierProgress = function(e, t, i) {
        var o = new UTTierProgressBarView;
        if (o.init(),
        o.setProgressLabel(e.id.toString()),
        o.direction = isPhone() ? TierProgressBarDirection.VERTICAL : TierProgressBarDirection.HORIZONTAL,
        t <= i) {
            var n = i < e.xp ? (i - t) / (e.xp - t) * 100 : 100;
            o.setProgress(n),
            o.setProgressMarker(i),
            100 <= n ? o.setTierState(e.isClaimable(i) ? "redeem" : "complete") : o.setTierState("inprogress")
        }
        return this.addSubview(o, this.__progressView),
        !this.activeProgressBar && (e.isClaimable(i) || t <= i && i < e.xp) && (this.activeProgressBar = o),
        o
    }
    ,
    UTObjectiveSeasonView.prototype.generateCampaignTierTile = function(e, t, i) {
        var o = new UTCampaignTierView
          , n = e.isClaimable(i)
          , r = TierViewState.NONE;
        return t <= i && i < e.xp ? r = TierViewState.IN_PROGRESS : i >= e.xp && (r = n ? TierViewState.REDEEM_REWARDS : TierViewState.COMPLETE),
        o.init(),
        o.setId(e.id),
        o.setStyle(isPhone() ? "vertical" : "horizontal"),
        o.setTierLevelRewardOptions(e.rewardOptions),
        o.setTitle(e.title),
        o.setProgress(Math.max(e.xp - i, 0)),
        o.setState(r),
        o.toggleRewardsInfoButton(e.areRewardsVisible() && (i < e.xp || n) && (1 < e.rewardOptions.length || 1 < e.rewardOptions[0].rewards.length)),
        o.addTarget(this, this.onRewardInfoSelected, UTCampaignTierView.Event.REWARDS_INFO),
        o.addTarget(this, this.onClaimSelected, UTCampaignTierView.Event.CLAIM_REWARD),
        this.addSubview(o, this.__tierView),
        o
    }
    ,
    UTObjectiveSeasonView.prototype.setCampaign = function(i) {
        var o = this;
        this.clearViews(),
        DOMKit.removeClass(this.__progressView, "horizontal vertical"),
        DOMKit.addClass(this.__progressView, isPhone() ? "vertical" : "horizontal"),
        this.__campaignTitle.textContent = i.title,
        this.updateCampaignTimeRemaining(i.getTimeRemaining());
        var n = 0;
        i.getLevels().forEach(function(e) {
            var t = n + 1;
            n = e.xp,
            o.progressBars.push(o.generateCampaignTierProgress(e, t, i.xp)),
            o.levels.push(o.generateCampaignTierTile(e, t, i.xp))
        }, this),
        this.layoutSubviews(),
        this.levels.forEach(function(e, t) {
            e.setupRewardsCarousel(i.getLevels()[t].defaultRewardIndex)
        }, this),
        this.scrollToActiveCampaignTier()
    }
    ,
    UTObjectiveSeasonView.prototype.onRewardInfoSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTObjectiveSeasonView.Event.REWARD_INFO, i)
    }
    ,
    UTObjectiveSeasonView.prototype.onClaimSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTObjectiveSeasonView.Event.CLAIM_REWARD, i)
    }
    ,
    UTObjectiveSeasonView.Event = {
        CLAIM_REWARD: "UTObjectiveSeasonView.CLAIM_REWARD",
        REWARD_INFO: "UTObjectiveSeasonView.REWARD_INFO"
    },
    UTObjectiveSeasonView
}(UTTargetActionView);
UTObjectiveSeasonView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-objective-season-view"),
        this.__campaignHeader = document.createElement("div"),
        this.__campaignHeader.classList.add("ut-objective-season-view--header");
        var t = document.createElement("div");
        t.classList.add("ut-objective-season-view--header-content"),
        this.__campaignTitle = document.createElement("h1"),
        this.__campaignTitle.classList.add("ut-objective-season-view--title"),
        t.appendChild(this.__campaignTitle),
        this.__campaignTimeRemaining = document.createElement("span"),
        this.__campaignTimeRemaining.classList.add("ut-objective-season-view--countdown"),
        t.appendChild(this.__campaignTimeRemaining),
        this.__campaignHeader.appendChild(t),
        e.appendChild(this.__campaignHeader),
        this.__objectivesDetailsContainer = document.createElement("div"),
        this.__objectivesDetailsContainer.classList.add("ut-objective-season-view--details");
        var i = document.createElement("div");
        i.classList.add("ut-objective-season-view--campaign"),
        this.__progressView = document.createElement("div"),
        this.__progressView.classList.add("ut-tier-progress-bar"),
        i.appendChild(this.__progressView),
        this.__tierView = document.createElement("div"),
        this.__tierView.classList.add("ut-objective-season-view--tiers"),
        i.appendChild(this.__tierView),
        this.__objectivesDetailsContainer.appendChild(i),
        e.appendChild(this.__objectivesDetailsContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTObjectiveSeasonView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__campaignHeader = null,
    this.__campaignTitle = null,
    this.__campaignTimeRemaining = null,
    this.__objectivesDetailsContainer = null,
    this.__progressView = null,
    this.__tierView = null
}
,
UTObjectiveSeasonView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTObjectiveSeasonViewController = function(i) {
    function UTObjectiveSeasonViewController(e) {
        var t = i.call(this) || this;
        return t.intervalController = new EAIntervalController(1e4,t.handleEventTimer.bind(t)),
        t.objectivesViewModel = e,
        t
    }
    return __extends(UTObjectiveSeasonViewController, i),
    UTObjectiveSeasonViewController.prototype.init = function() {
        i.prototype.init.call(this),
        this.intervalController.init()
    }
    ,
    UTObjectiveSeasonViewController.prototype.dealloc = function() {
        this.intervalController.dealloc(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTObjectiveSeasonViewController.prototype._getTelemetryId = function() {
        return "Objectives - Season Progress"
    }
    ,
    UTObjectiveSeasonViewController.prototype._getViewInstanceFromData = function() {
        return new UTObjectiveSeasonView
    }
    ,
    UTObjectiveSeasonViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.objectives")
    }
    ,
    UTObjectiveSeasonViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this),
        this.intervalController.start(),
        this.loadActiveSeasonCampaign();
        var e = this.getView();
        e.addTarget(this, this.onSelectRewardInfo, UTObjectiveSeasonView.Event.REWARD_INFO),
        e.addTarget(this, this.onClaimLevelReward, UTObjectiveSeasonView.Event.CLAIM_REWARD);
        var t = getDefaultDispatcher();
        t.addObserver(AppNotification.APP_PAUSE, this, this.onAppPaused),
        t.addObserver(AppNotification.APP_RESUME, this, this.onAppResumed),
        TelemetryManager.trackPage(TelemetryManager.Sections.OBJECTIVES, "Season Progress")
    }
    ,
    UTObjectiveSeasonViewController.prototype.viewWillDisappear = function() {
        i.prototype.viewWillDisappear.call(this),
        this.intervalController.stop();
        var e = this.getView();
        e.removeTarget(this, this.onSelectRewardInfo, UTObjectiveSeasonView.Event.REWARD_INFO),
        e.removeTarget(this, this.onClaimLevelReward, UTObjectiveSeasonView.Event.CLAIM_REWARD);
        var t = getDefaultDispatcher();
        t.removeObserver(AppNotification.APP_PAUSE, this),
        t.removeObserver(AppNotification.APP_RESUME, this)
    }
    ,
    UTObjectiveSeasonViewController.prototype.loadActiveSeasonCampaign = function() {
        var o = this;
        this.objectivesViewModel.requestActiveCampaignDetails().observe(this, function(e, t) {
            if (e.unobserve(o),
            t.success && t.data && t.data.campaign) {
                var i = t.data.campaign;
                o.isViewDisplayed() && i.hasStarted() && o.getView().setCampaign(i)
            } else
                services.Notification.queue([services.Localization.localize("notification.scmp.campaign.loadFailed"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTObjectiveSeasonViewController.prototype.triggerConsolidatedRewardsPopup = function(e, t, i, o) {
        var n = new UTRewardSelectionChoiceViewController(e);
        n.setTitleText(t),
        n.setClaimableState(i),
        n.getView().addTarget(this, o, UTRewardSelectionChoiceView.Event.CONFIRM),
        gPopupClickShield.setActivePopup(n)
    }
    ,
    UTObjectiveSeasonViewController.prototype.handleEventTimer = function() {
        var e = this.objectivesViewModel.getCampaign();
        this.getView().updateCampaignTimeRemaining(e ? e.getTimeRemaining() : 0)
    }
    ,
    UTObjectiveSeasonViewController.prototype.onSelectRewardInfo = function(e, t, i) {
        if (this.objectivesViewModel && 0 < i.rewardOptions.length) {
            var o = this.objectivesViewModel.getCampaign()
              , n = i.id
              , r = o ? JSUtils.find(o.getLevels(), function(e) {
                return e.id === n
            }) : null;
            r ? o && (this.objectivesViewModel.setSelectedRewardId(n),
            this.triggerConsolidatedRewardsPopup(i.rewardOptions, services.Localization.localize("scmp.campaign.rewards.title", [n.toString()]), r.isClaimable(o.xp), this.onCampaignRewardChosen)) : services.Notification.queue([services.Localization.localize("notification.scmp.rewardsInfoFailed"), UINotificationType.NEGATIVE])
        }
    }
    ,
    UTObjectiveSeasonViewController.prototype.onClaimLevelReward = function(e, t, i) {
        var n = this;
        if (1 < i.rewardOptions.length)
            this.onSelectRewardInfo(e, t, i);
        else {
            var r = services.Localization
              , o = this.objectivesViewModel.getCampaign()
              , s = i.id
              , a = o ? JSUtils.find(o.getLevels(), function(e) {
                return e.id === s
            }) : null;
            if (a) {
                this.objectivesViewModel.setSelectedRewardId(s);
                var l = i.rewardOptions[0];
                this.objectivesViewModel.claimLevelRewards(l.id).observe(this, function(e, t) {
                    n.onRewardClaimed(e, t);
                    var i = new UTGameRewardsViewController(l.rewards);
                    i.init(),
                    i.modalDisplayDimensions.width = "24em";
                    var o = i.getView();
                    o.setTitle(r.localize("scmp.level.rewards.title")),
                    o.setDescription(r.localize("scmp.level.rewards.description", [a.title])),
                    o.setButtonText(r.localize("objective.rewards.claim")),
                    gPopupClickShield.setActivePopup(i)
                })
            } else
                services.Notification.queue([r.localize("notification.scmp.rewardsInfoFailed"), UINotificationType.NEGATIVE])
        }
    }
    ,
    UTObjectiveSeasonViewController.prototype.onCampaignRewardChosen = function(e, t, i) {
        var c = this;
        e.removeTarget(this, this.onCampaignRewardChosen, UTRewardSelectionChoiceView.Event.CONFIRM),
        this.objectivesViewModel.claimLevelRewards(i.selectedId).observe(this, function(e, t) {
            var i = !1
              , o = !1
              , n = !1
              , r = !1
              , s = !1
              , a = [];
            if (t.data && t.data.rewards.forEach(function(e) {
                i = i || e.isCoin,
                o = o || e.isItem,
                n = n || e.isPack,
                r = r || e.isChampionQualificationPoints,
                s = s || e.isXP,
                e.item && a.push(e.item)
            }, c),
            o && (services.Notification.queue([services.Localization.localize("notification.item.added"), UINotificationType.POSITIVE]),
            repositories.Item.setDirty(ItemPile.PURCHASED),
            getDefaultDispatcher().notify(AppNotification.UNASSIGNED_ITEM_ADDED, c, {
                items: a
            })),
            n) {
                services.Notification.queue([services.Localization.localize("notification.pack.added"), UINotificationType.POSITIVE]);
                var l = services.User.getUser();
                l && l.incrementNumUnopenedPacks()
            }
            i && (services.Notification.queue([services.Localization.localize("notification.coins.added"), UINotificationType.POSITIVE]),
            services.User.requestCurrencies()),
            r && services.Notification.queue([services.Localization.localize("notification.championsPoints.added"), UINotificationType.POSITIVE]),
            s && (services.Notification.queue([services.Localization.localize("notification.xp.added"), UINotificationType.POSITIVE]),
            services.Objectives.reset()),
            c.onRewardClaimed(e, t)
        })
    }
    ,
    UTObjectiveSeasonViewController.prototype.onRewardClaimed = function(e, t) {
        e.unobserve(this),
        TelemetryManager.trackEvent(TelemetryManager.Sections.OBJECTIVES, TelemetryManager.Categories.OBJECTIVE_REWARDS_CLAIMED, "Claim Seasonal Progress Rewards"),
        t.success ? (services.Notification.queue([services.Localization.localize("notification.scmp.claimSuccess"), UINotificationType.POSITIVE]),
        this.loadActiveSeasonCampaign()) : services.Notification.queue([services.Localization.localize("notification.scmp.claimFail"), UINotificationType.NEGATIVE]),
        this.objectivesViewModel && this.objectivesViewModel.resetSelectedRewardId()
    }
    ,
    UTObjectiveSeasonViewController.prototype.onAppPaused = function(e, t, i) {
        this.intervalController.stop()
    }
    ,
    UTObjectiveSeasonViewController.prototype.onAppResumed = function(e, t, i) {
        this.intervalController.start()
    }
    ,
    UTObjectiveSeasonViewController
}(UTViewController)
  , UTSeasonalCampaignPopupView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTSeasonalCampaignPopupView() {
        return e.call(this) || this
    }
    return __extends(UTSeasonalCampaignPopupView, e),
    UTSeasonalCampaignPopupView.prototype.init = function() {
        e.prototype.init.call(this),
        this._btnCancel.init(),
        this._btnCancel.addTarget(this, this.handleButtonEvent, EventType.TAP),
        this._btnConfirm.init(),
        this._btnConfirm.addTarget(this, this.handleButtonEvent, EventType.TAP)
    }
    ,
    UTSeasonalCampaignPopupView.prototype.setTitle = function(e) {
        this.__titleText.textContent = e
    }
    ,
    UTSeasonalCampaignPopupView.prototype.setContent = function(e) {
        this.__contentText.textContent = e
    }
    ,
    UTSeasonalCampaignPopupView.prototype.setConfirmButtonLabel = function(e) {
        this._btnConfirm.setText(e)
    }
    ,
    UTSeasonalCampaignPopupView.prototype.setCancelButtonLabel = function(e) {
        this._btnCancel.setText(e)
    }
    ,
    UTSeasonalCampaignPopupView.prototype.setCancelButtonDisplay = function(e) {
        this._btnCancel.setDisplay(e)
    }
    ,
    UTSeasonalCampaignPopupView.prototype.handleButtonEvent = function(e, t, i) {
        t === EventType.TAP && (e === this._btnConfirm ? this._triggerActions(UTSeasonalCampaignPopupView.Event.CONFIRM) : e === this._btnCancel && this._triggerActions(UTSeasonalCampaignPopupView.Event.CANCEL))
    }
    ,
    UTSeasonalCampaignPopupView.Event = {
        CANCEL: "UTSeasonalCampaignPopupView.CANCEL",
        CONFIRM: "UTSeasonalCampaignPopupView.CONFIRM"
    },
    UTSeasonalCampaignPopupView
}(UTTargetActionView));
UTSeasonalCampaignPopupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-scmp-info");
        var t = document.createElement("header");
        this.__titleText = document.createElement("h1"),
        t.appendChild(this.__titleText),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("bodySection"),
        this.__contentText = document.createElement("p"),
        i.appendChild(this.__contentText),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-button-group"),
        this._btnCancel = new UTGroupButtonControl,
        this._btnCancel.getRootElement().classList.add("negative"),
        o.appendChild(this._btnCancel.getRootElement()),
        this._btnConfirm = new UTGroupButtonControl,
        o.appendChild(this._btnConfirm.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSeasonalCampaignPopupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__titleText = null,
    this.__contentText = null,
    this._btnCancel.destroy(),
    this._btnConfirm.destroy()
}
,
UTSeasonalCampaignPopupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSeasonalCampaignPopupViewController = function(r) {
    function UTSeasonalCampaignPopupViewController(e) {
        var t = r.call(this) || this;
        return t.type = e,
        t
    }
    return __extends(UTSeasonalCampaignPopupViewController, r),
    UTSeasonalCampaignPopupViewController.prototype._getViewInstanceFromData = function() {
        return new UTSeasonalCampaignPopupView
    }
    ,
    UTSeasonalCampaignPopupViewController.prototype.viewDidAppear = function() {
        r.prototype.viewDidAppear.call(this);
        var e, t, i, o = services.Localization, n = this.getView();
        switch (this.type) {
        case "season-campaign":
            e = o.localize("scmp.popup.campaignExpired.title"),
            t = o.localize("scmp.popup.campaignExpired.message"),
            i = o.localize("scmp.popup.campaignExpired.button");
            break;
        case "season-rewards":
            e = o.localize("scmp.popup.claimCampaignExpired.title"),
            t = o.localize("scmp.popup.claimCampaignExpired.message"),
            i = o.localize("scmp.popup.claimCampaignExpired.button");
            break;
        case "group-rewards":
            e = o.localize("scmp.popup.claimGroupExpired.title"),
            t = o.localize("scmp.popup.claimGroupExpired.message"),
            i = o.localize("scmp.popup.claimGroupExpired.button")
        }
        n.setTitle(e),
        n.setContent(t),
        n.setConfirmButtonLabel(i),
        n.setCancelButtonLabel(o.localize("common.dialog.cancel")),
        n.addTarget(this, this.onOptionButtonSelected, UTSeasonalCampaignPopupView.Event.CONFIRM),
        n.addTarget(this, this.onOptionButtonSelected, UTSeasonalCampaignPopupView.Event.CANCEL)
    }
    ,
    UTSeasonalCampaignPopupViewController.prototype.viewWillDisappear = function() {
        r.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this.onOptionButtonSelected, UTSeasonalCampaignPopupView.Event.CONFIRM),
        e.removeTarget(this, this.onOptionButtonSelected, UTSeasonalCampaignPopupView.Event.CANCEL)
    }
    ,
    UTSeasonalCampaignPopupViewController.prototype.onOptionButtonSelected = function(e, t, i) {
        this.onExit.notify(this.type, t)
    }
    ,
    UTSeasonalCampaignPopupViewController
}(BasePopupViewController)
  , UTDonutGraphView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTDonutGraphView() {
        var e = t.call(this) || this;
        return e.donutState = UTDonutGraphView.State.NONE,
        e.donutType = UTDonutGraphView.Type.HALF,
        e.lineWidth = 20,
        e.selectedLineWidth = 30,
        e.width = 160,
        e.isRTL = !1,
        e
    }
    return __extends(UTDonutGraphView, t),
    UTDonutGraphView.prototype.init = function() {
        t.prototype.init.call(this),
        this.ctx = this.__graphCanvas.getContext("2d"),
        this.setTypeClass(this.donutType),
        this.isRTL = services.Localization.locale.isRTL(),
        this.toggleLabelDisplay(!1)
    }
    ,
    UTDonutGraphView.prototype.dealloc = function() {
        var e = this.getRootElement();
        e && (e.width = 0,
        e.height = 0),
        this.ctx = null,
        t.prototype.dealloc.call(this)
    }
    ,
    UTDonutGraphView.prototype.setWidth = function(e) {
        var t = this.getRootElement();
        this.width = 0 < e ? e : this.width;
        var i = this.donutType === UTDonutGraphView.Type.HALF ? this.width / 2 : this.width
          , o = this.width + "px"
          , n = i + "px";
        t.style.width = o,
        t.style.height = n,
        this.__graphCanvas.style.width = o,
        this.__graphCanvas.style.height = n,
        200 <= this.width ? this.addClass(UTDonutGraphView.LabelSize.LARGE) : this.removeClass(UTDonutGraphView.LabelSize.LARGE)
    }
    ,
    UTDonutGraphView.prototype.setData = function(e, t) {
        if (this.__graphCanvas.width = this.width,
        this.__graphCanvas.height = this.donutType === UTDonutGraphView.Type.HALF ? this.width / 2 : this.width,
        this.ctx) {
            var i = this.__graphCanvas.width
              , o = this.__graphCanvas.height
              , n = i / 2
              , r = this.donutType === UTDonutGraphView.Type.HALF ? o : o / 2
              , s = (i - this.selectedLineWidth) / 2
              , a = this.donutType === UTDonutGraphView.Type.HALF ? 1 : 2;
            this.ctx.beginPath(),
            this.ctx.lineWidth = this.lineWidth,
            this.ctx.strokeStyle = UTDonutGraphView.BACKGROUND_COLOR,
            this.ctx.arc(n, r, s, Math.PI * a, 0 * Math.PI),
            this.ctx.stroke();
            for (var l = this.isRTL ? 0 * Math.PI : 1 * Math.PI, c = e.length, d = 0; d < c; d++) {
                var u = this.isRTL ? l - Math.PI * a * (e[d] / 100) : l + Math.PI * a * (e[d] / 100);
                this.ctx.lineWidth = JSUtils.isNumber(t) && d === t ? this.selectedLineWidth : this.lineWidth,
                this.ctx.beginPath(),
                this.ctx.strokeStyle = this.getColor(d),
                this.ctx.arc(n, r, s, l, u, this.isRTL),
                this.ctx.stroke(),
                l = u
            }
        }
    }
    ,
    UTDonutGraphView.prototype.getColor = function(e) {
        switch (DebugUtils.Assert(0 <= e, "Expected a positive integer."),
        this.donutState) {
        case UTDonutGraphView.State.CAPPED:
        case UTDonutGraphView.State.NEGATIVE:
            return UTDonutGraphView.COLORS[7];
        case UTDonutGraphView.State.POSITIVE:
            return UTDonutGraphView.COLORS[6];
        case UTDonutGraphView.State.NEUTRAL:
            return UTDonutGraphView.COLORS[1];
        case UTDonutGraphView.State.WARNING:
            return UTDonutGraphView.COLORS[2];
        default:
            return UTDonutGraphView.COLORS[Math.abs(e) % UTDonutGraphView.COLORS.length]
        }
    }
    ,
    UTDonutGraphView.prototype.setLabel = function(e, t) {
        this.__titleLabel.textContent = e,
        this.__titleValue.textContent = t
    }
    ,
    UTDonutGraphView.prototype.toggleLabelDisplay = function(e) {
        this.toggleClass("has-labels", e)
    }
    ,
    UTDonutGraphView.prototype.setStartLabel = function(e, t) {
        this.__startLabel.textContent = e,
        this.__startValue.textContent = t
    }
    ,
    UTDonutGraphView.prototype.setEndLabel = function(e, t) {
        this.__endLabel.textContent = e,
        this.__endValue.textContent = t
    }
    ,
    UTDonutGraphView.prototype.setState = function(e) {
        e !== this.donutState && (this.donutState = e,
        this.removeClass(JSUtils.getObjectValues(UTDonutGraphView.State).join(" ")),
        this.addClass(e))
    }
    ,
    UTDonutGraphView.prototype.setTypeClass = function(e) {
        this.donutType = e,
        this.removeClass(JSUtils.getObjectValues(UTDonutGraphView.Type).join(" ")),
        this.addClass(e)
    }
    ,
    UTDonutGraphView.prototype.setType = function(e) {
        e !== this.donutType && this.setTypeClass(e)
    }
    ,
    UTDonutGraphView.State = {
        NONE: "",
        NEUTRAL: "neutral",
        WARNING: "warning",
        POSITIVE: "positive",
        NEGATIVE: "negative",
        CAPPED: "capped"
    },
    UTDonutGraphView.Type = {
        HALF: "half",
        FULL: "full"
    },
    UTDonutGraphView.LabelSize = {
        DEFAULT: "default",
        LARGE: "large"
    },
    UTDonutGraphView.COLORS = ["#f8eede", "#ef6405", "#f6b803", "#1472b9", "#c17b57", "#3f9def", "#36b84b", "#d31332", "#da0fbb", "#8813d3", "#306eff", "#92bdd4"],
    UTDonutGraphView.BACKGROUND_COLOR = "#2d3542",
    UTDonutGraphView
}(UTView));
UTDonutGraphView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("half"),
        e.classList.add("ut-donut-graph-view"),
        this.__graphContainer = document.createElement("div"),
        this.__graphContainer.classList.add("ut-donut-graph-view--graph");
        var t = document.createElement("div");
        t.classList.add("ut-donut-graph-view--title"),
        this.__titleValue = document.createElement("span"),
        this.__titleValue.classList.add("ut-donut-graph-view--value"),
        t.appendChild(this.__titleValue),
        this.__titleLabel = document.createElement("span"),
        this.__titleLabel.classList.add("ut-donut-graph-view--label"),
        t.appendChild(this.__titleLabel),
        this.__graphContainer.appendChild(t),
        this.__progressContainer = document.createElement("div"),
        this.__progressContainer.classList.add("ut-donut-graph-view--progress"),
        this.__graphCanvas = document.createElement("canvas"),
        this.__progressContainer.appendChild(this.__graphCanvas),
        this.__graphContainer.appendChild(this.__progressContainer),
        e.appendChild(this.__graphContainer);
        var i = document.createElement("div");
        i.classList.add("ut-donut-graph-view--labels");
        var o = document.createElement("div");
        this.__startValue = document.createElement("span"),
        this.__startValue.classList.add("ut-donut-graph-view--value"),
        o.appendChild(this.__startValue),
        this.__startLabel = document.createElement("span"),
        this.__startLabel.classList.add("ut-donut-graph-view--label"),
        o.appendChild(this.__startLabel),
        i.appendChild(o);
        var n = document.createElement("div");
        this.__endValue = document.createElement("span"),
        this.__endValue.classList.add("ut-donut-graph-view--value"),
        n.appendChild(this.__endValue),
        this.__endLabel = document.createElement("span"),
        this.__endLabel.classList.add("ut-donut-graph-view--label"),
        n.appendChild(this.__endLabel),
        i.appendChild(n),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTDonutGraphView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__graphContainer = null,
    this.__titleValue = null,
    this.__titleLabel = null,
    this.__progressContainer = null,
    this.__graphCanvas = null,
    this.__startValue = null,
    this.__startLabel = null,
    this.__endValue = null,
    this.__endLabel = null
}
,
UTDonutGraphView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWorldFactionCellView = function(e) {
    function UTWorldFactionCellView() {
        return e.call(this) || this
    }
    return __extends(UTWorldFactionCellView, e),
    UTWorldFactionCellView.prototype.init = function() {
        e.prototype.init.call(this),
        this._selectedTag.setIconClass("player_faction"),
        this._selectedTag.setDisplay(!1)
    }
    ,
    UTWorldFactionCellView.prototype.setLeaderboardPosition = function(e) {
        this.__position.textContent = 0 < e ? e.toString() : BLANK_STR,
        DOMKit.toggleClass(this.__position, "first", 1 === e)
    }
    ,
    UTWorldFactionCellView.prototype.setFactionCrest = function(e) {
        this._crest.setExternalResource(e)
    }
    ,
    UTWorldFactionCellView.prototype.setFactionName = function(e) {
        this.__name.textContent = e
    }
    ,
    UTWorldFactionCellView.prototype.setSubtitle = function(e) {
        this.__subtitle.textContent = e
    }
    ,
    UTWorldFactionCellView.prototype.setColor = function(e) {
        this.getRootElement().style.borderColor = e
    }
    ,
    UTWorldFactionCellView.prototype.setSelected = function(e) {
        this._selectedTag.setDisplay(e)
    }
    ,
    UTWorldFactionCellView
}(UTView);
UTWorldFactionCellView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-world-faction-cell-view"),
        this._selectedTag = new UTListActiveTagView,
        e.appendChild(this._selectedTag.getRootElement()),
        this.__position = document.createElement("p"),
        this.__position.classList.add("ut-world-faction-cell-view--position"),
        e.appendChild(this.__position),
        this._crest = new UTImageView,
        this._crest.getRootElement().classList.add("ut-world-faction-cell-view--crest"),
        e.appendChild(this._crest.getRootElement());
        var t = document.createElement("div");
        t.classList.add("ut-world-faction-cell-view--faction-info"),
        this.__name = document.createElement("h2"),
        this.__name.classList.add("ut-world-faction-cell-view--name"),
        t.appendChild(this.__name),
        this.__subtitle = document.createElement("p"),
        this.__subtitle.classList.add("ut-world-faction-cell-view--subtitle"),
        t.appendChild(this.__subtitle),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTWorldFactionCellView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._selectedTag.destroy(),
    this.__position = null,
    this._crest.destroy(),
    this.__name = null,
    this.__subtitle = null
}
,
UTWorldFactionCellView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWorldFactionProgressView = function(i) {
    function UTWorldFactionProgressView(e) {
        var t = i.call(this) || this;
        return t.leaderboardCells = [],
        t.loc = e.localization,
        t
    }
    return __extends(UTWorldFactionProgressView, i),
    UTWorldFactionProgressView.prototype.init = function() {
        i.prototype.init.call(this),
        this.__rankingTitle.textContent = this.loc.localize("wcmp.faction.ranktitle");
        var e = document.createElement("span");
        e.textContent = this.loc.localize("wcmp.faction.requirementsHighlight"),
        this.__contributeInfo.innerHTML = this.loc.localize("wcmp.faction.requirements", [e.outerHTML]),
        this._campaignCountdown.init(),
        this._campaignCountdown.setAngle(UTLabelView.Angle.BOTTOM_RIGHT),
        this._graph.init(),
        this._graph.setType(UTDonutGraphView.Type.FULL),
        this._graph.lineWidth = 10,
        this._graph.selectedLineWidth = 20,
        isPhone() ? this._graph.setWidth(160) : this._graph.setWidth(250),
        this._rewardInfo.init(),
        this._rewardInfo.addTarget(this, this.onRewardInfoSelected, EventType.TAP),
        this._goToObjectivesButton.init(),
        this._goToObjectivesButton.setText(this.loc.localize("wcmp.objectivesbutton.text")),
        this._goToObjectivesButton.addTarget(this, this.eGoToObjectivesTapped, EventType.TAP)
    }
    ,
    UTWorldFactionProgressView.prototype.dealloc = function() {
        this.clearLeaderboard(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTWorldFactionProgressView.prototype.clearLeaderboard = function() {
        this.leaderboardCells.forEach(function(e) {
            return e.dealloc()
        }),
        this.leaderboardCells = []
    }
    ,
    UTWorldFactionProgressView.prototype.setCampaignName = function(e) {
        this.__campaignName.textContent = e
    }
    ,
    UTWorldFactionProgressView.prototype.setCampaignDescription = function(e) {
        this.__campaignDesc.textContent = e
    }
    ,
    UTWorldFactionProgressView.prototype.setCampaignTimeRemaining = function(e) {
        this._campaignCountdown.setLabel(this.loc.localizeTimeRemaining(e))
    }
    ,
    UTWorldFactionProgressView.prototype.setExperienceContribution = function(e) {
        this._graph.setLabel(this.loc.localize("wcmp.faction.contribution"), e.toString())
    }
    ,
    UTWorldFactionProgressView.prototype.setFactions = function(e, t) {
        this.updateGraph(e, t),
        this.renderLeaderboards(e, t)
    }
    ,
    UTWorldFactionProgressView.prototype.calculateFactionScorePercent = function(e, t, i) {
        void 0 === i && (i = !1);
        var o = e / t * 100;
        return i ? Math.round(o) : o
    }
    ,
    UTWorldFactionProgressView.prototype.updateGraph = function(e, t) {
        var i = this
          , o = e.reduce(function(e, t) {
            return e + t.score
        }, 0)
          , n = e.slice().sort(function(e, t) {
            return JSUtils.sortCompare(e.score, t.score, !0)
        })
          , r = JSUtils.isNumber(t) ? n.findIndex(function(e) {
            return e.id === t
        }) : 0;
        this._graph.setData(n.map(function(e, t) {
            return i.calculateFactionScorePercent(0 < o ? e.score : 1, 0 < o ? o : n.length)
        }), 0 <= r ? r : 0)
    }
    ,
    UTWorldFactionProgressView.prototype.renderLeaderboards = function(e, s) {
        var a = this
          , l = e.reduce(function(e, t) {
            return e + t.score
        }, 0)
          , c = e.slice().sort(function(e, t) {
            return JSUtils.sortCompare(e.score, t.score, !0)
        });
        this.clearLeaderboard(),
        c.forEach(function(e, t) {
            var i = t + 1
              , o = a.calculateFactionScorePercent(0 < l ? e.score : 1, 0 < l ? l : c.length, !0)
              , n = AssetLocationUtils.getWorldFactionCrestUri(e.assetPath, e.displayOrder)
              , r = a.createLeaderboardEntry(e.name, i, o, n);
            r.setColor(a._graph.getColor(t)),
            e.id === s && r.setSelected(!0),
            a.leaderboardCells.push(r),
            a.addSubview(r, a.__leaderboard)
        }),
        this.layoutSubviews()
    }
    ,
    UTWorldFactionProgressView.prototype.createLeaderboardEntry = function(e, t, i, o) {
        var n = new UTWorldFactionCellView
          , r = this.loc.localize("common.percentage", [i.toString()]);
        return n.init(),
        n.setLeaderboardPosition(t),
        n.setFactionCrest(o),
        n.setFactionName(e),
        n.setSubtitle(r),
        n
    }
    ,
    UTWorldFactionProgressView.prototype.onRewardInfoSelected = function(e, t, i) {
        this._triggerActions(UTWorldFactionProgressView.Event.REWARD_INFO)
    }
    ,
    UTWorldFactionProgressView.prototype.eGoToObjectivesTapped = function(e, t, i) {
        this._triggerActions(UTWorldFactionProgressView.Event.GO_TO_OBJECTIVES)
    }
    ,
    UTWorldFactionProgressView.Event = {
        REWARD_INFO: "UTWorldFactionProgressView.REWARD_INFO",
        GO_TO_OBJECTIVES: "UTWorldFactionProgressView.GO_TO_OBJECTIVES"
    },
    UTWorldFactionProgressView
}(UTTargetActionView);
UTWorldFactionProgressView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-world-faction-progress-view");
        var t = document.createElement("div");
        t.classList.add("ut-world-faction-progress-view--info"),
        this._rewardInfo = new UTImageButtonControl,
        this._rewardInfo.getRootElement().classList.add("ut-world-faction-progress-view--reward-info"),
        this._rewardInfo.getRootElement().classList.add("info-btn"),
        t.appendChild(this._rewardInfo.getRootElement()),
        this.__campaignName = document.createElement("h1"),
        this.__campaignName.classList.add("ut-world-faction-progress-view--title"),
        t.appendChild(this.__campaignName),
        this.__campaignDesc = document.createElement("p"),
        this.__campaignDesc.classList.add("ut-world-faction-progress-view--desc"),
        t.appendChild(this.__campaignDesc),
        this._goToObjectivesButton = new UTStandardButtonControl,
        this._goToObjectivesButton.getRootElement().classList.add("ut-world-faction-progress-view--redirect"),
        this._goToObjectivesButton.getRootElement().classList.add("call-to-action"),
        this._goToObjectivesButton.getRootElement().classList.add("mini"),
        t.appendChild(this._goToObjectivesButton.getRootElement()),
        this._campaignCountdown = new UTLabelView,
        t.appendChild(this._campaignCountdown.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-world-faction-progress-view--details"),
        this.__rankingTitle = document.createElement("h2"),
        this.__rankingTitle.classList.add("ut-world-faction-progress-view--rank-title"),
        i.appendChild(this.__rankingTitle),
        this.__contributeInfo = document.createElement("p"),
        this.__contributeInfo.classList.add("ut-world-faction-progress-view--requirements"),
        i.appendChild(this.__contributeInfo);
        var o = document.createElement("div");
        o.classList.add("ut-world-faction-progress-view--stats"),
        this._graph = new UTDonutGraphView,
        o.appendChild(this._graph.getRootElement()),
        this.__leaderboard = document.createElement("div"),
        this.__leaderboard.classList.add("ut-world-faction-progress-view--leaderboard"),
        o.appendChild(this.__leaderboard),
        i.appendChild(o),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTWorldFactionProgressView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._rewardInfo.destroy(),
    this.__campaignName = null,
    this.__campaignDesc = null,
    this._goToObjectivesButton.destroy(),
    this._campaignCountdown.destroy(),
    this.__rankingTitle = null,
    this.__contributeInfo = null,
    this._graph.destroy(),
    this.__leaderboard = null
}
,
UTWorldFactionProgressView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWorldFactionProgressViewController = function(i) {
    function UTWorldFactionProgressViewController(e) {
        var t = i.call(this) || this;
        return t.intervalController = new EAIntervalController(1e3,t.handleTimerInterval.bind(t)),
        t.objectivesViewModel = e.objectivesViewModel,
        t
    }
    return __extends(UTWorldFactionProgressViewController, i),
    UTWorldFactionProgressViewController.prototype.dealloc = function() {
        this.intervalController.dealloc(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTWorldFactionProgressViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.objectives")
    }
    ,
    UTWorldFactionProgressViewController.prototype._getViewInstanceFromData = function() {
        return new UTWorldFactionProgressView({
            localization: services.Localization
        })
    }
    ,
    UTWorldFactionProgressViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this),
        this.loadWorldCampaign(),
        this.intervalController.start();
        var e = this.getView();
        e.addTarget(this, this.onRewardInfoSelected, UTWorldFactionProgressView.Event.REWARD_INFO),
        e.addTarget(this, this.onGoToObjectives, UTWorldFactionProgressView.Event.GO_TO_OBJECTIVES);
        var t = getDefaultDispatcher();
        t.addObserver(AppNotification.APP_PAUSE, this, this.onAppPaused),
        t.addObserver(AppNotification.APP_RESUME, this, this.onAppResumed)
    }
    ,
    UTWorldFactionProgressViewController.prototype.viewWillDisappear = function() {
        i.prototype.viewWillDisappear.call(this),
        this.intervalController.stop();
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.APP_PAUSE, this),
        e.removeObserver(AppNotification.APP_RESUME, this);
        var t = this.getView();
        t.removeTarget(this, this.onRewardInfoSelected, UTWorldFactionProgressView.Event.REWARD_INFO),
        t.removeTarget(this, this.onGoToObjectives, UTWorldFactionProgressView.Event.GO_TO_OBJECTIVES)
    }
    ,
    UTWorldFactionProgressViewController.prototype.loadWorldCampaign = function() {
        var l = this;
        this.objectivesViewModel.requestActiveWorldCampaign().observe(this, function(e, t) {
            var i, o, n, r;
            if (e.unobserve(l),
            t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.campaign)) {
                var s = t.data.campaign
                  , a = l.getView();
                a.setCampaignName(s.name),
                a.setCampaignDescription(s.description),
                a.setCampaignTimeRemaining(s.getTimeRemaining()),
                a.setFactions(s.getFactions(), null === (o = s.getSelectedFaction()) || void 0 === o ? void 0 : o.id),
                a.setExperienceContribution(s.experience)
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : (services.Notification.queue([services.Localization.localize("notification.wcmp.loadfail"), UINotificationType.NEGATIVE]),
                (null === (n = t.error) || void 0 === n ? void 0 : n.code) === UtasErrorCode.SERVICE_IS_DISABLED && (null === (r = l.getNavigationController()) || void 0 === r || r.popViewController()))
        })
    }
    ,
    UTWorldFactionProgressViewController.prototype.showFactionRewards = function() {
        var e, t, i = null !== (t = null === (e = this.objectivesViewModel.worldCampaign) || void 0 === e ? void 0 : e.getSelectedFaction()) && void 0 !== t ? t : null;
        if (i) {
            var o = new UTRewardSelectionChoiceViewController([i.rewardSet]);
            o.setTitleText(i.name),
            o.setClaimableState(!1),
            gPopupClickShield.setActivePopup(o)
        }
    }
    ,
    UTWorldFactionProgressViewController.prototype.handleTimerInterval = function() {
        var e = this.objectivesViewModel.worldCampaign;
        DebugUtils.Assert(JSUtils.isValid(e), "Missing world campaign entity when handling a time interval."),
        e && this.getView().setCampaignTimeRemaining(e.getTimeRemaining())
    }
    ,
    UTWorldFactionProgressViewController.prototype.onRewardInfoSelected = function(e, t, i) {
        this.showFactionRewards()
    }
    ,
    UTWorldFactionProgressViewController.prototype.onGoToObjectives = function(e, t, i) {
        var o, n, r = null === (o = this.objectivesViewModel.worldCampaign) || void 0 === o ? void 0 : o.getSelectedFaction();
        if (r) {
            var s = this.objectivesViewModel.getWorldGroupById(r.id);
            if (s) {
                var a = this.objectivesViewModel.getCategoryByGroup(s);
                if (a) {
                    this.objectivesViewModel.setCurrentCategoryId(a.id),
                    this.objectivesViewModel.setCurrentGroup(s);
                    var l = new UTObjectiveGroupViewController(this.objectivesViewModel);
                    l.init(),
                    null === (n = this.getNavigationController()) || void 0 === n || n.pushViewController(l)
                }
            }
        }
    }
    ,
    UTWorldFactionProgressViewController.prototype.onAppPaused = function(e, t, i) {
        this.intervalController.stop()
    }
    ,
    UTWorldFactionProgressViewController.prototype.onAppResumed = function(e, t, i) {
        this.intervalController.start()
    }
    ,
    UTWorldFactionProgressViewController
}(UTViewController)
  , UTWorldFactionOptionView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTWorldFactionOptionView() {
        return t.call(this) || this
    }
    return __extends(UTWorldFactionOptionView, t),
    UTWorldFactionOptionView.prototype.init = function() {
        t.prototype.init.call(this),
        this._btnRewardInfo.addTarget(this, this.onRewardInfoTapped, EventType.TAP),
        this.setInteractionState(!0)
    }
    ,
    UTWorldFactionOptionView.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this._btnRewardInfo.removeTarget(this, this.onRewardInfoTapped, EventType.TAP)
    }
    ,
    UTWorldFactionOptionView.prototype.setInteractionState = function(e) {
        t.prototype.setInteractionState.call(this, e),
        this._btnRewardInfo.setInteractionState(e)
    }
    ,
    UTWorldFactionOptionView.prototype.setName = function(e) {
        this.__name.textContent = e
    }
    ,
    UTWorldFactionOptionView.prototype.setDescription = function(e) {
        this.__desc.textContent = e
    }
    ,
    UTWorldFactionOptionView.prototype.setCrest = function(e) {
        this._crest.setExternalResource(e)
    }
    ,
    UTWorldFactionOptionView.prototype.onRewardInfoTapped = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTWorldFactionOptionView.Event.REWARD_INFO)
    }
    ,
    UTWorldFactionOptionView.prototype._touchStarted = function(e) {
        t.prototype._touchStarted.call(this, e),
        this.addClass(enums.UIState.ACTIVE)
    }
    ,
    UTWorldFactionOptionView.prototype._touchMoved = function(e) {
        t.prototype._touchMoved.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTWorldFactionOptionView.prototype._touchEnded = function(e) {
        t.prototype._touchEnded.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTWorldFactionOptionView.prototype._touchCancelled = function(e) {
        t.prototype._touchCancelled.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTWorldFactionOptionView.prototype._mouseLeave = function(e) {
        t.prototype._mouseLeave.call(this, e),
        this.removeClass(enums.UIState.ACTIVE),
        this.removeClass(enums.UIState.HOVER)
    }
    ,
    UTWorldFactionOptionView.prototype._mouseEnter = function(e) {
        t.prototype._mouseEnter.call(this, e),
        this.addClass(enums.UIState.HOVER)
    }
    ,
    UTWorldFactionOptionView.prototype._tapDetected = function(e) {
        t.prototype._tapDetected.call(this, e),
        this._triggerActions(EventType.TAP)
    }
    ,
    UTWorldFactionOptionView.Event = {
        REWARD_INFO: "UTWorldFactionOptionView.REWARD_INFO"
    },
    UTWorldFactionOptionView
}(UTTargetActionView));
UTWorldFactionOptionView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-world-faction-option-view"),
        this._btnRewardInfo = new UTImageButtonControl,
        this._btnRewardInfo.getRootElement().classList.add("ut-world-faction-option-view--reward-info"),
        this._btnRewardInfo.getRootElement().classList.add("info-btn"),
        e.appendChild(this._btnRewardInfo.getRootElement());
        var t = document.createElement("div");
        t.classList.add("ut-world-faction-option-view--content"),
        this.__name = document.createElement("h2"),
        this.__name.classList.add("ut-world-faction-option-view--name"),
        t.appendChild(this.__name),
        this.__desc = document.createElement("p"),
        this.__desc.classList.add("ut-world-faction-option-view--desc"),
        t.appendChild(this.__desc),
        e.appendChild(t),
        this._crest = new UTImageView,
        this._crest.getRootElement().classList.add("ut-world-faction-option-view--crest"),
        e.appendChild(this._crest.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTWorldFactionOptionView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._btnRewardInfo.destroy(),
    this.__name = null,
    this.__desc = null,
    this._crest.destroy()
}
,
UTWorldFactionOptionView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWorldFactionSelectView = function(i) {
    function UTWorldFactionSelectView(e) {
        var t = i.call(this) || this;
        return t.factionOptionViews = [],
        t.loc = e.localization,
        t
    }
    return __extends(UTWorldFactionSelectView, i),
    UTWorldFactionSelectView.prototype.init = function() {
        i.prototype.init.call(this),
        this._campaignCountdown.init(),
        this._campaignCountdown.setAngle(UTLabelView.Angle.BOTTOM_RIGHT)
    }
    ,
    UTWorldFactionSelectView.prototype.dealloc = function() {
        this.clearFactionOptionViews(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTWorldFactionSelectView.prototype.setCampaignName = function(e) {
        this.__campaignName.textContent = e
    }
    ,
    UTWorldFactionSelectView.prototype.setCampaignDescription = function(e) {
        this.__campaignDesc.textContent = e
    }
    ,
    UTWorldFactionSelectView.prototype.setCampaignTimeRemaining = function(e) {
        this._campaignCountdown.setLabel(this.loc.localizeTimeRemaining(e))
    }
    ,
    UTWorldFactionSelectView.prototype.setFactions = function(e) {
        this.clearFactionOptionViews(),
        e.forEach(this.generateFactionOptionView, this),
        this.layoutSubviews()
    }
    ,
    UTWorldFactionSelectView.prototype.clearFactionOptionViews = function() {
        this.factionOptionViews.forEach(function(e) {
            return e.dealloc()
        }),
        this.factionOptionViews = []
    }
    ,
    UTWorldFactionSelectView.prototype.generateFactionOptionView = function(e, t) {
        var i = new UTWorldFactionOptionView;
        i.init(),
        i.setDescription(e.description),
        i.setName(e.name),
        i.setCrest(AssetLocationUtils.getWorldFactionCrestUri(e.assetPath, t + 1)),
        i.addTarget(this, this.handleOptionEvent, EventType.TAP),
        i.addTarget(this, this.handleOptionEvent, UTWorldFactionOptionView.Event.REWARD_INFO),
        this.addSubview(i, this.__factionContainer),
        this.factionOptionViews.push(i)
    }
    ,
    UTWorldFactionSelectView.prototype.handleOptionEvent = function(e, t, i) {
        t === EventType.TAP ? this._triggerActions(UTWorldFactionSelectView.Event.FACTION_SELECTED, {
            index: this.factionOptionViews.indexOf(e)
        }) : t === UTWorldFactionOptionView.Event.REWARD_INFO && this._triggerActions(UTWorldFactionSelectView.Event.REWARD_INFO, {
            index: this.factionOptionViews.indexOf(e)
        })
    }
    ,
    UTWorldFactionSelectView.Event = {
        FACTION_SELECTED: "UTWorldFactionSelectView.FACTION_SELECTED",
        REWARD_INFO: "UTWorldFactionSelectView.REWARD_INFO"
    },
    UTWorldFactionSelectView
}(UTTargetActionView);
UTWorldFactionSelectView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-world-faction-select-view");
        var t = document.createElement("div");
        t.classList.add("ut-world-faction-select-view--info"),
        this.__campaignName = document.createElement("h1"),
        this.__campaignName.classList.add("ut-world-faction-select-view--title"),
        t.appendChild(this.__campaignName),
        this.__campaignDesc = document.createElement("p"),
        this.__campaignDesc.classList.add("ut-world-faction-select-view--desc"),
        t.appendChild(this.__campaignDesc),
        this._campaignCountdown = new UTLabelView,
        t.appendChild(this._campaignCountdown.getRootElement()),
        e.appendChild(t),
        this.__factionContainer = document.createElement("div"),
        this.__factionContainer.classList.add("ut-world-faction-select-view--faction-container"),
        e.appendChild(this.__factionContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTWorldFactionSelectView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__campaignName = null,
    this.__campaignDesc = null,
    this._campaignCountdown.destroy(),
    this.__factionContainer = null
}
,
UTWorldFactionSelectView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWorldFactionSelectViewController = function(i) {
    function UTWorldFactionSelectViewController(e) {
        var t = i.call(this) || this;
        return t.intervalController = new EAIntervalController(1e3,t.handleTimerInterval.bind(t)),
        t.objectivesViewModel = e.objectivesViewModel,
        t
    }
    return __extends(UTWorldFactionSelectViewController, i),
    UTWorldFactionSelectViewController.prototype.dealloc = function() {
        this.intervalController.dealloc(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTWorldFactionSelectViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.objectives")
    }
    ,
    UTWorldFactionSelectViewController.prototype._getViewInstanceFromData = function() {
        return new UTWorldFactionSelectView({
            localization: services.Localization
        })
    }
    ,
    UTWorldFactionSelectViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this),
        this.loadWorldCampaign(),
        this.intervalController.start();
        var e = this.getView();
        e.addTarget(this, this.handleFactionEvent, UTWorldFactionSelectView.Event.FACTION_SELECTED),
        e.addTarget(this, this.handleFactionEvent, UTWorldFactionSelectView.Event.REWARD_INFO);
        var t = getDefaultDispatcher();
        t.addObserver(AppNotification.APP_PAUSE, this, this.onAppPaused),
        t.addObserver(AppNotification.APP_RESUME, this, this.onAppResumed)
    }
    ,
    UTWorldFactionSelectViewController.prototype.viewWillDisappear = function() {
        i.prototype.viewWillDisappear.call(this),
        this.intervalController.stop();
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.APP_PAUSE, this),
        e.removeObserver(AppNotification.APP_RESUME, this);
        var t = this.getView();
        t.removeTarget(this, this.handleFactionEvent, UTWorldFactionSelectView.Event.FACTION_SELECTED),
        t.removeTarget(this, this.handleFactionEvent, UTWorldFactionSelectView.Event.REWARD_INFO)
    }
    ,
    UTWorldFactionSelectViewController.prototype.loadWorldCampaign = function() {
        var l = this;
        this.objectivesViewModel.requestActiveWorldCampaign().observe(this, function(e, t) {
            var i, o, n;
            if (e.unobserve(l),
            t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.campaign)) {
                var r = t.data.campaign
                  , s = l.objectivesViewModel.sortFactionsByDisplayOrder(r.getFactions())
                  , a = l.getView();
                a.setCampaignName(r.name),
                a.setCampaignDescription(r.description),
                a.setCampaignTimeRemaining(r.getTimeRemaining()),
                a.setFactions(s)
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : (services.Notification.queue([services.Localization.localize("notification.wcmp.loadfail"), UINotificationType.NEGATIVE]),
                (null === (o = t.error) || void 0 === o ? void 0 : o.code) === UtasErrorCode.SERVICE_IS_DISABLED && (null === (n = l.getNavigationController()) || void 0 === n || n.popViewController()))
        })
    }
    ,
    UTWorldFactionSelectViewController.prototype.showFactionRewards = function(e) {
        var t = new UTRewardSelectionChoiceViewController([e.rewardSet]);
        t.setTitleText(e.name),
        t.setClaimableState(!1),
        gPopupClickShield.setActivePopup(t)
    }
    ,
    UTWorldFactionSelectViewController.prototype.selectFaction = function(i, r) {
        var s = this
          , a = services.Localization
          , e = new EADialogViewController({
            dialogOptions: [{
                labelEnum: enums.UIDialogOptions.CANCEL,
                negativeActionFlag: !0
            }, {
                labelEnum: enums.UIDialogOptions.YES
            }],
            message: a.localize("wcmp.joinfaction.desc", [r.name]),
            title: a.localize("wcmp.joinfaction.title", [r.name])
        });
        e.init(),
        e.onExit.observe(this, function(e, t) {
            e.unobserve(s),
            t === enums.UIDialogOptions.YES && i.joinFaction(r.id).observe(s, function(e, t) {
                if (e.unobserve(s),
                t.success && JSUtils.isObject(t.response)) {
                    if (services.Objectives.flushCategoryCache(),
                    0 < t.response.rewardsGranted.length) {
                        var i = services.Localization
                          , o = t.response.rewardsGranted[0]
                          , n = new UTGameRewardsViewController(t.response.rewardsGranted);
                        n.setTitle(i.localize("wcmp.joinfaction.rewards.title", [r.name])),
                        n.setDescription(i.localize("wcmp.joinfaction.rewards.desc", [r.name, o.buildString()])),
                        n.setButtonText(i.localize("common.dialog.accept")),
                        n.modalDisplayDimensions.width = "24em",
                        gPopupClickShield.setActivePopup(n)
                    }
                } else
                    t.status !== HttpStatusCode.SERVER_ERROR && NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : services.Notification.queue([a.localize("wcmp.joinfaction.error"), UINotificationType.NEGATIVE])
            })
        }),
        gPopupClickShield.setActivePopup(e)
    }
    ,
    UTWorldFactionSelectViewController.prototype.handleFactionEvent = function(e, t, i) {
        var o = this.objectivesViewModel.worldCampaign;
        if (DebugUtils.Assert(JSUtils.isValid(o), "Missing world campaign entity when interacting with a faction."),
        o) {
            var n = this.objectivesViewModel.sortFactionsByDisplayOrder(o.getFactions())[i.index];
            DebugUtils.Assert(JSUtils.isValid(n), "Index mismatch when attempting to retrieve the faction entity."),
            n && (t === UTWorldFactionSelectView.Event.FACTION_SELECTED ? this.selectFaction(o, n) : t === UTWorldFactionSelectView.Event.REWARD_INFO && this.showFactionRewards(n))
        }
    }
    ,
    UTWorldFactionSelectViewController.prototype.handleTimerInterval = function() {
        var e = this.objectivesViewModel.worldCampaign;
        DebugUtils.Assert(JSUtils.isValid(e), "Missing world campaign entity when handling a time interval."),
        e && this.getView().setCampaignTimeRemaining(e.getTimeRemaining())
    }
    ,
    UTWorldFactionSelectViewController.prototype.onAppPaused = function(e, t, i) {
        this.intervalController.stop()
    }
    ,
    UTWorldFactionSelectViewController.prototype.onAppResumed = function(e, t, i) {
        this.intervalController.start()
    }
    ,
    UTWorldFactionSelectViewController
}(UTViewController)
  , UTWorldFactionEventView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTWorldFactionEventView() {
        return e.call(this) || this
    }
    return __extends(UTWorldFactionEventView, e),
    UTWorldFactionEventView.prototype.init = function() {
        e.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTWorldFactionEventView.prototype.displaySubview = function(e) {
        this.factionSubview !== e && (this.dismissSubview(),
        this.factionSubview = e,
        this.addSubview(e),
        this.layoutSubviews())
    }
    ,
    UTWorldFactionEventView.prototype.dismissSubview = function() {
        this.factionSubview && (this.factionSubview.removeFromSuperview(),
        this.factionSubview = null)
    }
    ,
    UTWorldFactionEventView
}(UTTargetActionView));
UTWorldFactionEventView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-world-faction-event-view"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTWorldFactionEventView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTWorldFactionEventView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWorldFactionEventViewController = function(i) {
    function UTWorldFactionEventViewController(e) {
        var t = i.call(this) || this;
        return t.intervalController = new EAIntervalController(1e4,t.handleEventTimer.bind(t)),
        t.objectivesViewModel = e,
        t
    }
    return __extends(UTWorldFactionEventViewController, i),
    UTWorldFactionEventViewController.prototype.init = function() {
        i.prototype.init.call(this),
        this.intervalController.init()
    }
    ,
    UTWorldFactionEventViewController.prototype.dealloc = function() {
        this.intervalController.dealloc(),
        this.factionSelectController && (this.factionSelectController.dealloc(),
        this.factionSelectController = null),
        this.factionProgressController && (this.factionProgressController.dealloc(),
        this.factionProgressController = null),
        i.prototype.dealloc.call(this)
    }
    ,
    UTWorldFactionEventViewController.prototype._getTelemetryId = function() {
        return "Objectives - Factions World Campaign"
    }
    ,
    UTWorldFactionEventViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.objectives")
    }
    ,
    UTWorldFactionEventViewController.prototype._getViewInstanceFromData = function() {
        return new UTWorldFactionEventView
    }
    ,
    UTWorldFactionEventViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this),
        this.intervalController.start(),
        this.loadWorldCampaign();
        var e = getDefaultDispatcher();
        e.addObserver(AppNotification.APP_PAUSE, this, this.onAppPaused),
        e.addObserver(AppNotification.APP_RESUME, this, this.onAppResumed),
        TelemetryManager.trackPage(TelemetryManager.Sections.OBJECTIVES, "World Faction Campaign")
    }
    ,
    UTWorldFactionEventViewController.prototype.viewWillDisappear = function() {
        i.prototype.viewWillDisappear.call(this),
        this.dismissViewController(),
        this.intervalController.stop();
        var e = this.objectivesViewModel.worldCampaign;
        e && e.onDataUpdated.unobserve(this, this.onWorldCampaignUpdated);
        var t = getDefaultDispatcher();
        t.removeObserver(AppNotification.APP_PAUSE, this),
        t.removeObserver(AppNotification.APP_RESUME, this)
    }
    ,
    UTWorldFactionEventViewController.prototype.loadWorldCampaign = function() {
        var a = this;
        this.objectivesViewModel.requestActiveWorldCampaign().observe(this, function(e, t) {
            var i, o, n, r;
            if (e.unobserve(a),
            t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.campaign)) {
                var s = t.data.campaign;
                s.onDataUpdated.observe(a, a.onWorldCampaignUpdated),
                a.displayFactionView(s)
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : (services.Notification.queue([services.Localization.localize("notification.wcmp.loadfail"), UINotificationType.NEGATIVE]),
                (null === (o = t.error) || void 0 === o ? void 0 : o.code) === UtasErrorCode.SERVICE_IS_DISABLED ? null === (n = a.getNavigationController()) || void 0 === n || n.popViewController() : null === (r = a.getNavigationController()) || void 0 === r || r.popViewController())
        })
    }
    ,
    UTWorldFactionEventViewController.prototype.displayFactionView = function(e) {
        null === e.getSelectedFaction() ? this.displayFactionSelect() : this.displayFactionProgress()
    }
    ,
    UTWorldFactionEventViewController.prototype.displayFactionProgress = function() {
        this.factionProgressController || (this.factionProgressController = new UTWorldFactionProgressViewController({
            objectivesViewModel: this.objectivesViewModel
        }),
        this.factionProgressController.init(),
        this.addChildViewController(this.factionProgressController)),
        this.presentViewController(this.factionProgressController),
        this.factionSelectController && (this.factionSelectController.dealloc(),
        this.factionSelectController = null)
    }
    ,
    UTWorldFactionEventViewController.prototype.displayFactionSelect = function() {
        this.factionSelectController || (this.factionSelectController = new UTWorldFactionSelectViewController({
            objectivesViewModel: this.objectivesViewModel
        }),
        this.factionSelectController.init(),
        this.addChildViewController(this.factionSelectController)),
        this.presentViewController(this.factionSelectController),
        this.factionProgressController && (this.factionProgressController.dealloc(),
        this.factionProgressController = null)
    }
    ,
    UTWorldFactionEventViewController.prototype.handleEventTimer = function() {}
    ,
    UTWorldFactionEventViewController.prototype.onWorldCampaignUpdated = function(e, t, i) {
        var o = this.getPresentedViewController();
        i.selectedFactionId && o && o === this.factionSelectController && this.displayFactionView(t)
    }
    ,
    UTWorldFactionEventViewController.prototype.onAppPaused = function(e, t, i) {
        this.intervalController.stop();
        var o = this.objectivesViewModel.worldCampaign;
        o && o.onDataUpdated.unobserve(this, this.onWorldCampaignUpdated)
    }
    ,
    UTWorldFactionEventViewController.prototype.onAppResumed = function(e, t, i) {
        this.intervalController.start();
        var o = this.objectivesViewModel.worldCampaign;
        o && o.onDataUpdated.observe(this, this.onWorldCampaignUpdated)
    }
    ,
    UTWorldFactionEventViewController
}(UTViewController)
  , UTWorldMilestoneEventView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTWorldMilestoneEventView(e) {
        var t = i.call(this) || this;
        return t.loc = e.localization,
        t.milestoneEntries = [],
        t.progressBars = [],
        t
    }
    return __extends(UTWorldMilestoneEventView, i),
    UTWorldMilestoneEventView.prototype.init = function() {
        i.prototype.init.call(this),
        this.__contributionTitle.textContent = this.loc.localize("wcmp.milestone.usercontribution"),
        this.__scoreTitle.textContent = this.loc.localize("wcmp.milestone.communitycontribution"),
        this._campaignCountdown.init(),
        this._campaignCountdown.setAngle(UTLabelView.Angle.BOTTOM_RIGHT),
        this._goToObjectivesButton.init(),
        this._goToObjectivesButton.setText(this.loc.localize("wcmp.objectivesbutton.text")),
        this._goToObjectivesButton.addTarget(this, this.eGoToObjectivesTapped, EventType.TAP),
        this.setInteractionState(!0)
    }
    ,
    UTWorldMilestoneEventView.prototype.setCampaignName = function(e) {
        this.__campaignName.textContent = e
    }
    ,
    UTWorldMilestoneEventView.prototype.setCampaignDescription = function(e) {
        this.__campaignDesc.textContent = e
    }
    ,
    UTWorldMilestoneEventView.prototype.setCampaignTimeRemaining = function(e) {
        this._campaignCountdown.setLabel(this.loc.localizeTimeRemaining(e))
    }
    ,
    UTWorldMilestoneEventView.prototype.setExperienceContribution = function(e) {
        this.__contribution.textContent = e.toString()
    }
    ,
    UTWorldMilestoneEventView.prototype.setExperienceScore = function(e) {
        this.__score.textContent = e.toString()
    }
    ,
    UTWorldMilestoneEventView.prototype.clearProgressViews = function() {
        this.milestoneEntries.forEach(function(e) {
            return e.dealloc()
        }),
        this.progressBars.forEach(function(e) {
            return e.dealloc()
        }),
        this.milestoneEntries = [],
        this.progressBars = []
    }
    ,
    UTWorldMilestoneEventView.prototype.generateTierProgressBar = function(e, t, i, o) {
        var n = new UTTierProgressBarView;
        if (n.init(),
        n.setProgressLabel(e.id.toString()),
        n.direction = TierProgressBarDirection.VERTICAL,
        t <= i) {
            var r = i < e.experience ? (i - t) / (e.experience - t) * 100 : 100
              , s = !e.hasClaimedRewards() && 1 <= o ? "redeem" : "complete";
            n.setProgress(r),
            n.setProgressMarker(i),
            n.setTierState(100 <= r ? s : "inprogress")
        }
        return this.addSubview(n, this.__progressBar),
        n
    }
    ,
    UTWorldMilestoneEventView.prototype.generateMilestoneEntry = function(e, t, i, o) {
        var n = new UTCampaignTierView
          , r = 1 <= o && i >= e.experience
          , s = TierViewState.NONE;
        return t <= i && i < e.experience ? s = TierViewState.IN_PROGRESS : r && (s = e.hasClaimedRewards() ? TierViewState.COMPLETE : TierViewState.REDEEM_REWARDS),
        n.init(),
        n.setId(e.id),
        n.setStyle("vertical"),
        n.setTierLevelRewardOptions([e.rewardSet]),
        n.setTitle(this.loc.localize("wcmp.milestone.tier.name", [e.id.toString()])),
        n.setProgress(Math.max(e.experience - i, 0)),
        n.setState(s),
        n.toggleRewardsInfoButton(!1),
        n.addTarget(this, this.handleMilestoneEntryEvent, UTCampaignTierView.Event.CLAIM_REWARD),
        this.addSubview(n, this.__milestoneContainer),
        n
    }
    ,
    UTWorldMilestoneEventView.prototype.setCampaignProgress = function(i) {
        var o = this
          , n = 0;
        this.clearProgressViews(),
        i.getMilestones().forEach(function(e) {
            var t = n + 1;
            n = e.experience,
            o.progressBars.push(o.generateTierProgressBar(e, t, i.score, i.experience)),
            o.milestoneEntries.push(o.generateMilestoneEntry(e, t, i.score, i.experience))
        }),
        this.layoutSubviews(),
        this.milestoneEntries.forEach(function(e) {
            return e.setupRewardsCarousel(0)
        })
    }
    ,
    UTWorldMilestoneEventView.prototype.handleMilestoneEntryEvent = function(e, t, i) {
        if (this.isInteractionEnabled() && t === UTCampaignTierView.Event.CLAIM_REWARD) {
            var o = this.milestoneEntries.indexOf(e);
            this._triggerActions(UTWorldMilestoneEventView.Event.CLAIM_REWARD, {
                id: i.id,
                index: o,
                rewardOptions: i.rewardOptions
            })
        }
    }
    ,
    UTWorldMilestoneEventView.prototype.eGoToObjectivesTapped = function(e, t, i) {
        this._triggerActions(UTWorldMilestoneEventView.Event.GO_TO_OBJECTIVES)
    }
    ,
    UTWorldMilestoneEventView.Event = {
        CLAIM_REWARD: "UTWorldMilestoneEventView.CLAIM_REWARD",
        GO_TO_OBJECTIVES: "UTWorldMilestoneEventView.GO_TO_OBJECTIVES"
    },
    UTWorldMilestoneEventView
}(UTTargetActionView));
UTWorldMilestoneEventView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-world-milestone-event-view");
        var t = document.createElement("div");
        t.classList.add("ut-world-milestone-event-view--info"),
        this.__campaignName = document.createElement("h1"),
        this.__campaignName.classList.add("ut-world-milestone-event-view--title"),
        t.appendChild(this.__campaignName),
        this.__campaignDesc = document.createElement("p"),
        this.__campaignDesc.classList.add("ut-world-milestone-event-view--desc"),
        t.appendChild(this.__campaignDesc),
        this._goToObjectivesButton = new UTStandardButtonControl,
        this._goToObjectivesButton.getRootElement().classList.add("ut-world-milestone-event-view--redirect"),
        this._goToObjectivesButton.getRootElement().classList.add("call-to-action"),
        this._goToObjectivesButton.getRootElement().classList.add("mini"),
        t.appendChild(this._goToObjectivesButton.getRootElement()),
        this._campaignCountdown = new UTLabelView,
        t.appendChild(this._campaignCountdown.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-world-milestone-event-view--details");
        var o = document.createElement("div");
        o.classList.add("ut-world-milestone-event-view--campaign-info");
        var n = document.createElement("div");
        n.classList.add("ut-world-milestone-event-view--contribution"),
        this.__contributionTitle = document.createElement("span"),
        this.__contributionTitle.classList.add("ut-world-milestone-event-view--contribution-title"),
        n.appendChild(this.__contributionTitle),
        this.__contribution = document.createElement("span"),
        this.__contribution.classList.add("ut-world-milestone-event-view--contribution-value"),
        n.appendChild(this.__contribution),
        o.appendChild(n);
        var r = document.createElement("div");
        r.classList.add("ut-world-milestone-event-view--score"),
        this.__scoreTitle = document.createElement("span"),
        this.__scoreTitle.classList.add("ut-world-milestone-event-view--score-title"),
        r.appendChild(this.__scoreTitle),
        this.__score = document.createElement("span"),
        this.__score.classList.add("ut-world-milestone-event-view--score-value"),
        r.appendChild(this.__score),
        o.appendChild(r),
        i.appendChild(o);
        var s = document.createElement("div");
        s.classList.add("ut-world-milestone-event-view--progress"),
        this.__progressBar = document.createElement("div"),
        this.__progressBar.classList.add("vertical"),
        this.__progressBar.classList.add("ut-tier-progress-bar"),
        s.appendChild(this.__progressBar),
        this.__milestoneContainer = document.createElement("div"),
        this.__milestoneContainer.classList.add("ut-world-milestone-event-view--milestones"),
        s.appendChild(this.__milestoneContainer),
        i.appendChild(s),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTWorldMilestoneEventView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__campaignName = null,
    this.__campaignDesc = null,
    this._goToObjectivesButton.destroy(),
    this._campaignCountdown.destroy(),
    this.__contributionTitle = null,
    this.__contribution = null,
    this.__scoreTitle = null,
    this.__score = null,
    this.__progressBar = null,
    this.__milestoneContainer = null
}
,
UTWorldMilestoneEventView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWorldMilestoneEventViewController = function(i) {
    function UTWorldMilestoneEventViewController(e) {
        var t = i.call(this) || this;
        return t.intervalController = new EAIntervalController(1e3,t.handleTimerInterval.bind(t)),
        t.objectivesViewModel = e,
        t
    }
    return __extends(UTWorldMilestoneEventViewController, i),
    UTWorldMilestoneEventViewController.prototype.dealloc = function() {
        this.intervalController.dealloc(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTWorldMilestoneEventViewController.prototype._getTelemetryId = function() {
        return "Objectives - Factions World Campaign"
    }
    ,
    UTWorldMilestoneEventViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.objectives")
    }
    ,
    UTWorldMilestoneEventViewController.prototype._getViewInstanceFromData = function() {
        return new UTWorldMilestoneEventView({
            localization: services.Localization
        })
    }
    ,
    UTWorldMilestoneEventViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this),
        this.loadWorldCampaign(),
        this.intervalController.start();
        var e = this.getView();
        e.addTarget(this, this.onRewardClaim, UTWorldMilestoneEventView.Event.CLAIM_REWARD),
        e.addTarget(this, this.onGoToObjectives, UTWorldMilestoneEventView.Event.GO_TO_OBJECTIVES);
        var t = getDefaultDispatcher();
        t.addObserver(AppNotification.APP_PAUSE, this, this.onAppPaused),
        t.addObserver(AppNotification.APP_RESUME, this, this.onAppResumed)
    }
    ,
    UTWorldMilestoneEventViewController.prototype.viewWillDisappear = function() {
        i.prototype.viewWillDisappear.call(this),
        this.intervalController.stop();
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.APP_PAUSE, this),
        e.removeObserver(AppNotification.APP_RESUME, this);
        var t = this.getView();
        t.removeTarget(this, this.onRewardClaim, UTWorldMilestoneEventView.Event.CLAIM_REWARD),
        t.removeTarget(this, this.onGoToObjectives, UTWorldMilestoneEventView.Event.GO_TO_OBJECTIVES)
    }
    ,
    UTWorldMilestoneEventViewController.prototype.loadWorldCampaign = function() {
        var a = this;
        this.objectivesViewModel.requestActiveWorldCampaign().observe(this, function(e, t) {
            var i, o, n;
            if (e.unobserve(a),
            t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.campaign)) {
                var r = t.data.campaign
                  , s = a.getView();
                s.setCampaignDescription(r.description),
                s.setCampaignName(r.name),
                s.setCampaignProgress(r),
                s.setCampaignTimeRemaining(r.getTimeRemaining()),
                s.setExperienceContribution(r.experience),
                s.setExperienceScore(r.score)
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : (services.Notification.queue([services.Localization.localize("notification.wcmp.loadfail"), UINotificationType.NEGATIVE]),
                (null === (o = t.error) || void 0 === o ? void 0 : o.code) === UtasErrorCode.SERVICE_IS_DISABLED && (null === (n = a.getNavigationController()) || void 0 === n || n.popViewController()))
        })
    }
    ,
    UTWorldMilestoneEventViewController.prototype.claimMilestoneReward = function(a, e) {
        var l = this;
        this.objectivesViewModel.claimWorldMilestoneRewards(a, e).observe(this, function(e, t) {
            if (e.unobserve(l),
            t.success && JSUtils.isObject(t.response)) {
                var i = services.Localization
                  , o = a.getMilestoneById(t.response.milestoneId)
                  , n = o ? i.localize("wcmp.milestone.tier.name", [o.id.toString()]) : BLANK_STR
                  , r = new UTGameRewardsViewController(t.response.rewards)
                  , s = r.getView();
                r.init(),
                r.modalDisplayDimensions.width = "24em",
                s.setTitle(i.localize("wcmp.milestone.rewards.title")),
                s.setDescription(i.localize("wcmp.milestone.rewards.description", [n])),
                s.setButtonText(i.localize("objective.rewards.claim")),
                gPopupClickShield.setActivePopup(r),
                l.getView().setCampaignProgress(a)
            }
        })
    }
    ,
    UTWorldMilestoneEventViewController.prototype.handleTimerInterval = function() {
        var e = this.objectivesViewModel.worldCampaign;
        DebugUtils.Assert(JSUtils.isValid(e), "Missing world campaign entity when handling a time interval."),
        e && this.getView().setCampaignTimeRemaining(e.getTimeRemaining())
    }
    ,
    UTWorldMilestoneEventViewController.prototype.onRewardClaim = function(e, t, i) {
        var o, n, r = this.objectivesViewModel.worldCampaign;
        if (DebugUtils.Assert(JSUtils.isValid(r), "No campaign found when attempting to claim a milestone reward."),
        r) {
            var s = null !== (n = null === (o = r.getMilestones()[i.index]) || void 0 === o ? void 0 : o.id) && void 0 !== n ? n : 0;
            DebugUtils.Assert(0 < s, "No milestone found at index " + i.index + "."),
            0 < s && this.claimMilestoneReward(r, s)
        }
    }
    ,
    UTWorldMilestoneEventViewController.prototype.onGoToObjectives = function(e, t, i) {
        var o, n = this.objectivesViewModel.getCurrentWorldGroups();
        if (0 < n.length) {
            var r = n[0]
              , s = this.objectivesViewModel.getCategoryByGroup(r);
            if (s) {
                this.objectivesViewModel.setCurrentCategoryId(s.id),
                this.objectivesViewModel.setCurrentGroup(r);
                var a = new UTObjectiveGroupViewController(this.objectivesViewModel);
                a.init(),
                null === (o = this.getNavigationController()) || void 0 === o || o.pushViewController(a)
            }
        }
    }
    ,
    UTWorldMilestoneEventViewController.prototype.onAppPaused = function(e, t, i) {
        this.intervalController.stop()
    }
    ,
    UTWorldMilestoneEventViewController.prototype.onAppResumed = function(e, t, i) {
        this.intervalController.start()
    }
    ,
    UTWorldMilestoneEventViewController
}(UTViewController)
  , UTRewardSelectionView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(n) {
    function UTRewardSelectionView(e, t) {
        var i = n.call(this) || this;
        i.id = t.id,
        i.index = e;
        var o = t.rewards.slice().sort(function(e, t) {
            return JSUtils.sortCompare(e.isChampionQualificationPoints, t.isChampionQualificationPoints)
        });
        return i.primaryReward = o.shift() || null,
        i.rewards = o.map(function(e) {
            return new UTRewardView(e)
        }),
        i
    }
    return __extends(UTRewardSelectionView, n),
    UTRewardSelectionView.prototype.init = function() {
        this.setTitle(services.Localization.localize("rivals.rewardset.title", [this.index.toString()])),
        this.setDetailedContent(services.Localization.localize("rewardset.view-x-rewards", [(this.rewards.length + 1).toString()])),
        this.rewards.forEach(function(e) {
            e.init(),
            e.render()
        }),
        this.setMainReward(),
        this.attachRewards(),
        this.setInteractionState(!0)
    }
    ,
    UTRewardSelectionView.prototype.dealloc = function() {
        n.prototype.dealloc.call(this),
        this.id = 0,
        this.rewards.forEach(function(e) {
            return e.dealloc()
        }),
        this.rewards = [],
        this.primaryReward = null
    }
    ,
    UTRewardSelectionView.prototype.setTitle = function(e) {
        this.__titleLandscape.textContent = e,
        this.__titlePhone.textContent = e
    }
    ,
    UTRewardSelectionView.prototype.setDetailedContent = function(e) {
        this.__expandRewardBtn.textContent = e
    }
    ,
    UTRewardSelectionView.prototype.setMainDescription = function(e) {
        this.__mainDescription.textContent = e
    }
    ,
    UTRewardSelectionView.prototype.toggleRewardSelection = function(e) {
        this.toggleClass(enums.UIState.SELECTED, e)
    }
    ,
    UTRewardSelectionView.prototype.attachRewards = function() {
        var t = this;
        this.rewards.forEach(function(e) {
            return t.__rewardsList.appendChild(e.getRootElement())
        }),
        DOMKit.toggleDisplayStyle(this.__expandRewardBtn, 0 < this.rewards.length)
    }
    ,
    UTRewardSelectionView.prototype.setMainReward = function() {
        if (this.primaryReward)
            if (DOMKit.addClass(this.__mainImage, GameRewardStyle.REWARD),
            this.primaryReward.isCoin)
                DOMKit.addClass(this.__mainImage, GameRewardStyle.COIN),
                this.setMainDescription(services.Localization.localizeNumber(this.primaryReward.value));
            else if (this.primaryReward.isPack) {
                DOMKit.addClass(this.__mainImage, GameRewardStyle.PACK_REWARD);
                var e = new UTPackGraphicView;
                e.setPackBackground(this.primaryReward.assetId),
                e.setPackForeground(this.primaryReward.assetId),
                e.setPromo(PurchaseDealType.REGULAR),
                this.__mainImage.appendChild(e.getRootElement()),
                this.setMainDescription(this.primaryReward.buildString())
            } else if (this.primaryReward.isItem && this.primaryReward.itemData) {
                if (this.primaryReward.itemData.isCoinBoost())
                    DOMKit.addClass(this.__mainImage, GameRewardStyle.COIN_BOOST),
                    this.setMainDescription(services.Localization.localizeNumber(this.primaryReward.value));
                else {
                    DOMKit.addClass(this.__mainImage, GameRewardStyle.ITEM_REWARD);
                    var t = isPhone() ? factories.ItemView.createSmallItem(this.primaryReward.itemData) : factories.ItemView.createLargeItem(this.primaryReward.itemData);
                    t.init(),
                    t.supportSecondaryViews = !1,
                    t.render(this.primaryReward.itemData),
                    this.__mainImage.appendChild(t.getRootElement())
                }
                this.setMainDescription(this.primaryReward.buildString())
            } else if (this.primaryReward.isChampionQualificationPoints) {
                DOMKit.addClass(this.__mainImage, GameRewardStyle.CHAMPION_POINTS);
                var i = services.Localization.localizeNumber(this.primaryReward.value)
                  , o = services.Localization.localize("rivals.rewardset.weekendleaguepoints");
                this.setMainDescription(i + " " + o)
            }
    }
    ,
    UTRewardSelectionView.prototype._tapDetected = function(e) {
        n.prototype._tapDetected.call(this, e);
        var t = this.rewards.length + 1;
        this._triggerActions(EventType.TAP, {
            id: this.id,
            rewardsCount: t
        })
    }
    ,
    UTRewardSelectionView
}(UTTargetActionView));
UTRewardSelectionView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-reward-selection"),
        this.__titleLandscape = document.createElement("h1"),
        this.__titleLandscape.classList.add("selection-title-landscape"),
        e.appendChild(this.__titleLandscape),
        this.__mainImage = document.createElement("div"),
        this.__mainImage.classList.add("image"),
        e.appendChild(this.__mainImage);
        var t = document.createElement("div");
        t.classList.add("rewards-details"),
        this.__titlePhone = document.createElement("h1"),
        this.__titlePhone.classList.add("selection-title-phone"),
        t.appendChild(this.__titlePhone),
        this.__mainDescription = document.createElement("span"),
        this.__mainDescription.classList.add("main-description"),
        t.appendChild(this.__mainDescription),
        this.__rewardsList = document.createElement("ul"),
        this.__rewardsList.classList.add("rewards-list"),
        t.appendChild(this.__rewardsList),
        e.appendChild(t),
        this.__expandRewardBtn = document.createElement("div"),
        this.__expandRewardBtn.classList.add("ut-reward-selection--expand"),
        e.appendChild(this.__expandRewardBtn),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRewardSelectionView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__titleLandscape = null,
    this.__mainImage = null,
    this.__titlePhone = null,
    this.__mainDescription = null,
    this.__rewardsList = null,
    this.__expandRewardBtn = null
}
,
UTRewardSelectionView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTRewardSelectionChoiceView = function(o) {
    function UTRewardSelectionChoiceView(e) {
        var i = o.call(this) || this;
        return i.rewardViews = new EAHashTable,
        e.forEach(function(e, t) {
            i.rewardViews.set(e.id, new UTRewardSelectionView(t + 1,e))
        }),
        i
    }
    return __extends(UTRewardSelectionChoiceView, o),
    UTRewardSelectionChoiceView.prototype.init = function() {
        var t = this;
        o.prototype.init.call(this),
        this.rewardViews.forEach(function(e) {
            e.init(),
            e.addTarget(t, t.onSelectionChanged, EventType.TAP)
        }, this),
        this.attachCategoryAwards(),
        this._actionBtn.init(),
        this._actionBtn.addTarget(this, this.onButtonTapped, EventType.TAP),
        this._actionBtn.setInteractionState(!1),
        this._exitBtn.init(),
        this._exitBtn.addTarget(this, this.onButtonTapped, EventType.TAP),
        this._exitBtn.setInteractionState(!0),
        this._backBtn.init(),
        this._backBtn.addTarget(this, this.onButtonTapped, EventType.TAP),
        this._backBtn.setInteractionState(!0),
        this.setInteractionState(!0)
    }
    ,
    UTRewardSelectionChoiceView.prototype.dealloc = function() {
        this.rewardViews.forEach(function(e) {
            return e.dealloc()
        }),
        this.rewardViews.clear(),
        this.resetRewardsCarousel(),
        o.prototype.dealloc.call(this)
    }
    ,
    UTRewardSelectionChoiceView.prototype.getActionBtn = function() {
        return this._actionBtn
    }
    ,
    UTRewardSelectionChoiceView.prototype.getBackBtn = function() {
        return this._backBtn
    }
    ,
    UTRewardSelectionChoiceView.prototype.setDescription = function(e) {
        this.__description.textContent = e
    }
    ,
    UTRewardSelectionChoiceView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTRewardSelectionChoiceView.prototype.setButtonText = function(e) {
        this._actionBtn.setText(e)
    }
    ,
    UTRewardSelectionChoiceView.prototype.clearSelectionClasses = function() {
        this.rewardViews.forEach(function(e) {
            return e.toggleRewardSelection(!1)
        })
    }
    ,
    UTRewardSelectionChoiceView.prototype.selectRewardSet = function(e) {
        var t = this.rewardViews.get(e);
        t && t.toggleRewardSelection(!0)
    }
    ,
    UTRewardSelectionChoiceView.prototype.expandRewardSet = function(e) {
        var o = this;
        this.addClass("ui-collapsable-expanded");
        var t = this.rewardViews.get(e)
          , i = services.Localization.localize("rivals.rewardset.title", [t ? t.index.toString() : ""])
          , n = [];
        if (t && t.primaryReward && n.push(t.primaryReward),
        t) {
            if (t.rewards.forEach(function(e) {
                return n.push(e.data)
            }),
            isPhone() ? (n.forEach(function(e, t) {
                if (0 !== t) {
                    var i = new UTRewardView(e);
                    i.init(),
                    i.render(),
                    o.__rewardsList.appendChild(i.getRootElement())
                }
            }),
            1 < this.rewardViews.length ? this._rewardsCarousel.setMobileTitle(i) : this._rewardsCarousel.addClass("rewards-carousel--single-reward")) : 1 < this.rewardViews.length && this.setTitle(i),
            n[0]) {
                var r = isPhone() ? [n[0]] : n;
                this.setupRewardsCarousel(r)
            }
        } else
            DebugUtils.Assert(!1, "Unable to retrieve rewards from.")
    }
    ,
    UTRewardSelectionChoiceView.prototype.setupRewardsCarousel = function(e) {
        0 < e.length && (this._rewardsCarousel.setNumVisibleItems(4),
        this._rewardsCarousel.setupRewards(e))
    }
    ,
    UTRewardSelectionChoiceView.prototype.resetRewardsCarousel = function() {
        this._rewardsCarousel.reset()
    }
    ,
    UTRewardSelectionChoiceView.prototype.resetRewardList = function() {
        DOMKit.empty(this.__rewardsList)
    }
    ,
    UTRewardSelectionChoiceView.prototype.clearExpandedClasses = function() {
        this.removeClass("ui-collapsable-expanded")
    }
    ,
    UTRewardSelectionChoiceView.prototype.toggleFooter = function(e) {
        DOMKit.toggleDisplayStyle(this.__footer, e)
    }
    ,
    UTRewardSelectionChoiceView.prototype.attachCategoryAwards = function() {
        var t = this;
        this.rewardViews.forEach(function(e) {
            return t.__rewardTiles.appendChild(e.getRootElement())
        })
    }
    ,
    UTRewardSelectionChoiceView.prototype.onButtonTapped = function(e, t, i) {
        if (this.isInteractionEnabled()) {
            var o = {
                selectedId: this.selectedId
            };
            e === this._backBtn ? this._triggerActions(UTRewardSelectionChoiceView.Event.BACK, o) : e === this._exitBtn ? this._triggerActions(UTRewardSelectionChoiceView.Event.EXIT, o) : e === this._actionBtn && (this._triggerActions(UTRewardSelectionChoiceView.Event.CONFIRM, o),
            this._actionBtn.setInteractionState(!1))
        }
    }
    ,
    UTRewardSelectionChoiceView.prototype.onSelectionChanged = function(e, t, i) {
        this.selectedId = i.id,
        this._triggerActions(UTRewardSelectionChoiceView.Event.OPTION_SELECT, i)
    }
    ,
    UTRewardSelectionChoiceView.Event = {
        BACK: "UTRewardSelectionChoiceView.Event.BACK",
        EXIT: "UTRewardSelectionChoiceView.Event.EXIT",
        CONFIRM: "UTRewardSelectionChoiceView.Event.CONFIRM",
        OPTION_SELECT: "UTRewardSelectionChoiceView.Event.OPTION_SELECT"
    },
    UTRewardSelectionChoiceView
}(UTTargetActionView);
UTRewardSelectionChoiceView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-reward-selection-modal");
        var t = document.createElement("header");
        t.classList.add("ut-reward-selection-modal-header"),
        this._backBtn = new UTImageButtonControl,
        this._backBtn.getRootElement().classList.add("back-btn"),
        t.appendChild(this._backBtn.getRootElement()),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("reward-selector-title"),
        t.appendChild(this.__title),
        this._exitBtn = new UTImageButtonControl,
        this._exitBtn.getRootElement().classList.add("exit-btn"),
        t.appendChild(this._exitBtn.getRootElement()),
        e.appendChild(t),
        this.__rewardTiles = document.createElement("div"),
        this.__rewardTiles.classList.add("ut-reward-selection-modal-content"),
        this.__expandedReward = document.createElement("div"),
        this.__expandedReward.classList.add("ut-reward-selection-detail"),
        this.__description = document.createElement("p"),
        this.__description.classList.add("ut-reward-selection-description"),
        this.__expandedReward.appendChild(this.__description);
        var i = document.createElement("section");
        i.classList.add("rewards-container"),
        this._rewardsCarousel = new UTRewardsCarouselView,
        i.appendChild(this._rewardsCarousel.getRootElement()),
        this.__rewardsList = document.createElement("ul"),
        this.__rewardsList.classList.add("rewards-list"),
        i.appendChild(this.__rewardsList),
        this.__expandedReward.appendChild(i),
        this.__rewardTiles.appendChild(this.__expandedReward),
        e.appendChild(this.__rewardTiles),
        this.__footer = document.createElement("footer"),
        this._actionBtn = new UTStandardButtonControl,
        this._actionBtn.getRootElement().classList.add("call-to-action"),
        this.__footer.appendChild(this._actionBtn.getRootElement()),
        e.appendChild(this.__footer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRewardSelectionChoiceView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._backBtn.destroy(),
    this.__title = null,
    this._exitBtn.destroy(),
    this.__rewardTiles = null,
    this.__expandedReward = null,
    this.__description = null,
    this._rewardsCarousel.destroy(),
    this.__rewardsList = null,
    this.__footer = null,
    this._actionBtn.destroy()
}
,
UTRewardSelectionChoiceView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTRewardSelectionChoiceViewController = function(i) {
    function UTRewardSelectionChoiceViewController(e) {
        var t = i.call(this) || this;
        return t.claimable = !0,
        t.rewardSets = e,
        t.selectedRewardIndex = -1,
        t.titleText = "",
        t.descriptionText = "",
        t
    }
    return __extends(UTRewardSelectionChoiceViewController, i),
    UTRewardSelectionChoiceViewController.prototype.init = function() {
        i.prototype.init.call(this),
        this.getView().setButtonText(services.Localization.localize("common.dialog.confirm"))
    }
    ,
    UTRewardSelectionChoiceViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this);
        var e = this.getView();
        e.addTarget(this, this.onBackSelected, UTRewardSelectionChoiceView.Event.BACK),
        e.addTarget(this, this.onExitSelected, UTRewardSelectionChoiceView.Event.EXIT),
        e.addTarget(this, this.onConfirmSelected, UTRewardSelectionChoiceView.Event.CONFIRM),
        e.addTarget(this, this.onSelectionViewChanged, UTRewardSelectionChoiceView.Event.OPTION_SELECT),
        1 === this.rewardSets.length && (this.expandFirstReward(),
        e.getBackBtn().hide(),
        e.getActionBtn().setInteractionState(this.claimable && 0 <= this.selectedRewardIndex))
    }
    ,
    UTRewardSelectionChoiceViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        e.removeTarget(this, this.onBackSelected, UTRewardSelectionChoiceView.Event.BACK),
        e.removeTarget(this, this.onExitSelected, UTRewardSelectionChoiceView.Event.EXIT),
        e.removeTarget(this, this.onConfirmSelected, UTRewardSelectionChoiceView.Event.CONFIRM),
        e.removeTarget(this, this.onSelectionViewChanged, UTRewardSelectionChoiceView.Event.OPTION_SELECT)
    }
    ,
    UTRewardSelectionChoiceViewController.prototype._getViewInstanceFromData = function() {
        return new UTRewardSelectionChoiceView(this.rewardSets)
    }
    ,
    UTRewardSelectionChoiceViewController.prototype.setTitleText = function(e) {
        this.titleText = e,
        this.getView().setTitle(this.titleText)
    }
    ,
    UTRewardSelectionChoiceViewController.prototype.setDescriptionText = function(e) {
        this.descriptionText = e,
        this.getView().setDescription(this.descriptionText)
    }
    ,
    UTRewardSelectionChoiceViewController.prototype.setClaimableState = function(e) {
        this.claimable = e,
        this.getView().toggleFooter(e)
    }
    ,
    UTRewardSelectionChoiceViewController.prototype.expandFirstReward = function() {
        this.selectedRewardIndex = this.rewardSets[0].id,
        this.getView().expandRewardSet(this.selectedRewardIndex)
    }
    ,
    UTRewardSelectionChoiceViewController.prototype.onConfirmSelected = function(e, t, i) {
        this.isViewDisplayed() && this.closePopup()
    }
    ,
    UTRewardSelectionChoiceViewController.prototype.onExitSelected = function(e, t, i) {
        this.isViewDisplayed() && this.closePopup()
    }
    ,
    UTRewardSelectionChoiceViewController.prototype.onBackSelected = function(e, t, i) {
        e.setTitle(this.titleText),
        e.resetRewardsCarousel(),
        e.resetRewardList(),
        e.clearExpandedClasses(),
        e.getActionBtn().setInteractionState(this.claimable && 0 <= this.selectedRewardIndex)
    }
    ,
    UTRewardSelectionChoiceViewController.prototype.onSelectionViewChanged = function(e, t, i) {
        this.selectedRewardIndex = i.id,
        e.clearSelectionClasses(),
        this.claimable && e.selectRewardSet(this.selectedRewardIndex),
        (1 < this.rewardSets.length || 1 < i.rewardsCount) && e.expandRewardSet(this.selectedRewardIndex),
        e.getActionBtn().setInteractionState(this.claimable && 0 <= this.selectedRewardIndex)
    }
    ,
    UTRewardSelectionChoiceViewController
}(BasePopupViewController)
  , UTObjectivesHubView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTObjectivesHubView() {
        return e.call(this) || this
    }
    return __extends(UTObjectivesHubView, e),
    UTObjectivesHubView.prototype.init = function() {
        e.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTObjectivesHubView.prototype.dealloc = function() {
        this.objectiveSubview = null,
        e.prototype.dealloc.call(this)
    }
    ,
    UTObjectivesHubView.prototype.displaySubview = function(e) {
        this.objectiveSubview !== e && (this.dismissSubview(),
        this.objectiveSubview = e,
        this.addSubview(e, this.__subviewContainer),
        this.layoutSubviews())
    }
    ,
    UTObjectivesHubView.prototype.dismissSubview = function() {
        this.objectiveSubview && (this.objectiveSubview.removeFromSuperview(),
        this.objectiveSubview = null)
    }
    ,
    UTObjectivesHubView.prototype.setupNavigation = function(e) {
        var t = this;
        this._objectivesTM.clearTabs(),
        e.forEach(function(e) {
            return t._objectivesTM.addTab(e.id, e.name)
        }),
        this._objectivesTM.layoutSubviews()
    }
    ,
    UTObjectivesHubView.prototype.addNavigationTarget = function(e, t) {
        this._objectivesTM.addTarget(e, t, EventType.TAP)
    }
    ,
    UTObjectivesHubView.prototype.setTab = function(e) {
        this._objectivesTM.setActiveTab(e)
    }
    ,
    UTObjectivesHubView
}(UTTargetActionView));
UTObjectivesHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-objectives-hub"),
        this._objectivesTM = new EAFilterBarView,
        e.appendChild(this._objectivesTM.getRootElement()),
        this.__subviewContainer = document.createElement("div"),
        this.__subviewContainer.classList.add("ut-objectives-hub--subview"),
        e.appendChild(this.__subviewContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTObjectivesHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._objectivesTM.destroy(),
    this.__subviewContainer = null
}
,
UTObjectivesHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTObjectivesHubViewController = function(o) {
    function UTObjectivesHubViewController() {
        var e = o.call(this) || this;
        return e.intervalController = new EAIntervalController(1e4,e.handleEventTimer.bind(e)),
        e
    }
    return __extends(UTObjectivesHubViewController, o),
    UTObjectivesHubViewController.prototype.init = function() {
        this.initialized || (o.prototype.init.call(this),
        this.objectivesViewModel || (this.objectivesViewModel = new UTObjectivesViewModel(services.Objectives)),
        this.objectivesViewModel.init(),
        this.getView().addNavigationTarget(this, this.onTabSelected))
    }
    ,
    UTObjectivesHubViewController.prototype.initWithViewmodel = function(e) {
        this.initialized || (this.objectivesViewModel = e,
        this.init())
    }
    ,
    UTObjectivesHubViewController.prototype.dealloc = function() {
        this.objectivesViewModel && (this.objectivesViewModel.dealloc(),
        this.objectivesViewModel = null),
        this.categoryController && (this.categoryController.dealloc(),
        this.categoryController = null),
        this.seasonController && (this.seasonController.dealloc(),
        this.seasonController = null),
        this.worldController && (this.worldController.dealloc(),
        this.worldController = null),
        this.displayedViewController = null,
        this.intervalController.dealloc(),
        o.prototype.dealloc.call(this)
    }
    ,
    UTObjectivesHubViewController.prototype._getViewInstanceFromData = function() {
        return new UTObjectivesHubView
    }
    ,
    UTObjectivesHubViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.objectives")
    }
    ,
    UTObjectivesHubViewController.prototype.viewWillAppear = function() {
        var e;
        o.prototype.viewWillAppear.call(this),
        null === (e = this.displayedViewController) || void 0 === e || e.viewWillAppear()
    }
    ,
    UTObjectivesHubViewController.prototype.viewDidAppear = function() {
        var e, t;
        o.prototype.viewDidAppear.call(this),
        null === (e = this.displayedViewController) || void 0 === e || e.viewDidAppear(),
        null === (t = this.getNavigationController()) || void 0 === t || t.setNavigationVisibility(!0, !0),
        this.loadData();
        var i = getDefaultDispatcher();
        i.addObserver(AppNotification.APP_PAUSE, this, this.nAppPaused),
        i.addObserver(AppNotification.APP_RESUME, this, this.nAppResumed),
        i.addObserver(AppNotification.OBJECTIVE_CAMPAIGN_REWARDS_CLAIM, this, this.onCampaignRewardsClaimed),
        TelemetryManager.trackPage(TelemetryManager.Sections.OBJECTIVES, "Hub")
    }
    ,
    UTObjectivesHubViewController.prototype.viewWillDisappear = function() {
        var e;
        this.intervalController.stop();
        var t = getDefaultDispatcher();
        t.removeObserver(AppNotification.APP_PAUSE, this),
        t.removeObserver(AppNotification.APP_RESUME, this),
        t.removeObserver(AppNotification.OBJECTIVE_CAMPAIGN_REWARDS_CLAIM, this),
        null === (e = this.displayedViewController) || void 0 === e || e.viewWillDisappear(),
        o.prototype.viewWillDisappear.call(this)
    }
    ,
    UTObjectivesHubViewController.prototype.viewDidDisappear = function() {
        var e;
        o.prototype.viewDidDisappear.call(this),
        null === (e = this.displayedViewController) || void 0 === e || e.viewDidDisappear()
    }
    ,
    UTObjectivesHubViewController.prototype.loadData = function() {
        function Wea(e, t) {
            var i;
            e.unobserve(n),
            t.success ? (n.setupFilterTabs(),
            n.renderCurrentFilter(),
            n.updateSelectedFilter(),
            n.intervalController.start()) : (services.Notification.queue([services.Localization.localize("notification.scmp.categories.loadFailed"), UINotificationType.NEGATIVE]),
            null === (i = n.getNavigationController()) || void 0 === i || i.popViewController())
        }
        function Xea(e, t) {
            e.unobserve(n);
            var o = services.Localization;
            t.success ? t.success && JSUtils.isObject(t.data) && (n.objectivesViewModel && t.data.needsAutoClaim && n.objectivesViewModel.claimExpiredWorldRewards().observe(n, function(e, t) {
                if (e.unobserve(n),
                t.success && t.data && 0 < t.data.rewards.length) {
                    var i = new UTGameRewardsViewController(t.data.rewards);
                    i.setTitle(o.localize("wcmp.rewards.title")),
                    i.setDescription(o.localize("wcmp.rewards.autoclaimed")),
                    i.setButtonText(o.localize("common.dialog.accept")),
                    i.modalDisplayDimensions.width = "24em",
                    gPopupClickShield.setActivePopup(i)
                }
            }),
            !t.data.campaign && n.objectivesViewModel && n.objectivesViewModel.currentCategoryId === UTObjectivesViewModel.TabId.WORLD && (n.objectivesViewModel.currentCategoryId = UTObjectivesViewModel.TabId.SEASON)) : services.Notification.queue([o.localize("notification.wcmp.loadfail"), UINotificationType.NEGATIVE]),
            DebugUtils.Assert(JSUtils.isValid(n.objectivesViewModel), "Missing objectives view model when loading view data."),
            n.objectivesViewModel && n.objectivesViewModel.requestCategories().observe(n, Wea)
        }
        var n = this;
        this.objectivesViewModel && this.objectivesViewModel.requestActiveCampaignDetails().observe(this, function(e, t) {
            var i;
            e.unobserve(n),
            DebugUtils.Assert(JSUtils.isValid(n.objectivesViewModel), "Missing objectives view model when loading view data."),
            t.success && n.objectivesViewModel ? n.objectivesViewModel.requestActiveWorldCampaign().observe(n, Xea) : t.success || (services.Notification.queue([services.Localization.localize("notification.scmp.campaign.loadFailed"), UINotificationType.NEGATIVE]),
            null === (i = n.getNavigationController()) || void 0 === i || i.popViewController())
        })
    }
    ,
    UTObjectivesHubViewController.prototype.updateSelectedFilter = function() {
        this.objectivesViewModel && this.getView().setTab(this.objectivesViewModel.currentCategoryId)
    }
    ,
    UTObjectivesHubViewController.prototype.setupFilterTabs = function() {
        var e = [{
            id: UTObjectivesViewModel.TabId.SEASON,
            name: services.Localization.localize("scmp.categories.season")
        }];
        if (this.objectivesViewModel) {
            var t = this.objectivesViewModel.worldCampaign;
            t && e.push({
                id: UTObjectivesViewModel.TabId.WORLD,
                name: services.Localization.localize(t.type === WorldCampaignType.MILESTONE ? "scmp.categories.world" : "scmp.categories.factions")
            }),
            e = e.concat(this.objectivesViewModel.getCategories().map(function(e) {
                return {
                    id: e.id,
                    name: e.name
                }
            }))
        }
        this.getView().setupNavigation(e)
    }
    ,
    UTObjectivesHubViewController.prototype.displayChildViewController = function(e) {
        e !== this.displayedViewController && (this.dismissDisplayedViewController(),
        e.viewWillAppear(),
        this.getView().displaySubview(e.getView()),
        e.viewDidAppear(),
        this.displayedViewController = e)
    }
    ,
    UTObjectivesHubViewController.prototype.dismissDisplayedViewController = function() {
        this.displayedViewController && (this.displayedViewController.viewWillDisappear(),
        this.getView().dismissSubview(),
        this.displayedViewController.viewDidDisappear(),
        this.displayedViewController = null)
    }
    ,
    UTObjectivesHubViewController.prototype.displayRewardClaimScreen = function(e) {
        DebugUtils.Assert(JSUtils.isValid(this.objectivesViewModel), "Missing objectives view model. Unable to display reward claim screen."),
        this.objectivesViewModel && (e instanceof UTWorldCampaignEntity ? (this.worldController && this.worldController.dealloc(),
        this.worldController = new UTClaimCampaignRewardsViewController({
            objectivesViewModel: this.objectivesViewModel
        }),
        this.worldController.init(),
        this.addChildViewController(this.worldController),
        this.displayChildViewController(this.worldController)) : (this.seasonController && this.seasonController.dealloc(),
        this.seasonController = new UTClaimCampaignRewardsViewController({
            objectivesViewModel: this.objectivesViewModel
        }),
        this.seasonController.init(),
        this.addChildViewController(this.seasonController),
        this.displayChildViewController(this.seasonController)))
    }
    ,
    UTObjectivesHubViewController.prototype.displayNoCampaignScreen = function(e) {
        e === ObjectiveCampaignType.WORLD ? (this.worldController && this.worldController.dealloc(),
        this.worldController = new UTNoCampaignViewController,
        this.worldController.init(),
        this.addChildViewController(this.worldController),
        this.displayChildViewController(this.worldController)) : (this.seasonController && this.seasonController.dealloc(),
        this.seasonController = new UTNoCampaignViewController,
        this.seasonController.init(),
        this.addChildViewController(this.seasonController),
        this.displayChildViewController(this.seasonController))
    }
    ,
    UTObjectivesHubViewController.prototype.displaySeasonCampaign = function() {
        if (DebugUtils.Assert(JSUtils.isValid(this.objectivesViewModel), "Missing objectives view model. Unable to display season campaign."),
        this.objectivesViewModel) {
            var e = this.objectivesViewModel.getCampaign();
            e && e.hasEnded() ? e.hasUnclaimedRewards() ? this.displayRewardClaimScreen(e) : this.displayNoCampaignScreen(ObjectiveCampaignType.SEASON) : (this.seasonController || (this.seasonController = new UTObjectiveSeasonViewController(this.objectivesViewModel),
            this.seasonController.init(),
            this.addChildViewController(this.seasonController)),
            this.displayChildViewController(this.seasonController))
        }
    }
    ,
    UTObjectivesHubViewController.prototype.displayWorldCampaign = function() {
        if (DebugUtils.Assert(JSUtils.isValid(this.objectivesViewModel), "Missing objectives view model. Unable to display world campaign."),
        this.objectivesViewModel) {
            var e = this.objectivesViewModel.worldCampaign;
            if (DebugUtils.Assert(JSUtils.isValid(e), "Missing world campaign in the objectives view model."),
            e) {
                if (0 === e.getTimeUntilRewardsGranted())
                    return void this.displayRewardClaimScreen(e);
                if (0 === e.getTimeRemaining())
                    return void this.displayNoCampaignScreen(ObjectiveCampaignType.WORLD);
                this.worldController || (e.type === WorldCampaignType.FACTION ? this.worldController = new UTWorldFactionEventViewController(this.objectivesViewModel) : this.worldController = new UTWorldMilestoneEventViewController(this.objectivesViewModel),
                this.worldController.init(),
                this.addChildViewController(this.worldController)),
                this.displayChildViewController(this.worldController)
            } else
                services.Notification.queue([services.Localization.localize("notification.wcmp.loadfail"), UINotificationType.NEGATIVE]),
                this.objectivesViewModel.currentCategoryId = UTObjectivesViewModel.TabId.SEASON,
                this.updateSelectedFilter(),
                this.displaySeasonCampaign()
        }
    }
    ,
    UTObjectivesHubViewController.prototype.displayObjectiveCategory = function() {
        DebugUtils.Assert(JSUtils.isValid(this.objectivesViewModel), "Missing objectives view model. Unable to display objectives."),
        this.objectivesViewModel && (this.categoryController || (this.categoryController = new UTObjectiveCategoryViewController(this.objectivesViewModel),
        this.categoryController.init(),
        this.addChildViewController(this.categoryController)),
        this.categoryController === this.displayedViewController ? this.categoryController.refreshView() : this.displayChildViewController(this.categoryController))
    }
    ,
    UTObjectivesHubViewController.prototype.renderCurrentFilter = function() {
        if (DebugUtils.Assert(JSUtils.isValid(this.objectivesViewModel), "Missing objectives view model. Cannot change filter."),
        this.objectivesViewModel) {
            var e = this.objectivesViewModel.currentCategoryId;
            e === UTObjectivesViewModel.TabId.SEASON ? this.displaySeasonCampaign() : e === UTObjectivesViewModel.TabId.WORLD ? this.displayWorldCampaign() : this.displayObjectiveCategory()
        }
    }
    ,
    UTObjectivesHubViewController.prototype.worldCampaignUpdate = function() {
        if (this.objectivesViewModel) {
            var e = this.objectivesViewModel.worldCampaign
              , t = this.objectivesViewModel.currentCategoryId;
            e && t === UTObjectivesViewModel.TabId.WORLD && (0 !== e.getTimeUntilRewardsGranted() || this.displayedViewController instanceof UTClaimCampaignRewardsViewController || (this.intervalController.stop(),
            this.renderCurrentFilter(),
            this.intervalController.start()))
        }
    }
    ,
    UTObjectivesHubViewController.prototype.seasonCampaignUpdate = function() {
        var e, t, i = null === (e = this.objectivesViewModel) || void 0 === e ? void 0 : e.getCampaign();
        if (this.objectivesViewModel && i && i.hasEnded() && (i.hasNextCampaignStarted() || i.isLastCampaign())) {
            this.intervalController.stop();
            var o = i.hasUnclaimedRewards() || null !== (t = this.objectivesViewModel.hasUnclaimedGroupRewards()) && void 0 !== t && t
              , n = new UTSeasonalCampaignPopupViewController(o ? "season-rewards" : "season-campaign");
            n.onExit.observe(this, this.onSCMPInfoPopupClosed),
            this.objectivesViewModel.currentCategoryId !== UTObjectivesViewModel.TabId.WORLD && n.getView().setCancelButtonDisplay(!1),
            gPopupClickShield.setActivePopup(n)
        }
    }
    ,
    UTObjectivesHubViewController.prototype.handleEventTimer = function() {
        this.seasonCampaignUpdate(),
        this.worldCampaignUpdate()
    }
    ,
    UTObjectivesHubViewController.prototype.onSCMPInfoPopupClosed = function(e, t, i) {
        e.unobserve(this),
        services.Objectives.reset(),
        i === UTSeasonalCampaignPopupView.Event.CONFIRM && (this.objectivesViewModel ? (this.objectivesViewModel.currentCategoryId = UTObjectivesViewModel.TabId.SEASON,
        this.loadData()) : getAppMain().getRootViewController().setGameViewTab(UTGameTabBarController.TabTag.HOME))
    }
    ,
    UTObjectivesHubViewController.prototype.onTabSelected = function(e, t, i) {
        this.objectivesViewModel && i.id !== this.objectivesViewModel.currentCategoryId && (this.objectivesViewModel.currentCategoryId = i.id,
        this.renderCurrentFilter())
    }
    ,
    UTObjectivesHubViewController.prototype.onCampaignRewardsClaimed = function(e, t, i) {
        var o;
        null === (o = this.objectivesViewModel) || void 0 === o || o.stopTrackingRequests(),
        this.displayedViewController && (this.displayedViewController = null),
        this.loadData()
    }
    ,
    UTObjectivesHubViewController.prototype.nAppPaused = function(e, t, i) {
        this.intervalController.stop()
    }
    ,
    UTObjectivesHubViewController.prototype.nAppResumed = function(e, t, i) {
        this.intervalController.start()
    }
    ,
    UTObjectivesHubViewController
}(UTViewController);
services.URL.registerDeepLinkID(DeepLinkSection.OBJECTIVES, function(e) {
    var t = getAppMain().getRootViewController();
    if (t.setGameViewTab(UTGameTabBarController.TabTag.HOME),
    services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.OBJECTIVES_ENABLED)) {
        var i = t.getPresentedViewController();
        if (i instanceof UTTabBarController) {
            var o = i.getCurrentViewController();
            if (o instanceof UTNavigationController) {
                var n = new UTObjectivesHubViewController
                  , r = new UTObjectivesViewModel(services.Objectives);
                0 < e.length && (r.currentCategoryId = Number(e[0])),
                n.initWithViewmodel(r),
                o.pushViewController(n)
            }
        }
    }
});
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadBuilderViewModel = function(t) {
    function UTSquadBuilderViewModel() {
        var e = t.call(this) || this;
        return e.preferredSubPositions = [PlayerPosition.GK, ZONE_DEFENDER_VALUE, ZONE_DEFENDER_VALUE, ZONE_MIDFIELDER_VALUE, ZONE_MIDFIELDER_VALUE, ZONE_ATTACKER_VALUE, ZONE_ATTACKER_VALUE],
        e.preferredResPositions = [ZONE_DEFENDER_VALUE, ZONE_DEFENDER_VALUE, ZONE_MIDFIELDER_VALUE, ZONE_MIDFIELDER_VALUE, ZONE_ATTACKER_VALUE],
        e
    }
    return __extends(UTSquadBuilderViewModel, t),
    UTSquadBuilderViewModel.prototype.containsVariationOfCard = function(e, t) {
        for (var i = 0; i < t.length; i++)
            if (t[i].compareResourceTo(e))
                return !0;
        return !1
    }
    ,
    UTSquadBuilderViewModel.prototype.filterDuplicates = function(e, r) {
        var s = this;
        return e.reduce(function(e, t) {
            var i, o = s.containsVariationOfCard(t, e), n = null !== (i = null == r ? void 0 : r.containsVariationOfCard(t)) && void 0 !== i && i;
            return o || n || e.push(t),
            e
        }, [])
    }
    ,
    UTSquadBuilderViewModel.prototype.findPartialFitForPos = function(e, t) {
        var i = -1;
        switch (e) {
        case PlayerPosition.ST:
            i = this.findBestFitByPosition(PlayerPosition.CF, t);
            break;
        case PlayerPosition.CF:
            -1 === (i = this.findBestFitByPosition(PlayerPosition.ST, t)) && (i = this.findBestFitByPosition(PlayerPosition.CAM, t));
            break;
        case PlayerPosition.CAM:
            -1 === (i = this.findBestFitByPosition(PlayerPosition.CM, t)) && (i = this.findBestFitByPosition(PlayerPosition.CF, t));
            break;
        case PlayerPosition.CM:
            -1 === (i = this.findBestFitByPosition(PlayerPosition.CAM, t)) && (i = this.findBestFitByPosition(PlayerPosition.CDM, t));
            break;
        case PlayerPosition.CDM:
            i = this.findBestFitByPosition(PlayerPosition.CM, t);
            break;
        case PlayerPosition.LM:
            -1 === (i = this.findBestFitByPosition(PlayerPosition.LF, t)) && (i = this.findBestFitByPosition(PlayerPosition.LW, t));
            break;
        case PlayerPosition.LF:
            -1 === (i = this.findBestFitByPosition(PlayerPosition.LW, t)) && (i = this.findBestFitByPosition(PlayerPosition.LM, t));
            break;
        case PlayerPosition.LW:
            -1 === (i = this.findBestFitByPosition(PlayerPosition.LF, t)) && (i = this.findBestFitByPosition(PlayerPosition.LM, t));
            break;
        case PlayerPosition.RM:
            -1 === (i = this.findBestFitByPosition(PlayerPosition.RF, t)) && (i = this.findBestFitByPosition(PlayerPosition.RW, t));
            break;
        case PlayerPosition.RF:
            -1 === (i = this.findBestFitByPosition(PlayerPosition.RW, t)) && (i = this.findBestFitByPosition(PlayerPosition.RM, t));
            break;
        case PlayerPosition.RW:
            -1 === (i = this.findBestFitByPosition(PlayerPosition.RF, t)) && (i = this.findBestFitByPosition(PlayerPosition.RM, t));
            break;
        case PlayerPosition.LB:
            i = this.findBestFitByPosition(PlayerPosition.LWB, t);
            break;
        case PlayerPosition.LWB:
            i = this.findBestFitByPosition(PlayerPosition.LB, t);
            break;
        case PlayerPosition.RB:
            i = this.findBestFitByPosition(PlayerPosition.RWB, t);
            break;
        case PlayerPosition.RWB:
            i = this.findBestFitByPosition(PlayerPosition.RB, t)
        }
        return i
    }
    ,
    UTSquadBuilderViewModel.prototype.findBestFitByPosition = function(e, t) {
        var i = t.length;
        if (0 === i)
            return -1;
        for (var o = 0; o < i; o++) {
            var n = t[o];
            if (e === ZONE_DEFENDER_VALUE && n.prefersDefensePosition() || e === ZONE_MIDFIELDER_VALUE && n.prefersMidfieldPosition() || e === ZONE_ATTACKER_VALUE && n.prefersAttackerPosition() || e === n.preferredPosition)
                return o
        }
        return -1
    }
    ,
    UTSquadBuilderViewModel.prototype.getBestPlayerForPos = function(e, t) {
        var i = this.findBestFitByPosition(e, t);
        return -1 === i && (i = this.findPartialFitForPos(e, t)),
        0 <= i && t.splice(i, 1)[0] || null
    }
    ,
    UTSquadBuilderViewModel.prototype.generatePlayerCollection = function(e, o, n) {
        var r = this;
        return e.map(function(e, t) {
            var i = n ? n.getSlot(t) : null;
            return i && (i.isValid() || i.isBrick()) ? i.getItem() : r.getBestPlayerForPos(e, o)
        })
    }
    ,
    UTSquadBuilderViewModel.prototype.buildSquad = function(e, t, i) {
        var o = repositories.Squad.getFormation(e);
        if (DebugUtils.Assert(JSUtils.isValid(o), "Expected a valid formation."),
        DebugUtils.Assert(0 < t.length, "Expected a collection of players."),
        !o || 0 === t.length)
            return [];
        var n = o.generalPositions.concat(this.preferredSubPositions, this.preferredResPositions)
          , r = this.filterDuplicates(t, i);
        return this.generatePlayerCollection(n, r, i)
    }
    ,
    UTSquadBuilderViewModel
}(UTViewModel)
  , UTSquadBuilderView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSquadBuilderView() {
        var e = t.call(this) || this;
        return e.onFilterChange = new EAObservable,
        e.onFilterChange = new EAObservable,
        e
    }
    return __extends(UTSquadBuilderView, t),
    UTSquadBuilderView.prototype.init = function() {
        var e = services.Localization;
        this._btnReset.init(),
        this._btnReset.setText(e.localize("search.pagination.reset")),
        this._btnBuild.init(),
        this._btnBuild.setText(e.localize("button.build")),
        this._formationFilter = new UTSearchFilterControl,
        this._formationFilter.init(),
        this._formationFilter.setOptions(factories.DataProvider.getFormationDP()),
        this._formationFilter.setDefaultLabel(e.localize("search.pagination.formation")),
        this.setFormationFilterImage(this._formationFilter),
        this._formationFilter.addTarget(this, this.eFormationFilterChanged, EventType.CHANGE),
        this.__squadBuilderInfo.textContent = e.localize("squadbuilder.infoText"),
        this.__filterTitle.textContent = e.localize("search.sort.filterBy"),
        this._searchFilters.init(),
        this._searchFilters.addSubview(this._formationFilter),
        this._searchFilters.layoutSubviews(),
        this._searchFilters.togglePlayerNameRow(!1),
        this._searchFilters.onFilterChange.observe(this, this.eFilterChanged),
        this.__sortTitle.textContent = e.localize("search.sort.sortBy")
    }
    ,
    UTSquadBuilderView.prototype.dealloc = function() {
        this._formationFilter.removeTarget(this, this.eFormationFilterChanged, EventType.CHANGE),
        this._searchFilters.onFilterChange.unobserve(this),
        this.onFilterChange.dealloc(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTSquadBuilderView.prototype.setupSearchOptions = function(e, t, i) {
        var o = services.Localization;
        this._searchOptions.init(),
        this._searchOptions.addToggleCell(enums.UISortOptionType.CONCEPT, o.localize("squadbuilder.toggles.conceptSquad")),
        t && this._searchOptions.addToggleCell(enums.UISortOptionType.REPLACE, o.localize("squadbuilder.toggles.replacePlayersSquad")),
        e && this._searchOptions.addToggleCell(enums.UISortOptionType.UNTRADEABLE, o.localize("search.sort.header")),
        i && this._searchOptions.addToggleCell(enums.UISortOptionType.EXCLUDE_SQUAD, o.localize("search.sort.squadPlayers")),
        this._searchOptions.layoutSubviews(),
        this._sortDropDown.init(),
        this._sortDropDown.setOptions(factories.DataProvider.getSortTypeDP())
    }
    ,
    UTSquadBuilderView.prototype.setFilters = function(e, t) {
        this._searchFilters.setFilters(e, t)
    }
    ,
    UTSquadBuilderView.prototype.setFilterLock = function(e, t) {
        this._searchFilters.setFilterLock(e, t)
    }
    ,
    UTSquadBuilderView.prototype.toggleExcludeSquadSlider = function(e) {
        this._searchOptions.setCellInteractionState(enums.UISortOptionType.EXCLUDE_SQUAD, e),
        e || this._searchOptions.toggleById(enums.UISortOptionType.EXCLUDE_SQUAD, e)
    }
    ,
    UTSquadBuilderView.prototype.getFormationFilter = function() {
        return this._formationFilter
    }
    ,
    UTSquadBuilderView.prototype.getSortOptions = function() {
        return this._searchOptions
    }
    ,
    UTSquadBuilderView.prototype.getSortDropDown = function() {
        return this._sortDropDown
    }
    ,
    UTSquadBuilderView.prototype.getResetButton = function() {
        return this._btnReset
    }
    ,
    UTSquadBuilderView.prototype.getBuildButton = function() {
        return this._btnBuild
    }
    ,
    UTSquadBuilderView.prototype.setFormationFilterImage = function(e) {
        e.image = AssetLocationUtils.getFilterImage(AssetLocationUtils.FILTER.FORMATION, e.value)
    }
    ,
    UTSquadBuilderView.prototype.eFormationFilterChanged = function(e, t) {
        this.setFormationFilterImage(e)
    }
    ,
    UTSquadBuilderView.prototype.eFilterChanged = function(e, t, i, o) {
        this.onFilterChange.notify(t, i, o)
    }
    ,
    UTSquadBuilderView
}(UTView));
UTSquadBuilderView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-builder-view");
        var t = document.createElement("div");
        t.classList.add("ut-squad-builder-view--filters"),
        this.__squadBuilderInfo = document.createElement("p"),
        this.__squadBuilderInfo.classList.add("ut-squad-builder-view--info"),
        t.appendChild(this.__squadBuilderInfo),
        this.__sortContainer = document.createElement("div"),
        this.__sortContainer.classList.add("sort-filter-container"),
        this.__filterTitle = document.createElement("h4"),
        this.__sortContainer.appendChild(this.__filterTitle),
        this._searchOptions = new UTToggleControlGroupView,
        this.__sortContainer.appendChild(this._searchOptions.getRootElement()),
        this.__sortTitle = document.createElement("h4"),
        this.__sortContainer.appendChild(this.__sortTitle),
        this._sortDropDown = new UTDropDownControl,
        this.__sortContainer.appendChild(this._sortDropDown.getRootElement()),
        t.appendChild(this.__sortContainer),
        e.appendChild(t),
        this._searchFilters = new UTItemSearchView,
        e.appendChild(this._searchFilters.getRootElement());
        var i = document.createElement("div");
        i.classList.add("button-container"),
        this._btnReset = new UTStandardButtonControl,
        i.appendChild(this._btnReset.getRootElement()),
        this._btnBuild = new UTStandardButtonControl,
        this._btnBuild.getRootElement().classList.add("call-to-action"),
        i.appendChild(this._btnBuild.getRootElement()),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadBuilderView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__squadBuilderInfo = null,
    this.__sortContainer = null,
    this.__filterTitle = null,
    this._searchOptions.destroy(),
    this.__sortTitle = null,
    this._sortDropDown.destroy(),
    this._searchFilters.destroy(),
    this._btnReset.destroy(),
    this._btnBuild.destroy()
}
,
UTSquadBuilderView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadBuilderViewController = function(n) {
    function UTSquadBuilderViewController() {
        var e = n.call(this) || this;
        return e.squadBuilder = null,
        e.viewModel = null,
        e.formation = "",
        e.squad = null,
        e.challenge = null,
        e.useConceptPlayers = !1,
        e.replacePlayers = !1,
        e
    }
    return __extends(UTSquadBuilderViewController, n),
    UTSquadBuilderViewController.prototype.init = function() {
        if (!this.initialized) {
            n.prototype.init.call(this),
            this.squadBuilder = new UTSquadBuilderViewModel,
            this.viewModel = new UTItemSearchViewModel;
            var e = this.getView();
            e.getResetButton().addTarget(this, this.eResetSelected, EventType.TAP),
            e.getBuildButton().addTarget(this, this.eBuildSelected, EventType.TAP),
            e.getSortOptions().addTarget(this, this.eSortToggled, EventType.CHANGE),
            e.getSortDropDown().addTarget(this, this.eDropDownChanged, EventType.CHANGE),
            e.onFilterChange.observe(this, this.eFilterChanged);
            var t = !(this.challenge && !services.Configuration.getFeatureSetting(UTServerSettingsRepository.KEY.SBC_ALLOW_UNTRADEABLE))
              , i = !(!this.squad || this.squad.isSquadEmpty())
              , o = !(this.squad && this.squad.isActive());
            e.setupSearchOptions(t, i, o),
            e.getSortDropDown().setDefaultIndexById(SearchSortID.RATING_DESC, !0),
            this.challenge && this.updateCriteriaFromChallenge(this.challenge),
            t || (this.viewModel.searchCriteria.untradeables = SearchUntradeables.EXCLUDE),
            this.viewModel.searchCriteria.count = 150,
            this.viewModel.searchCriteria.sortBy = SearchSortType.RATING
        }
    }
    ,
    UTSquadBuilderViewController.prototype.initWithSquad = function(e) {
        this.initialized || (DebugUtils.Assert(e instanceof UTSquadEntity, "Initialization expected a Squad entity."),
        this.squad = e,
        this.init())
    }
    ,
    UTSquadBuilderViewController.prototype.initWithChallenge = function(e) {
        this.initialized || (DebugUtils.Assert(e instanceof UTSBCChallengeEntity, "Initialization expected an SBC Challenge entity."),
        this.challenge = e,
        this.challenge && this.challenge.squad ? this.initWithSquad(this.challenge.squad) : this.init())
    }
    ,
    UTSquadBuilderViewController.prototype.dealloc = function() {
        if (this.hasLoaded) {
            var e = this.getView();
            e.getResetButton().removeTarget(this, this.eResetSelected, EventType.TAP),
            e.getBuildButton().removeTarget(this, this.eBuildSelected, EventType.TAP)
        }
        n.prototype.dealloc.call(this),
        this.formation = "",
        this.squad = null,
        this.challenge = null,
        this.viewModel = null,
        this.squadBuilder = null
    }
    ,
    UTSquadBuilderViewController.prototype._getViewInstanceFromData = function() {
        return new UTSquadBuilderView
    }
    ,
    UTSquadBuilderViewController.prototype._getTelemetryId = function() {
        return "Squad Builder"
    }
    ,
    UTSquadBuilderViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.squadbuilder")
    }
    ,
    UTSquadBuilderViewController.prototype.viewWillAppear = function() {
        var e;
        n.prototype.viewWillAppear.call(this),
        null === (e = this.getNavigationController()) || void 0 === e || e.setNavigationVisibility(!0, !0)
    }
    ,
    UTSquadBuilderViewController.prototype.viewDidAppear = function() {
        var e;
        n.prototype.viewDidAppear.call(this);
        var t = this.getView();
        t.setFilterLock(enums.UISearchFilters.POSITION, !0),
        t.setFilterLock(enums.UISearchFilters.PLAYSTYLE, !0),
        this.viewModel && t.setFilters(this.viewModel);
        var i = t.getFormationFilter();
        this.challenge && i.setDisplay(!1);
        var o = null === (e = this.squad) || void 0 === e ? void 0 : e.getFormation();
        o && i.setDefaultIndexById(o.id, !0)
    }
    ,
    UTSquadBuilderViewController.prototype.updateCriteriaFromChallenge = function(e) {
        var n = this.viewModel;
        n && e.eligibilityRequirements.forEach(function(e) {
            var t = e.getFirstKey()
              , i = e.getFirstValue(t);
            switch (t) {
            case SBCEligibilityKey.CLUB_ID:
                n.defaultSearchCriteria.club = i,
                n.searchCriteria.club = i;
                break;
            case SBCEligibilityKey.LEAGUE_ID:
                n.defaultSearchCriteria.league = i,
                n.searchCriteria.league = i;
                break;
            case SBCEligibilityKey.NATION_ID:
                n.defaultSearchCriteria.nation = i,
                n.searchCriteria.nation = i;
                break;
            case SBCEligibilityKey.PLAYER_QUALITY:
                var o = SearchLevel.ANY;
                i === ItemRatingTier.BRONZE ? o = SearchLevel.BRONZE : i === ItemRatingTier.SILVER ? o = SearchLevel.SILVER : i === ItemRatingTier.GOLD && (o = SearchLevel.GOLD),
                n.defaultSearchCriteria.level = o,
                n.searchCriteria.level = o
            }
        }, this)
    }
    ,
    UTSquadBuilderViewController.prototype.eResetSelected = function(e, t, i) {
        var o;
        if (this.viewModel) {
            this.viewModel.resetSearch();
            var n = this.getView();
            if (n.setFilters(this.viewModel),
            !(null === (o = this.squad) || void 0 === o ? void 0 : o.isSBC())) {
                var r = n.getFormationFilter();
                r.setIndex(r.getDefaultIndex())
            }
        }
    }
    ,
    UTSquadBuilderViewController.prototype.eBuildSelected = function(e, t, i) {
        if (this.viewModel) {
            var o = this.getView();
            this.formation = o.getFormationFilter().value,
            this.useConceptPlayers ? services.Item.searchConceptItems(this.viewModel.searchCriteria).observe(this, this.onConceptSearchComplete) : services.Club.search(this.viewModel.searchCriteria).observe(this, this.onClubSearchComplete)
        }
    }
    ,
    UTSquadBuilderViewController.prototype.eFilterChanged = function(e, t, i, o) {
        this.viewModel && (this.viewModel.updateFromFilterChange(t, i, o),
        this.getView().setFilters(this.viewModel))
    }
    ,
    UTSquadBuilderViewController.prototype.eSortToggled = function(e, t, i) {
        var o = this
          , n = this.viewModel;
        if (n)
            switch (i.id) {
            case enums.UISortOptionType.UNTRADEABLE:
                n.searchCriteria.untradeables = i.checked ? SearchUntradeables.ONLY : SearchUntradeables.DEFAULT;
                break;
            case enums.UISortOptionType.REPLACE:
                this.replacePlayers = i.checked;
                break;
            case enums.UISortOptionType.CONCEPT:
                this.useConceptPlayers = i.checked,
                this.getView().toggleExcludeSquadSlider(!i.checked);
                break;
            case enums.UISortOptionType.EXCLUDE_SQUAD:
                i.checked ? n.requestActiveSquadDefIds().observe(this, function(e, t) {
                    e.unobserve(o),
                    t.data && (n.searchCriteria.excludeDefIds = t.data.defIds)
                }) : n.searchCriteria.excludeDefIds = []
            }
    }
    ,
    UTSquadBuilderViewController.prototype.eDropDownChanged = function(e, t, i) {
        if (this.viewModel)
            switch (this.viewModel.searchCriteria.sort = e.value,
            e.id) {
            case SearchSortID.VALUE_DESC:
            case SearchSortID.VALUE_ASC:
                this.viewModel.searchCriteria.sortBy = SearchSortType.VALUE;
                break;
            case SearchSortID.RATING_DESC:
            case SearchSortID.RATING_ASC:
                this.viewModel.searchCriteria.sortBy = SearchSortType.RATING;
                break;
            case SearchSortID.RECENCY_DESC:
                this.viewModel.searchCriteria.sortBy = SearchSortType.RECENCY;
                break;
            default:
                DebugUtils.Assert(!1, "SquadBuilder :: Passed an invalid SearchSort Enums.")
            }
    }
    ,
    UTSquadBuilderViewController.prototype.onClubSearchComplete = function(e, t) {
        var i;
        if (e.unobserve(this),
        t.success && JSUtils.isObject(t.response)) {
            var o = t.response.items;
            (null === (i = this.squad) || void 0 === i ? void 0 : i.isSBC()) && (o = o.filter(function(e) {
                return !e.isLoaned() && !UTItemEntity.isStoryMode(e.id)
            })),
            0 === o.length ? utils.PopupManager.showAlert(utils.PopupManager.Alerts.SQUAD_BUILDER_NO_RESULTS) : this.buildSquad(o)
        }
    }
    ,
    UTSquadBuilderViewController.prototype.onConceptSearchComplete = function(e, t) {
        var o = this;
        if (e.unobserve(this),
        JSUtils.isObject(t.response) && t.response.items) {
            var n = t.response.items;
            if (n && (!t.success || 0 === n.length))
                return void utils.PopupManager.showAlert(utils.PopupManager.Alerts.SQUAD_BUILDER_NO_RESULTS);
            var i = new UTSearchCriteriaDTO;
            i.type = SearchType.PLAYER,
            i.defId = n.map(function(e) {
                return e.id
            }),
            i.isExactSearch = !0,
            services.Club.search(i).observe(this, function(e, t) {
                if (e.unobserve(o),
                n) {
                    var i = t.response;
                    t.success && JSUtils.isObject(i) ? n = n.map(function(e) {
                        for (var t = i.items.length; 0 < t--; )
                            if (e.databaseId === i.items[t].databaseId)
                                return i.items[t];
                        return e
                    }) : t.error && NetworkErrorManager.handleStatus(t.error.code),
                    o.buildSquad(n)
                }
            })
        }
    }
    ,
    UTSquadBuilderViewController.prototype.buildSquad = function(s) {
        var e, t, i, o, a = this, n = new UTItemListViewModel([]), r = null === (e = this.viewModel) || void 0 === e ? void 0 : e.searchCriteria;
        if (r) {
            n.sortByRecency = r.sortBy === SearchSortType.RECENCY,
            n.sort = r.sort,
            n.sortType = r.sortBy,
            n.addArray(s),
            s = n.getItemList();
            var l = void 0;
            if (this.squad) {
                var c = repositories.Squad.getFormation(this.formation);
                c && (l = this.replacePlayers ? null === (i = this.squadBuilder) || void 0 === i ? void 0 : i.buildSquad(this.formation, s) : null === (o = this.squadBuilder) || void 0 === o ? void 0 : o.buildSquad(this.formation, s, this.squad),
                this.squad.setPlayers(l, this.replacePlayers),
                this.squad.setFormation(c),
                this.challenge ? services.SBC.saveChallenge(this.challenge).observe(this, this.onSBCSaveComplete) : this.squad.save().observe(this, this.onSquadSaveComplete))
            } else
                l = null === (t = this.squadBuilder) || void 0 === t ? void 0 : t.buildSquad(this.formation, s),
                services.Squad.requestSquadList().observe(this, function(e, t) {
                    var i;
                    e.unobserve(a);
                    var o = null === (i = t.data) || void 0 === i ? void 0 : i.squads;
                    if (o) {
                        var n = services.Localization.localize("squad.builder.defaultname")
                          , r = TextUtils.squadNameExists(n, o) ? TextUtils.createSquadName(n, o) : n;
                        services.Squad.create(r, a.formation, s).observe(a, a.onSquadCreateComplete)
                    }
                })
        }
    }
    ,
    UTSquadBuilderViewController.prototype.onSquadCreateComplete = function(e, t) {
        var i;
        if (e.unobserve(this),
        t.success)
            services.Notification.queue([services.Localization.localize("notification.squad.created"), UINotificationType.NEUTRAL]),
            null === (i = this.getNavigationController()) || void 0 === i || i.popViewController(!0),
            TelemetryManager.trackEvent(TelemetryManager.Sections.SQUADS, TelemetryManager.Categories.SQUAD_BUILDING, "Squad Builder Create");
        else {
            var o = t.error ? t.error.code : t.status;
            if (NetworkErrorManager.checkCriticalStatus(o))
                NetworkErrorManager.handleStatus(o);
            else {
                var n = void 0;
                switch (o) {
                case UtasErrorCode.NAME_EXISTS:
                    n = "popup.error.duplicateSquadName";
                    break;
                case UtasErrorCode.PERMISSION_DENIED:
                    n = "popup.error.squadsFull";
                    break;
                case UtasErrorCode.PROFANITY:
                    n = "popup.error.profanity";
                    break;
                default:
                    n = "popup.body.genericError"
                }
                services.Notification.queue([services.Localization.localize(n), UINotificationType.NEGATIVE])
            }
        }
    }
    ,
    UTSquadBuilderViewController.prototype.onSquadSaveComplete = function(e, t) {
        e.unobserve(this),
        t.success ? (services.Notification.queue([services.Localization.localize("notification.squad.updated"), UINotificationType.NEUTRAL]),
        TelemetryManager.trackEvent(TelemetryManager.Sections.SQUADS, TelemetryManager.Categories.SQUAD_BUILDING, "Squad Builder Update")) : services.Notification.queue([services.Localization.localize("popup.error.activesquad.SaveFailed"), UINotificationType.NEGATIVE]),
        this.dismissSquadBuilder()
    }
    ,
    UTSquadBuilderViewController.prototype.onSBCSaveComplete = function(e, t) {
        var i;
        if (e.unobserve(this),
        t.success)
            services.Notification.queue([services.Localization.localize("notification.squad.updated"), UINotificationType.NEUTRAL]),
            TelemetryManager.trackEvent(TelemetryManager.Sections.SQUADS, TelemetryManager.Categories.SQUAD_BUILDING, "SBC Squad Builder Update");
        else {
            var o = "notification.sbcChallenges.failedToSave";
            (null === (i = this.challenge) || void 0 === i ? void 0 : i.hasExpired(!0)) ? o = "notification.sbcChallenges.expired" : t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED && (o = "sbc.notification.disabled"),
            services.Notification.queue([services.Localization.localize(o), UINotificationType.NEGATIVE])
        }
        this.dismissSquadBuilder()
    }
    ,
    UTSquadBuilderViewController.prototype.dismissSquadBuilder = function() {
        var e = this.getNavigationController();
        if (e) {
            var t = e.getPreviousController(2);
            isPhone() && t ? e.popToViewController(t) : e.popViewController()
        }
    }
    ,
    UTSquadBuilderViewController
}(UTViewController);
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
NamespaceManager.Register("controllers.navigation");
var UTSquadDetailsNavigationController = function(n) {
    function UTSquadDetailsNavigationController(e, t, i) {
        var o = n.call(this, t, i) || this;
        return o._withSquadView = e,
        o.onDataChange = new EAObservable,
        o
    }
    return __extends(UTSquadDetailsNavigationController, n),
    UTSquadDetailsNavigationController.prototype.init = function() {
        if (!this.initialized) {
            n.prototype.init.call(this);
            var e = this.getRootController();
            e instanceof UTSquadActionsViewController && (e.onDataChange.observe(this.onDataChange, this.onDataChange.notify),
            e.setSquadContext(this._withSquadView))
        }
    }
    ,
    UTSquadDetailsNavigationController.prototype.dealloc = function() {
        this.onDataChange.dealloc(),
        n.prototype.dealloc.call(this)
    }
    ,
    UTSquadDetailsNavigationController.prototype._getRootControllerInstance = function() {
        return new UTSquadActionsViewController
    }
    ,
    UTSquadDetailsNavigationController.prototype.didPush = function(e) {
        e === this.getRootController() && this.setNavigationVisibility(!1, !0)
    }
    ,
    UTSquadDetailsNavigationController.prototype.setSquad = function(e) {
        var t = this.getRootController();
        t instanceof UTSquadActionsViewController && t.setSquad(e)
    }
    ,
    UTSquadDetailsNavigationController
}(UTNavigationController)
  , UTSquadComparePlayersViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSquadComparePlayersViewController() {
        var e = t.call(this) || this;
        return e.chemCalculator = new UTSquadChemCalculatorUtils(repositories.Chemistry),
        e._panel = new UTCompareActionPanelViewController,
        e
    }
    return __extends(UTSquadComparePlayersViewController, t),
    UTSquadComparePlayersViewController.prototype.init = function() {
        t.prototype.init.call(this),
        this._panel && (this._panel.init(),
        this.addChildViewController(this._panel))
    }
    ,
    UTSquadComparePlayersViewController.prototype._getViewInstanceFromData = function() {
        return new UTCompareDetailsView
    }
    ,
    UTSquadComparePlayersViewController.prototype.setPrimaryItem = function(e, t) {
        this.getView().render(e),
        t ? (this._panel.setItems(e, void 0, t),
        this.setChemistryData(t, e, new UTNullItemEntity)) : this._panel.setItems(e)
    }
    ,
    UTSquadComparePlayersViewController.prototype.setComparisonItem = function(e, t, i) {
        this.getView().setComparisonItem(t),
        i ? (this._panel.setItems(e, t, i),
        this.setChemistryData(i, e, t)) : this._panel.setItems(e, t)
    }
    ,
    UTSquadComparePlayersViewController.prototype.setChemistryData = function(e, t, i) {
        var o = e.getFormation()
          , n = e.getFieldPlayers().find(function(e) {
            return e.item === t
        })
          , r = e.getFieldPlayers().find(function(e) {
            return e.item === i
        });
        if (n && o && i) {
            var s = this.chemCalculator.calculate(o, e.getPlayers().map(function(e) {
                return e.item
            }), e.getManager().item)
              , a = this.chemCalculator.calculate(o, e.getPlayers().map(function(e) {
                return e.index === n.index ? i : e.index === (null == r ? void 0 : r.index) ? t : e.item
            }), i.isManager() ? i : e.getManager().item);
            this.getView().renderChemistryComparison(a.getSlotChemistry(n.index), s.getSlotChemistry(n.index), n.inPreferredPosition)
        }
    }
    ,
    UTSquadComparePlayersViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this);
        var e = this.getView();
        this._panel && !this._panel.getView().isSubview(e) && (e.appendPanel(this._panel.getView()),
        e.layoutSubviews(),
        this._panel.viewDidAppear())
    }
    ,
    UTSquadComparePlayersViewController.prototype.setViewAsSBC = function(e) {
        this.getView().setAsSBC(e)
    }
    ,
    UTSquadComparePlayersViewController
}(UTViewController))
  , UTBaseSquadSplitViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTBaseSquadSplitViewController() {
        var e = t.call(this) || this;
        return e._compareItemsController = null,
        e._itemDetailController = null,
        e._overviewController = null,
        e._squad = null,
        e
    }
    return __extends(UTBaseSquadSplitViewController, t),
    UTBaseSquadSplitViewController.prototype.init = function() {
        this.initialized || (t.prototype.init.call(this),
        this.getView().addClass("full-width"),
        this._overviewController = this._generateSquadOverview(),
        this._overviewController.setSquadOverviewDelegate(this),
        this.addChildViewController(this._overviewController),
        this._setupSquadOverview())
    }
    ,
    UTBaseSquadSplitViewController.prototype.initWithSquad = function(e) {
        this.initialized || (this._squad = e,
        this.init())
    }
    ,
    UTBaseSquadSplitViewController.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this._overviewController && this._overviewController.dealloc(),
        this._itemDetailController && this._itemDetailController.dealloc(),
        this._compareItemsController && this._compareItemsController.dealloc(),
        this._overviewController = null,
        this._itemDetailController = null,
        this._compareItemsController = null,
        this._squad = null
    }
    ,
    UTBaseSquadSplitViewController.prototype.getNavigationTitle = function() {
        var e, t;
        return null !== (t = null === (e = this._overviewController) || void 0 === e ? void 0 : e.getNavigationTitle()) && void 0 !== t ? t : BLANK_STR
    }
    ,
    UTBaseSquadSplitViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this._rightController || this._setRightController(this.getDefaultPanel()),
        this._overviewController && this._setLeftController(this._overviewController)
    }
    ,
    UTBaseSquadSplitViewController.prototype.selectSlotIndexForSquad = function(e, t, i) {
        var o;
        this._squad && this._squad.simpleBrickIndices.indexOf(i) < 0 && (null === (o = this._overviewController) || void 0 === o || o.selectSlot(i),
        e === this._overviewController && this._showSlotDetails(i))
    }
    ,
    UTBaseSquadSplitViewController.prototype._setupSquadOverview = function() {
        if (this._squad && this._overviewController) {
            var e = this._overviewController.getView();
            e.addTarget(this, this.onItemHover, enums.UISquadPitchEvent.DRAGDROPPABLE),
            e.getPitch().addTarget(this, this._ePitchTapped, EventType.TAP),
            this._overviewController.onItemMove.observe(this, this.onItemMove),
            this._overviewController.onItemSwap.observe(this, this.onItemSwap),
            this._overviewController.onDragEnd.observe(this, this.onDragEnd)
        }
    }
    ,
    UTBaseSquadSplitViewController.prototype._generateSquadOverview = function() {
        var e = new UTSquadOverviewViewController;
        return this._squad ? e.initWithSquad(this._squad) : e.init(),
        e
    }
    ,
    UTBaseSquadSplitViewController.prototype._generateItemDetails = function(e) {
        var t = new UTSquadItemDetailsNavigationController;
        return this._squad ? t.initWithSquad(this._squad, e) : t.init(),
        t
    }
    ,
    UTBaseSquadSplitViewController.prototype.generateCompareDetails = function() {
        var e = new UTSquadComparePlayersViewController;
        return e.init(),
        this._squad && e.setViewAsSBC(this._squad.isSBC()),
        e
    }
    ,
    UTBaseSquadSplitViewController.prototype._showSlotDetails = function(e) {
        var t;
        this._itemDetailController || (this._itemDetailController = this._generateItemDetails(e),
        this._itemDetailController.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
        this._itemDetailController.onSlotChange.observe(this, this.onDetailSlotChange),
        null === (t = this._itemDetailController.getRootPrimaryNavigationItem()) || void 0 === t || t.addTarget(this, this.onExitItemDetails, EventType.TAP),
        this.addChildViewController(this._itemDetailController)),
        this._itemDetailController.setSlot(e),
        this._setRightController(this._itemDetailController)
    }
    ,
    UTBaseSquadSplitViewController.prototype._showDefaultPanel = function() {
        var e, t = this.getDefaultPanel();
        this._setRightController(t),
        t instanceof UTNavigationController && t.popToRootViewController(),
        null === (e = this._overviewController) || void 0 === e || e.getView().clearSlotInteractionState(enums.UISlotInteractionState.SELECTED)
    }
    ,
    UTBaseSquadSplitViewController.prototype.showComparePlayersPanel = function(e, t) {
        this._compareItemsController || (this._compareItemsController = this.generateCompareDetails(),
        this.addChildViewController(this._compareItemsController)),
        this._setRightController(this._compareItemsController),
        t ? this._compareItemsController.setComparisonItem(e, t, this._squad) : this._compareItemsController.setPrimaryItem(e, this._squad)
    }
    ,
    UTBaseSquadSplitViewController.prototype.onDetailSlotChange = function(e, t) {
        var i;
        DebugUtils.Assert(this._squad instanceof UTSquadEntity, "Squad entity has gone missing."),
        t.slot && (null === (i = this._overviewController) || void 0 === i || i.selectSlot(t.slot.index))
    }
    ,
    UTBaseSquadSplitViewController.prototype.onItemSwap = function(e, t, i) {
        this._showDefaultPanel()
    }
    ,
    UTBaseSquadSplitViewController.prototype.onDragEnd = function(e, t) {
        var i, o;
        this._showSlotDetails(null !== (o = null === (i = this._squad) || void 0 === i ? void 0 : i.getSlot(t).index) && void 0 !== o ? o : 0)
    }
    ,
    UTBaseSquadSplitViewController.prototype.onItemMove = function(e, t) {
        this.showComparePlayersPanel(t)
    }
    ,
    UTBaseSquadSplitViewController.prototype.onExitItemDetails = function(e, t, i) {
        this._showDefaultPanel()
    }
    ,
    UTBaseSquadSplitViewController.prototype.onItemHover = function(e, t, i) {
        if (this._squad) {
            var o = this._squad.getSlot(i.dragging).item
              , n = this._squad.getSlot(i.target).item;
            this.showComparePlayersPanel(o, n)
        }
    }
    ,
    UTBaseSquadSplitViewController.prototype._ePitchTapped = function(e, t, i) {
        this._showDefaultPanel()
    }
    ,
    UTBaseSquadSplitViewController
}(UTSplitViewController))
  , UTSquadSplitViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSquadSplitViewController() {
        var e = t.call(this) || this;
        return e._panelController = new UTSquadDetailsNavigationController(!0,new UTNavigationBarView),
        e
    }
    return __extends(UTSquadSplitViewController, t),
    UTSquadSplitViewController.prototype.init = function() {
        this.initialized || (t.prototype.init.call(this),
        this._panelController.init(),
        this._overviewController && this._panelController.onDataChange.observe(this._overviewController, this._overviewController.applyDataChange),
        this._panelController.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
        this.addChildViewController(this._panelController))
    }
    ,
    UTSquadSplitViewController.prototype.dealloc = function() {
        this._panelController.dealloc(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTSquadSplitViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this._squad && this._panelController.setSquad(this._squad)
    }
    ,
    UTSquadSplitViewController.prototype.getDefaultPanel = function() {
        return this._panelController
    }
    ,
    UTSquadSplitViewController
}(UTBaseSquadSplitViewController))
  , UTTacticsFormationPopupView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTTacticsFormationPopupView() {
        return t.call(this) || this
    }
    return __extends(UTTacticsFormationPopupView, t),
    UTTacticsFormationPopupView.prototype.init = function() {
        var e = services.Localization;
        t.prototype.init.call(this),
        this.setInteractionState(!0),
        this._btnCancel.setInteractionState(!0),
        this._btnConfirm.setInteractionState(!0),
        this._btnConfirmAlways.setInteractionState(!0),
        this._btnCancel.addTarget(this, this.handleButtonSelect, EventType.TAP),
        this._btnConfirm.addTarget(this, this.handleButtonSelect, EventType.TAP),
        this._btnConfirmAlways.addTarget(this, this.handleButtonSelect, EventType.TAP),
        this._btnCancel.setText(e.localize("popup.no")),
        this._btnConfirm.setText(e.localize("popup.yes")),
        this._btnConfirmAlways.setText(e.localize("popup.yes.always")),
        this.__title.textContent = e.localize("tactics.formation.popup.title"),
        this.__body.textContent = e.localize("tactics.formation.popup.body")
    }
    ,
    UTTacticsFormationPopupView.prototype.handleButtonSelect = function(e, t, i) {
        e === this._btnCancel ? this._triggerActions(UTTacticsFormationPopupView.Event.CANCEL) : e === this._btnConfirm ? this._triggerActions(UTTacticsFormationPopupView.Event.CONFIRM) : e === this._btnConfirmAlways && this._triggerActions(UTTacticsFormationPopupView.Event.CONFIRM_ALWAYS)
    }
    ,
    UTTacticsFormationPopupView.Event = Object.freeze({
        CANCEL: "UTTacticsFormationPopupView.Event.CANCEL",
        CONFIRM: "UTTacticsFormationPopupView.Event.CONFIRM",
        CONFIRM_ALWAYS: "UTTacticsFormationPopupView.Event.CONFIRM_ALWAYS"
    }),
    UTTacticsFormationPopupView
}(UTTargetActionView));
UTTacticsFormationPopupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tactics-formation-popup-view");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        e.appendChild(t),
        this.__body = document.createElement("p"),
        this.__body.classList.add("ut-tactics-formation-popup-view--body"),
        e.appendChild(this.__body);
        var i = document.createElement("div");
        i.classList.add("ut-button-group"),
        this._btnConfirm = new UTGroupButtonControl,
        i.appendChild(this._btnConfirm.getRootElement()),
        this._btnConfirmAlways = new UTGroupButtonControl,
        i.appendChild(this._btnConfirmAlways.getRootElement()),
        this._btnCancel = new UTGroupButtonControl,
        this._btnCancel.getRootElement().classList.add("negative"),
        i.appendChild(this._btnCancel.getRootElement()),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTacticsFormationPopupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__body = null,
    this._btnConfirm.destroy(),
    this._btnConfirmAlways.destroy(),
    this._btnCancel.destroy()
}
,
UTTacticsFormationPopupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsFormationPopupViewController = function(t) {
    function UTTacticsFormationPopupViewController() {
        return t.call(this) || this
    }
    return __extends(UTTacticsFormationPopupViewController, t),
    UTTacticsFormationPopupViewController.prototype._getViewInstanceFromData = function() {
        return new UTTacticsFormationPopupView
    }
    ,
    UTTacticsFormationPopupViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this);
        var e = this.getView();
        e.addTarget(this, this.handleViewEvent, UTTacticsFormationPopupView.Event.CANCEL),
        e.addTarget(this, this.handleViewEvent, UTTacticsFormationPopupView.Event.CONFIRM),
        e.addTarget(this, this.handleViewEvent, UTTacticsFormationPopupView.Event.CONFIRM_ALWAYS)
    }
    ,
    UTTacticsFormationPopupViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this.handleViewEvent, UTTacticsFormationPopupView.Event.CANCEL),
        e.removeTarget(this, this.handleViewEvent, UTTacticsFormationPopupView.Event.CONFIRM),
        e.removeTarget(this, this.handleViewEvent, UTTacticsFormationPopupView.Event.CONFIRM_ALWAYS)
    }
    ,
    UTTacticsFormationPopupViewController.prototype.handleKeyUpEvent = function(e) {
        e.key === KeyboardKey.ESCAPE || e.key === KeyboardKey.MS_ESCAPE ? this.onExit.notify(enums.UIDialogOptions.CANCEL) : e.key === KeyboardKey.ENTER && this.onExit.notify(enums.UIDialogOptions.OK)
    }
    ,
    UTTacticsFormationPopupViewController.prototype.handleViewEvent = function(e, t, i) {
        t === UTTacticsFormationPopupView.Event.CANCEL ? this.onExit.notify(enums.UIDialogOptions.CANCEL) : t === UTTacticsFormationPopupView.Event.CONFIRM ? (services.UserSettings.setSessionItem(UserSettingsKey.TACTICS_FORMATION_MESSAGE_DISPLAYED, "true"),
        this.onExit.notify(enums.UIDialogOptions.OK)) : t === UTTacticsFormationPopupView.Event.CONFIRM_ALWAYS && (services.UserSettings.setItem(UserSettingsKey.TACTICS_FORMATION_MESSAGE_DISPLAYED, "true"),
        this.onExit.notify(enums.UIDialogOptions.OK))
    }
    ,
    UTTacticsFormationPopupViewController
}(BasePopupViewController)
  , UTDragDropUtils = function() {
    function UTDragDropUtils(e) {
        this.__draggablesContainer = e,
        this.dropContainers = {},
        this.droppablesContainer = "",
        this.__currentItem = null,
        this.__dropTarget = null,
        this._droppables = [],
        this.draggables = [],
        this.droppables = [],
        this.dropCache = {},
        this.collisonData = [],
        this.moveDistanceThreshold = 5,
        this.dragging = !1,
        this.moved = !1,
        this.validDrop = !1,
        this.enabled = !1,
        this.currentTouch = null,
        this.onTouchStartEventDelegate = this.onTouchStart.bind(this),
        this.onTouchEndEventDelegate = this.onTouchEnd.bind(this),
        this.onMoveEventDelegate = JSUtils.throttle(this.onMove.bind(this), 16)
    }
    return UTDragDropUtils.prototype.isTouchEvent = function(e) {
        return window.TouchEvent && e instanceof TouchEvent
    }
    ,
    UTDragDropUtils.prototype.enable = function() {
        this.addAllEventListeners(),
        this.updateInteractiveContainer(),
        this.updateDropSlotCache(),
        this.enabled = !0
    }
    ,
    UTDragDropUtils.prototype.disable = function() {
        this.removeAllEventListeners(),
        this._droppables = [],
        this.dropCache = {},
        this.collisonData = [],
        this.enabled = !1
    }
    ,
    UTDragDropUtils.prototype.updateInteractiveContainer = function() {
        var e = this.__draggablesContainer.getBoundingClientRect();
        this._containerCollisionBoundaries = {
            top: e.top,
            right: e.right,
            bottom: e.bottom,
            left: e.left
        }
    }
    ,
    UTDragDropUtils.prototype.setDraggable = function(e, t) {
        var i = this.draggables.indexOf(e)
          , o = 0 <= i;
        !o && t ? this.draggables.push(e) : o && !t && this.draggables.splice(i, 1),
        e.toggleClass(UTDragDropUtils.STYLES.dragSlot, t)
    }
    ,
    UTDragDropUtils.prototype.setDroppable = function(e, t) {
        var i = this.droppables.indexOf(e)
          , o = 0 <= i;
        !o && t ? this.droppables.push(e) : o && !t && this.droppables.splice(i, 1),
        e.toggleClass(UTDragDropUtils.STYLES.dropSlot, t)
    }
    ,
    UTDragDropUtils.prototype.setSwapAnimation = function(e, t) {
        e.toggleClass(UTDragDropUtils.STYLES.swapAnimate, t)
    }
    ,
    UTDragDropUtils.prototype.getSlotIndex = function(e) {
        var t, i = null == e ? void 0 : e.parentElement;
        return null !== (t = Number(null == i ? void 0 : i.getAttribute("index"))) && void 0 !== t ? t : -1
    }
    ,
    UTDragDropUtils.prototype.addDropContainer = function(e, t, i) {
        this.dropContainers[e] = t,
        i && (this.droppablesContainer = e)
    }
    ,
    UTDragDropUtils.prototype.updateDropSlotCache = function() {
        var t = this
          , i = this.dropContainers;
        this.dropCache = {},
        Object.keys(i).forEach(function(e) {
            i.hasOwnProperty(e) && (t.dropCache[e] = DOMKit.findElements(i[e].getRootElement(), ".droppable"))
        }),
        this.refreshDroppables()
    }
    ,
    UTDragDropUtils.prototype.setDroppablesContainer = function(e) {
        DebugUtils.Assert(JSUtils.isValid(this.dropContainers[e]), "Attempted to set droppables container to a non-existent container."),
        e && this.dropContainers[e] && (this.droppablesContainer = e,
        this.refreshDroppables())
    }
    ,
    UTDragDropUtils.prototype.refreshDroppables = function() {
        var e = this.droppablesContainer;
        this.dropCache[e] ? this._droppables = this.dropCache[e] : this._droppables = DOMKit.findElements(this.dropContainers[e].getRootElement(), ".droppable")
    }
    ,
    UTDragDropUtils.prototype.clearActiveCollisions = function() {
        this.collisonData.forEach(function(e) {
            if (e.hover) {
                e.hover = !1;
                var t = e.droppable.parentElement;
                t && DOMKit.removeClass(t, UTDragDropUtils.STYLES.droppable)
            }
        }, this)
    }
    ,
    UTDragDropUtils.prototype.updateCollisionData = function() {
        this.clearActiveCollisions(),
        this.collisonData = this._droppables.map(function(e) {
            var t = e.getBoundingClientRect();
            return {
                top: t.top,
                right: t.right,
                bottom: t.bottom,
                left: t.left,
                droppable: e,
                hover: !1
            }
        }, this)
    }
    ,
    UTDragDropUtils.prototype.isDragging = function() {
        return this.dragging && this.moved
    }
    ,
    UTDragDropUtils.prototype.updateDroppables = function(t) {
        var i = this
          , o = !1;
        this.collisonData.forEach(function(e) {
            e.droppable !== i.__currentItem && (t && t.clientX >= e.left && t.clientX <= e.right && t.clientY >= e.top && t.clientY <= e.bottom ? (o = !0,
            i.validDrop = !0,
            e.hover || (e.hover = !0,
            i.__dropTarget = e.droppable,
            requestAnimationFrame(function() {
                return function(e) {
                    var t = e.parentElement;
                    t && DOMKit.addClass(t, UTDragDropUtils.STYLES.droppable)
                }(e.droppable)
            }))) : e.hover && (e.hover = !1,
            requestAnimationFrame(function() {
                return function(e) {
                    var t = e.parentElement;
                    t && DOMKit.removeClass(t, UTDragDropUtils.STYLES.droppable)
                }(e.droppable)
            })))
        }, this),
        o || (this.validDrop = !1,
        this.__dropTarget = null)
    }
    ,
    UTDragDropUtils.prototype.onMove = function(e) {
        var t, i = this;
        if (this.enabled && JSUtils.isValid(this.currentTouch) && this.__currentItem) {
            var o = null;
            if (this.isTouchEvent(e))
                for (var n = e.touches.length; 0 < n--; ) {
                    var r = e.touches[n];
                    if (r.identifier === (null === (t = this.currentTouch) || void 0 === t ? void 0 : t.id)) {
                        o = r;
                        break
                    }
                }
            else
                e && (o = e);
            if (o) {
                if (e.preventDefault(),
                !this.moved && this.currentTouch) {
                    var s = Math.abs(o.clientX - this.currentTouch.clientX)
                      , a = Math.abs(o.clientY - this.currentTouch.clientY)
                      , l = this.moveDistanceThreshold;
                    if (this.moved = l < s || l < a,
                    !this.moved)
                        return;
                    var c = new CustomEvent("eadragstart",{
                        detail: {
                            index: this.getSlotIndex(this.__currentItem)
                        }
                    });
                    this.__draggablesContainer.dispatchEvent(c)
                }
                var d = this.__dropTarget;
                this.updateDroppables(o);
                var u = this.__currentItem.clientWidth
                  , h = this.__currentItem.clientHeight
                  , p = o.clientX - u / 2
                  , _ = o.clientY - h / 2;
                p < this._containerCollisionBoundaries.left ? p = this._containerCollisionBoundaries.left : p + u >= this._containerCollisionBoundaries.right && (p = this._containerCollisionBoundaries.right - u),
                _ < this._containerCollisionBoundaries.top ? _ = this._containerCollisionBoundaries.top : _ + h >= this._containerCollisionBoundaries.bottom && (_ = this._containerCollisionBoundaries.bottom - h),
                requestAnimationFrame(function() {
                    if (i.__currentItem && (i.__currentItem.style.left = p + "px",
                    i.__currentItem.style.top = _ + "px"),
                    o) {
                        var e = new CustomEvent("eadragmove",{
                            detail: {
                                touch: o
                            }
                        });
                        i.__draggablesContainer.dispatchEvent(e)
                    }
                    if (i.validDrop && d !== i.__dropTarget) {
                        var t = new CustomEvent("eadragover",{
                            detail: {
                                dragging: i.getSlotIndex(i.__currentItem),
                                target: i.getSlotIndex(i.__dropTarget)
                            }
                        });
                        i.__draggablesContainer.dispatchEvent(t)
                    }
                })
            }
        }
    }
    ,
    UTDragDropUtils.prototype.startDrag = function(e) {
        var t, i, o, n;
        if (JSUtils.isValid(e.draggable) && (this.currentTouch = e,
        this.__currentItem = e.draggable,
        this.__currentItem)) {
            this.updateCollisionData(),
            this.__currentItem.addEventListener(EventType.MOUSEUP, this.onTouchEndEventDelegate),
            this.__currentItem.addEventListener(EventType.TOUCHEND, this.onTouchEndEventDelegate),
            this.__currentItem.addEventListener(EventType.TOUCHCANCEL, this.onTouchEndEventDelegate),
            this.__draggablesContainer.addEventListener(EventType.MOUSEMOVE, this.onMoveEventDelegate),
            this.__draggablesContainer.addEventListener(EventType.TOUCHMOVE, this.onMoveEventDelegate);
            var r = null === (i = null === (t = this.__currentItem) || void 0 === t ? void 0 : t.parentElement) || void 0 === i ? void 0 : i.getBoundingClientRect();
            r && (this.__currentItem.style.left = r.left + "px",
            this.__currentItem.style.top = r.top + "px"),
            (null === (o = this.__currentItem) || void 0 === o ? void 0 : o.parentElement) && DOMKit.addClass(null === (n = this.__currentItem) || void 0 === n ? void 0 : n.parentElement, UTDragDropUtils.STYLES.slotInteraction),
            DOMKit.addClass(this.__currentItem, UTDragDropUtils.STYLES.dragging),
            this.dragging = !0
        }
    }
    ,
    UTDragDropUtils.prototype.cancelDrag = function() {
        this.dragging && this.onTouchEnd()
    }
    ,
    UTDragDropUtils.prototype.onTouchStart = function(e) {
        var t = null;
        if (this.isTouchEvent(e)) {
            var i = e.touches[0];
            t = {
                clientX: i.clientX,
                clientY: i.clientY,
                draggable: e.currentTarget,
                id: i.identifier
            }
        } else if (e instanceof MouseEvent) {
            var o = e;
            t = {
                clientX: o.clientX,
                clientY: o.clientY,
                draggable: o.currentTarget
            }
        }
        t && this.enabled && !this.dragging && this.startDrag(t)
    }
    ,
    UTDragDropUtils.prototype.resetDrag = function() {
        this.__currentItem && (this.__currentItem.style.left = "",
        this.__currentItem.style.top = "",
        DOMKit.removeClass(this.__currentItem, UTDragDropUtils.STYLES.dragging)),
        this.dragDropEnd()
    }
    ,
    UTDragDropUtils.prototype.onTouchEnd = function(e) {
        var t, i, o, n, r, s;
        if (e && this.isTouchEvent(e))
            for (var a = e.touches.length; 0 < a--; )
                if (e.touches[a].identifier === (null === (t = this.currentTouch) || void 0 === t ? void 0 : t.id))
                    return;
        if (null === (i = this.__currentItem) || void 0 === i || i.removeEventListener(EventType.MOUSEUP, this.onTouchEndEventDelegate),
        null === (o = this.__currentItem) || void 0 === o || o.removeEventListener(EventType.TOUCHEND, this.onTouchEndEventDelegate),
        null === (n = this.__currentItem) || void 0 === n || n.removeEventListener(EventType.TOUCHCANCEL, this.onTouchEndEventDelegate),
        this.__draggablesContainer.removeEventListener(EventType.MOUSEMOVE, this.onMoveEventDelegate),
        this.__draggablesContainer.removeEventListener(EventType.TOUCHMOVE, this.onMoveEventDelegate),
        (null === (r = this.__currentItem) || void 0 === r ? void 0 : r.parentElement) && DOMKit.removeClass(null === (s = this.__currentItem) || void 0 === s ? void 0 : s.parentElement, UTDragDropUtils.STYLES.slotInteraction),
        this.dragging && this.__currentItem)
            if (this.validDrop && this.__dropTarget) {
                var l = this.__dropTarget.parentElement;
                l && DOMKit.removeClass(l, UTDragDropUtils.STYLES.droppable);
                var c = new CustomEvent("eadrop",{
                    detail: {
                        dragging: this.getSlotIndex(this.__currentItem),
                        target: this.getSlotIndex(this.__dropTarget)
                    }
                });
                this.__draggablesContainer.dispatchEvent(c)
            } else {
                var d = new CustomEvent("eadragend",{
                    detail: {
                        index: this.getSlotIndex(this.__currentItem)
                    }
                });
                this.__draggablesContainer.dispatchEvent(d)
            }
    }
    ,
    UTDragDropUtils.prototype.dragDropEnd = function() {
        this.validDrop && this.updateDropSlotCache(),
        this.updateDroppables(),
        this.__dropTarget = null,
        this.__currentItem = null,
        this.dragging = !1,
        this.moved = !1
    }
    ,
    UTDragDropUtils.prototype.removeAllEventListeners = function() {
        var t = this.onTouchStartEventDelegate;
        this.draggables.map(function(e) {
            return e.getRootElement()
        }).forEach(function(e) {
            null == e || e.removeEventListener(EventType.MOUSEDOWN, t),
            null == e || e.removeEventListener(EventType.TOUCHSTART, t)
        })
    }
    ,
    UTDragDropUtils.prototype.addAllEventListeners = function() {
        var t = this.onTouchStartEventDelegate;
        this.draggables.map(function(e) {
            return e.getRootElement()
        }).forEach(function(e) {
            null == e || e.addEventListener(EventType.MOUSEDOWN, t),
            null == e || e.addEventListener(EventType.TOUCHSTART, t)
        })
    }
    ,
    UTDragDropUtils.STYLES = {
        droppable: "isDroppable",
        dragging: "isDragging",
        dropSlot: "droppable",
        dragSlot: "draggable",
        swapAnimate: "animateReplace",
        slotInteraction: "drag-in-progress"
    },
    UTDragDropUtils.DRAG = {
        START: "UTDragDropUtils.DRAG.START",
        MOVE: "UTDragDropUtils.DRAG.MOVE",
        DROPPABLE: "UTDragDropUtils.DRAG.DROPPABLE",
        END: "UTDragDropUtils.DRAG.END",
        DROP: "UTDragDropUtils.DRAG.DROP"
    },
    UTDragDropUtils.EVENT_NAMESPACE = "dragdrop",
    UTDragDropUtils
}()
  , UTSquadSlotPedestalView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSquadSlotPedestalView() {
        var e = t.call(this) || this;
        return e._currentState = UTSquadSlotPedestalView.STATES.NONE,
        e
    }
    return __extends(UTSquadSlotPedestalView, t),
    UTSquadSlotPedestalView.prototype.render = function(e, t) {
        var i = services.Localization
          , o = e.item.isManager() ? i.localize("extendedPlayerInfo.positions.manager") : UTLocalizationUtil.positionIdToName(e.generalPosition, i)
          , n = UTSquadSlotPedestalView.STATES.NONE;
        t && e.inPreferredPosition ? n = UTSquadSlotPedestalView.STATES.CORRECTLY_POSITIONED : t && !e.inPreferredPosition && (n = UTSquadSlotPedestalView.STATES.INCORRECTLY_POSITIONED),
        this.removeClass(this._currentState),
        this.addClass(n),
        this.__label.textContent = o,
        this._currentState = n
    }
    ,
    UTSquadSlotPedestalView.STATES = {
        NONE: "state-none",
        CORRECTLY_POSITIONED: "state-positioned",
        INCORRECTLY_POSITIONED: "state-incorrectly-positioned"
    },
    UTSquadSlotPedestalView
}(UTView));
UTSquadSlotPedestalView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("state-none"),
        e.classList.add("ut-squad-slot-pedestal-view"),
        this.__label = document.createElement("span"),
        this.__label.classList.add("label"),
        e.appendChild(this.__label),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadSlotPedestalView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__label = null
}
,
UTSquadSlotPedestalView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadSlotView = function(t) {
    function UTSquadSlotView() {
        var e = t.call(this) || this;
        return e._itemView = null,
        e._slotIndex = -1,
        e._uniquePosition = -1,
        e._isManager = !1,
        e
    }
    return __extends(UTSquadSlotView, t),
    UTSquadSlotView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0),
        this._chemistryPoints.init(),
        this._chemistryPoints.setDisplay(!1)
    }
    ,
    UTSquadSlotView.prototype.dealloc = function() {
        this._itemView && (this._itemView.dealloc(),
        this._itemView = null),
        t.prototype.dealloc.call(this)
    }
    ,
    UTSquadSlotView.prototype.render = function(e, t, i, o) {
        void 0 === t && (t = !0),
        void 0 === i && (i = !0),
        void 0 === o && (o = !0),
        this.getRootElement().setAttribute("index", e.index.toString()),
        this._isManager = e.item.isManager(),
        this._slotIndex = e.index,
        this._uniquePosition = e.uniquePosition;
        var n = this._renderItem(e, t, i, o);
        this.renderPedestal(e, i),
        i && this.renderChemistryPoints(e),
        n && this._itemView && this.getRootElement().appendChild(this._itemView.getRootElement())
    }
    ,
    UTSquadSlotView.prototype._renderItem = function(e, t, i, o) {
        var n = e.item
          , r = !1;
        return this._itemView && !this._itemView.canRender(n) && (this._itemView.dealloc(),
        this._itemView = null),
        this._itemView || (this._itemView = factories.ItemView.createSmallItem(n),
        this._itemView.init(),
        r = !0),
        this._itemView.renderConcept = t,
        this._itemView.renderRestrictions = o,
        this._itemView.render(n),
        i && this._itemView.renderChemistryBreakdown(e.chemistry, e.nationChemistryPoints, e.leagueChemistryPoints, e.clubChemistryPoints),
        r
    }
    ,
    UTSquadSlotView.prototype.renderPedestal = function(e, t) {
        this._pedestal.render(e, t)
    }
    ,
    UTSquadSlotView.prototype.renderChemistryPoints = function(e) {
        e.item.isPlayer() && e.item.isValid() || e.isCustomBrick() ? this._chemistryPoints.render(e.chemistry, 0, e.inPreferredPosition) : (this._chemistryPoints.reset(),
        this._chemistryPoints.setDisplay(!1))
    }
    ,
    UTSquadSlotView.prototype.setLockedState = function(e) {
        this.toggleClass("locked", e)
    }
    ,
    UTSquadSlotView.prototype.getIndex = function() {
        return this._slotIndex
    }
    ,
    UTSquadSlotView.prototype.getUniquePosition = function() {
        return this._uniquePosition
    }
    ,
    UTSquadSlotView.prototype.getItemView = function() {
        return this._itemView
    }
    ,
    UTSquadSlotView.prototype.setItemView = function(e) {
        this._itemView = e
    }
    ,
    UTSquadSlotView.prototype._tapDetected = function(e) {
        this._triggerActions(EventType.TAP)
    }
    ,
    UTSquadSlotView.prototype._mouseLeave = function(e) {
        this._triggerActions(EventType.MOUSELEAVE)
    }
    ,
    UTSquadSlotView.prototype._mouseEnter = function(e) {
        this._triggerActions(EventType.MOUSEENTER)
    }
    ,
    UTSquadSlotView
}(UTTargetActionView);
UTSquadSlotView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-slot-view"),
        this._pedestal = new UTSquadSlotPedestalView,
        e.appendChild(this._pedestal.getRootElement()),
        this._chemistryPoints = new UTSquadSlotChemistryPointsView,
        this._chemistryPoints.getRootElement().classList.add("item"),
        e.appendChild(this._chemistryPoints.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadSlotView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._pedestal.destroy(),
    this._chemistryPoints.destroy()
}
,
UTSquadSlotView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadPitchView = function(t) {
    function UTSquadPitchView() {
        var e = t.call(this) || this;
        return e._slots = [],
        e._currentTheme = "standard",
        e._currentType = "standard",
        e._currentMode = "standard",
        e._currentFormation = "",
        e._animationDuration = 400,
        e._animationTimeout = 0,
        e.renderChemistry = !0,
        e
    }
    return __extends(UTSquadPitchView, t),
    UTSquadPitchView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0),
        window.addEventListener(EventType.RESIZE, this._windowResizeCallback, !1)
    }
    ,
    UTSquadPitchView.prototype.dealloc = function() {
        this._clearSlotViews(),
        clearTimeout(this._animationTimeout),
        window.removeEventListener(EventType.RESIZE, this._windowResizeCallback, !1),
        t.prototype.dealloc.call(this)
    }
    ,
    UTSquadPitchView.prototype.setTheme = function(e) {
        this.removeClass(this._currentTheme),
        "standard" !== e && this.addClass("theme-" + e),
        this._currentTheme = e
    }
    ,
    UTSquadPitchView.prototype.setType = function(e) {
        this.removeClass(this._currentType),
        "standard" !== e && this.addClass(e),
        this._currentType = e
    }
    ,
    UTSquadPitchView.prototype.setMode = function(e) {
        this.removeClass(this._currentMode),
        "standard" !== e && this.addClass(e),
        this._currentMode = e
    }
    ,
    UTSquadPitchView.prototype.setFormation = function(e, t) {
        var i = this;
        this._updateCanvasSize(),
        this._currentFormation !== e ? (this._isAnimating = !0,
        "" !== this._currentFormation && this.removeClass(this._currentFormation),
        this.addClass(e),
        this._animationTimeout = window.setTimeout(function() {
            clearTimeout(i._animationTimeout),
            i._isAnimating = !1,
            t && t()
        }, this._animationDuration),
        this._currentFormation = e) : !this._isAnimating && t && t()
    }
    ,
    UTSquadPitchView.prototype._clearSlotViews = function() {
        this._slots.forEach(function(e) {
            return e.dealloc()
        }),
        this._slots = []
    }
    ,
    UTSquadPitchView.prototype.getSlotViews = function() {
        return this._slots
    }
    ,
    UTSquadPitchView.prototype.setSlots = function(e, i, o, n) {
        var r = this;
        this._clearSlotViews(),
        e.forEach(function(e) {
            if (!(e.index < 0)) {
                var t = new UTSquadSlotView;
                t.init(),
                t.render(e, i, o, n),
                t.addTarget(r, r._eSlotTapped, EventType.TAP),
                r.addSubview(t),
                r._slots.push(t)
            }
        }, this),
        this.layoutSubviews()
    }
    ,
    UTSquadPitchView.prototype.updateSlot = function(t, e, i, o) {
        void 0 === e && (e = !0),
        void 0 === i && (i = !0),
        void 0 === o && (o = !0);
        var n = JSUtils.find(this._slots, function(e) {
            return e.getIndex() === t.index
        });
        null == n || n.render(t, e, i, o)
    }
    ,
    UTSquadPitchView.prototype.setLockedSlots = function(t) {
        this._slots.forEach(function(e) {
            return e.setLockedState(0 <= t.indexOf(e.getIndex()))
        })
    }
    ,
    UTSquadPitchView.prototype.updateChemistry = function(o) {
        this._slots.forEach(function(t) {
            var e = JSUtils.find(o, function(e) {
                return e.index === t.getIndex()
            })
              , i = t.getItemView();
            e && t.renderChemistryPoints(e),
            e && i && (t.renderPedestal(e, !0),
            i.renderChemistryBreakdown(e.chemistry, e.nationChemistryPoints, e.leagueChemistryPoints, e.clubChemistryPoints))
        }, this),
        this._updateCanvasSize()
    }
    ,
    UTSquadPitchView.prototype._updateCanvasSize = function() {
        var e = this.getRootElement();
        this.__squadCanvas.setAttribute("width", e.clientWidth.toString()),
        this.__squadCanvas.setAttribute("height", e.clientHeight.toString())
    }
    ,
    UTSquadPitchView.prototype._getSlotViewByUniquePosition = function(t) {
        return JSUtils.find(this._slots, function(e) {
            return e.getUniquePosition() === t
        })
    }
    ,
    UTSquadPitchView.prototype._eSlotTapped = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(enums.UISquadPitchEvent.SLOT_SELECT, {
            slot: e,
            slotIndex: e.getIndex()
        })
    }
    ,
    UTSquadPitchView.prototype._tapDetected = function(e) {
        this.isInteractionEnabled() && e.target === this.__squadCanvas && this._triggerActions(EventType.TAP)
    }
    ,
    UTSquadPitchView
}(UTTargetActionView);
UTSquadPitchView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-pitch-view"),
        this.__squadCanvas = document.createElement("canvas"),
        this.__squadCanvas.setAttribute("width", "400"),
        this.__squadCanvas.setAttribute("height", "300"),
        this.__squadCanvas.classList.add("ut-squad-pitch-view--canvas"),
        e.appendChild(this.__squadCanvas),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadPitchView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__squadCanvas = null
}
,
UTSquadPitchView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsPositionAdjustmentView = function(i) {
    function UTTacticsPositionAdjustmentView() {
        var t = i.call(this) || this;
        return t.animationDuration = 500,
        t.dragEndHandler = function(e) {
            return t.onDragEnd(e)
        }
        ,
        t.dragStartHandler = function(e) {
            return t.onDragStart(e)
        }
        ,
        t.dropHandler = function(e) {
            return t.onDrop(e)
        }
        ,
        t.utilDragDrop = null,
        t.windowResizeCb = t.onWindowResize.bind(t),
        t
    }
    return __extends(UTTacticsPositionAdjustmentView, i),
    UTTacticsPositionAdjustmentView.prototype.init = function() {
        i.prototype.init.call(this),
        this._pitch.init(),
        this._pitch.setType("standard"),
        this._pitch.renderChemistry = !1,
        this.setInteractionState(!0),
        window.addEventListener(EventType.RESIZE, this.windowResizeCb, !1)
    }
    ,
    UTTacticsPositionAdjustmentView.prototype.dealloc = function() {
        var e = this.getRootElement();
        window.removeEventListener(EventType.RESIZE, this.windowResizeCb, !1),
        e.removeEventListener("eadragstart", this.dragStartHandler),
        e.removeEventListener("eadragend", this.dragEndHandler),
        e.removeEventListener("eadrop", this.dropHandler),
        this.utilDragDrop = null,
        i.prototype.dealloc.call(this)
    }
    ,
    UTTacticsPositionAdjustmentView.prototype.setInteractionState = function(e) {
        i.prototype.setInteractionState.call(this, e),
        this._pitch.setInteractionState(e)
    }
    ,
    UTTacticsPositionAdjustmentView.prototype.setFormation = function(e) {
        var t = this
          , i = this.isInteractionEnabled();
        this.setInteractionState(!1),
        requestAnimationFrame(function() {
            return t._pitch.setFormation(e.name, function() {
                return t.setInteractionState(i)
            })
        })
    }
    ,
    UTTacticsPositionAdjustmentView.prototype.setSlots = function(e) {
        this._pitch.setSlots(e, !0, !1)
    }
    ,
    UTTacticsPositionAdjustmentView.prototype.initDragDrop = function(r, s) {
        var a = this
          , e = this.getRootElement();
        this.utilDragDrop || (this.utilDragDrop = new UTDragDropUtils(e)),
        this.utilDragDrop.addDropContainer("pitch", this._pitch, !0),
        this._pitch.getSlotViews().forEach(function(e) {
            var t = e.getItemView();
            if (a.utilDragDrop && t) {
                var i = e.getIndex()
                  , o = 0 <= r.indexOf(i)
                  , n = 0 <= s.indexOf(i);
                a.utilDragDrop.setDraggable(t, o),
                a.utilDragDrop.setDroppable(t, n),
                a.utilDragDrop.setSwapAnimation(t, o)
            }
        }),
        this.utilDragDrop.enabled ? this.utilDragDrop.updateDropSlotCache() : (this.utilDragDrop.enable(),
        e.removeEventListener("eadragstart", this.dragStartHandler),
        e.removeEventListener("eadragend", this.dragEndHandler),
        e.removeEventListener("eadrop", this.dropHandler),
        e.addEventListener("eadragstart", this.dragStartHandler),
        e.addEventListener("eadragend", this.dragEndHandler),
        e.addEventListener("eadrop", this.dropHandler))
    }
    ,
    UTTacticsPositionAdjustmentView.prototype.getSlotByIndex = function(t) {
        return this._pitch.getSlotViews().filter(function(e) {
            return e.getIndex() === t
        })[0]
    }
    ,
    UTTacticsPositionAdjustmentView.prototype.onDragStart = function(e) {
        var t = this.getSlotByIndex(e.detail.index);
        this._triggerActions(enums.UISquadPitchEvent.DRAGSTART, e.detail),
        t.addClass("empty")
    }
    ,
    UTTacticsPositionAdjustmentView.prototype.onDragEnd = function(e) {
        var t, i = this, o = this.getSlotByIndex(e.detail.index), n = o.getItemView();
        if (n)
            if (null === (t = this.utilDragDrop) || void 0 === t ? void 0 : t.moved) {
                var r = n.getRootElement()
                  , s = o.getBoundingClientRect()
                  , a = [{
                    top: s.top + "px",
                    left: s.left + "px"
                }];
                this.setInteractionState(!1),
                this._triggerActions(enums.UISquadPitchEvent.DRAGEND, e.detail),
                r.animate(a, {
                    duration: this.animationDuration
                }).onfinish = function(e) {
                    return i.onDragReset(o)
                }
            } else
                this.onDragReset(o)
    }
    ,
    UTTacticsPositionAdjustmentView.prototype.onDrop = function(e) {
        var t;
        this.setInteractionState(!1),
        this.swapElements(e.detail.dragging, e.detail.target),
        null === (t = this.utilDragDrop) || void 0 === t || t.updateDropSlotCache(),
        this._triggerActions(enums.UISquadPitchEvent.DRAGDROP, e.detail)
    }
    ,
    UTTacticsPositionAdjustmentView.prototype.onDragReset = function(e) {
        var t;
        e.removeClass("empty"),
        null === (t = this.utilDragDrop) || void 0 === t || t.resetDrag(),
        this.setInteractionState(!0)
    }
    ,
    UTTacticsPositionAdjustmentView.prototype.swapElements = function(e, t) {
        var i, o = this, n = this.getSlotByIndex(e), r = this.getSlotByIndex(t), s = n.getBoundingClientRect(), a = r.getBoundingClientRect(), l = n.getItemView(), c = r.getItemView(), d = null === (i = null == c ? void 0 : c.hasClass("empty")) || void 0 === i || i, u = null == c ? void 0 : c.getRootElement(), h = null == l ? void 0 : l.getRootElement(), p = [{
            top: a.top + "px",
            left: a.left + "px"
        }], _ = [{
            top: s.top + "px",
            left: s.left + "px"
        }];
        if (c && l && (!d && u && (c.addClass("dropTarget"),
        u.style.left = a.left + "px",
        u.style.top = a.top + "px"),
        r.addClass("empty"),
        n.getRootElement().appendChild(c.getRootElement()),
        r.getRootElement().appendChild(l.getRootElement()),
        h && (h.animate(p, {
            duration: this.animationDuration
        }).onfinish = function(e) {
            return o.onDragReset(r)
        }
        ),
        u)) {
            function Cqa() {
                n.removeClass("empty"),
                n.setItemView(c),
                r.setItemView(l),
                o._triggerActions(enums.UISquadPitchEvent.ITEM_SWAP, {
                    swapFrom: e,
                    swapTo: t
                })
            }
            d ? Cqa() : (n.addClass("noBackground"),
            u.animate(_, {
                duration: this.animationDuration
            }).onfinish = function(e) {
                c.removeClass("dropTarget"),
                u.style.removeProperty("left"),
                u.style.removeProperty("top"),
                n.removeClass("noBackground"),
                Cqa()
            }
            )
        }
    }
    ,
    UTTacticsPositionAdjustmentView.prototype.onWindowResize = function(e) {
        var t;
        null === (t = this.utilDragDrop) || void 0 === t || t.updateInteractiveContainer()
    }
    ,
    UTTacticsPositionAdjustmentView
}(UTTargetActionView);
UTTacticsPositionAdjustmentView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tactics-position-adjustment-view"),
        this._pitch = new UTSquadPitchView,
        e.appendChild(this._pitch.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTacticsPositionAdjustmentView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._pitch.destroy()
}
,
UTTacticsPositionAdjustmentView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsPositionAdjustmentViewController = function(s) {
    function UTTacticsPositionAdjustmentViewController() {
        var e = s.call(this) || this;
        return e.tacticsViewModel = null,
        e
    }
    return __extends(UTTacticsPositionAdjustmentViewController, s),
    UTTacticsPositionAdjustmentViewController.prototype.initWithTacticsViewModel = function(e) {
        this.initialized || (this.tacticsViewModel = e,
        this.init())
    }
    ,
    UTTacticsPositionAdjustmentViewController.prototype.dealloc = function() {
        this.tacticsViewModel = null,
        s.prototype.dealloc.call(this)
    }
    ,
    UTTacticsPositionAdjustmentViewController.prototype._getViewInstanceFromData = function() {
        return new UTTacticsPositionAdjustmentView
    }
    ,
    UTTacticsPositionAdjustmentViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("tactics.label.positioning")
    }
    ,
    UTTacticsPositionAdjustmentViewController.prototype.viewDidAppear = function() {
        var e = this.getView();
        if (s.prototype.viewDidAppear.call(this),
        this.tacticsViewModel) {
            var t = this.tacticsViewModel.getSquad()
              , i = this.tacticsViewModel.getSelectedMentality();
            if (t && i) {
                var o = i.getFormation()
                  , n = t.getTacticSlotsByMentalityId(i.getId())
                  , r = n.filter(function(e) {
                    return 0 < e.index
                }).map(function(e) {
                    return e.index
                });
                e.setSlots(n),
                o && e.setFormation(o),
                e.initDragDrop(r, r)
            }
        }
        e.addTarget(this, this.onItemSwap, enums.UISquadPitchEvent.ITEM_SWAP)
    }
    ,
    UTTacticsPositionAdjustmentViewController.prototype.viewWillDisappear = function() {
        s.prototype.viewWillDisappear.call(this),
        this.getView().removeTarget(this, this.onItemSwap, enums.UISquadPitchEvent.ITEM_SWAP)
    }
    ,
    UTTacticsPositionAdjustmentViewController.prototype.onItemSwap = function(e, t, i) {
        var o, n;
        null === (n = null === (o = this.tacticsViewModel) || void 0 === o ? void 0 : o.getSelectedMentality()) || void 0 === n || n.swapPositionsByIndex(i.swapFrom, i.swapTo)
    }
    ,
    UTTacticsPositionAdjustmentViewController
}(UTViewController)
  , UTSquadTacticsViewModel = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTSquadTacticsViewModel(e) {
        var t = i.call(this) || this;
        return t.onDataUpdated = new EAObservable,
        t.selectedInstructionGroup = null,
        t.selectedMentalityId = SquadMentalityType.BALANCED,
        t.selectedSlotId = 0,
        t.selectedStyleId = SquadMentalityStyle.BUILD_UP_PLAY,
        t.squad = null,
        t.squadServiceObject = e,
        t
    }
    return __extends(UTSquadTacticsViewModel, i),
    UTSquadTacticsViewModel.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.squad && (this.squad.onDataUpdated.unobserve(this),
        this.squad = null),
        this.onDataUpdated.clearObservers()
    }
    ,
    UTSquadTacticsViewModel.prototype.setSquad = function(e) {
        this.squad !== e && (this.squad && this.squad.onDataUpdated.unobserve(this),
        this.squad = e,
        this.squad.onDataUpdated.observe(this, this.onSquadUpdated),
        this.onDataUpdated.notify({
            squad: this.squad
        }))
    }
    ,
    UTSquadTacticsViewModel.prototype.setSelectedMentalityById = function(e) {
        this.selectedMentalityId !== e && (this.selectedMentalityId = e,
        this.onDataUpdated.notify({
            selectedMentality: this.getSelectedMentality()
        }))
    }
    ,
    UTSquadTacticsViewModel.prototype.setSelectedStyleId = function(e) {
        this.selectedStyleId !== e && (this.selectedStyleId = e,
        this.onDataUpdated.notify({
            selectedStyle: this.selectedStyleId
        }))
    }
    ,
    UTSquadTacticsViewModel.prototype.setSelectedSlotId = function(e) {
        this.selectedSlotId !== e && (this.selectedSlotId = e,
        this.onDataUpdated.notify({
            selectedSlot: this.selectedSlotId
        }))
    }
    ,
    UTSquadTacticsViewModel.prototype.setSelectedInstructionGroup = function(e) {
        this.selectedInstructionGroup !== e && (this.selectedInstructionGroup = e,
        this.onDataUpdated.notify({
            selectedInstructionGroup: this.selectedInstructionGroup
        }))
    }
    ,
    UTSquadTacticsViewModel.prototype.getSquad = function() {
        return this.squad
    }
    ,
    UTSquadTacticsViewModel.prototype.getSelectedMentality = function() {
        var e, t, i, o = null === (e = this.squad) || void 0 === e ? void 0 : e.getTacticMentalityById(this.selectedMentalityId);
        return DebugUtils.Assert(JSUtils.isValid(o), "Squad mentality cannot be found for ID: " + this.selectedMentalityId + ". Defaulting to BALANCED."),
        o || (null !== (i = null === (t = this.squad) || void 0 === t ? void 0 : t.getTacticMentalityById(SquadMentalityType.BALANCED)) && void 0 !== i ? i : null)
    }
    ,
    UTSquadTacticsViewModel.prototype.getMentalities = function() {
        var e, t;
        return null !== (t = null === (e = this.squad) || void 0 === e ? void 0 : e.getTacticMentalities()) && void 0 !== t ? t : []
    }
    ,
    UTSquadTacticsViewModel.prototype.getSelectedStyleId = function() {
        return this.selectedStyleId
    }
    ,
    UTSquadTacticsViewModel.prototype.getSelectedSlotId = function() {
        return this.selectedSlotId
    }
    ,
    UTSquadTacticsViewModel.prototype.getSelectedInstructionGroup = function() {
        return this.selectedInstructionGroup
    }
    ,
    UTSquadTacticsViewModel.prototype.saveSelectedMentality = function() {
        var e, t = null === (e = this.getSelectedMentality()) || void 0 === e ? void 0 : e.save();
        return DebugUtils.Assert(JSUtils.isValid(t), "Missing squad context."),
        t ? this._trackRequest(t, !0) : (t = new EAObservable).notify(),
        t
    }
    ,
    UTSquadTacticsViewModel.prototype.saveModifiedMentalities = function() {
        var e, t = null === (e = this.squad) || void 0 === e ? void 0 : e.saveTactics();
        return DebugUtils.Assert(JSUtils.isValid(t), "Missing squad context."),
        t ? this._trackRequest(t, !0) : (t = new EAObservable).notify(),
        t
    }
    ,
    UTSquadTacticsViewModel.prototype.onSquadUpdated = function(e, t) {
        var i = {};
        t.chemistry && (i.chemistry = t.chemistry),
        t.rating && (i.rating = t.rating),
        t.slots && (i.slots = t.slots),
        t.type && (i.type = t.type),
        t.tactics && (i.tactics = t.tactics),
        this.onDataUpdated.notify(i)
    }
    ,
    UTSquadTacticsViewModel
}(UTViewModel))
  , UTTacticsFormationSelectView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTTacticsFormationSelectView() {
        var e = i.call(this) || this;
        return e.formationDropDown = null,
        e
    }
    return __extends(UTTacticsFormationSelectView, i),
    UTTacticsFormationSelectView.prototype.init = function() {
        var e = services.Localization;
        i.prototype.init.call(this),
        this.setInteractionState(!0),
        this.__title.textContent = e.localize("tactics.label.formation"),
        this._btnSave.init(),
        this._btnSave.setText(e.localize("tactics.label.save")),
        isPhone() ? this._btnSave.addTarget(this, this.onButtonSelected, EventType.TAP) : DOMKit.toggleDisplayStyle(this.__header, !1),
        this._btnEditPositions.init(),
        this._btnEditPositions.setText(e.localize("tactics.label.positioning")),
        this._btnEditPositions.addTarget(this, this.onButtonSelected, EventType.TAP)
    }
    ,
    UTTacticsFormationSelectView.prototype.dealloc = function() {
        this.formationDropDown && (this.formationDropDown.dealloc(),
        this.formationDropDown = null),
        i.prototype.dealloc.call(this)
    }
    ,
    UTTacticsFormationSelectView.prototype.setInteractionState = function(e) {
        var t;
        i.prototype.setInteractionState.call(this, e),
        null === (t = this.formationDropDown) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTTacticsFormationSelectView.prototype.setCurrentFormation = function(e) {
        var t;
        DebugUtils.Assert(JSUtils.isValid(this.formationDropDown), "Expected formation drop down to be instantiated before assigning value."),
        null === (t = this.formationDropDown) || void 0 === t || t.setIndexById(e)
    }
    ,
    UTTacticsFormationSelectView.prototype.setFormationImage = function(e) {
        this._imgFormation.setResource(AssetLocationUtils.getFormationImageUri(e))
    }
    ,
    UTTacticsFormationSelectView.prototype.setFormationOptions = function(e) {
        this.formationDropDown || (this.formationDropDown = new UTDropDownControl,
        this.formationDropDown.init(),
        this.formationDropDown.addTarget(this, this.onDropDownControlChange, EventType.CHANGE),
        this.addSubview(this.formationDropDown, this.__adjustmentArea),
        this.layoutSubviews()),
        this.formationDropDown.setOptions(e)
    }
    ,
    UTTacticsFormationSelectView.prototype.setSaveButtonInteractionState = function(e) {
        this._btnSave.setInteractionState(e)
    }
    ,
    UTTacticsFormationSelectView.prototype.onDropDownControlChange = function(e, t, i) {
        this.isInteractionEnabled() && (this.setFormationImage(i.id),
        this._triggerActions(UTTacticsFormationSelectView.Event.FORMATION_CHANGE, {
            id: i.id,
            value: i.value
        }))
    }
    ,
    UTTacticsFormationSelectView.prototype.onButtonSelected = function(e, t, i) {
        this.isInteractionEnabled() && (e === this._btnSave ? this._triggerActions(UTTacticsFormationSelectView.Event.SAVE_MENTALITY) : e === this._btnEditPositions && this._triggerActions(UTTacticsFormationSelectView.Event.SELECT_POSITIONING))
    }
    ,
    UTTacticsFormationSelectView.Event = Object.freeze({
        FORMATION_CHANGE: "UTTacticsFormationSelectView.Event.FORMATION_CHANGE",
        SAVE_MENTALITY: "UTTacticsFormationSelectView.Event.SAVE_MENTALITY",
        SELECT_POSITIONING: "UTTacticsFormationSelectView.Event.SELECT_POSITIONING"
    }),
    UTTacticsFormationSelectView
}(UTTargetActionView));
UTTacticsFormationSelectView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tactics-formation-select-view"),
        this.__header = document.createElement("header"),
        this.__header.classList.add("ut-tactics-formation-select-view--header"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-tactics-formation-select-view--title"),
        this.__header.appendChild(this.__title),
        this._btnSave = new UTStandardButtonControl,
        this._btnSave.getRootElement().classList.add("mini"),
        this._btnSave.getRootElement().classList.add("call-to-action"),
        this.__header.appendChild(this._btnSave.getRootElement()),
        e.appendChild(this.__header),
        this.__adjustmentArea = document.createElement("div"),
        this.__adjustmentArea.classList.add("ut-tactics-formation-select-view--formation-container"),
        this._imgFormation = new UTImageView,
        this.__adjustmentArea.appendChild(this._imgFormation.getRootElement()),
        e.appendChild(this.__adjustmentArea);
        var t = document.createElement("div");
        t.classList.add("ut-button-group"),
        this._btnEditPositions = new UTGroupButtonControl,
        this._btnEditPositions.getRootElement().classList.add("more"),
        t.appendChild(this._btnEditPositions.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTacticsFormationSelectView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__header = null,
    this.__title = null,
    this._btnSave.destroy(),
    this.__adjustmentArea = null,
    this._imgFormation.destroy(),
    this._btnEditPositions.destroy()
}
,
UTTacticsFormationSelectView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsFormationSelectViewController = function(a) {
    function UTTacticsFormationSelectViewController() {
        var e = a.call(this) || this;
        return e.tacticsViewModel = null,
        e
    }
    return __extends(UTTacticsFormationSelectViewController, a),
    UTTacticsFormationSelectViewController.prototype.initWithTacticsViewModel = function(e) {
        this.initialized || (this.tacticsViewModel = e,
        this.init())
    }
    ,
    UTTacticsFormationSelectViewController.prototype.dealloc = function() {
        this.tacticsViewModel = null,
        a.prototype.dealloc.call(this)
    }
    ,
    UTTacticsFormationSelectViewController.prototype._getViewInstanceFromData = function() {
        return new UTTacticsFormationSelectView
    }
    ,
    UTTacticsFormationSelectViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("tactics.label.formation")
    }
    ,
    UTTacticsFormationSelectViewController.prototype.viewDidAppear = function() {
        var e, t;
        a.prototype.viewDidAppear.call(this);
        var i = this.getView()
          , o = this.getNavigationController();
        if (o && (o.setNavigationVisibility(!0, !1),
        isPhone() || o.setNavigationStyle(UTNavigationBarView.Style.SECONDARY)),
        this.tacticsViewModel) {
            var n = this.tacticsViewModel.getSquad()
              , r = this.tacticsViewModel.getSelectedMentality();
            if (n && r) {
                var s = null !== (t = null === (e = r.getFormation()) || void 0 === e ? void 0 : e.id) && void 0 !== t ? t : 0;
                i.setSaveButtonInteractionState(n.hasModifiedTactics()),
                i.setFormationOptions(factories.DataProvider.getFormationDP()),
                i.setCurrentFormation(s),
                i.setFormationImage(s)
            }
            this.tacticsViewModel.onDataUpdated.observe(this, this.onTacticsViewModelUpdated)
        }
        i.addTarget(this, this.onSaveMentality, UTTacticsFormationSelectView.Event.SAVE_MENTALITY),
        i.addTarget(this, this.onChangeFormation, UTTacticsFormationSelectView.Event.FORMATION_CHANGE),
        i.addTarget(this, this.onSelectPositioning, UTTacticsFormationSelectView.Event.SELECT_POSITIONING)
    }
    ,
    UTTacticsFormationSelectViewController.prototype.viewWillDisappear = function() {
        a.prototype.viewWillDisappear.call(this),
        this.tacticsViewModel && this.tacticsViewModel.onDataUpdated.unobserve(this);
        var e = this.getView();
        e.removeTarget(this, this.onSaveMentality, UTTacticsFormationSelectView.Event.SAVE_MENTALITY),
        e.removeTarget(this, this.onChangeFormation, UTTacticsFormationSelectView.Event.FORMATION_CHANGE),
        e.removeTarget(this, this.onSelectPositioning, UTTacticsFormationSelectView.Event.SELECT_POSITIONING),
        services.UserSettings.removeSessionItem(UserSettingsKey.TACTICS_FORMATION_MESSAGE_DISPLAYED)
    }
    ,
    UTTacticsFormationSelectViewController.prototype.onSaveMentality = function(i, e, t) {
        var o = this;
        DebugUtils.Assert(JSUtils.isValid(this.tacticsViewModel), "Missing tactics view model. Unable to save mentality."),
        this.tacticsViewModel && this.tacticsViewModel.saveModifiedMentalities().observe(this, function(e, t) {
            e.unobserve(o),
            i.setSaveButtonInteractionState(!t.success)
        })
    }
    ,
    UTTacticsFormationSelectViewController.prototype.onSelectPositioning = function(e, t, i) {
        if (DebugUtils.Assert(JSUtils.isValid(this.tacticsViewModel), "Missing tactics view model. Unable to load position adjustment view."),
        this.tacticsViewModel) {
            var o = this.getNavigationController();
            if (o) {
                var n = new UTTacticsPositionAdjustmentViewController;
                n.initWithTacticsViewModel(this.tacticsViewModel),
                o.pushViewController(n)
            }
        }
    }
    ,
    UTTacticsFormationSelectViewController.prototype.onChangeFormation = function(e, t, i) {
        var r = this;
        if (DebugUtils.Assert(JSUtils.isValid(this.tacticsViewModel), "Missing tactics view model. Unable to change mentality formation."),
        this.tacticsViewModel) {
            function Zsa() {
                var e = repositories.Squad.getFormation(i.value);
                DebugUtils.Assert(JSUtils.isValid(e), "Could not find formation with name: " + i.value),
                e && (null == s || s.setFormation(e))
            }
            var s = this.tacticsViewModel.getSelectedMentality()
              , o = services.UserSettings.getSessionItem(UserSettingsKey.TACTICS_FORMATION_MESSAGE_DISPLAYED)
              , n = JSUtils.isString(o) && "true" === o.toLowerCase()
              , a = "true" === services.UserSettings.getItem(UserSettingsKey.TACTICS_FORMATION_MESSAGE_DISPLAYED, "false").toLowerCase();
            if ((null == s ? void 0 : s.getId()) !== SquadMentalityType.BALANCED || n || a)
                Zsa();
            else {
                var l = new UTTacticsFormationPopupViewController;
                l.modalDisplayStyle = "form",
                l.modalDisplayDimensions.width = "380px",
                l.modalCanDismissFromShield = !1,
                l.onExit.observe(this, function(e, t) {
                    var i, o;
                    if (e.unobserve(r),
                    r.dismissViewController(),
                    t === enums.UIDialogOptions.OK)
                        Zsa();
                    else {
                        var n = r.getView();
                        n.removeTarget(r, r.onChangeFormation, UTTacticsFormationSelectView.Event.FORMATION_CHANGE),
                        n.setCurrentFormation(null !== (o = null === (i = null == s ? void 0 : s.getFormation()) || void 0 === i ? void 0 : i.id) && void 0 !== o ? o : 0),
                        n.addTarget(r, r.onChangeFormation, UTTacticsFormationSelectView.Event.FORMATION_CHANGE)
                    }
                }),
                this.presentViewController(l)
            }
        }
    }
    ,
    UTTacticsFormationSelectViewController.prototype.onTacticsViewModelUpdated = function(e, t) {
        var i, o;
        if (JSUtils.isObject(t) && t.tactics && t.tactics.formation) {
            var n = this.getView()
              , r = null === (i = this.tacticsViewModel) || void 0 === i ? void 0 : i.getSquad();
            n.setSaveButtonInteractionState(null !== (o = null == r ? void 0 : r.hasModifiedTactics()) && void 0 !== o && o)
        }
    }
    ,
    UTTacticsFormationSelectViewController
}(UTViewController)
  , UTPlayerInstructionTableCellView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTPlayerInstructionTableCellView() {
        var e = i.call(this) || this;
        return e.id = -1,
        e
    }
    return __extends(UTPlayerInstructionTableCellView, i),
    UTPlayerInstructionTableCellView.prototype.init = function() {
        i.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTPlayerInstructionTableCellView.prototype.setInteractionState = function(e) {
        var t = this._interactionState;
        i.prototype.setInteractionState.call(this, e),
        this._interactionState !== t && this.toggleClass(enums.UIState.DISABLED, !this._interactionState)
    }
    ,
    UTPlayerInstructionTableCellView.prototype.setId = function(e) {
        this.id = e
    }
    ,
    UTPlayerInstructionTableCellView.prototype.getId = function() {
        return this.id
    }
    ,
    UTPlayerInstructionTableCellView.prototype.setInstructionNameById = function(e) {
        this.__name.textContent = services.Localization.localize("tactics.instruction." + e)
    }
    ,
    UTPlayerInstructionTableCellView.prototype.setInstructionDescriptionById = function(e) {
        this.__description.textContent = services.Localization.localize("tactics.description.instruction." + e)
    }
    ,
    UTPlayerInstructionTableCellView.prototype._mouseEnter = function(e) {
        i.prototype._mouseEnter.call(this, e),
        this.addClass(enums.UIState.HOVER)
    }
    ,
    UTPlayerInstructionTableCellView.prototype._mouseLeave = function(e) {
        i.prototype._mouseLeave.call(this, e),
        this.removeClass(enums.UIState.HOVER)
    }
    ,
    UTPlayerInstructionTableCellView.prototype._touchStarted = function(e) {
        i.prototype._touchStarted.call(this, e),
        this.addClass(enums.UIState.ACTIVE)
    }
    ,
    UTPlayerInstructionTableCellView.prototype._touchMoved = function(e) {
        i.prototype._touchMoved.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTPlayerInstructionTableCellView.prototype._touchEnded = function(e) {
        i.prototype._touchEnded.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTPlayerInstructionTableCellView.prototype._tapDetected = function(e) {
        i.prototype._tapDetected.call(this, e),
        this._triggerActions(EventType.TAP)
    }
    ,
    UTPlayerInstructionTableCellView
}(UTTargetActionView));
UTPlayerInstructionTableCellView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-player-instruction-table-cell-view"),
        this.__name = document.createElement("h1"),
        this.__name.classList.add("ut-player-instruction-table-cell-view--name"),
        e.appendChild(this.__name),
        this.__description = document.createElement("p"),
        this.__description.classList.add("ut-player-instruction-table-cell-view--description"),
        e.appendChild(this.__description),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPlayerInstructionTableCellView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__name = null,
    this.__description = null
}
,
UTPlayerInstructionTableCellView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsInstructionSelectView = function(t) {
    function UTTacticsInstructionSelectView() {
        var e = t.call(this) || this;
        return e.instructionCellViews = [],
        e
    }
    return __extends(UTTacticsInstructionSelectView, t),
    UTTacticsInstructionSelectView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0),
        this._btnCancel.init(),
        this._btnCancel.addTarget(this, this.onDismissButtonSelected, EventType.TAP),
        this._btnCancel.setText(services.Localization.localize("common.dialog.cancel"))
    }
    ,
    UTTacticsInstructionSelectView.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.clearInstructionCells()
    }
    ,
    UTTacticsInstructionSelectView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTTacticsInstructionSelectView.prototype.clearInstructionCells = function() {
        this.instructionCellViews.forEach(function(e) {
            return e.dealloc()
        }),
        this.instructionCellViews = []
    }
    ,
    UTTacticsInstructionSelectView.prototype.generateInstructionCell = function(e) {
        var t = new UTPlayerInstructionTableCellView;
        t.init(),
        t.setId(e),
        t.setInstructionNameById(e),
        t.setInstructionDescriptionById(e),
        t.addTarget(this, this.onInstructionSelected, EventType.TAP),
        this.instructionCellViews.push(t),
        this.addSubview(t, this.__table)
    }
    ,
    UTTacticsInstructionSelectView.prototype.setInstructionGroup = function(e) {
        this.clearInstructionCells(),
        e.getInstructions().forEach(this.generateInstructionCell, this),
        this.layoutSubviews()
    }
    ,
    UTTacticsInstructionSelectView.prototype.onDismissButtonSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTTacticsInstructionSelectView.Event.DISMISS)
    }
    ,
    UTTacticsInstructionSelectView.prototype.onInstructionSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTTacticsInstructionSelectView.Event.INSTRUCTION_SELECTED, {
            id: e.getId()
        })
    }
    ,
    UTTacticsInstructionSelectView.Event = Object.freeze({
        DISMISS: "UTTacticsInstructionSelectView.DISMISS",
        INSTRUCTION_SELECTED: "UTTacticsInstructionSelectView.INSTRUCTION_SELECTED"
    }),
    UTTacticsInstructionSelectView
}(UTTargetActionView);
UTTacticsInstructionSelectView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tactics-instruction-select-view");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-tactics-instruction-select-view--title"),
        t.appendChild(this.__title),
        e.appendChild(t),
        this.__table = document.createElement("div"),
        this.__table.classList.add("ut-tactics-instruction-select-view--table"),
        e.appendChild(this.__table);
        var i = document.createElement("div");
        i.classList.add("ut-button-group"),
        this._btnCancel = new UTGroupButtonControl,
        this._btnCancel.getRootElement().classList.add("negative"),
        i.appendChild(this._btnCancel.getRootElement()),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTacticsInstructionSelectView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__table = null,
    this._btnCancel.destroy()
}
,
UTTacticsInstructionSelectView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsInstructionSelectViewController = function(i) {
    function UTTacticsInstructionSelectViewController() {
        var e = i.call(this) || this;
        return e.tacticsViewModel = null,
        e
    }
    return __extends(UTTacticsInstructionSelectViewController, i),
    UTTacticsInstructionSelectViewController.prototype.initWithTacticsViewModel = function(e) {
        DebugUtils.Assert(!this.initialized, "Attempted to re-initialise the view controller."),
        this.initialized || (this.tacticsViewModel = e,
        this.init())
    }
    ,
    UTTacticsInstructionSelectViewController.prototype.dealloc = function() {
        this.tacticsViewModel = null,
        i.prototype.dealloc.call(this)
    }
    ,
    UTTacticsInstructionSelectViewController.prototype._getViewInstanceFromData = function() {
        return new UTTacticsInstructionSelectView
    }
    ,
    UTTacticsInstructionSelectViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this);
        var e = this.getView();
        if (this.tacticsViewModel) {
            var t = this.tacticsViewModel.getSelectedInstructionGroup();
            t && (e.setTitle(services.Localization.localize("tactics.instruction.group." + t.id)),
            e.setInstructionGroup(t))
        }
        e.addTarget(this, this.onDismissSelected, UTTacticsInstructionSelectView.Event.DISMISS),
        e.addTarget(this, this.onInstructionSelected, UTTacticsInstructionSelectView.Event.INSTRUCTION_SELECTED)
    }
    ,
    UTTacticsInstructionSelectViewController.prototype.viewWillDisappear = function() {
        i.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this.onDismissSelected, UTTacticsInstructionSelectView.Event.DISMISS),
        e.removeTarget(this, this.onInstructionSelected, UTTacticsInstructionSelectView.Event.INSTRUCTION_SELECTED)
    }
    ,
    UTTacticsInstructionSelectViewController.prototype.onDismissSelected = function(e, t, i) {
        var o = this.getParentViewController();
        o && o.getPresentedViewController() === this && o.dismissViewController(!0)
    }
    ,
    UTTacticsInstructionSelectViewController.prototype.onInstructionSelected = function(e, t, i) {
        var o, n = this.getParentViewController();
        this.tacticsViewModel && (null === (o = this.tacticsViewModel.getSelectedInstructionGroup()) || void 0 === o || o.setSelectedInstruction([i.id], i.id)),
        n && n.getPresentedViewController() === this && n.dismissViewController(!0)
    }
    ,
    UTTacticsInstructionSelectViewController
}(UTViewController)
  , UTPlayerInstructionGroupCellView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTPlayerInstructionGroupCellView() {
        return i.call(this) || this
    }
    return __extends(UTPlayerInstructionGroupCellView, i),
    UTPlayerInstructionGroupCellView.prototype.init = function() {
        i.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTPlayerInstructionGroupCellView.prototype.setInteractionState = function(e) {
        var t = this._interactionState;
        i.prototype.setInteractionState.call(this, e),
        this._interactionState !== t && this.toggleClass(enums.UIState.DISABLED, !this._interactionState)
    }
    ,
    UTPlayerInstructionGroupCellView.prototype.setInstructionNameById = function(e) {
        this.__instructionName.textContent = services.Localization.localize("tactics.instruction." + e)
    }
    ,
    UTPlayerInstructionGroupCellView.prototype.setInstructionGroupNameById = function(e) {
        this.__groupName.textContent = services.Localization.localize("tactics.instruction.group." + e)
    }
    ,
    UTPlayerInstructionGroupCellView.prototype._mouseEnter = function(e) {
        i.prototype._mouseEnter.call(this, e),
        this.addClass(enums.UIState.HOVER)
    }
    ,
    UTPlayerInstructionGroupCellView.prototype._mouseLeave = function(e) {
        i.prototype._mouseLeave.call(this, e),
        this.removeClass(enums.UIState.HOVER)
    }
    ,
    UTPlayerInstructionGroupCellView.prototype._touchStarted = function(e) {
        i.prototype._touchStarted.call(this, e),
        this.addClass(enums.UIState.ACTIVE)
    }
    ,
    UTPlayerInstructionGroupCellView.prototype._touchMoved = function(e) {
        i.prototype._touchMoved.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTPlayerInstructionGroupCellView.prototype._touchEnded = function(e) {
        i.prototype._touchEnded.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTPlayerInstructionGroupCellView.prototype._tapDetected = function(e) {
        i.prototype._tapDetected.call(this, e),
        this._triggerActions(EventType.TAP)
    }
    ,
    UTPlayerInstructionGroupCellView
}(UTTargetActionView));
UTPlayerInstructionGroupCellView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-player-instruction-group-cell-view");
        var t = document.createElement("div");
        t.classList.add("ut-player-instruction-group-cell-view--content"),
        this.__groupName = document.createElement("span"),
        this.__groupName.classList.add("group-name"),
        t.appendChild(this.__groupName),
        this.__instructionName = document.createElement("span"),
        this.__instructionName.classList.add("instruction-name"),
        t.appendChild(this.__instructionName),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPlayerInstructionGroupCellView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__groupName = null,
    this.__instructionName = null
}
,
UTPlayerInstructionGroupCellView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsInstructionMenuView = function(t) {
    function UTTacticsInstructionMenuView() {
        var e = t.call(this) || this;
        return e.cells = [],
        e.item = null,
        e
    }
    return __extends(UTTacticsInstructionMenuView, t),
    UTTacticsInstructionMenuView.prototype.init = function() {
        var e = services.Localization;
        t.prototype.init.call(this),
        this.setInteractionState(!0),
        this.__title.textContent = e.localize("tactics.label.instructions"),
        this._btnSave.init(),
        this._btnSave.setText(e.localize("tactics.label.save")),
        isPhone() ? this._btnSave.addTarget(this, this.onSaveButtonSelected, EventType.TAP) : DOMKit.toggleDisplayStyle(this.__header, !1)
    }
    ,
    UTTacticsInstructionMenuView.prototype.dealloc = function() {
        this.clearInstructionCells(),
        this.clearPlayerItem(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTTacticsInstructionMenuView.prototype.clearInstructionCells = function() {
        this.cells.forEach(function(e) {
            return e.dealloc()
        }),
        this.cells = []
    }
    ,
    UTTacticsInstructionMenuView.prototype.clearPlayerItem = function() {
        this.item && (this.item.dealloc(),
        this.item = null)
    }
    ,
    UTTacticsInstructionMenuView.prototype.setInstructionGroups = function(e) {
        var i = this;
        this.clearInstructionCells(),
        e.forEach(function(e) {
            var t = new UTPlayerInstructionGroupCellView;
            t.init(),
            t.addTarget(i, i.onCellSelected, EventType.TAP),
            t.setInstructionGroupNameById(e.id),
            t.setInstructionNameById(e.getSelectedInstruction()),
            i.cells.push(t),
            i.addSubview(t, i.__menu)
        }, this),
        this.layoutSubviews()
    }
    ,
    UTTacticsInstructionMenuView.prototype.setPlayerItem = function(e) {
        this.clearPlayerItem(),
        this.item = factories.ItemView.createLargeItem(e),
        this.item.init(),
        this.item.render(e),
        this.addSubview(this.item, this.__itemContainer),
        this.layoutSubviews()
    }
    ,
    UTTacticsInstructionMenuView.prototype.setPlayerPosition = function(e) {
        this.__position.textContent = UTLocalizationUtil.positionIdToName(e, services.Localization)
    }
    ,
    UTTacticsInstructionMenuView.prototype.setSaveButtonInteractionState = function(e) {
        this._btnSave.setInteractionState(e)
    }
    ,
    UTTacticsInstructionMenuView.prototype.onCellSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTTacticsInstructionMenuView.Event.SELECT_INSTRUCTION_GROUP, {
            index: this.cells.indexOf(e)
        })
    }
    ,
    UTTacticsInstructionMenuView.prototype.onSaveButtonSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTTacticsInstructionMenuView.Event.SAVE_MENTALITY)
    }
    ,
    UTTacticsInstructionMenuView.Event = Object.freeze({
        SAVE_MENTALITY: "UTTacticsInstructionMenuView.SAVE_MENTALITY",
        SELECT_INSTRUCTION_GROUP: "UTTacticsInstructionMenuView.SELECT_INSTRUCTION_GROUP"
    }),
    UTTacticsInstructionMenuView
}(UTTargetActionView);
UTTacticsInstructionMenuView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tactics-instruction-menu-view"),
        this.__header = document.createElement("header"),
        this.__header.classList.add("ut-tactics-instruction-menu-view--header"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-tactics-instruction-menu-view--title"),
        this.__header.appendChild(this.__title),
        this._btnSave = new UTStandardButtonControl,
        this._btnSave.getRootElement().classList.add("mini"),
        this._btnSave.getRootElement().classList.add("call-to-action"),
        this.__header.appendChild(this._btnSave.getRootElement()),
        e.appendChild(this.__header),
        this.__itemContainer = document.createElement("div"),
        this.__itemContainer.classList.add("ut-tactics-instruction-menu-view--item-container"),
        this.__position = document.createElement("span"),
        this.__position.classList.add("position"),
        this.__itemContainer.appendChild(this.__position),
        e.appendChild(this.__itemContainer),
        this.__menu = document.createElement("div"),
        this.__menu.classList.add("ut-button-group"),
        e.appendChild(this.__menu),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTacticsInstructionMenuView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__header = null,
    this.__title = null,
    this._btnSave.destroy(),
    this.__itemContainer = null,
    this.__position = null,
    this.__menu = null
}
,
UTTacticsInstructionMenuView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsInstructionMenuViewController = function(n) {
    function UTTacticsInstructionMenuViewController() {
        var e = n.call(this) || this;
        return e.instructionGroups = [],
        e.instructionSelectViewController = null,
        e.squadSlots = [],
        e.tacticsViewModel = null,
        e
    }
    return __extends(UTTacticsInstructionMenuViewController, n),
    UTTacticsInstructionMenuViewController.prototype.initWithTacticsViewModel = function(e) {
        DebugUtils.Assert(!this.initialized, "Attempted to re-initialise the view controller."),
        this.initialized || (this.tacticsViewModel = e,
        this.init())
    }
    ,
    UTTacticsInstructionMenuViewController.prototype.dealloc = function() {
        this.tacticsViewModel = null,
        this.instructionGroups = [],
        this.squadSlots = [],
        this.instructionSelectViewController && (this.instructionSelectViewController.dealloc(),
        this.instructionSelectViewController = null),
        n.prototype.dealloc.call(this)
    }
    ,
    UTTacticsInstructionMenuViewController.prototype._getViewInstanceFromData = function() {
        return new UTTacticsInstructionMenuView
    }
    ,
    UTTacticsInstructionMenuViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("tactics.label.instructions")
    }
    ,
    UTTacticsInstructionMenuViewController.prototype.viewDidAppear = function() {
        n.prototype.viewDidAppear.call(this);
        var e = this.getView();
        if (this.tacticsViewModel) {
            var t = this.tacticsViewModel.getSquad()
              , i = this.tacticsViewModel.getSelectedMentality();
            if (t && i) {
                this.squadSlots = t.getTacticSlotsByMentalityId(i.getId());
                var o = this.squadSlots[this.tacticsViewModel.getSelectedSlotId()];
                this.instructionGroups = i.getInstructionGroupsByPositionId(o.uniquePosition),
                e.setPlayerItem(o.item),
                e.setPlayerPosition(o.generalPosition),
                e.setSaveButtonInteractionState(t.hasModifiedTactics())
            }
            e.setInstructionGroups(this.instructionGroups),
            this.tacticsViewModel.onDataUpdated.observe(this, this.onTacticsViewModelUpdated)
        }
        e.addTarget(this, this.onInstructionGroupSelected, UTTacticsInstructionMenuView.Event.SELECT_INSTRUCTION_GROUP),
        e.addTarget(this, this.onSaveMentality, UTTacticsInstructionMenuView.Event.SAVE_MENTALITY)
    }
    ,
    UTTacticsInstructionMenuViewController.prototype.viewWillDisappear = function() {
        n.prototype.viewWillDisappear.call(this),
        this.tacticsViewModel && this.tacticsViewModel.onDataUpdated.unobserve(this);
        var e = this.getView();
        e.removeTarget(this, this.onInstructionGroupSelected, UTTacticsInstructionMenuView.Event.SELECT_INSTRUCTION_GROUP),
        e.removeTarget(this, this.onSaveMentality, UTTacticsInstructionMenuView.Event.SAVE_MENTALITY)
    }
    ,
    UTTacticsInstructionMenuViewController.prototype.didDismiss = function(e) {
        if (n.prototype.didDismiss.call(this, e),
        this.tacticsViewModel && e instanceof UTTacticsInstructionSelectViewController) {
            var t = this.tacticsViewModel.getSelectedMentality()
              , i = this.squadSlots[this.tacticsViewModel.getSelectedSlotId()]
              , o = this.instructionGroups.reduce(function(e, t) {
                return e.concat(t.getSelectedInstruction())
            }, []);
            null == t || t.setInstructionsByPositionId(i.uniquePosition, o)
        }
        e.dealloc()
    }
    ,
    UTTacticsInstructionMenuViewController.prototype.onInstructionGroupSelected = function(e, t, i) {
        DebugUtils.Assert(JSUtils.isValid(this.tacticsViewModel), "Missing tactics view model. Unable to load mentality selection view."),
        this.tacticsViewModel && (this.tacticsViewModel.setSelectedInstructionGroup(this.instructionGroups[i.index]),
        this.instructionSelectViewController = new UTTacticsInstructionSelectViewController,
        this.instructionSelectViewController.initWithTacticsViewModel(this.tacticsViewModel),
        this.instructionSelectViewController.modalDisplayStyle = "form",
        this.presentViewController(this.instructionSelectViewController, !0))
    }
    ,
    UTTacticsInstructionMenuViewController.prototype.onSaveMentality = function(e, t, i) {
        var o = this;
        DebugUtils.Assert(JSUtils.isValid(this.tacticsViewModel), "Missing tactics view model. Unable to save mentality."),
        this.tacticsViewModel && this.tacticsViewModel.saveModifiedMentalities().observe(this, function(e, t) {
            e.unobserve(o),
            o.getView().setSaveButtonInteractionState(!t.success)
        })
    }
    ,
    UTTacticsInstructionMenuViewController.prototype.onTacticsViewModelUpdated = function(e, t) {
        var i, o;
        if (JSUtils.isObject(t) && t.tactics && t.tactics.instructions) {
            var n = this.getView()
              , r = null === (i = this.tacticsViewModel) || void 0 === i ? void 0 : i.getSquad();
            n.setInstructionGroups(this.instructionGroups),
            n.setSaveButtonInteractionState(null !== (o = null == r ? void 0 : r.hasModifiedTactics()) && void 0 !== o && o)
        }
    }
    ,
    UTTacticsInstructionMenuViewController
}(UTViewController)
  , UTTacticsInstructionSlotSelectViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(r) {
    function UTTacticsInstructionSlotSelectViewController() {
        var e = r.call(this) || this;
        return e.tacticsViewModel = null,
        e
    }
    return __extends(UTTacticsInstructionSlotSelectViewController, r),
    UTTacticsInstructionSlotSelectViewController.prototype.initWithTacticsViewModel = function(e) {
        this.initialized || (this.tacticsViewModel = e,
        this.init())
    }
    ,
    UTTacticsInstructionSlotSelectViewController.prototype.dealloc = function() {
        r.prototype.dealloc.call(this),
        this.tacticsViewModel = null
    }
    ,
    UTTacticsInstructionSlotSelectViewController.prototype._getViewInstanceFromData = function() {
        return new UTSquadPitchView
    }
    ,
    UTTacticsInstructionSlotSelectViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("tactics.label.instructions")
    }
    ,
    UTTacticsInstructionSlotSelectViewController.prototype.viewDidAppear = function() {
        var e = this.getNavigationController()
          , i = this.getView();
        if (r.prototype.viewDidAppear.call(this),
        e && (e.setNavigationVisibility(!0, !1),
        isPhone() || e.setNavigationStyle(UTNavigationBarView.Style.SECONDARY)),
        this.tacticsViewModel) {
            var t = this.tacticsViewModel.getSquad()
              , o = this.tacticsViewModel.getSelectedMentality();
            if (t && o) {
                var n = i.isInteractionEnabled();
                i.renderChemistry = !1,
                i.setInteractionState(!1),
                i.setType("standard"),
                i.setSlots(t.getTacticSlotsByMentalityId(o.getId()), !0, !1),
                requestAnimationFrame(function() {
                    var e, t;
                    i.setFormation(null !== (t = null === (e = o.getFormation()) || void 0 === e ? void 0 : e.name) && void 0 !== t ? t : "", function() {
                        return i.setInteractionState(n)
                    })
                })
            }
        }
        i.addTarget(this, this.onSlotSelected, enums.UISquadPitchEvent.SLOT_SELECT)
    }
    ,
    UTTacticsInstructionSlotSelectViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        r.prototype.viewWillDisappear.call(this),
        e.removeTarget(this, this.onSlotSelected, enums.UISquadPitchEvent.SLOT_SELECT)
    }
    ,
    UTTacticsInstructionSlotSelectViewController.prototype.onSlotSelected = function(e, t, i) {
        var o;
        if (DebugUtils.Assert(JSUtils.isValid(this.tacticsViewModel), "Missing tactics view model. Unable to load tactic."),
        this.tacticsViewModel) {
            var n = null !== (o = null == i ? void 0 : i.slotIndex) && void 0 !== o ? o : 0
              , r = this.getNavigationController();
            if (this.tacticsViewModel.setSelectedSlotId(n),
            r) {
                var s = new UTTacticsInstructionMenuViewController;
                s.initWithTacticsViewModel(this.tacticsViewModel),
                r.pushViewController(s)
            }
        }
    }
    ,
    UTTacticsInstructionSlotSelectViewController
}(UTViewController))
  , UTMentalityTableCellView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTMentalityTableCellView() {
        var e = i.call(this) || this;
        return e.id = -1,
        e
    }
    return __extends(UTMentalityTableCellView, i),
    UTMentalityTableCellView.prototype.init = function() {
        i.prototype.init.call(this),
        this.setInteractionState(!0),
        this.__titleBuildUpPlayStyle.textContent = services.Localization.localize("tactics.label.offensivestyle.buildup"),
        this.__titleChanceCreationStyle.textContent = services.Localization.localize("tactics.label.offensivestyle.chancecreation"),
        this.__titleDefensiveStyle.textContent = services.Localization.localize("tactics.label.defensivestyle"),
        this.__titleFormation.textContent = services.Localization.localize("squads.formation")
    }
    ,
    UTMentalityTableCellView.prototype.setInteractionState = function(e) {
        var t = this._interactionState;
        i.prototype.setInteractionState.call(this, e),
        this._interactionState !== t && this.toggleClass(enums.UIState.DISABLED, !this._interactionState)
    }
    ,
    UTMentalityTableCellView.prototype.setId = function(e) {
        this.id = e
    }
    ,
    UTMentalityTableCellView.prototype.getId = function() {
        return this.id
    }
    ,
    UTMentalityTableCellView.prototype.setMentalityNameById = function(e) {
        this.__name.textContent = services.Localization.localize("tactics.mentality.type." + e)
    }
    ,
    UTMentalityTableCellView.prototype.setBuildUpPlayStyleById = function(e) {
        this.__valueBuildUpPlayStyle.textContent = services.Localization.localize("tactics.mentality.style.buildup." + e)
    }
    ,
    UTMentalityTableCellView.prototype.setChanceCreationStyleById = function(e) {
        this.__valueChanceCreationStyle.textContent = services.Localization.localize("tactics.mentality.style.chancecreation." + e)
    }
    ,
    UTMentalityTableCellView.prototype.setDefensiveStyleById = function(e) {
        this.__valueDefensiveStyle.textContent = services.Localization.localize("tactics.mentality.style.defensive." + e)
    }
    ,
    UTMentalityTableCellView.prototype.setFormationName = function(e) {
        this.__valueFormation.textContent = e
    }
    ,
    UTMentalityTableCellView.prototype._mouseEnter = function(e) {
        i.prototype._mouseEnter.call(this, e),
        this.addClass(enums.UIState.HOVER)
    }
    ,
    UTMentalityTableCellView.prototype._mouseLeave = function(e) {
        i.prototype._mouseLeave.call(this, e),
        this.removeClass(enums.UIState.HOVER)
    }
    ,
    UTMentalityTableCellView.prototype._touchStarted = function(e) {
        i.prototype._touchStarted.call(this, e),
        this.addClass(enums.UIState.ACTIVE)
    }
    ,
    UTMentalityTableCellView.prototype._touchMoved = function(e) {
        i.prototype._touchMoved.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTMentalityTableCellView.prototype._touchEnded = function(e) {
        i.prototype._touchEnded.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTMentalityTableCellView.prototype._tapDetected = function(e) {
        i.prototype._tapDetected.call(this, e),
        this._triggerActions(EventType.TAP)
    }
    ,
    UTMentalityTableCellView
}(UTTargetActionView));
UTMentalityTableCellView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-mentality-table-cell-view"),
        this.__name = document.createElement("h1"),
        this.__name.classList.add("ut-mentality-table-cell-view--name"),
        e.appendChild(this.__name);
        var t = document.createElement("div");
        t.classList.add("ut-mentality-table-cell-view--info");
        var i = document.createElement("div");
        i.classList.add("info-item"),
        this.__titleBuildUpPlayStyle = document.createElement("span"),
        this.__titleBuildUpPlayStyle.classList.add("title"),
        i.appendChild(this.__titleBuildUpPlayStyle),
        this.__valueBuildUpPlayStyle = document.createElement("span"),
        this.__valueBuildUpPlayStyle.classList.add("value"),
        i.appendChild(this.__valueBuildUpPlayStyle),
        t.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("info-item"),
        this.__titleChanceCreationStyle = document.createElement("span"),
        this.__titleChanceCreationStyle.classList.add("title"),
        o.appendChild(this.__titleChanceCreationStyle),
        this.__valueChanceCreationStyle = document.createElement("span"),
        this.__valueChanceCreationStyle.classList.add("value"),
        o.appendChild(this.__valueChanceCreationStyle),
        t.appendChild(o);
        var n = document.createElement("div");
        n.classList.add("info-item"),
        this.__titleFormation = document.createElement("span"),
        this.__titleFormation.classList.add("title"),
        n.appendChild(this.__titleFormation),
        this.__valueFormation = document.createElement("span"),
        this.__valueFormation.classList.add("value"),
        n.appendChild(this.__valueFormation),
        t.appendChild(n);
        var r = document.createElement("div");
        r.classList.add("info-item"),
        this.__titleDefensiveStyle = document.createElement("span"),
        this.__titleDefensiveStyle.classList.add("title"),
        r.appendChild(this.__titleDefensiveStyle),
        this.__valueDefensiveStyle = document.createElement("span"),
        this.__valueDefensiveStyle.classList.add("value"),
        r.appendChild(this.__valueDefensiveStyle),
        t.appendChild(r),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTMentalityTableCellView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__name = null,
    this.__titleBuildUpPlayStyle = null,
    this.__valueBuildUpPlayStyle = null,
    this.__titleChanceCreationStyle = null,
    this.__valueChanceCreationStyle = null,
    this.__titleFormation = null,
    this.__valueFormation = null,
    this.__titleDefensiveStyle = null,
    this.__valueDefensiveStyle = null
}
,
UTMentalityTableCellView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsMentalitySelectView = function(t) {
    function UTTacticsMentalitySelectView() {
        var e = t.call(this) || this;
        return e.mentalityCellViews = [],
        e
    }
    return __extends(UTTacticsMentalitySelectView, t),
    UTTacticsMentalitySelectView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0),
        this._btnExit.init(),
        this._btnExit.addTarget(this, this.onDismissButtonSelected, EventType.TAP),
        this.__title.textContent = services.Localization.localize("tactics.label.changementality")
    }
    ,
    UTTacticsMentalitySelectView.prototype.dealloc = function() {
        this.clearMentalityCells(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTTacticsMentalitySelectView.prototype.clearMentalityCells = function() {
        this.mentalityCellViews.forEach(function(e) {
            return e.dealloc()
        }),
        this.mentalityCellViews = []
    }
    ,
    UTTacticsMentalitySelectView.prototype.generateMentalityCell = function(e) {
        var t, i, o = new UTMentalityTableCellView;
        o.init(),
        o.setId(e.getId()),
        o.setMentalityNameById(e.getId()),
        o.setBuildUpPlayStyleById(e.getBuildUpPlayStyle()),
        o.setChanceCreationStyleById(e.getChanceCreationStyle()),
        o.setDefensiveStyleById(e.getDefensiveStyle()),
        o.setFormationName(null !== (i = null === (t = e.getFormation()) || void 0 === t ? void 0 : t.displayName) && void 0 !== i ? i : ""),
        o.addTarget(this, this.onMentalitySelected, EventType.TAP),
        this.mentalityCellViews.push(o),
        this.addSubview(o, this.__table)
    }
    ,
    UTTacticsMentalitySelectView.prototype.setMentalities = function(e) {
        this.clearMentalityCells(),
        e.forEach(this.generateMentalityCell, this),
        this.layoutSubviews()
    }
    ,
    UTTacticsMentalitySelectView.prototype.setMentalityCellInteractionStateById = function(t, e) {
        var i = JSUtils.find(this.mentalityCellViews, function(e) {
            return e.getId() === t
        });
        null == i || i.setInteractionState(e)
    }
    ,
    UTTacticsMentalitySelectView.prototype.onDismissButtonSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTTacticsMentalitySelectView.Event.DISMISS)
    }
    ,
    UTTacticsMentalitySelectView.prototype.onMentalitySelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTTacticsMentalitySelectView.Event.MENTALITY_SELECTED, {
            id: e.getId()
        })
    }
    ,
    UTTacticsMentalitySelectView.Event = Object.freeze({
        DISMISS: "UTTacticsMentalitySelectView.DISMISS",
        MENTALITY_SELECTED: "UTTacticsMentalitySelectView.MENTALITY_SELECTED"
    }),
    UTTacticsMentalitySelectView
}(UTTargetActionView);
UTTacticsMentalitySelectView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tactics-mentality-select-view");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-tactics-mentality-select-view--title"),
        t.appendChild(this.__title),
        this._btnExit = new UTImageButtonControl,
        this._btnExit.getRootElement().classList.add("exit-btn"),
        t.appendChild(this._btnExit.getRootElement()),
        e.appendChild(t),
        this.__table = document.createElement("div"),
        this.__table.classList.add("ut-tactics-mentality-select-view--table"),
        e.appendChild(this.__table),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTacticsMentalitySelectView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._btnExit.destroy(),
    this.__table = null
}
,
UTTacticsMentalitySelectView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsMentalitySelectViewController = function(i) {
    function UTTacticsMentalitySelectViewController() {
        var e = i.call(this) || this;
        return e.tacticsViewModel = null,
        e
    }
    return __extends(UTTacticsMentalitySelectViewController, i),
    UTTacticsMentalitySelectViewController.prototype.initWithTacticsViewModel = function(e) {
        this.initialized || (this.tacticsViewModel = e,
        this.init())
    }
    ,
    UTTacticsMentalitySelectViewController.prototype.dealloc = function() {
        this.tacticsViewModel = null,
        i.prototype.dealloc.call(this)
    }
    ,
    UTTacticsMentalitySelectViewController.prototype._getViewInstanceFromData = function() {
        return new UTTacticsMentalitySelectView
    }
    ,
    UTTacticsMentalitySelectViewController.prototype.viewDidAppear = function() {
        var e = this.getView();
        if (i.prototype.viewDidAppear.call(this),
        this.tacticsViewModel) {
            var t = this.tacticsViewModel.getSelectedMentality();
            e.setMentalities(this.tacticsViewModel.getMentalities()),
            t && e.setMentalityCellInteractionStateById(t.getId(), !1)
        }
        e.addTarget(this, this.onDismissSelected, UTTacticsMentalitySelectView.Event.DISMISS),
        e.addTarget(this, this.onMentalitySelected, UTTacticsMentalitySelectView.Event.MENTALITY_SELECTED)
    }
    ,
    UTTacticsMentalitySelectViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        i.prototype.viewWillDisappear.call(this),
        e.removeTarget(this, this.onDismissSelected, UTTacticsMentalitySelectView.Event.DISMISS),
        e.removeTarget(this, this.onMentalitySelected, UTTacticsMentalitySelectView.Event.MENTALITY_SELECTED)
    }
    ,
    UTTacticsMentalitySelectViewController.prototype.onDismissSelected = function(e, t, i) {
        var o = this.getParentViewController();
        (null == o ? void 0 : o.getPresentedViewController()) === this && o.dismissViewController(!0)
    }
    ,
    UTTacticsMentalitySelectViewController.prototype.onMentalitySelected = function(e, t, i) {
        var o, n = this.getParentViewController();
        null === (o = this.tacticsViewModel) || void 0 === o || o.setSelectedMentalityById(i.id),
        (null == n ? void 0 : n.getPresentedViewController()) === this && n.dismissViewController(!0)
    }
    ,
    UTTacticsMentalitySelectViewController
}(UTViewController)
  , UTRangeControl = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTRangeControl() {
        return i.call(this) || this
    }
    return __extends(UTRangeControl, i),
    UTRangeControl.prototype.init = function() {
        i.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTRangeControl.prototype.setInteractionState = function(e) {
        var t = this._interactionState;
        i.prototype.setInteractionState.call(this, e),
        this._interactionState !== t && this.toggleClass(enums.UIState.DISABLED, !this._interactionState)
    }
    ,
    UTRangeControl.prototype._startHandlingEvents = function(e) {
        i.prototype._startHandlingEvents.call(this, e),
        this.eventElement && (this._addListener(EventType.CHANGE, this.eventElement, this.handleChangeEvent.bind(this)),
        this._addListener(EventType.INPUT, this.eventElement, this.handleInputEvent.bind(this)))
    }
    ,
    UTRangeControl.prototype.setMin = function(e) {
        var t = this.getRootElement()
          , i = e.toString();
        i !== t.getAttribute("min") && t.setAttribute("min", i)
    }
    ,
    UTRangeControl.prototype.getMin = function() {
        return Number(this.getRootElement().getAttribute("min"))
    }
    ,
    UTRangeControl.prototype.setMax = function(e) {
        var t = this.getRootElement()
          , i = e.toString();
        i !== t.getAttribute("max") && t.setAttribute("max", i)
    }
    ,
    UTRangeControl.prototype.getMax = function() {
        return Number(this.getRootElement().getAttribute("max"))
    }
    ,
    UTRangeControl.prototype.setStep = function(e) {
        var t = this.getRootElement()
          , i = e.toString();
        i !== t.getAttribute("step") && t.setAttribute("step", i)
    }
    ,
    UTRangeControl.prototype.getStep = function() {
        return Number(this.getRootElement().getAttribute("step"))
    }
    ,
    UTRangeControl.prototype.setValue = function(e) {
        this.getRootElement().value = e.toString()
    }
    ,
    UTRangeControl.prototype.getValue = function() {
        return Number(this.getRootElement().value)
    }
    ,
    UTRangeControl.prototype._touchStarted = function(e) {
        i.prototype._touchStarted.call(this, e),
        this.addClass(enums.UIState.ACTIVE)
    }
    ,
    UTRangeControl.prototype._touchEnded = function(e) {
        i.prototype._touchEnded.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTRangeControl.prototype._touchCancelled = function(e) {
        i.prototype._touchCancelled.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTRangeControl.prototype._mouseLeave = function(e) {
        i.prototype._mouseLeave.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTRangeControl.prototype.handleChangeEvent = function(e) {
        this._triggerActions(EventType.CHANGE, {
            value: Number(this.getRootElement().value)
        })
    }
    ,
    UTRangeControl.prototype.handleInputEvent = function(e) {
        this._triggerActions(EventType.INPUT, {
            value: Number(this.getRootElement().value)
        })
    }
    ,
    UTRangeControl
}(UTControl));
UTRangeControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("input");
        e.setAttribute("type", "range"),
        e.classList.add("ut-range-control"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRangeControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTRangeControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsEditRangeControl = function(t) {
    function UTTacticsEditRangeControl() {
        return t.call(this) || this
    }
    return __extends(UTTacticsEditRangeControl, t),
    UTTacticsEditRangeControl.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0),
        this._range.init(),
        this._range.addTarget(this, this.handleRangeEvent, EventType.CHANGE),
        this._range.addTarget(this, this.handleRangeEvent, EventType.INPUT)
    }
    ,
    UTTacticsEditRangeControl.prototype.setInteractionState = function(e) {
        t.prototype.setInteractionState.call(this, e),
        this._range.setInteractionState(e)
    }
    ,
    UTTacticsEditRangeControl.prototype.setMin = function(e) {
        this._range.setMin(e)
    }
    ,
    UTTacticsEditRangeControl.prototype.setMax = function(e) {
        this._range.setMax(e)
    }
    ,
    UTTacticsEditRangeControl.prototype.setStep = function(e) {
        this._range.setStep(e)
    }
    ,
    UTTacticsEditRangeControl.prototype.setValue = function(e) {
        this._range.setValue(e),
        this.paintTrackProgress()
    }
    ,
    UTTacticsEditRangeControl.prototype.paintStepTicks = function() {
        var e = this._range.getMax() / this._range.getStep()
          , t = this._range.getRootElement().offsetWidth
          , i = 14 / t * 100
          , o = 16 / t * 100
          , n = (t - 30) / (e - 1) / t * 100;
        this.__pseudoTrackInner.style.backgroundImage = "repeating-linear-gradient(90deg, transparent, transparent " + i + "%, #262c38 " + i + "%, #262c38 " + o + "%, transparent " + o + "%, transparent " + n + "%)"
    }
    ,
    UTTacticsEditRangeControl.prototype.paintTrackProgress = function() {
        var e = this._range.getValue()
          , t = this._range.getStep()
          , i = this._range.getMax() / t
          , o = this._range.getRootElement().offsetWidth
          , n = (e - t) * ((o - 30) / (i - 1) / o * 100);
        if ("rtl" === getAppRoot().getAttribute("dir")) {
            var r = 100 - n;
            this.__pseudoTrack.style.backgroundImage = "linear-gradient(90deg, #394754 " + r + "%, #1472b9 " + r + "%)"
        } else
            this.__pseudoTrack.style.backgroundImage = "linear-gradient(90deg, #1472b9 " + n + "%, #394754 " + n + "%)"
    }
    ,
    UTTacticsEditRangeControl.prototype.handleRangeEvent = function(e, t, i) {
        this.isInteractionEnabled() && (t === EventType.INPUT && this.paintTrackProgress(),
        this._triggerActions(t, i))
    }
    ,
    UTTacticsEditRangeControl
}(UTTargetActionView);
UTTacticsEditRangeControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tactics-edit-range-control"),
        this.__pseudoTrack = document.createElement("div"),
        this.__pseudoTrack.classList.add("ut-tactics-edit-range-control--track"),
        this.__pseudoTrackInner = document.createElement("div"),
        this.__pseudoTrackInner.classList.add("inner"),
        this.__pseudoTrack.appendChild(this.__pseudoTrackInner),
        this._range = new UTRangeControl,
        this.__pseudoTrack.appendChild(this._range.getRootElement()),
        e.appendChild(this.__pseudoTrack),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTacticsEditRangeControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__pseudoTrack = null,
    this.__pseudoTrackInner = null,
    this._range.destroy()
}
,
UTTacticsEditRangeControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsStyleAdjustmentView = function(t) {
    function UTTacticsStyleAdjustmentView() {
        var e = t.call(this) || this;
        return e.styleDropDown = null,
        e.styleRange = null,
        e.valueLabel = null,
        e
    }
    return __extends(UTTacticsStyleAdjustmentView, t),
    UTTacticsStyleAdjustmentView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTTacticsStyleAdjustmentView.prototype.dealloc = function() {
        this.removeLabel(),
        this.removeRangeControl(),
        this.removeDropDownControl(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTTacticsStyleAdjustmentView.prototype.removeLabel = function() {
        this.valueLabel && (DOMKit.remove(this.valueLabel),
        this.valueLabel = null)
    }
    ,
    UTTacticsStyleAdjustmentView.prototype.removeRangeControl = function() {
        this.styleRange && (this.styleRange.dealloc(),
        this.styleRange = null)
    }
    ,
    UTTacticsStyleAdjustmentView.prototype.removeDropDownControl = function() {
        this.styleDropDown && (this.styleDropDown.dealloc(),
        this.styleDropDown = null)
    }
    ,
    UTTacticsStyleAdjustmentView.prototype.setDescriptionByStyleId = function(e, t) {
        this.__description.textContent = services.Localization.localize("tactics.description.style." + e + "." + t)
    }
    ,
    UTTacticsStyleAdjustmentView.prototype.setStyleOptionById = function(e, t) {
        var i = [];
        e === SquadMentalityStyle.BUILD_UP_PLAY ? i = factories.DataProvider.getTacticBuildUpStyleDP() : e === SquadMentalityStyle.CHANCE_CREATION ? i = factories.DataProvider.getTacticChanceCreationStyleDP() : e === SquadMentalityStyle.DEFENSIVE_STYLE && (i = factories.DataProvider.getTacticDefensiveStyleDP()),
        0 < i.length && (this.removeRangeControl(),
        this.styleDropDown || (this.styleDropDown = new UTDropDownControl,
        this.styleDropDown.init(),
        this.styleDropDown.addTarget(this, this.onDropDownControlChange, EventType.CHANGE),
        this.addSubview(this.styleDropDown, this.__pitchControls),
        this.layoutSubviews()),
        this.styleDropDown.setOptions(i),
        this.styleDropDown.setDefaultIndexByValue(t, !0))
    }
    ,
    UTTacticsStyleAdjustmentView.prototype.setStyleRange = function(e, t, i, o, n) {
        void 0 === n && (n = {
            showLabel: !1,
            showSections: !0
        }),
        this.removeDropDownControl(),
        n.showLabel && this.setValueLabel(o),
        this.styleRange || (this.styleRange = new UTTacticsEditRangeControl,
        this.styleRange.init(),
        this.styleRange.addTarget(this, this.onRangeControlChange, EventType.INPUT),
        this.addSubview(this.styleRange, this.__pitchControls),
        this.layoutSubviews()),
        this.styleRange.setMin(e),
        this.styleRange.setMax(t),
        this.styleRange.setStep(i),
        this.styleRange.setValue(o),
        n.showSections && this.styleRange.paintStepTicks()
    }
    ,
    UTTacticsStyleAdjustmentView.prototype.setValueLabel = function(e) {
        this.valueLabel || (this.valueLabel = document.createElement("span"),
        this.__pitchControls.prepend(this.valueLabel),
        DOMKit.addClass(this.valueLabel, "ut-tactics-style-adjustment-view--label")),
        this.valueLabel.textContent = e.toString()
    }
    ,
    UTTacticsStyleAdjustmentView.prototype.setStyleImage = function(e) {
        this._imgPitch.setLocalResource(e)
    }
    ,
    UTTacticsStyleAdjustmentView.prototype.onRangeControlChange = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTTacticsStyleAdjustmentView.Event.RANGE_CHANGED, {
            value: i.value
        })
    }
    ,
    UTTacticsStyleAdjustmentView.prototype.onDropDownControlChange = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTTacticsStyleAdjustmentView.Event.DROP_DOWN_CHANGED, i)
    }
    ,
    UTTacticsStyleAdjustmentView.Event = Object.freeze({
        DROP_DOWN_CHANGED: "UTTacticsStyleAdjustmentView.DROP_DOWN_CHANGED",
        RANGE_CHANGED: "UTTacticsStyleAdjustmentView.RANGE_CHANGED"
    }),
    UTTacticsStyleAdjustmentView
}(UTTargetActionView);
UTTacticsStyleAdjustmentView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tactics-style-adjustment-view"),
        this.__adjustmentArea = document.createElement("div"),
        this.__adjustmentArea.classList.add("ut-tactics-style-adjustment-view--pitch-container");
        var t = document.createElement("div");
        t.classList.add("ut-tactics-style-adjustment-view--pitch-images"),
        this._imgPitch = new UTImageView,
        this._imgPitch.getRootElement().classList.add("pitch"),
        t.appendChild(this._imgPitch.getRootElement()),
        this.__adjustmentArea.appendChild(t),
        this.__pitchControls = document.createElement("div"),
        this.__pitchControls.classList.add("ut-tactics-style-adjustment-view--pitch-controls"),
        this.__adjustmentArea.appendChild(this.__pitchControls),
        e.appendChild(this.__adjustmentArea),
        this.__description = document.createElement("p"),
        this.__description.classList.add("ut-tactics-style-adjustment-view--description"),
        e.appendChild(this.__description),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTacticsStyleAdjustmentView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__adjustmentArea = null,
    this._imgPitch.destroy(),
    this.__pitchControls = null,
    this.__description = null
}
,
UTTacticsStyleAdjustmentView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsStyleAdjustmentViewController = function(t) {
    function UTTacticsStyleAdjustmentViewController() {
        var e = t.call(this) || this;
        return e.tacticsViewModel = null,
        e
    }
    return __extends(UTTacticsStyleAdjustmentViewController, t),
    UTTacticsStyleAdjustmentViewController.prototype.initWithTacticsViewModel = function(e) {
        DebugUtils.Assert(!this.initialized, "Attempted to re-initialise the view controller."),
        this.initialized || (this.tacticsViewModel = e,
        this.init())
    }
    ,
    UTTacticsStyleAdjustmentViewController.prototype.dealloc = function() {
        this.tacticsViewModel = null,
        t.prototype.dealloc.call(this)
    }
    ,
    UTTacticsStyleAdjustmentViewController.prototype._getViewInstanceFromData = function() {
        return new UTTacticsStyleAdjustmentView
    }
    ,
    UTTacticsStyleAdjustmentViewController.prototype.getNavigationTitle = function() {
        var e = this.tacticsViewModel ? "tactics.mentality.style." + this.tacticsViewModel.getSelectedStyleId() : "tactics.label.styles";
        return services.Localization.localize(e)
    }
    ,
    UTTacticsStyleAdjustmentViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this.tacticsViewModel && this.setStyleById(this.tacticsViewModel.getSelectedStyleId());
        var e = this.getView();
        e.addTarget(this, this.onStyleValueChanged, UTTacticsStyleAdjustmentView.Event.RANGE_CHANGED),
        e.addTarget(this, this.onStyleValueChanged, UTTacticsStyleAdjustmentView.Event.DROP_DOWN_CHANGED)
    }
    ,
    UTTacticsStyleAdjustmentViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this.onStyleValueChanged, UTTacticsStyleAdjustmentView.Event.RANGE_CHANGED),
        e.removeTarget(this, this.onStyleValueChanged, UTTacticsStyleAdjustmentView.Event.DROP_DOWN_CHANGED)
    }
    ,
    UTTacticsStyleAdjustmentViewController.prototype.getDescriptionVariant = function(e, t) {
        if (100 <= t) {
            if (80 <= e)
                return 2;
            if (40 <= e)
                return 1
        } else if (10 <= t) {
            if (8 <= e)
                return 2;
            if (4 <= e)
                return 1
        } else if (5 <= t) {
            if (4 <= e)
                return 2;
            if (3 === e)
                return 1
        }
        return 0
    }
    ,
    UTTacticsStyleAdjustmentViewController.prototype.generateImageUri = function(e, t) {
        var i = Math.ceil(t / 10) - 1;
        switch (e) {
        case SquadMentalityStyle.BUILD_UP_PLAY:
            return "images/tactics/Tactic00" + t + ".gif";
        case SquadMentalityStyle.CHANCE_CREATION:
            return "images/tactics/Tactic03" + t + ".gif";
        case SquadMentalityStyle.OFFENSIVE_WIDTH:
            return "images/tactics/Tactic01" + i + ".gif";
        case SquadMentalityStyle.OFFENSIVE_PLAYERS_IN_BOX:
            return "images/tactics/Tactic02" + (t - 1) + ".gif";
        case SquadMentalityStyle.DEFENSIVE_STYLE:
            return "images/tactics/Tactic10" + t + ".gif";
        case SquadMentalityStyle.DEFENSIVE_WIDTH:
            return "images/tactics/Tactic11" + i + ".gif";
        case SquadMentalityStyle.DEFENSIVE_DEPTH:
            return "images/tactics/Tactic12" + i + ".gif";
        case SquadMentalityStyle.CORNER_PLAYERS_IN_BOX:
            return "images/tactics/Tactic20" + (t - 1) + ".gif";
        case SquadMentalityStyle.FREE_KICK_PLAYERS_IN_BOX:
            return "images/tactics/Tactic21" + (t - 1) + ".gif";
        default:
            return "images/transparent.png"
        }
    }
    ,
    UTTacticsStyleAdjustmentViewController.prototype.setStyleById = function(e) {
        var t, i = this.getView(), o = null === (t = this.tacticsViewModel) || void 0 === t ? void 0 : t.getSelectedMentality();
        if (o)
            switch (e) {
            case SquadMentalityStyle.BUILD_UP_PLAY:
                var n = o.getBuildUpPlayStyle();
                i.setStyleOptionById(e, n),
                i.setDescriptionByStyleId(e, n),
                i.setStyleImage(this.generateImageUri(e, n));
                break;
            case SquadMentalityStyle.CHANCE_CREATION:
                var r = o.getChanceCreationStyle();
                i.setStyleOptionById(e, r),
                i.setDescriptionByStyleId(e, r),
                i.setStyleImage(this.generateImageUri(e, r));
                break;
            case SquadMentalityStyle.DEFENSIVE_STYLE:
                var s = o.getDefensiveStyle();
                i.setStyleOptionById(e, s),
                i.setDescriptionByStyleId(e, s),
                i.setStyleImage(this.generateImageUri(e, s));
                break;
            case SquadMentalityStyle.OFFENSIVE_WIDTH:
                var a = o.getOffensiveWidth();
                i.setStyleRange(UTSquadMentalityEntity.MIN_OFFENSIVE_WIDTH, UTSquadMentalityEntity.MAX_OFFENSIVE_WIDTH, 1, a, {
                    showLabel: !0,
                    showSections: !1
                }),
                i.setDescriptionByStyleId(e, this.getDescriptionVariant(a, UTSquadMentalityEntity.MAX_OFFENSIVE_WIDTH)),
                i.setStyleImage(this.generateImageUri(e, a));
                break;
            case SquadMentalityStyle.OFFENSIVE_PLAYERS_IN_BOX:
                var l = o.getOffensivePlayersInBox();
                i.setStyleRange(UTSquadMentalityEntity.MIN_OFFENSIVE_PLAYERS_IN_BOX, UTSquadMentalityEntity.MAX_OFFENSIVE_PLAYERS_IN_BOX, 1, l),
                i.setDescriptionByStyleId(e, this.getDescriptionVariant(l, UTSquadMentalityEntity.MAX_OFFENSIVE_PLAYERS_IN_BOX)),
                i.setStyleImage(this.generateImageUri(e, l));
                break;
            case SquadMentalityStyle.CORNER_PLAYERS_IN_BOX:
                var c = o.getCornerPlayersInBox();
                i.setStyleRange(UTSquadMentalityEntity.MIN_CORNER_PLAYERS_IN_BOX, UTSquadMentalityEntity.MAX_CORNER_PLAYERS_IN_BOX, 1, c),
                i.setDescriptionByStyleId(e, this.getDescriptionVariant(c, UTSquadMentalityEntity.MAX_CORNER_PLAYERS_IN_BOX)),
                i.setStyleImage(this.generateImageUri(e, c));
                break;
            case SquadMentalityStyle.FREE_KICK_PLAYERS_IN_BOX:
                var d = o.getFreeKickPlayersInBox();
                i.setStyleRange(UTSquadMentalityEntity.MIN_FREEKICK_PLAYERS_IN_BOX, UTSquadMentalityEntity.MAX_FREEKICK_PLAYERS_IN_BOX, 1, d),
                i.setDescriptionByStyleId(e, this.getDescriptionVariant(d, UTSquadMentalityEntity.MAX_FREEKICK_PLAYERS_IN_BOX)),
                i.setStyleImage(this.generateImageUri(e, d));
                break;
            case SquadMentalityStyle.DEFENSIVE_WIDTH:
                var u = o.getDefensiveWidth();
                i.setStyleRange(UTSquadMentalityEntity.MIN_DEFENSIVE_WIDTH, UTSquadMentalityEntity.MAX_DEFENSIVE_WIDTH, 1, u, {
                    showLabel: !0,
                    showSections: !1
                }),
                i.setDescriptionByStyleId(e, this.getDescriptionVariant(u, UTSquadMentalityEntity.MAX_DEFENSIVE_WIDTH)),
                i.setStyleImage(this.generateImageUri(e, u));
                break;
            case SquadMentalityStyle.DEFENSIVE_DEPTH:
                var h = o.getDefensiveDepth();
                i.setStyleRange(UTSquadMentalityEntity.MIN_DEFENSIVE_DEPTH, UTSquadMentalityEntity.MAX_DEFENSIVE_DEPTH, 1, h, {
                    showLabel: !0,
                    showSections: !1
                }),
                i.setDescriptionByStyleId(e, this.getDescriptionVariant(h, UTSquadMentalityEntity.MAX_DEFENSIVE_DEPTH)),
                i.setStyleImage(this.generateImageUri(e, h))
            }
    }
    ,
    UTTacticsStyleAdjustmentViewController.prototype.onStyleValueChanged = function(e, t, i) {
        if (DebugUtils.Assert(JSUtils.isValid(this.tacticsViewModel), "Missing tactics view model when changing style value"),
        this.tacticsViewModel) {
            var o = this.tacticsViewModel.getSelectedMentality()
              , n = this.tacticsViewModel.getSelectedStyleId()
              , r = e
              , s = Number(i.value);
            if (DebugUtils.Assert(JSUtils.isValid(o), "Missing mentality entity when changing style value"),
            DebugUtils.Assert(!isNaN(s), "Expected a valid number value after conversion"),
            isNaN(s))
                return;
            switch (n) {
            case SquadMentalityStyle.BUILD_UP_PLAY:
                null == o || o.setBuildUpPlayStyle(s),
                r.setDescriptionByStyleId(n, s);
                break;
            case SquadMentalityStyle.CHANCE_CREATION:
                null == o || o.setChanceCreationStyle(s),
                r.setDescriptionByStyleId(n, s);
                break;
            case SquadMentalityStyle.DEFENSIVE_STYLE:
                null == o || o.setDefensiveStyle(s),
                r.setDescriptionByStyleId(n, s);
                break;
            case SquadMentalityStyle.OFFENSIVE_WIDTH:
                null == o || o.setOffensiveWidth(s),
                r.setDescriptionByStyleId(n, this.getDescriptionVariant(s, UTSquadMentalityEntity.MAX_OFFENSIVE_WIDTH)),
                r.setValueLabel(s);
                break;
            case SquadMentalityStyle.OFFENSIVE_PLAYERS_IN_BOX:
                null == o || o.setOffensivePlayersInBox(s),
                r.setDescriptionByStyleId(n, this.getDescriptionVariant(s, UTSquadMentalityEntity.MAX_OFFENSIVE_PLAYERS_IN_BOX));
                break;
            case SquadMentalityStyle.CORNER_PLAYERS_IN_BOX:
                null == o || o.setCornerPlayersInBox(s),
                r.setDescriptionByStyleId(n, this.getDescriptionVariant(s, UTSquadMentalityEntity.MAX_CORNER_PLAYERS_IN_BOX));
                break;
            case SquadMentalityStyle.FREE_KICK_PLAYERS_IN_BOX:
                null == o || o.setFreeKickPlayersInBox(s),
                r.setDescriptionByStyleId(n, this.getDescriptionVariant(s, UTSquadMentalityEntity.MAX_FREEKICK_PLAYERS_IN_BOX));
                break;
            case SquadMentalityStyle.DEFENSIVE_WIDTH:
                null == o || o.setDefensiveWidth(s),
                r.setDescriptionByStyleId(n, this.getDescriptionVariant(s, UTSquadMentalityEntity.MAX_DEFENSIVE_WIDTH)),
                r.setValueLabel(s);
                break;
            case SquadMentalityStyle.DEFENSIVE_DEPTH:
                null == o || o.setDefensiveDepth(s),
                r.setDescriptionByStyleId(n, this.getDescriptionVariant(s, UTSquadMentalityEntity.MAX_DEFENSIVE_DEPTH)),
                r.setValueLabel(s)
            }
            r.setStyleImage(this.generateImageUri(n, s))
        }
    }
    ,
    UTTacticsStyleAdjustmentViewController
}(UTViewController)
  , UTTacticsStyleBarView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTTacticsStyleBarView() {
        var e = t.call(this) || this;
        return e.sections = [],
        e
    }
    return __extends(UTTacticsStyleBarView, t),
    UTTacticsStyleBarView.prototype.setStyle = function(e) {
        this.removeClass(JSUtils.getObjectValues(UTTacticsStyleBarView.Style).join(" ")),
        this.addClass(e)
    }
    ,
    UTTacticsStyleBarView.prototype.clearSections = function() {
        this.sections.forEach(function(e) {
            return DOMKit.remove(e)
        }),
        this.sections = []
    }
    ,
    UTTacticsStyleBarView.prototype.generateSection = function() {
        var e = document.createElement("div");
        DOMKit.addClass(e, "ut-tactics-style-bar-view--section"),
        this.sections.push(e),
        this.getRootElement().appendChild(e)
    }
    ,
    UTTacticsStyleBarView.prototype.setSectionCount = function(e, t) {
        this.clearSections(),
        this.setStyle(t ? UTTacticsStyleBarView.Style.SHOW_SECTIONS : UTTacticsStyleBarView.Style.HIDE_SECTIONS);
        for (var i = 0; i < e; i++)
            this.generateSection()
    }
    ,
    UTTacticsStyleBarView.prototype.setNumFilledSections = function(i) {
        this.sections.forEach(function(e, t) {
            return DOMKit.toggleClass(e, "filled", t < i)
        })
    }
    ,
    UTTacticsStyleBarView.Style = Object.freeze({
        SHOW_SECTIONS: "show-sections",
        HIDE_SECTIONS: "hide-sections"
    }),
    UTTacticsStyleBarView
}(UTView));
UTTacticsStyleBarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tactics-style-bar-view"),
        this.__label = document.createElement("span"),
        this.__label.classList.add("label"),
        e.appendChild(this.__label),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTacticsStyleBarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__label = null
}
,
UTTacticsStyleBarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticStyleTableCellView = function(i) {
    function UTTacticStyleTableCellView() {
        var e = i.call(this) || this;
        return e.id = -1,
        e.styleBar = null,
        e.valueLabel = null,
        e
    }
    return __extends(UTTacticStyleTableCellView, i),
    UTTacticStyleTableCellView.prototype.init = function() {
        i.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTTacticStyleTableCellView.prototype.dealloc = function() {
        this.styleBar && (this.styleBar.dealloc(),
        this.styleBar = null),
        this.valueLabel && (DOMKit.remove(this.valueLabel),
        this.valueLabel = null),
        i.prototype.dealloc.call(this)
    }
    ,
    UTTacticStyleTableCellView.prototype.setInteractionState = function(e) {
        var t = this._interactionState;
        i.prototype.setInteractionState.call(this, e),
        this._interactionState !== t && this.toggleClass(enums.UIState.DISABLED, !this._interactionState)
    }
    ,
    UTTacticStyleTableCellView.prototype.setId = function(e) {
        this.id = e
    }
    ,
    UTTacticStyleTableCellView.prototype.getId = function() {
        return this.id
    }
    ,
    UTTacticStyleTableCellView.prototype.setLabelByStyleId = function(e) {
        this.__label.textContent = services.Localization.localize("tactics.mentality.style." + e)
    }
    ,
    UTTacticStyleTableCellView.prototype.setLevel = function(e, t, i) {
        void 0 === i && (i = {
            showLabel: !1,
            showSections: !0
        }),
        !i.showLabel && this.valueLabel ? (DOMKit.remove(this.valueLabel),
        this.valueLabel = null) : i.showLabel && this.setDimension(e, t),
        this.styleBar || (this.styleBar = new UTTacticsStyleBarView,
        this.styleBar.init(),
        this.addSubview(this.styleBar),
        this.layoutSubviews()),
        this.styleBar.setSectionCount(t, i.showSections),
        this.styleBar.setNumFilledSections(e)
    }
    ,
    UTTacticStyleTableCellView.prototype.setDimension = function(e, t) {
        this.valueLabel || (this.valueLabel = document.createElement("span"),
        this.getRootElement().appendChild(this.valueLabel)),
        DOMKit.addClass(this.valueLabel, "ut-tactic-style-table-cell-view--value"),
        this.valueLabel.textContent = e.toString()
    }
    ,
    UTTacticStyleTableCellView.prototype.setStyleValue = function(e, t) {
        var i;
        this.styleBar || (this.valueLabel || (this.valueLabel = document.createElement("p"),
        this.getRootElement().appendChild(this.valueLabel),
        DOMKit.addClass(this.valueLabel, "textField")),
        i = e === SquadMentalityStyle.BUILD_UP_PLAY ? "buildup" : e === SquadMentalityStyle.CHANCE_CREATION ? "chancecreation" : "defensive",
        this.valueLabel.textContent = services.Localization.localize("tactics.mentality.style." + i + "." + t))
    }
    ,
    UTTacticStyleTableCellView.prototype._mouseEnter = function(e) {
        this.addClass(enums.UIState.HOVER)
    }
    ,
    UTTacticStyleTableCellView.prototype._mouseLeave = function(e) {
        this.removeClass(enums.UIState.HOVER)
    }
    ,
    UTTacticStyleTableCellView.prototype._touchStarted = function(e) {
        i.prototype._touchStarted.call(this, e),
        this.addClass(enums.UIState.ACTIVE)
    }
    ,
    UTTacticStyleTableCellView.prototype._touchMoved = function(e) {
        i.prototype._touchMoved.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTTacticStyleTableCellView.prototype._touchEnded = function(e) {
        i.prototype._touchEnded.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTTacticStyleTableCellView.prototype._tapDetected = function(e) {
        i.prototype._tapDetected.call(this, e),
        this._triggerActions(EventType.TAP)
    }
    ,
    UTTacticStyleTableCellView
}(UTTargetActionView);
UTTacticStyleTableCellView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tactic-style-table-cell-view"),
        this.__label = document.createElement("span"),
        this.__label.classList.add("ut-tactic-style-table-cell-view--label"),
        e.appendChild(this.__label),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTacticStyleTableCellView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__label = null
}
,
UTTacticStyleTableCellView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsStyleMenuView = function(t) {
    function UTTacticsStyleMenuView() {
        return t.call(this) || this
    }
    return __extends(UTTacticsStyleMenuView, t),
    UTTacticsStyleMenuView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0);
        var e = services.Localization;
        this._btnSave.init(),
        this._btnSave.setText(e.localize("tactics.label.save")),
        isPhone() ? this._btnSave.addTarget(this, this.onSaveButtonSelected, EventType.TAP) : this._btnSave.hide(),
        this.__titleOffense.textContent = e.localize("tactics.label.offense"),
        this.__titleDefense.textContent = e.localize("tactics.label.defense"),
        this._buildUpPlayStyle.init(),
        this._buildUpPlayStyle.setId(SquadMentalityStyle.BUILD_UP_PLAY),
        this._buildUpPlayStyle.setLabelByStyleId(SquadMentalityStyle.BUILD_UP_PLAY),
        this._buildUpPlayStyle.addTarget(this, this.onCellSelected, EventType.TAP),
        this._chanceCreationStyle.init(),
        this._chanceCreationStyle.setId(SquadMentalityStyle.CHANCE_CREATION),
        this._chanceCreationStyle.setLabelByStyleId(SquadMentalityStyle.CHANCE_CREATION),
        this._chanceCreationStyle.addTarget(this, this.onCellSelected, EventType.TAP),
        this._offensiveWidth.init(),
        this._offensiveWidth.setId(SquadMentalityStyle.OFFENSIVE_WIDTH),
        this._offensiveWidth.setLabelByStyleId(SquadMentalityStyle.OFFENSIVE_WIDTH),
        this._offensiveWidth.addTarget(this, this.onCellSelected, EventType.TAP),
        this._offensivePlayersInBox.init(),
        this._offensivePlayersInBox.setId(SquadMentalityStyle.OFFENSIVE_PLAYERS_IN_BOX),
        this._offensivePlayersInBox.setLabelByStyleId(SquadMentalityStyle.OFFENSIVE_PLAYERS_IN_BOX),
        this._offensivePlayersInBox.addTarget(this, this.onCellSelected, EventType.TAP),
        this._offensiveCorners.init(),
        this._offensiveCorners.setId(SquadMentalityStyle.CORNER_PLAYERS_IN_BOX),
        this._offensiveCorners.setLabelByStyleId(SquadMentalityStyle.CORNER_PLAYERS_IN_BOX),
        this._offensiveCorners.addTarget(this, this.onCellSelected, EventType.TAP),
        this._offensiveFreeKicks.init(),
        this._offensiveFreeKicks.setId(SquadMentalityStyle.FREE_KICK_PLAYERS_IN_BOX),
        this._offensiveFreeKicks.setLabelByStyleId(SquadMentalityStyle.FREE_KICK_PLAYERS_IN_BOX),
        this._offensiveFreeKicks.addTarget(this, this.onCellSelected, EventType.TAP),
        this._defensiveStyle.init(),
        this._defensiveStyle.setId(SquadMentalityStyle.DEFENSIVE_STYLE),
        this._defensiveStyle.setLabelByStyleId(SquadMentalityStyle.DEFENSIVE_STYLE),
        this._defensiveStyle.addTarget(this, this.onCellSelected, EventType.TAP),
        this._defensiveWidth.init(),
        this._defensiveWidth.setId(SquadMentalityStyle.DEFENSIVE_WIDTH),
        this._defensiveWidth.setLabelByStyleId(SquadMentalityStyle.DEFENSIVE_WIDTH),
        this._defensiveWidth.addTarget(this, this.onCellSelected, EventType.TAP),
        this._defensiveDepth.init(),
        this._defensiveDepth.setId(SquadMentalityStyle.DEFENSIVE_DEPTH),
        this._defensiveDepth.setLabelByStyleId(SquadMentalityStyle.DEFENSIVE_DEPTH),
        this._defensiveDepth.addTarget(this, this.onCellSelected, EventType.TAP)
    }
    ,
    UTTacticsStyleMenuView.prototype.setSaveButtonInteractionState = function(e) {
        this._btnSave.setInteractionState(e)
    }
    ,
    UTTacticsStyleMenuView.prototype.setBuildUpPlayStyle = function(e) {
        this._buildUpPlayStyle.setStyleValue(SquadMentalityStyle.BUILD_UP_PLAY, e)
    }
    ,
    UTTacticsStyleMenuView.prototype.setChanceCreationStyle = function(e) {
        this._chanceCreationStyle.setStyleValue(SquadMentalityStyle.CHANCE_CREATION, e)
    }
    ,
    UTTacticsStyleMenuView.prototype.setOffensiveWidth = function(e, t) {
        this._offensiveWidth.setLevel(e, t, {
            showLabel: !0,
            showSections: !1
        })
    }
    ,
    UTTacticsStyleMenuView.prototype.setOffensivePlayersInBox = function(e, t) {
        this._offensivePlayersInBox.setLevel(e, t)
    }
    ,
    UTTacticsStyleMenuView.prototype.setOffensiveCorners = function(e, t) {
        this._offensiveCorners.setLevel(e, t)
    }
    ,
    UTTacticsStyleMenuView.prototype.setOffensiveFreeKicks = function(e, t) {
        this._offensiveFreeKicks.setLevel(e, t)
    }
    ,
    UTTacticsStyleMenuView.prototype.setDefensiveStyle = function(e) {
        this._defensiveStyle.setStyleValue(SquadMentalityStyle.DEFENSIVE_STYLE, e)
    }
    ,
    UTTacticsStyleMenuView.prototype.setDefensiveWidth = function(e, t) {
        this._defensiveWidth.setLevel(e, t, {
            showLabel: !0,
            showSections: !1
        })
    }
    ,
    UTTacticsStyleMenuView.prototype.setDefensiveDepth = function(e, t) {
        this._defensiveDepth.setLevel(e, t, {
            showLabel: !0,
            showSections: !1
        })
    }
    ,
    UTTacticsStyleMenuView.prototype.onSaveButtonSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTTacticsStyleMenuView.Event.SAVE_MENTALITY)
    }
    ,
    UTTacticsStyleMenuView.prototype.onCellSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTTacticsStyleMenuView.Event.SELECT_STYLE, {
            id: e.getId()
        })
    }
    ,
    UTTacticsStyleMenuView.Event = Object.freeze({
        SAVE_MENTALITY: "UTTacticsStyleMenuView.Event.SAVE_MENTALITY",
        SELECT_STYLE: "UTTacticsStyleMenuView.Event.SELECT_STYLE"
    }),
    UTTacticsStyleMenuView
}(UTTargetActionView);
UTTacticsStyleMenuView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tactics-style-menu-view");
        var t = document.createElement("header");
        t.classList.add("ut-tactics-style-menu-view--header"),
        this.__titleDefense = document.createElement("h1"),
        this.__titleDefense.classList.add("ut-tactics-style-menu-view--title"),
        t.appendChild(this.__titleDefense),
        this._btnSave = new UTStandardButtonControl,
        this._btnSave.getRootElement().classList.add("mini"),
        this._btnSave.getRootElement().classList.add("call-to-action"),
        t.appendChild(this._btnSave.getRootElement()),
        e.appendChild(t),
        this.__tableDefense = document.createElement("div"),
        this.__tableDefense.classList.add("ut-tactics-style-menu-view--table"),
        this._defensiveStyle = new UTTacticStyleTableCellView,
        this.__tableDefense.appendChild(this._defensiveStyle.getRootElement()),
        this._defensiveWidth = new UTTacticStyleTableCellView,
        this.__tableDefense.appendChild(this._defensiveWidth.getRootElement()),
        this._defensiveDepth = new UTTacticStyleTableCellView,
        this.__tableDefense.appendChild(this._defensiveDepth.getRootElement()),
        e.appendChild(this.__tableDefense);
        var i = document.createElement("header");
        i.classList.add("ut-tactics-style-menu-view--header"),
        this.__titleOffense = document.createElement("h1"),
        this.__titleOffense.classList.add("ut-tactics-style-menu-view--title"),
        i.appendChild(this.__titleOffense),
        e.appendChild(i),
        this.__tableOffense = document.createElement("div"),
        this.__tableOffense.classList.add("ut-tactics-style-menu-view--table"),
        this._buildUpPlayStyle = new UTTacticStyleTableCellView,
        this.__tableOffense.appendChild(this._buildUpPlayStyle.getRootElement()),
        this._chanceCreationStyle = new UTTacticStyleTableCellView,
        this.__tableOffense.appendChild(this._chanceCreationStyle.getRootElement()),
        this._offensiveWidth = new UTTacticStyleTableCellView,
        this.__tableOffense.appendChild(this._offensiveWidth.getRootElement()),
        this._offensivePlayersInBox = new UTTacticStyleTableCellView,
        this.__tableOffense.appendChild(this._offensivePlayersInBox.getRootElement()),
        this._offensiveCorners = new UTTacticStyleTableCellView,
        this.__tableOffense.appendChild(this._offensiveCorners.getRootElement()),
        this._offensiveFreeKicks = new UTTacticStyleTableCellView,
        this.__tableOffense.appendChild(this._offensiveFreeKicks.getRootElement()),
        e.appendChild(this.__tableOffense),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTacticsStyleMenuView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__titleDefense = null,
    this._btnSave.destroy(),
    this.__tableDefense = null,
    this._defensiveStyle.destroy(),
    this._defensiveWidth.destroy(),
    this._defensiveDepth.destroy(),
    this.__titleOffense = null,
    this.__tableOffense = null,
    this._buildUpPlayStyle.destroy(),
    this._chanceCreationStyle.destroy(),
    this._offensiveWidth.destroy(),
    this._offensivePlayersInBox.destroy(),
    this._offensiveCorners.destroy(),
    this._offensiveFreeKicks.destroy()
}
,
UTTacticsStyleMenuView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsStyleMenuViewController = function(o) {
    function UTTacticsStyleMenuViewController() {
        var e = o.call(this) || this;
        return e.tacticsViewModel = null,
        e
    }
    return __extends(UTTacticsStyleMenuViewController, o),
    UTTacticsStyleMenuViewController.prototype.initWithTacticsViewModel = function(e) {
        DebugUtils.Assert(!this.initialized, "Attempted to re-initialise the view controller."),
        this.initialized || (this.tacticsViewModel = e,
        this.init())
    }
    ,
    UTTacticsStyleMenuViewController.prototype.dealloc = function() {
        this.tacticsViewModel = null,
        o.prototype.dealloc.call(this)
    }
    ,
    UTTacticsStyleMenuViewController.prototype._getViewInstanceFromData = function() {
        return new UTTacticsStyleMenuView
    }
    ,
    UTTacticsStyleMenuViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("tactics.label.styles")
    }
    ,
    UTTacticsStyleMenuViewController.prototype.viewDidAppear = function() {
        o.prototype.viewDidAppear.call(this);
        var e = this.getNavigationController();
        if (e && (e.setNavigationVisibility(!0, !1),
        isPhone() || e.setNavigationStyle(UTNavigationBarView.Style.SECONDARY)),
        this.tacticsViewModel) {
            var t = this.tacticsViewModel.getSelectedMentality();
            t && this.setDisplayedMentality(t),
            this.tacticsViewModel.onDataUpdated.observe(this, this.onTacticsViewModelUpdated)
        }
        var i = this.getView();
        i.addTarget(this, this.onStyleSelected, UTTacticsStyleMenuView.Event.SELECT_STYLE),
        i.addTarget(this, this.onSaveMentalitySelected, UTTacticsStyleMenuView.Event.SAVE_MENTALITY)
    }
    ,
    UTTacticsStyleMenuViewController.prototype.viewWillDisappear = function() {
        o.prototype.viewWillDisappear.call(this),
        this.tacticsViewModel && this.tacticsViewModel.onDataUpdated.unobserve(this);
        var e = this.getView();
        e.removeTarget(this, this.onStyleSelected, UTTacticsStyleMenuView.Event.SELECT_STYLE),
        e.removeTarget(this, this.onSaveMentalitySelected, UTTacticsStyleMenuView.Event.SAVE_MENTALITY)
    }
    ,
    UTTacticsStyleMenuViewController.prototype.setDisplayedMentality = function(e) {
        var t, i, o, n = this.getView();
        n.setBuildUpPlayStyle(e.getBuildUpPlayStyle()),
        n.setChanceCreationStyle(e.getChanceCreationStyle()),
        n.setOffensiveWidth(e.getOffensiveWidth(), UTSquadMentalityEntity.MAX_OFFENSIVE_WIDTH),
        n.setOffensivePlayersInBox(e.getOffensivePlayersInBox(), UTSquadMentalityEntity.MAX_OFFENSIVE_PLAYERS_IN_BOX),
        n.setOffensiveCorners(e.getCornerPlayersInBox(), UTSquadMentalityEntity.MAX_CORNER_PLAYERS_IN_BOX),
        n.setOffensiveFreeKicks(e.getFreeKickPlayersInBox(), UTSquadMentalityEntity.MAX_FREEKICK_PLAYERS_IN_BOX),
        n.setDefensiveStyle(e.getDefensiveStyle()),
        n.setDefensiveWidth(e.getDefensiveWidth(), UTSquadMentalityEntity.MAX_DEFENSIVE_WIDTH),
        n.setDefensiveDepth(e.getDefensiveDepth(), UTSquadMentalityEntity.MAX_DEFENSIVE_DEPTH),
        n.setSaveButtonInteractionState(null !== (o = null === (i = null === (t = this.tacticsViewModel) || void 0 === t ? void 0 : t.getSquad()) || void 0 === i ? void 0 : i.hasModifiedTactics()) && void 0 !== o && o)
    }
    ,
    UTTacticsStyleMenuViewController.prototype.onStyleSelected = function(e, t, i) {
        if (DebugUtils.Assert(JSUtils.isValid(this.tacticsViewModel), "Missing tactics view model. Unable to load tactic."),
        this.tacticsViewModel) {
            var o = this.getNavigationController();
            if (JSUtils.isNumber(i.id) && this.tacticsViewModel.setSelectedStyleId(i.id),
            o) {
                var n = new UTTacticsStyleAdjustmentViewController;
                n.initWithTacticsViewModel(this.tacticsViewModel),
                o.pushViewController(n)
            }
        }
    }
    ,
    UTTacticsStyleMenuViewController.prototype.onSaveMentalitySelected = function(e, t, i) {
        var o = this;
        DebugUtils.Assert(JSUtils.isValid(this.tacticsViewModel), "Missing tactics view model. Unable to save mentality."),
        this.tacticsViewModel && this.tacticsViewModel.saveModifiedMentalities().observe(this, function(e, t) {
            e.unobserve(o),
            o.getView().setSaveButtonInteractionState(!t.success)
        })
    }
    ,
    UTTacticsStyleMenuViewController.prototype.onTacticsViewModelUpdated = function(e, t) {
        JSUtils.isObject(t) && t.selectedMentality && this.setDisplayedMentality(t.selectedMentality)
    }
    ,
    UTTacticsStyleMenuViewController
}(UTViewController)
  , UTTacticsMentalityMenuView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTTacticsMentalityMenuView() {
        return t.call(this) || this
    }
    return __extends(UTTacticsMentalityMenuView, t),
    UTTacticsMentalityMenuView.prototype.init = function() {
        var e = services.Localization;
        t.prototype.init.call(this),
        this.setInteractionState(!0),
        this._btnSave.init(),
        this._btnSave.setText(e.localize("tactics.label.save")),
        this._btnSave.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._btnChangeMentality.init(),
        this._btnChangeMentality.setText(e.localize("tactics.label.changementality")),
        this._btnChangeMentality.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._btnStyles.init(),
        this._btnStyles.setText(e.localize("tactics.label.styles")),
        this._btnStyles.addTarget(this, this.onButtonSelected, EventType.TAP),
        isPhone() || this._btnStyles.addClass(enums.UIState.SELECTED),
        this._btnInstructions.init(),
        this._btnInstructions.setText(e.localize("tactics.label.instructions")),
        this._btnInstructions.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._btnFormation.init(),
        this._btnFormation.setText(e.localize("tactics.label.formation")),
        this._btnFormation.addTarget(this, this.onButtonSelected, EventType.TAP),
        this.__titleBuildUpPlay.textContent = e.localize("tactics.label.offensivestyle.buildup"),
        this.__titleChanceCreation.textContent = e.localize("tactics.label.offensivestyle.chancecreation"),
        this.__titleDefensiveStyle.textContent = e.localize("tactics.label.defensivestyle"),
        this.__titleFormation.textContent = e.localize("squads.formation")
    }
    ,
    UTTacticsMentalityMenuView.prototype.setMentalityNameById = function(e) {
        this.__title.textContent = services.Localization.localize("tactics.mentality.type." + e)
    }
    ,
    UTTacticsMentalityMenuView.prototype.setBuildUpPlayStyleById = function(e) {
        this.__valueBuildUpPlay.textContent = services.Localization.localize("tactics.mentality.style.buildup." + e)
    }
    ,
    UTTacticsMentalityMenuView.prototype.setChanceCreationStyleById = function(e) {
        this.__valueChanceCreation.textContent = services.Localization.localize("tactics.mentality.style.chancecreation." + e)
    }
    ,
    UTTacticsMentalityMenuView.prototype.setDefensiveStyleById = function(e) {
        this.__valueDefensiveStyle.textContent = services.Localization.localize("tactics.mentality.style.defensive." + e)
    }
    ,
    UTTacticsMentalityMenuView.prototype.setFormationName = function(e) {
        this.__valueFormation.textContent = e
    }
    ,
    UTTacticsMentalityMenuView.prototype.setSaveButtonInteractionState = function(e) {
        this._btnSave.setInteractionState(e)
    }
    ,
    UTTacticsMentalityMenuView.prototype.resetSelectedButtonState = function() {
        isPhone() || (this._btnStyles.addClass(enums.UIState.SELECTED),
        this._btnInstructions.removeClass(enums.UIState.SELECTED),
        this._btnFormation.removeClass(enums.UIState.SELECTED))
    }
    ,
    UTTacticsMentalityMenuView.prototype.onButtonSelected = function(e, t, i) {
        this.isInteractionEnabled() && (e === this._btnChangeMentality ? this._triggerActions(UTTacticsMentalityMenuView.Event.CHANGE_MENTALITY) : e === this._btnSave ? this._triggerActions(UTTacticsMentalityMenuView.Event.SAVE_MENTALITY) : e === this._btnStyles ? (this._triggerActions(UTTacticsMentalityMenuView.Event.SELECT_STYLES),
        isPhone() || (this._btnStyles.addClass(enums.UIState.SELECTED),
        this._btnInstructions.removeClass(enums.UIState.SELECTED),
        this._btnFormation.removeClass(enums.UIState.SELECTED))) : e === this._btnInstructions ? (this._triggerActions(UTTacticsMentalityMenuView.Event.SELECT_INSTRUCTIONS),
        isPhone() || (this._btnStyles.removeClass(enums.UIState.SELECTED),
        this._btnInstructions.addClass(enums.UIState.SELECTED),
        this._btnFormation.removeClass(enums.UIState.SELECTED))) : e === this._btnFormation && (this._triggerActions(UTTacticsMentalityMenuView.Event.SELECT_FORMATION),
        isPhone() || (this._btnStyles.removeClass(enums.UIState.SELECTED),
        this._btnInstructions.removeClass(enums.UIState.SELECTED),
        this._btnFormation.addClass(enums.UIState.SELECTED))))
    }
    ,
    UTTacticsMentalityMenuView.Event = Object.freeze({
        CHANGE_MENTALITY: "UTTacticsMentalityMenuView.CHANGE_MENTALITY",
        SAVE_MENTALITY: "UTTacticsMentalityMenuView.SAVE_MENTALITY",
        SELECT_FORMATION: "UTTacticsMentalityMenuView.SELECT_FORMATION",
        SELECT_INSTRUCTIONS: "UTTacticsMentalityMenuView.SELECT_INSTRUCTIONS",
        SELECT_STYLES: "UTTacticsMentalityMenuView.SELECT_STYLES"
    }),
    UTTacticsMentalityMenuView
}(UTTargetActionView));
UTTacticsMentalityMenuView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tactics-mentality-menu-view");
        var t = document.createElement("header");
        t.classList.add("ut-tactics-mentality-menu-view--header"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-tactics-mentality-menu-view--title"),
        t.appendChild(this.__title),
        this._btnSave = new UTStandardButtonControl,
        this._btnSave.getRootElement().classList.add("mini"),
        this._btnSave.getRootElement().classList.add("call-to-action"),
        t.appendChild(this._btnSave.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-tactics-mentality-menu-view--details"),
        this.__titleDefensiveStyle = document.createElement("h2"),
        this.__titleDefensiveStyle.classList.add("title"),
        i.appendChild(this.__titleDefensiveStyle),
        this.__valueDefensiveStyle = document.createElement("p"),
        this.__valueDefensiveStyle.classList.add("value"),
        i.appendChild(this.__valueDefensiveStyle),
        this.__titleBuildUpPlay = document.createElement("h2"),
        this.__titleBuildUpPlay.classList.add("title"),
        i.appendChild(this.__titleBuildUpPlay),
        this.__valueBuildUpPlay = document.createElement("p"),
        this.__valueBuildUpPlay.classList.add("value"),
        i.appendChild(this.__valueBuildUpPlay),
        this.__titleChanceCreation = document.createElement("h2"),
        this.__titleChanceCreation.classList.add("title"),
        i.appendChild(this.__titleChanceCreation),
        this.__valueChanceCreation = document.createElement("p"),
        this.__valueChanceCreation.classList.add("value"),
        i.appendChild(this.__valueChanceCreation),
        this.__titleFormation = document.createElement("h2"),
        this.__titleFormation.classList.add("title"),
        i.appendChild(this.__titleFormation),
        this.__valueFormation = document.createElement("p"),
        this.__valueFormation.classList.add("value"),
        i.appendChild(this.__valueFormation),
        this._btnChangeMentality = new UTStandardButtonControl,
        this._btnChangeMentality.getRootElement().classList.add("mini"),
        this._btnChangeMentality.getRootElement().classList.add("call-to-action"),
        i.appendChild(this._btnChangeMentality.getRootElement()),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-button-group"),
        this._btnStyles = new UTGroupButtonControl,
        this._btnStyles.getRootElement().classList.add("more"),
        o.appendChild(this._btnStyles.getRootElement()),
        this._btnInstructions = new UTGroupButtonControl,
        this._btnInstructions.getRootElement().classList.add("more"),
        o.appendChild(this._btnInstructions.getRootElement()),
        this._btnFormation = new UTGroupButtonControl,
        this._btnFormation.getRootElement().classList.add("more"),
        o.appendChild(this._btnFormation.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTacticsMentalityMenuView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._btnSave.destroy(),
    this.__titleDefensiveStyle = null,
    this.__valueDefensiveStyle = null,
    this.__titleBuildUpPlay = null,
    this.__valueBuildUpPlay = null,
    this.__titleChanceCreation = null,
    this.__valueChanceCreation = null,
    this.__titleFormation = null,
    this.__valueFormation = null,
    this._btnChangeMentality.destroy(),
    this._btnStyles.destroy(),
    this._btnInstructions.destroy(),
    this._btnFormation.destroy()
}
,
UTTacticsMentalityMenuView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTacticsMentalityMenuViewController = function(i) {
    function UTTacticsMentalityMenuViewController() {
        var e = i.call(this) || this;
        return e.mentalitySelectViewController = null,
        e.menuDelegate = null,
        e.tacticsViewModel = null,
        e
    }
    return __extends(UTTacticsMentalityMenuViewController, i),
    UTTacticsMentalityMenuViewController.prototype.initWithTacticsViewModel = function(e) {
        this.initialized || (this.tacticsViewModel = e,
        this.init())
    }
    ,
    UTTacticsMentalityMenuViewController.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.mentalitySelectViewController && (this.mentalitySelectViewController.dealloc(),
        this.mentalitySelectViewController = null),
        this.menuDelegate && (this.menuDelegate = null)
    }
    ,
    UTTacticsMentalityMenuViewController.prototype._getViewInstanceFromData = function() {
        return new UTTacticsMentalityMenuView
    }
    ,
    UTTacticsMentalityMenuViewController.prototype.getNavigationTitle = function() {
        var e, t, i;
        return null !== (i = null === (t = null === (e = this.tacticsViewModel) || void 0 === e ? void 0 : e.getSquad()) || void 0 === t ? void 0 : t.getName()) && void 0 !== i ? i : ""
    }
    ,
    UTTacticsMentalityMenuViewController.prototype.viewDidAppear = function() {
        if (i.prototype.viewDidAppear.call(this),
        this.tacticsViewModel) {
            var e = this.getView()
              , t = this.tacticsViewModel.getSelectedMentality();
            t && this.setDisplayedMentality(t),
            e.addTarget(this, this.onChangeMentality, UTTacticsMentalityMenuView.Event.CHANGE_MENTALITY),
            e.addTarget(this, this.onSaveMentality, UTTacticsMentalityMenuView.Event.SAVE_MENTALITY),
            e.addTarget(this, this.onSelectMenuOption, UTTacticsMentalityMenuView.Event.SELECT_FORMATION),
            e.addTarget(this, this.onSelectMenuOption, UTTacticsMentalityMenuView.Event.SELECT_INSTRUCTIONS),
            e.addTarget(this, this.onSelectMenuOption, UTTacticsMentalityMenuView.Event.SELECT_STYLES),
            this.tacticsViewModel.onDataUpdated.observe(this, this.onTacticsViewModelUpdated)
        }
    }
    ,
    UTTacticsMentalityMenuViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        i.prototype.viewWillDisappear.call(this),
        e.removeTarget(this, this.onChangeMentality, UTTacticsMentalityMenuView.Event.CHANGE_MENTALITY),
        e.removeTarget(this, this.onSaveMentality, UTTacticsMentalityMenuView.Event.SAVE_MENTALITY),
        e.removeTarget(this, this.onSelectMenuOption, UTTacticsMentalityMenuView.Event.SELECT_FORMATION),
        e.removeTarget(this, this.onSelectMenuOption, UTTacticsMentalityMenuView.Event.SELECT_INSTRUCTIONS),
        e.removeTarget(this, this.onSelectMenuOption, UTTacticsMentalityMenuView.Event.SELECT_STYLES),
        this.tacticsViewModel && this.tacticsViewModel.onDataUpdated.unobserve(this)
    }
    ,
    UTTacticsMentalityMenuViewController.prototype.setMentalityMenuDelegate = function(e) {
        this.menuDelegate = e
    }
    ,
    UTTacticsMentalityMenuViewController.prototype.setDisplayedMentality = function(e) {
        var t, i, o, n, r, s = this.getView();
        s.setMentalityNameById(e.getId()),
        s.setBuildUpPlayStyleById(e.getBuildUpPlayStyle()),
        s.setChanceCreationStyleById(e.getChanceCreationStyle()),
        s.setDefensiveStyleById(e.getDefensiveStyle()),
        s.setFormationName(null !== (i = null === (t = e.getFormation()) || void 0 === t ? void 0 : t.displayName) && void 0 !== i ? i : ""),
        s.setSaveButtonInteractionState(null !== (r = null === (n = null === (o = this.tacticsViewModel) || void 0 === o ? void 0 : o.getSquad()) || void 0 === n ? void 0 : n.hasModifiedTactics()) && void 0 !== r && r)
    }
    ,
    UTTacticsMentalityMenuViewController.prototype.loadStyleMenu = function() {
        if (DebugUtils.Assert(JSUtils.isValid(this.tacticsViewModel), "Missing tactics view model. Unable to load tactic styles."),
        this.tacticsViewModel)
            if (this.menuDelegate)
                this.menuDelegate.showStylesMenu();
            else {
                var e = this.getNavigationController();
                if (e) {
                    var t = new UTTacticsStyleMenuViewController;
                    t.initWithTacticsViewModel(this.tacticsViewModel),
                    e.pushViewController(t)
                }
            }
    }
    ,
    UTTacticsMentalityMenuViewController.prototype.loadInstructionsSelection = function() {
        if (DebugUtils.Assert(JSUtils.isValid(this.tacticsViewModel), "Missing tactics view model. Unable to load tactic styles."),
        this.tacticsViewModel)
            if (this.menuDelegate)
                this.menuDelegate.showInstructionsSelection();
            else {
                var e = this.getNavigationController();
                if (e) {
                    var t = new UTTacticsInstructionSlotSelectViewController;
                    t.initWithTacticsViewModel(this.tacticsViewModel),
                    e.pushViewController(t)
                }
            }
    }
    ,
    UTTacticsMentalityMenuViewController.prototype.loadFormationSelection = function() {
        if (DebugUtils.Assert(JSUtils.isValid(this.tacticsViewModel), "Missing tactics view model. Unable to load tactic styles."),
        this.tacticsViewModel)
            if (this.menuDelegate)
                this.menuDelegate.showFormationSelection();
            else {
                var e = this.getNavigationController();
                if (e) {
                    var t = new UTTacticsFormationSelectViewController;
                    t.initWithTacticsViewModel(this.tacticsViewModel),
                    e.pushViewController(t)
                }
            }
    }
    ,
    UTTacticsMentalityMenuViewController.prototype.onChangeMentality = function(e, t, i) {
        DebugUtils.Assert(JSUtils.isValid(this.tacticsViewModel), "Missing tactics view model. Unable to load mentality selection view."),
        this.tacticsViewModel && (this.mentalitySelectViewController = new UTTacticsMentalitySelectViewController,
        this.mentalitySelectViewController.initWithTacticsViewModel(this.tacticsViewModel),
        this.mentalitySelectViewController.modalDisplayStyle = "form",
        this.presentViewController(this.mentalitySelectViewController, !0))
    }
    ,
    UTTacticsMentalityMenuViewController.prototype.onSaveMentality = function(e, t, i) {
        var o = this;
        DebugUtils.Assert(JSUtils.isValid(this.tacticsViewModel), "Missing tactics view model. Unable to save mentality."),
        this.tacticsViewModel && this.tacticsViewModel.saveModifiedMentalities().observe(this, function(e, t) {
            e.unobserve(o),
            o.getView().setSaveButtonInteractionState(!t.success)
        })
    }
    ,
    UTTacticsMentalityMenuViewController.prototype.onSelectMenuOption = function(e, t, i) {
        t === UTTacticsMentalityMenuView.Event.SELECT_STYLES ? this.loadStyleMenu() : t === UTTacticsMentalityMenuView.Event.SELECT_INSTRUCTIONS ? this.loadInstructionsSelection() : t === UTTacticsMentalityMenuView.Event.SELECT_FORMATION && this.loadFormationSelection()
    }
    ,
    UTTacticsMentalityMenuViewController.prototype.onTacticsViewModelUpdated = function(e, t) {
        var i;
        if (JSUtils.isObject(t)) {
            var o = this.getView();
            if (t.selectedMentality && (this.setDisplayedMentality(t.selectedMentality),
            o.resetSelectedButtonState()),
            t.tactics && t.tactics.mentality) {
                var n = null === (i = this.tacticsViewModel) || void 0 === i ? void 0 : i.getSquad()
                  , r = t.tactics.mentality
                  , s = r.getFormation();
                n && o.setSaveButtonInteractionState(n.hasModifiedTactics()),
                o.setBuildUpPlayStyleById(r.getBuildUpPlayStyle()),
                o.setChanceCreationStyleById(r.getChanceCreationStyle()),
                o.setDefensiveStyleById(r.getDefensiveStyle()),
                s && o.setFormationName(s.displayName)
            }
        }
    }
    ,
    UTTacticsMentalityMenuViewController
}(UTViewController)
  , UTTacticsStyleNavigationController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTTacticsStyleNavigationController(e, t) {
        var i = o.call(this, e, t) || this;
        return i.tacticsViewModel = null,
        i
    }
    return __extends(UTTacticsStyleNavigationController, o),
    UTTacticsStyleNavigationController.prototype.init = function() {
        if (!this.initialized) {
            var e = this.getRootController();
            this.tacticsViewModel && e instanceof UTTacticsStyleMenuViewController ? e.initWithTacticsViewModel(this.tacticsViewModel) : e.init(),
            o.prototype.init.call(this)
        }
    }
    ,
    UTTacticsStyleNavigationController.prototype.initWithTacticsViewModel = function(e) {
        if (!this.initialized) {
            var t = e instanceof UTSquadTacticsViewModel;
            DebugUtils.Assert(t, "View controller initialization expected a tactics view model."),
            t && (this.tacticsViewModel = e),
            this.init()
        }
    }
    ,
    UTTacticsStyleNavigationController.prototype.dealloc = function() {
        o.prototype.dealloc.call(this),
        this.tacticsViewModel = null
    }
    ,
    UTTacticsStyleNavigationController.prototype._getRootControllerInstance = function() {
        return new UTTacticsStyleMenuViewController
    }
    ,
    UTTacticsStyleNavigationController
}(UTNavigationController))
  , UTTacticsSplitViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTTacticsSplitViewController() {
        var e = t.call(this) || this;
        return e.formationNavigationController = null,
        e.instructionsNavigationController = null,
        e.mentalityMenuController = new UTTacticsMentalityMenuViewController,
        e.styleNavigationController = new UTTacticsStyleNavigationController,
        e.tacticsViewModel = null,
        e
    }
    return __extends(UTTacticsSplitViewController, t),
    UTTacticsSplitViewController.prototype.init = function() {
        this.initialized || (this.setLayout(UTSplitViewController.Layout.SIDEBAR_LEFT),
        t.prototype.init.call(this),
        this.tacticsViewModel ? (this.mentalityMenuController.initWithTacticsViewModel(this.tacticsViewModel),
        this.styleNavigationController.initWithTacticsViewModel(this.tacticsViewModel)) : (this.mentalityMenuController.init(),
        this.styleNavigationController.init()),
        this.mentalityMenuController.setMentalityMenuDelegate(this))
    }
    ,
    UTTacticsSplitViewController.prototype.initWithTacticsViewModel = function(e) {
        this.initialized || (this.tacticsViewModel = e,
        this.init())
    }
    ,
    UTTacticsSplitViewController.prototype.dealloc = function() {
        this.mentalityMenuController.dealloc(),
        this.styleNavigationController.dealloc(),
        this.instructionsNavigationController && (this.instructionsNavigationController.dealloc(),
        this.instructionsNavigationController = null),
        this.formationNavigationController && (this.formationNavigationController.dealloc(),
        this.formationNavigationController = null),
        this.tacticsViewModel = null,
        t.prototype.dealloc.call(this)
    }
    ,
    UTTacticsSplitViewController.prototype.getNavigationTitle = function() {
        return this.mentalityMenuController.getNavigationTitle()
    }
    ,
    UTTacticsSplitViewController.prototype.viewDidAppear = function() {
        var e;
        t.prototype.viewDidAppear.call(this),
        this._setLeftController(this.mentalityMenuController),
        this._setRightController(this.styleNavigationController),
        null === (e = this.tacticsViewModel) || void 0 === e || e.onDataUpdated.observe(this, this._eTacticsViewModelUpdated)
    }
    ,
    UTTacticsSplitViewController.prototype.viewWillDisappear = function() {
        var e;
        t.prototype.viewWillDisappear.call(this),
        null === (e = this.tacticsViewModel) || void 0 === e || e.onDataUpdated.unobserve(this)
    }
    ,
    UTTacticsSplitViewController.prototype.showStylesMenu = function() {
        this._setRightController(this.styleNavigationController),
        this.styleNavigationController.popToRootViewController()
    }
    ,
    UTTacticsSplitViewController.prototype.showInstructionsSelection = function() {
        if (!this.instructionsNavigationController) {
            var e = new UTTacticsInstructionSlotSelectViewController;
            this.tacticsViewModel ? e.initWithTacticsViewModel(this.tacticsViewModel) : e.init(),
            this.instructionsNavigationController = new UTNavigationController,
            this.instructionsNavigationController.initWithRootController(e)
        }
        this._setRightController(this.instructionsNavigationController),
        this.instructionsNavigationController.popToRootViewController()
    }
    ,
    UTTacticsSplitViewController.prototype.showFormationSelection = function() {
        if (!this.formationNavigationController) {
            var e = new UTTacticsFormationSelectViewController;
            this.tacticsViewModel ? e.initWithTacticsViewModel(this.tacticsViewModel) : e.init(),
            this.formationNavigationController = new UTNavigationController,
            this.formationNavigationController.initWithRootController(e)
        }
        this._setRightController(this.formationNavigationController),
        this.formationNavigationController.popToRootViewController()
    }
    ,
    UTTacticsSplitViewController.prototype._eTacticsViewModelUpdated = function(e, t) {
        JSUtils.isObject(t) && t.selectedMentality && this.showStylesMenu()
    }
    ,
    UTTacticsSplitViewController
}(UTSplitViewController))
  , UTSquadLinkCopyPopupView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTSquadLinkCopyPopupView() {
        return e.call(this) || this
    }
    return __extends(UTSquadLinkCopyPopupView, e),
    UTSquadLinkCopyPopupView.prototype.init = function() {
        this._closeBtn.init(),
        this._copyBtn.init()
    }
    ,
    UTSquadLinkCopyPopupView.prototype.render = function(e) {
        this._url.init(),
        this._url.value = e;
        var t = services.Localization;
        this.__title.textContent = t.localize("popups.copylink.title"),
        this.__msg.textContent = t.localize("popups.copylink.msg"),
        this._closeBtn.setText(t.localize("infopanel.label.close")),
        this._closeBtn.addClass("hitboxPadding"),
        this._copyBtn.addClass("icon_link")
    }
    ,
    UTSquadLinkCopyPopupView.prototype.getCloseBtn = function() {
        return this._closeBtn
    }
    ,
    UTSquadLinkCopyPopupView.prototype.getCopyBtn = function() {
        return this._copyBtn
    }
    ,
    UTSquadLinkCopyPopupView.prototype.getUrlInput = function() {
        return this._url
    }
    ,
    UTSquadLinkCopyPopupView
}(UTView));
UTSquadLinkCopyPopupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("section");
        e.classList.add("squad-link-copy");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("squad-link-body"),
        this.__msg = document.createElement("p"),
        i.appendChild(this.__msg);
        var o = document.createElement("div");
        o.classList.add("input-group"),
        this._url = new UTTextInputControl,
        this._url.getRootElement().classList.add("round"),
        this._url.getRootElement().classList.add("form-control"),
        o.appendChild(this._url.getRootElement()),
        this._copyBtn = new UTStandardButtonControl,
        this._copyBtn.getRootElement().classList.add("fut_icon"),
        this._copyBtn.getRootElement().classList.add("round"),
        this._copyBtn.getRootElement().classList.add("input-group-btn"),
        this._copyBtn.getRootElement().classList.add("call-to-action"),
        o.appendChild(this._copyBtn.getRootElement()),
        i.appendChild(o),
        e.appendChild(i);
        var n = document.createElement("div");
        n.classList.add("ut-button-group"),
        this._closeBtn = new UTGroupButtonControl,
        this._closeBtn.getRootElement().classList.add("negative"),
        n.appendChild(this._closeBtn.getRootElement()),
        e.appendChild(n),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadLinkCopyPopupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__msg = null,
    this._url.destroy(),
    this._copyBtn.destroy(),
    this._closeBtn.destroy()
}
,
UTSquadLinkCopyPopupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadLinkCopyPopupViewController = function(i) {
    function UTSquadLinkCopyPopupViewController(e) {
        var t = i.call(this) || this;
        return t.url = e,
        t
    }
    return __extends(UTSquadLinkCopyPopupViewController, i),
    UTSquadLinkCopyPopupViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this);
        var e = this.getView();
        e.getCloseBtn().addTarget(this, this.eCloseTap, EventType.TAP),
        e.getCopyBtn().addTarget(this, this.eCopyTap, EventType.TAP),
        e.getUrlInput().addTarget(this, this.handleInputEvents, EventType.INPUT),
        e.render(this.url)
    }
    ,
    UTSquadLinkCopyPopupViewController.prototype.viewWillDisappear = function() {
        i.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.getCloseBtn().removeTarget(this, this.eCloseTap, EventType.TAP),
        e.getCopyBtn().removeTarget(this, this.eCopyTap, EventType.TAP),
        e.getUrlInput().removeTarget(this, this.handleInputEvents, EventType.INPUT)
    }
    ,
    UTSquadLinkCopyPopupViewController.prototype._getViewInstanceFromData = function() {
        return new UTSquadLinkCopyPopupView
    }
    ,
    UTSquadLinkCopyPopupViewController.prototype.gotoLink = function() {
        services.URL.process(this.url),
        this.onExit.notify()
    }
    ,
    UTSquadLinkCopyPopupViewController.prototype.copyToClipboard = function() {
        if (document.queryCommandSupported && document.queryCommandSupported("copy")) {
            var e = document.createElement("textarea");
            if (e.textContent = this.url,
            e.style.position = "fixed",
            document.body.appendChild(e),
            navigator.userAgent.match(/ipad|ipod|iphone/i)) {
                var t = e.contentEditable
                  , i = e.readOnly
                  , o = document.createRange();
                e.contentEditable = "true",
                e.readOnly = !1,
                o.selectNodeContents(e);
                var n = window.getSelection();
                n && (n.removeAllRanges(),
                n.addRange(o)),
                e.setSelectionRange(0, 9999),
                e.contentEditable = t,
                e.readOnly = i
            } else
                e.select();
            try {
                document.execCommand("copy"),
                services.Notification.queue([services.Localization.localize("notification.linkcopy.success"), UINotificationType.POSITIVE])
            } catch (e) {
                services.Notification.queue([services.Localization.localize("notification.linkcopy.fail"), UINotificationType.NEGATIVE])
            } finally {
                document.body.removeChild(e)
            }
        }
    }
    ,
    UTSquadLinkCopyPopupViewController.prototype.handleKeyUpEvent = function(e) {
        e.key !== KeyboardKey.ESCAPE && e.key !== KeyboardKey.MS_ESCAPE && e.key !== KeyboardKey.ENTER || this.onExit.notify()
    }
    ,
    UTSquadLinkCopyPopupViewController.prototype.eCloseTap = function(e, t) {
        this.onExit.notify()
    }
    ,
    UTSquadLinkCopyPopupViewController.prototype.handleInputEvents = function(e, t, i) {
        i.value !== this.url && (e.value = this.url)
    }
    ,
    UTSquadLinkCopyPopupViewController.prototype.eCopyTap = function(e, t) {
        this.copyToClipboard()
    }
    ,
    UTSquadLinkCopyPopupViewController
}(BasePopupViewController)
  , UTNameSquadView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTNameSquadView() {
        return t.call(this) || this
    }
    return __extends(UTNameSquadView, t),
    UTNameSquadView.prototype.init = function() {
        var e = services.Localization;
        t.prototype.init.call(this),
        this._cancelBtn.init(),
        this._cancelBtn.setText(e.localize("common.dialog.cancel")),
        this._cancelBtn.setInteractionState(!0),
        this._confirmBtn.init(),
        this._confirmBtn.setInteractionState(!1),
        this._confirmBtn.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._cancelBtn.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._squadNameInput.init(),
        this._squadNameInput.addTarget(this, this.onInput, EventType.INPUT),
        this._squadNameInput.setMaxLength(15),
        this.__hint.textContent = e.localize("renamesquad.hint", ["15"])
    }
    ,
    UTNameSquadView.prototype.focus = function() {
        this._squadNameInput.focus()
    }
    ,
    UTNameSquadView.prototype.setTitle = function(e) {
        this.__titleText.textContent = e
    }
    ,
    UTNameSquadView.prototype.setConfirmButtonLabel = function(e) {
        this._confirmBtn.setText(e)
    }
    ,
    UTNameSquadView.prototype.render = function(e, t) {
        this.setTitle(e),
        this.setConfirmButtonLabel(t)
    }
    ,
    UTNameSquadView.prototype.getSquadName = function() {
        return this._squadNameInput.value
    }
    ,
    UTNameSquadView.prototype.setSquadName = function(e) {
        this._squadNameInput.value = e
    }
    ,
    UTNameSquadView.prototype.setConfirmButtonEnabled = function(e) {
        this._confirmBtn.setInteractionState(e)
    }
    ,
    UTNameSquadView.prototype.onButtonSelected = function(e, t, i) {
        e === this._confirmBtn ? this._triggerActions(UTNameSquadView.Event.CONFIRM, {
            name: this._squadNameInput.value
        }) : e === this._cancelBtn && this._triggerActions(UTNameSquadView.Event.CANCEL)
    }
    ,
    UTNameSquadView.prototype.onInput = function(e, t, i) {
        this._triggerActions(UTNameSquadView.Event.CHANGE, {
            name: i.value
        })
    }
    ,
    UTNameSquadView.Event = Object.freeze({
        CANCEL: "UTNameSquadView.CANCEL",
        CHANGE: "UTNameSquadView.CHANGE",
        CONFIRM: "UTNameSquadView.CONFIRM"
    }),
    UTNameSquadView
}(UTTargetActionView));
UTNameSquadView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-name-squad");
        var t = document.createElement("header");
        this.__titleText = document.createElement("h1"),
        t.appendChild(this.__titleText),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("bodySection"),
        this._squadNameInput = new UTTextInputControl,
        this._squadNameInput.getRootElement().classList.add("round"),
        i.appendChild(this._squadNameInput.getRootElement()),
        this.__hint = document.createElement("span"),
        this.__hint.classList.add("ut-name-squad--hint"),
        i.appendChild(this.__hint),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-button-group"),
        this._confirmBtn = new UTGroupButtonControl,
        o.appendChild(this._confirmBtn.getRootElement()),
        this._cancelBtn = new UTGroupButtonControl,
        this._cancelBtn.getRootElement().classList.add("negative"),
        o.appendChild(this._cancelBtn.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTNameSquadView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__titleText = null,
    this._squadNameInput.destroy(),
    this.__hint = null,
    this._confirmBtn.destroy(),
    this._cancelBtn.destroy()
}
,
UTNameSquadView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTNameSquadViewController = function(s) {
    function UTNameSquadViewController(e) {
        var t, i, o, n = this, r = services.Localization;
        return (n = s.call(this) || this).buttonLabel = null !== (t = null == e ? void 0 : e.buttonLabel) && void 0 !== t ? t : r.localize("infopanel.button.create"),
        n.defaultName = null !== (i = null == e ? void 0 : e.defaultName) && void 0 !== i ? i : "",
        n.onConfirm = new EAObservable,
        n.title = null !== (o = null == e ? void 0 : e.title) && void 0 !== o ? o : r.localize("manage.squadlist.createsquad"),
        n
    }
    return __extends(UTNameSquadViewController, s),
    UTNameSquadViewController.prototype.init = function() {
        s.prototype.init.call(this),
        this.onConfirm.init()
    }
    ,
    UTNameSquadViewController.prototype.dealloc = function() {
        this.onConfirm.dealloc(),
        s.prototype.dealloc.call(this)
    }
    ,
    UTNameSquadViewController.prototype.viewDidAppear = function() {
        var e = this.getView();
        s.prototype.viewDidAppear.call(this),
        this.updateConfirmButtonState(this.defaultName),
        e.setTitle(this.title),
        e.setConfirmButtonLabel(this.buttonLabel),
        e.setSquadName(this.defaultName),
        e.addTarget(this, this.handleCancel, UTNameSquadView.Event.CANCEL),
        e.addTarget(this, this.handleInput, UTNameSquadView.Event.CHANGE),
        e.addTarget(this, this.handleConfirm, UTNameSquadView.Event.CONFIRM)
    }
    ,
    UTNameSquadViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        s.prototype.viewWillDisappear.call(this),
        e.removeTarget(this, this.handleCancel, UTNameSquadView.Event.CANCEL),
        e.removeTarget(this, this.handleInput, UTNameSquadView.Event.CHANGE),
        e.removeTarget(this, this.handleConfirm, UTNameSquadView.Event.CONFIRM)
    }
    ,
    UTNameSquadViewController.prototype._getViewInstanceFromData = function() {
        return new UTNameSquadView
    }
    ,
    UTNameSquadViewController.prototype.confirmName = function(e) {
        var r = this
          , s = this.getView()
          , a = TextUtils.cleanString(e);
        a.length < 3 || (s.setInteractionState(!1),
        services.Squad.requestSquadList().observe(this, function(e, t) {
            var i, o, n = null !== (o = null === (i = t.data) || void 0 === i ? void 0 : i.squads) && void 0 !== o ? o : [];
            e.unobserve(r),
            TextUtils.squadNameExists(a, n) ? (isWeb() && r.onExit.notify(enums.UIDialogOptions.CANCEL),
            utils.PopupManager.showAlert(utils.PopupManager.Alerts.DUPLICATE_SQUAD_NAME),
            s.setInteractionState(!0)) : (r.onConfirm.notify(a),
            r.onExit.notify(enums.UIDialogOptions.OK))
        }))
    }
    ,
    UTNameSquadViewController.prototype.updateConfirmButtonState = function(e) {
        var t = this.getView()
          , i = TextUtils.restrictSpecialCharacters(e);
        i !== e && t.setSquadName(i),
        t.setConfirmButtonEnabled(TextUtils.isValidNameSquad(i))
    }
    ,
    UTNameSquadViewController.prototype.handleCancel = function(e, t, i) {
        this.onExit.notify(enums.UIDialogOptions.CANCEL)
    }
    ,
    UTNameSquadViewController.prototype.handleConfirm = function(e, t, i) {
        this.confirmName(i.name)
    }
    ,
    UTNameSquadViewController.prototype.handleInput = function(e, t, i) {
        this.updateConfirmButtonState(i.name)
    }
    ,
    UTNameSquadViewController.prototype.handleKeyUpEvent = function(e) {
        if (e.key === KeyboardKey.ESCAPE || e.key === KeyboardKey.MS_ESCAPE)
            this.onExit.notify(enums.UIDialogOptions.CANCEL);
        else if (e.key === KeyboardKey.ENTER) {
            var t = this.getView();
            this.confirmName(t.getSquadName())
        }
    }
    ,
    UTNameSquadViewController
}(BasePopupViewController)
  , UTSquadViewModel = function() {
    function UTSquadViewModel(e) {
        this.squad = e,
        this.sections = new EAHashTable,
        this.iterator = new EAIterator(e.getPlayers().concat(e.getManager())),
        this._initSections()
    }
    return UTSquadViewModel.prototype._initSections = function() {
        this.setSection(UTSquadViewModel.SECTION.PITCH, function(e) {
            return e.index < UTSquadEntity.FIELD_PLAYERS
        }, 0),
        this.setSection(UTSquadViewModel.SECTION.SUBS, function(e) {
            return e.index >= UTSquadEntity.FIELD_PLAYERS && e.index < UTSquadEntity.FIELD_PLAYERS + UTSquadEntity.SUB_PLAYERS
        }, 1),
        this.setSection(UTSquadViewModel.SECTION.RESERVES, function(e) {
            return e.index >= UTSquadEntity.FIELD_PLAYERS + UTSquadEntity.SUB_PLAYERS && e.index < UTSquadEntity.MANAGER_SLOT_INDEX
        }, 2),
        this.setSection(UTSquadViewModel.SECTION.MANAGER, function(e) {
            return e.index === UTSquadEntity.MANAGER_SLOT_INDEX
        }, 3)
    }
    ,
    UTSquadViewModel.prototype.setSection = function(e, t, i) {
        this.sections.set(e, {
            filter: t,
            priority: i
        })
    }
    ,
    UTSquadViewModel.prototype.getItemList = function() {
        return this.iterator.values().slice().sort(function(e, t) {
            return JSUtils.sortCompare(e.index, t.index)
        }).map(function(e) {
            return e.item
        })
    }
    ,
    UTSquadViewModel.prototype.values = function() {
        return this.iterator.values()
    }
    ,
    UTSquadViewModel.SECTION = Object.freeze({
        PITCH: 0,
        SUBS: 1,
        RESERVES: 2,
        WORKBENCH: 3,
        MANAGER: 4
    }),
    UTSquadViewModel
}()
  , UTSquadActionsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSquadActionsView() {
        var e = t.call(this) || this;
        return e.imgLoaders = [],
        e.formationsAdded = !1,
        e
    }
    return __extends(UTSquadActionsView, t),
    UTSquadActionsView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._makeActiveBtn.init(),
        this._makeActiveBtn.setText(e.localize("infopanel.button.setActive")),
        this._makeActiveBtn.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._openBtn.init(),
        this._openBtn.setText(e.localize("store.mypack.open")),
        this._openBtn.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnTactics.init(),
        this._btnTactics.setText(e.localize("infopanel.button.tactics")),
        this._btnTactics.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._squadBuilderBtn.init(),
        this._squadBuilderBtn.setText(e.localize("infopanel.button.squadbuilder")),
        this._squadBuilderBtn.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._shareBtn.init(),
        this._shareBtn.setText(e.localize("dock.button.share")),
        this._shareBtn.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._renameBtn.init(),
        this._renameBtn.setText(e.localize("infopanel.button.rename")),
        this._renameBtn.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._duplicateBtn.init(),
        this._duplicateBtn.setText(e.localize("infopanel.button.copy")),
        this._duplicateBtn.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._deleteBtn.init(),
        this._deleteBtn.setText(e.localize("infopanel.button.delete")),
        this._deleteBtn.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._clearBtn.init(),
        this._clearBtn.setText(e.localize("infopanel.button.clear")),
        this._clearBtn.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._formationDropDown.init(),
        this._formationDropDown.addTarget(this, this.eFormationChanged, EventType.CHANGE),
        this.__tapAreaLeft.style.opacity = "1",
        this.__tapAreaRight.style.opacity = "1"
    }
    ,
    UTSquadActionsView.prototype.dealloc = function() {
        this.clearFormationImages(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTSquadActionsView.prototype.setInteractionState = function(e) {
        t.prototype.setInteractionState.call(this, e),
        e ? (this.__tapAreaLeft.setAttribute("aria-disabled", "false"),
        this.__tapAreaRight.setAttribute("aria-disabled", "false")) : (this.__tapAreaLeft.setAttribute("aria-disabled", "true"),
        this.__tapAreaRight.setAttribute("aria-disabled", "true"))
    }
    ,
    UTSquadActionsView.prototype.getFormationDropdown = function() {
        return this._formationDropDown
    }
    ,
    UTSquadActionsView.prototype.displayMakeActiveButton = function(e) {
        DOMKit.toggleDisplayStyle(this._makeActiveBtn.getRootElement(), e)
    }
    ,
    UTSquadActionsView.prototype.displayOpenButton = function(e) {
        DOMKit.toggleDisplayStyle(this._openBtn.getRootElement(), e)
    }
    ,
    UTSquadActionsView.prototype.displayTacticsButton = function(e) {
        this._btnTactics.setDisplay(e)
    }
    ,
    UTSquadActionsView.prototype.displaySquadBuilderButton = function(e) {
        DOMKit.toggleDisplayStyle(this._squadBuilderBtn.getRootElement(), e)
    }
    ,
    UTSquadActionsView.prototype.displayShareButton = function(e) {
        DOMKit.toggleDisplayStyle(this._shareBtn.getRootElement(), e)
    }
    ,
    UTSquadActionsView.prototype.displayRenameButton = function(e) {
        DOMKit.toggleDisplayStyle(this._renameBtn.getRootElement(), e)
    }
    ,
    UTSquadActionsView.prototype.displayCopyButton = function(e) {
        DOMKit.toggleDisplayStyle(this._duplicateBtn.getRootElement(), e)
    }
    ,
    UTSquadActionsView.prototype.displayClearButton = function(e) {
        DOMKit.toggleDisplayStyle(this._clearBtn.getRootElement(), e)
    }
    ,
    UTSquadActionsView.prototype.displayDeleteButton = function(e) {
        DOMKit.toggleDisplayStyle(this._deleteBtn.getRootElement(), e)
    }
    ,
    UTSquadActionsView.prototype.clearFormationImages = function() {
        this.imgLoaders.forEach(function(e) {
            e.dealloc()
        }),
        this.imgLoaders = []
    }
    ,
    UTSquadActionsView.prototype.handleFormationCarousel = function() {
        var t = this;
        this._formationCarousel.afterChange(function(e) {
            t._formationDropDown.setIndex(e),
            t.setInteractionState(!1),
            setTimeout(function() {
                t.setInteractionState(!0)
            }, 750)
        })
    }
    ,
    UTSquadActionsView.prototype.setCurrentFormation = function(e) {
        this._formationCarousel.getCurrentSlide() !== e && this._formationCarousel.goTo(e),
        DOMKit.toggleDisplayStyle(this.__tapAreaLeft, 0 < e),
        DOMKit.toggleDisplayStyle(this.__tapAreaRight, e < this.imgLoaders.length - 1)
    }
    ,
    UTSquadActionsView.prototype.setFormations = function(e) {
        this._formationCarousel.isOn() || this.formationsAdded || (this.clearFormationImages(),
        e.forEach(function _generateFormationImage(e) {
            var t = new UTImageView;
            t.setResource(AssetLocationUtils.getFormationImageUri(e.id)),
            this.imgLoaders.push(t),
            this._formationCarousel.appendElem(t.getRootElement())
        }, this),
        this._formationDropDown.setOptions(e),
        this.formationsAdded = !0)
    }
    ,
    UTSquadActionsView.prototype.setupCarousel = function(e) {
        if (!this._formationCarousel.isOn()) {
            DOMKit.toggleDisplayStyle(this._formationCarousel.getRootElement(), !0);
            var t = new TNSPropertiesDTO;
            t.prevButton = this.__tapAreaLeft,
            t.nextButton = this.__tapAreaRight,
            t.preventActionWhenRunning = e,
            t.speed = 600,
            t.container = this._formationCarousel.getRootElement(),
            this._formationCarousel.setup(t)
        }
    }
    ,
    UTSquadActionsView.prototype.destroyCarousel = function() {
        if (this._formationCarousel.isOn()) {
            var e = this.getRootElement();
            DOMKit.toggleDisplayStyle(this._formationCarousel.getRootElement(), !1),
            this._formationCarousel.teardown(e),
            this.__tapAreaLeft = this.getRootElement().getElementsByClassName("tapLeft")[0],
            this.__tapAreaRight = this.getRootElement().getElementsByClassName("tapRight")[0],
            this.formationsAdded = !1
        }
    }
    ,
    UTSquadActionsView.prototype.toggleClearState = function(e) {
        this._clearBtn.setInteractionState(e)
    }
    ,
    UTSquadActionsView.prototype.toggleCopyState = function(e) {
        this._duplicateBtn.setInteractionState(!e)
    }
    ,
    UTSquadActionsView.prototype.toggleMakeActiveState = function(e) {
        this._makeActiveBtn.setInteractionState(!e)
    }
    ,
    UTSquadActionsView.prototype.eFormationChanged = function(e, t) {
        var i = e.getIndex();
        this.setCurrentFormation(i),
        this._triggerActions(UTSquadActionsView.Event.FORMATION_CHANGE, {
            index: i
        })
    }
    ,
    UTSquadActionsView.prototype.eButtonSelected = function(e, t, i) {
        if (this.isInteractionEnabled()) {
            var o = void 0;
            e === this._btnTactics ? o = UTSquadActionsView.Event.SELECT_TACTICS : e === this._makeActiveBtn ? o = UTSquadActionsView.Event.MAKE_SQUAD_ACTIVE : e === this._openBtn ? o = UTSquadActionsView.Event.OPEN_SQUAD : e === this._squadBuilderBtn ? o = UTSquadActionsView.Event.SELECT_SQUAD_BUILDER : e === this._shareBtn ? o = UTSquadActionsView.Event.SHARE_SQUAD : e === this._renameBtn ? o = UTSquadActionsView.Event.RENAME_SQUAD : e === this._duplicateBtn ? o = UTSquadActionsView.Event.DUPLICATE_SQUAD : e === this._deleteBtn ? o = UTSquadActionsView.Event.DELETE_SQUAD : e === this._clearBtn && (o = UTSquadActionsView.Event.CLEAR_SQUAD),
            o && this._triggerActions(o)
        }
    }
    ,
    UTSquadActionsView.Event = Object.freeze({
        CLEAR_SQUAD: "UTSquadActionsView.Event.CLEAR_SQUAD",
        DELETE_SQUAD: "UTSquadActionsView.Event.DELETE_SQUAD",
        DUPLICATE_SQUAD: "UTSquadActionsView.Event.DUPLICATE_SQUAD",
        FORMATION_CHANGE: "UTSquadActionsView.Event.FORMATION_CHANGE",
        MAKE_SQUAD_ACTIVE: "UTSquadActionsView.Event.MAKE_SQUAD_ACTIVE",
        OPEN_SQUAD: "UTSquadActionsView.Event.OPEN_SQUAD",
        RENAME_SQUAD: "UTSquadActionsView.Event.RENAME_SQUAD",
        SELECT_SQUAD_BUILDER: "UTSquadActionsView.Event.SELECT_SQUAD_BUILDER",
        SELECT_TACTICS: "UTSquadActionsView.Event.SELECT_TACTICS",
        SHARE_SQUAD: "UTSquadActionsView.Event.SHARE_SQUAD"
    }),
    UTSquadActionsView
}(UTTargetActionView));
UTSquadActionsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-actions-view");
        var t = document.createElement("section");
        t.classList.add("formation-carousel"),
        this.__tapAreaLeft = document.createElement("a"),
        this.__tapAreaLeft.classList.add("alt"),
        this.__tapAreaLeft.classList.add("btn-flat"),
        this.__tapAreaLeft.classList.add("tapLeft"),
        t.appendChild(this.__tapAreaLeft),
        this.__tapAreaRight = document.createElement("a"),
        this.__tapAreaRight.classList.add("alt"),
        this.__tapAreaRight.classList.add("btn-flat"),
        this.__tapAreaRight.classList.add("tapRight"),
        t.appendChild(this.__tapAreaRight),
        this._formationCarousel = new TNSContainerView,
        t.appendChild(this._formationCarousel.getRootElement()),
        this._formationDropDown = new UTDropDownControl,
        this._formationDropDown.getRootElement().classList.add("isolated-section"),
        t.appendChild(this._formationDropDown.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("section");
        i.classList.add("ut-squad-actions-view--panel"),
        this._makeActiveBtn = new UTStandardButtonControl,
        this._makeActiveBtn.getRootElement().classList.add("call-to-action"),
        i.appendChild(this._makeActiveBtn.getRootElement()),
        this._openBtn = new UTStandardButtonControl,
        i.appendChild(this._openBtn.getRootElement());
        var o = document.createElement("div");
        o.classList.add("ut-button-group"),
        this._btnTactics = new UTGroupButtonControl,
        this._btnTactics.getRootElement().classList.add("more"),
        o.appendChild(this._btnTactics.getRootElement()),
        this._squadBuilderBtn = new UTGroupButtonControl,
        this._squadBuilderBtn.getRootElement().classList.add("more"),
        o.appendChild(this._squadBuilderBtn.getRootElement()),
        this._shareBtn = new UTGroupButtonControl,
        o.appendChild(this._shareBtn.getRootElement()),
        this._renameBtn = new UTGroupButtonControl,
        o.appendChild(this._renameBtn.getRootElement()),
        this._duplicateBtn = new UTGroupButtonControl,
        o.appendChild(this._duplicateBtn.getRootElement()),
        this._clearBtn = new UTGroupButtonControl,
        o.appendChild(this._clearBtn.getRootElement()),
        this._deleteBtn = new UTGroupButtonControl,
        o.appendChild(this._deleteBtn.getRootElement()),
        i.appendChild(o),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadActionsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__tapAreaLeft = null,
    this.__tapAreaRight = null,
    this._formationCarousel.destroy(),
    this._formationDropDown.destroy(),
    this._makeActiveBtn.destroy(),
    this._openBtn.destroy(),
    this._btnTactics.destroy(),
    this._squadBuilderBtn.destroy(),
    this._shareBtn.destroy(),
    this._renameBtn.destroy(),
    this._duplicateBtn.destroy(),
    this._clearBtn.destroy(),
    this._deleteBtn.destroy()
}
,
UTSquadActionsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadActionsViewController = function(i) {
    function UTSquadActionsViewController() {
        var e = i.call(this) || this;
        return e._formations = factories.DataProvider.getFormationDP(),
        e._inSquadContext = !1,
        e.onDataChange = new EAObservable,
        e._squad = null,
        e
    }
    return __extends(UTSquadActionsViewController, i),
    UTSquadActionsViewController.prototype.initWithSquad = function(e) {
        this.initialized || (this._squad = e,
        this.init())
    }
    ,
    UTSquadActionsViewController.prototype.dealloc = function() {
        this.onDataChange.dealloc(),
        this._squad = null,
        i.prototype.dealloc.call(this)
    }
    ,
    UTSquadActionsViewController.prototype._getViewInstanceFromData = function() {
        return new UTSquadActionsView
    }
    ,
    UTSquadActionsViewController.prototype._getTelemetryId = function() {
        return "Squad Details"
    }
    ,
    UTSquadActionsViewController.prototype.getNavigationTitle = function() {
        var e, t, i = services.Localization;
        return null !== (t = null === (e = this._squad) || void 0 === e ? void 0 : e.getName()) && void 0 !== t ? t : i.localize("squads.detail.title")
    }
    ,
    UTSquadActionsViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this);
        var e = this.getView();
        e.setFormations(this._formations),
        e.setupCarousel(this._inSquadContext && !isPhone()),
        this._setViewButtonStates(),
        !isPhone() && this._inSquadContext || this._checkSquadListFull(),
        this._squad && (this._inSquadContext || isPhone()) && this.setSquad(this._squad);
        var t = this._getFormationDPIndex();
        e.setCurrentFormation(t),
        e.getFormationDropdown().setIndex(t),
        e.handleFormationCarousel(),
        e.addTarget(this, this._onFormationChange, UTSquadActionsView.Event.FORMATION_CHANGE),
        e.addTarget(this, this._onMakeActive, UTSquadActionsView.Event.MAKE_SQUAD_ACTIVE),
        e.addTarget(this, this._onOpen, UTSquadActionsView.Event.OPEN_SQUAD),
        e.addTarget(this, this._onShare, UTSquadActionsView.Event.SHARE_SQUAD),
        e.addTarget(this, this._onRename, UTSquadActionsView.Event.RENAME_SQUAD),
        e.addTarget(this, this._onCopy, UTSquadActionsView.Event.DUPLICATE_SQUAD),
        e.addTarget(this, this._onClear, UTSquadActionsView.Event.CLEAR_SQUAD),
        e.addTarget(this, this._onDelete, UTSquadActionsView.Event.DELETE_SQUAD),
        e.addTarget(this, this._onSquadBuilder, UTSquadActionsView.Event.SELECT_SQUAD_BUILDER),
        e.addTarget(this, this._eTacticsSelected, UTSquadActionsView.Event.SELECT_TACTICS)
    }
    ,
    UTSquadActionsViewController.prototype.viewWillDisappear = function() {
        i.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this._onFormationChange, UTSquadActionsView.Event.FORMATION_CHANGE),
        e.removeTarget(this, this._onMakeActive, UTSquadActionsView.Event.MAKE_SQUAD_ACTIVE),
        e.removeTarget(this, this._onOpen, UTSquadActionsView.Event.OPEN_SQUAD),
        e.removeTarget(this, this._onShare, UTSquadActionsView.Event.SHARE_SQUAD),
        e.removeTarget(this, this._onRename, UTSquadActionsView.Event.RENAME_SQUAD),
        e.removeTarget(this, this._onCopy, UTSquadActionsView.Event.DUPLICATE_SQUAD),
        e.removeTarget(this, this._onClear, UTSquadActionsView.Event.CLEAR_SQUAD),
        e.removeTarget(this, this._onDelete, UTSquadActionsView.Event.DELETE_SQUAD),
        e.removeTarget(this, this._onSquadBuilder, UTSquadActionsView.Event.SELECT_SQUAD_BUILDER),
        e.removeTarget(this, this._eTacticsSelected, UTSquadActionsView.Event.SELECT_TACTICS),
        e.destroyCarousel(),
        this._squad && (this._squad.onDataUpdated.unobserve(this),
        this._squad.isModified() && this._squad.save().observe(this, this._handleSquadSave))
    }
    ,
    UTSquadActionsViewController.prototype.setSquadContext = function(e) {
        this._inSquadContext = e
    }
    ,
    UTSquadActionsViewController.prototype.setSquad = function(e) {
        var t = this.getView();
        t.setInteractionState(!1),
        this._squad && this._squad.getId() === e.getId() || (this._squad && (this._squad.onDataUpdated.unobserve(this),
        this._squad.isModified() && this._squad.save().observe(this, this._handleSquadSave)),
        this._squad = e,
        this._squad.onDataUpdated.observe(this, this._eSquadUpdate)),
        this._setViewButtonStates(),
        this._checkSquadListFull();
        var i = this._getFormationDPIndex();
        t.setCurrentFormation(i),
        t.getFormationDropdown().setIndex(i),
        t.setInteractionState(!0)
    }
    ,
    UTSquadActionsViewController.prototype._setViewButtonStates = function() {
        var e, t, i, o, n, r, s = this.getView(), a = JSUtils.isValid(this._squad), l = null !== (t = null === (e = this._squad) || void 0 === e ? void 0 : e.getId()) && void 0 !== t ? t : -1, c = null !== (o = null === (i = this._squad) || void 0 === i ? void 0 : i.isDream()) && void 0 !== o && o, d = null === (r = null === (n = this._squad) || void 0 === n ? void 0 : n.isSquadEmpty()) || void 0 === r || r, u = l === services.Squad.getActiveSquadId();
        s.displayMakeActiveButton(a),
        s.displayDeleteButton(!u && !this._inSquadContext),
        s.displayRenameButton(a),
        s.displayCopyButton(a),
        s.displayShareButton(a),
        s.displaySquadBuilderButton(a && this._inSquadContext),
        s.displayClearButton(a && this._inSquadContext),
        s.displayOpenButton(a && !this._inSquadContext),
        s.displayTacticsButton(a && !c),
        s.toggleMakeActiveState(u),
        s.toggleClearState(a && !d)
    }
    ,
    UTSquadActionsViewController.prototype._getFormationDPIndex = function() {
        var e, t;
        if (this._squad) {
            var i = null !== (t = null === (e = this._squad.getFormation()) || void 0 === e ? void 0 : e.name) && void 0 !== t ? t : "";
            if (!JSUtils.isEmpty(i))
                return Math.max(this._formations.findIndex(function(e) {
                    return e.value === i
                }), 0)
        }
        return 0
    }
    ,
    UTSquadActionsViewController.prototype._checkSquadListFull = function() {
        var i = this;
        services.Squad.requestSquadList().observe(this, function(e, t) {
            e.unobserve(i),
            t.success && t.data && i.isViewDisplayed() && i.getView().toggleCopyState(t.data.listFull)
        })
    }
    ,
    UTSquadActionsViewController.prototype._onMakeActive = function() {
        function BJa(e, t) {
            e.unobserve(i),
            t.success ? (i.onDataChange.notify(),
            i._setViewButtonStates(),
            services.Notification.queue([o.localize("notification.squad.setActive"), UINotificationType.NEUTRAL])) : NetworkErrorManager.handleStatus(t.status)
        }
        var i = this
          , o = services.Localization;
        if (TelemetryManager.trackEvent(TelemetryManager.Sections.SQUADS, TelemetryManager.Categories.BUTTON_PRESS, "Squads - Set Active"),
        DebugUtils.Assert(JSUtils.isValid(this._squad), "Cannot find squad entity for active assignment."),
        this._squad)
            if (this._squad.isModified()) {
                var n = this._squad;
                n.save().observe(this, function(e, t) {
                    e.unobserve(i),
                    t.success ? services.Squad.setActiveSquad(n.getId()).observe(i, BJa) : services.Notification.queue([o.localize("popup.error.activesquad.SaveFailed"), UINotificationType.NEGATIVE])
                })
            } else
                services.Squad.setActiveSquad(this._squad.getId()).observe(this, BJa)
    }
    ,
    UTSquadActionsViewController.prototype._onSquadBuilder = function() {
        var e, t = new UTSquadBuilderViewController;
        this._squad ? t.initWithSquad(this._squad) : t.init(),
        null === (e = this.getNavigationController()) || void 0 === e || e.pushViewController(t),
        TelemetryManager.trackPage(TelemetryManager.Sections.SQUADS, "Squad Builder")
    }
    ,
    UTSquadActionsViewController.prototype._onShare = function() {
        var o = this;
        if (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this._squad) {
            var e = this._squad.getId();
            services.Squad.addShowOff(e).observe(this, function(e, t) {
                if (e.unobserve(o),
                gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
                DebugUtils.Assert(JSUtils.isObject(t.data), "Expected a data object associated with the API response."),
                t.success && t.data) {
                    var i = new UTSquadLinkCopyPopupViewController(t.data.url);
                    i.modalDisplayDimensions.width = "24em",
                    gPopupClickShield.setActivePopup(i)
                } else
                    NetworkErrorManager.handleStatus(t.status)
            })
        }
    }
    ,
    UTSquadActionsViewController.prototype._onRename = function() {
        var e, a = this, t = services.Localization, l = this._squad, i = null !== (e = null == l ? void 0 : l.getName()) && void 0 !== e ? e : BLANK_STR, o = new UTNameSquadViewController({
            defaultName: i,
            title: t.localize("renamesquad.title", [i]),
            buttonLabel: services.Localization.localize("common.dialog.ok")
        });
        o.init(),
        o.modalDisplayDimensions.width = "24em",
        o.onConfirm.observe(this, function(e, t) {
            e.unobserve(a),
            l && services.Squad.rename(l.getId(), t).observe(a, function(e, t) {
                var i, o, n;
                if (e.unobserve(a),
                t.success) {
                    (null === (i = t.data) || void 0 === i ? void 0 : i.squad) && l.setName(t.data.squad.getName(), []);
                    var r = a.getNavigationController();
                    r && r.setNavigationTitle(l.getName()),
                    services.Notification.queue([services.Localization.localize("notification.squad.renamed"), UINotificationType.NEUTRAL])
                } else {
                    var s = "popup.body.genericError";
                    (null === (o = t.error) || void 0 === o ? void 0 : o.code) === UtasErrorCode.NAME_EXISTS ? s = "popup.error.duplicateSquadName" : (null === (n = t.error) || void 0 === n ? void 0 : n.code) === UtasErrorCode.PROFANITY && (s = "popup.error.profanity"),
                    services.Notification.queue([services.Localization.localize(s), UINotificationType.NEGATIVE])
                }
            })
        }),
        gPopupClickShield.setActivePopup(o)
    }
    ,
    UTSquadActionsViewController.prototype._onCopy = function() {
        var n = this
          , r = this._squad;
        TelemetryManager.trackPage(TelemetryManager.Sections.SQUADS, "Squad List - Copy Squad"),
        r && services.Squad.requestSquadList().observe(this, function(e, t) {
            var i, o;
            e.unobserve(n),
            n.copySquad(r, null !== (o = null === (i = t.data) || void 0 === i ? void 0 : i.squads) && void 0 !== o ? o : [])
        })
    }
    ,
    UTSquadActionsViewController.prototype.copySquad = function(i, e) {
        var t, n = this, o = null !== (t = i.getName()) && void 0 !== t ? t : BLANK_STR, r = TextUtils.createSquadNameCopy(o, e), s = new UTNameSquadViewController({
            defaultName: r
        });
        s.init(),
        s.modalDisplayDimensions.width = "24em",
        s.onConfirm.observe(this, function(e, t) {
            e.unobserve(n),
            services.Squad.copy(i.getId(), t).observe(n, function(e, t) {
                if (e.unobserve(n),
                t.success)
                    n._checkSquadListFull(),
                    services.Notification.queue([services.Localization.localize("notification.squad.copied"), UINotificationType.NEUTRAL]);
                else {
                    var i = t.error ? t.error.code : t.status;
                    if (NetworkErrorManager.checkCriticalStatus(i))
                        NetworkErrorManager.handleStatus(i);
                    else {
                        var o = void 0;
                        switch (i) {
                        case UtasErrorCode.NAME_EXISTS:
                            o = "popup.error.duplicateSquadName";
                            break;
                        case UtasErrorCode.PERMISSION_DENIED:
                            o = "popup.error.squadsFull";
                            break;
                        case UtasErrorCode.PROFANITY:
                            o = "popup.error.profanity";
                            break;
                        default:
                            o = "popup.body.genericError"
                        }
                        services.Notification.queue([services.Localization.localize(o), UINotificationType.NEGATIVE])
                    }
                }
            })
        }),
        gPopupClickShield.setActivePopup(s)
    }
    ,
    UTSquadActionsViewController.prototype._onClear = function() {
        var o = this;
        utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.CLEAR_SQUAD, [], function() {
            var e, t, i;
            null !== (t = null === (e = o._squad) || void 0 === e ? void 0 : e.removeAllItems()) && void 0 !== t && t && (null === (i = o._squad) || void 0 === i || i.save().observe(o, function(e, t) {
                var i = services.Localization;
                e.unobserve(o),
                t.success ? (o.getView().toggleClearState(!1),
                services.Notification.queue([i.localize("notification.squad.cleared"), UINotificationType.NEUTRAL])) : services.Notification.queue([i.localize("popup.error.activesquad.SaveFailed"), UINotificationType.NEGATIVE])
            }))
        })
    }
    ,
    UTSquadActionsViewController.prototype._onDelete = function() {
        var o = this;
        TelemetryManager.trackEvent(TelemetryManager.Sections.SQUADS, TelemetryManager.Categories.BUTTON_PRESS, "Squads - Delete Squad");
        var e = this._squad;
        if (e) {
            e.getId() === services.Squad.getActiveSquadId() ? utils.PopupManager.showAlert(utils.PopupManager.Alerts.CANNOT_DELETE_SQUAD) : utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.DELETE_SQUAD, [e.getName()], function() {
                services.Squad.remove(e.getId()).observe(o, function(e, t) {
                    if (e.unobserve(o),
                    t.success) {
                        if (services.Notification.queue([services.Localization.localize("notification.squad.deleted"), UINotificationType.NEUTRAL]),
                        isPhone()) {
                            var i = o.getNavigationController();
                            i && i.popViewController(!0)
                        }
                    } else
                        NetworkErrorManager.handleStatus(t.status)
                })
            }, function() {})
        }
    }
    ,
    UTSquadActionsViewController.prototype._onOpen = function() {
        function KKa() {
            var e = o.getNavigationController();
            if (e) {
                var t = isPhone() ? new UTSquadOverviewViewController : new UTSquadSplitViewController;
                o._squad ? t.initWithSquad(o._squad) : t.init(),
                e.pushViewController(t)
            }
        }
        var o = this
          , n = this.getView();
        this._squad && (this._squad.isSquadLoaded() ? KKa() : (n.setInteractionState(!1),
        services.Squad.requestSquadById(this._squad.getId()).observe(this, function(e, t) {
            var i;
            e.unobserve(o),
            t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.squad) && (o._squad = t.data.squad),
            n.setInteractionState(!0),
            KKa()
        })))
    }
    ,
    UTSquadActionsViewController.prototype._onFormationChange = function(e, t, i) {
        var o = this
          , n = this._squad;
        if (DebugUtils.Assert(JSUtils.isValid(n), "Missing squad entity when changing formation."),
        n) {
            function WKa() {
                var e = o._formations[i.index].value.toString()
                  , t = repositories.Squad.getFormation(e);
                t && n.setFormation(t),
                o._inSquadContext || o.onDataChange.notify()
            }
            var r = this.getView();
            this._inSquadContext || n.isSquadLoaded() ? WKa() : (r.setInteractionState(!1),
            services.Squad.requestSquadById(n.getId()).observe(this, function(e, t) {
                var i;
                e.unobserve(o),
                t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.squad) && (o.setSquad(t.data.squad),
                WKa(),
                r.toggleClearState(!n.isSquadEmpty())),
                r.setInteractionState(!0)
            }))
        }
    }
    ,
    UTSquadActionsViewController.prototype._eTacticsSelected = function(e, t, i) {
        function eLa() {
            var e = isPhone() ? new UTTacticsMentalityMenuViewController : new UTTacticsSplitViewController
              , t = new UTSquadTacticsViewModel(services.Squad)
              , i = services.UserSettings.getSessionItem(UserSettingsKey.SAVE_TACTICS_MESSAGE_DISPLAYED);
            o._squad && t.setSquad(o._squad),
            e.initWithTacticsViewModel(t),
            o.getRootNavigationController().pushViewController(e),
            i || (utils.PopupManager.showAlert(utils.PopupManager.Alerts.SAVE_TACTICS),
            services.UserSettings.setSessionItem(UserSettingsKey.SAVE_TACTICS_MESSAGE_DISPLAYED, "true"))
        }
        var o = this;
        if (TelemetryManager.trackEvent(TelemetryManager.Sections.SQUADS, TelemetryManager.Categories.BUTTON_PRESS, "Squads - Modify Tactics"),
        this._squad)
            if (this._squad.isSquadLoaded())
                eLa.call(this);
            else {
                var n = this.getView();
                n.setInteractionState(!1),
                services.Squad.requestSquadById(this._squad.getId()).observe(this, function(e, t) {
                    var i;
                    e.unobserve(o),
                    t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.squad) && (o._squad = t.data.squad),
                    n.setInteractionState(!0),
                    eLa.call(o)
                })
            }
    }
    ,
    UTSquadActionsViewController.prototype._eSquadUpdate = function(e, o) {
        function rLa() {
            var e, t;
            if (o.slots && n.isViewDisplayed()) {
                var i = null !== (t = null === (e = n._squad) || void 0 === e ? void 0 : e.isSquadEmpty()) && void 0 !== t && t;
                r.toggleClearState(i)
            }
        }
        var t, n = this, r = this.getView();
        if (o)
            if (this._inSquadContext)
                rLa(),
                r.setCurrentFormation(this._getFormationDPIndex());
            else if (this._squad) {
                var i = this._squad;
                (o.chemistry && o.chemistry !== i.getChemistry() || o.rating && o.rating !== i.getRating() || o.type && o.type !== i.getType() || o.formation && o.formation.id !== (null === (t = i.getFormation()) || void 0 === t ? void 0 : t.id) || o.name && o.name !== i.getName()) && (rLa(),
                this.onDataChange.notify())
            }
    }
    ,
    UTSquadActionsViewController.prototype._handleSquadSave = function(e, t) {
        e.unobserve(this),
        t.success || services.Notification.queue([services.Localization.localize("popup.error.activesquad.SaveFailed"), UINotificationType.NEGATIVE])
    }
    ,
    UTSquadActionsViewController
}(UTViewController);
NamespaceManager.Register("interfaces"),
interfaces.SquadViewDelegate = function ISquadViewDelegate() {}
,
interfaces.SquadViewDelegate.prototype.updateSlot = function updateSlot() {}
,
interfaces.SquadViewDelegate.prototype.selectSlot = function selectSlot() {}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadTabButtonControl = function(e) {
    function UTSquadTabButtonControl() {
        return e.call(this) || this
    }
    return __extends(UTSquadTabButtonControl, e),
    UTSquadTabButtonControl.prototype.setText = function(e) {
        this.__text.textContent = e
    }
    ,
    UTSquadTabButtonControl.prototype.assignLeft = function() {
        this.removeClass("right"),
        this.addClass("left")
    }
    ,
    UTSquadTabButtonControl.prototype.setArrowDirection = function(e) {
        this.removeClass(["ui-direction-up", "ui-direction-down", "ui-direction-left", "ui-direction-right"].join(" ")),
        this.addClass("ui-direction-" + e)
    }
    ,
    UTSquadTabButtonControl.prototype.setType = function(e) {
        var t = [enums.UISquadTabTypes.WORK_AREA, enums.UISquadTabTypes.DOCK_TAB, enums.UISquadTabTypes.DEFAULT].join(" ");
        this.removeClass(t),
        this.addClass(e)
    }
    ,
    UTSquadTabButtonControl.prototype.assignRight = function() {
        this.removeClass("left"),
        this.addClass("right")
    }
    ,
    UTSquadTabButtonControl
}(UTButtonControl);
UTSquadTabButtonControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("button");
        e.classList.add("ut-squad-tab-button-control");
        var t = document.createElement("div");
        t.classList.add("icon"),
        e.appendChild(t),
        this.__text = document.createElement("span"),
        e.appendChild(this.__text),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadTabButtonControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__text = null
}
,
UTSquadTabButtonControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadSlotDockView = function(t) {
    function UTSquadSlotDockView() {
        var e = t.call(this) || this;
        return e.isAnimating = !1,
        e.isVisible = !1,
        e.slots = [],
        e
    }
    return __extends(UTSquadSlotDockView, t),
    UTSquadSlotDockView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTSquadSlotDockView.prototype.dealloc = function() {
        this.clearSlotViews(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTSquadSlotDockView.prototype.clearSlotViews = function() {
        this.slots.forEach(function(e) {
            return e.dealloc()
        }),
        this.slots = []
    }
    ,
    UTSquadSlotDockView.prototype.getSlotViews = function() {
        return this.slots
    }
    ,
    UTSquadSlotDockView.prototype.setSlots = function(e, i, o) {
        var n = this;
        void 0 === i && (i = !0),
        void 0 === o && (o = !0),
        this.clearSlotViews(),
        e.forEach(function(e) {
            if (!(e.index < 0)) {
                var t = new UTSquadSlotView;
                t.init(),
                t.render(e, i, !1, o),
                n.addSubview(t, n.__slotContainer),
                n.slots.push(t)
            }
        }, this),
        this.layoutSubviews()
    }
    ,
    UTSquadSlotDockView.prototype.updateSlot = function(t, e, i) {
        void 0 === e && (e = !0),
        void 0 === i && (i = !0);
        var o = JSUtils.find(this.slots, function(e) {
            return e.getIndex() === t.index
        });
        null == o || o.render(t, e, !1, i)
    }
    ,
    UTSquadSlotDockView.prototype.updateChemistry = function(o) {
        this.slots.forEach(function(t) {
            var e = JSUtils.find(o, function(e) {
                return e.index === t.getIndex()
            })
              , i = t.getItemView();
            e && i && i.renderChemistryBreakdown(e.chemistry, e.nationChemistryPoints, e.leagueChemistryPoints, e.clubChemistryPoints)
        }, this)
    }
    ,
    UTSquadSlotDockView.prototype.setInstructions = function(e) {
        this.__instructions || (this.__instructions = document.createElement("p"),
        DOMKit.addClass(this.__instructions, "dock-instructions"),
        this.__content.appendChild(this.__instructions)),
        this.__instructions.innerHTML = e
    }
    ,
    UTSquadSlotDockView.prototype.setViewState = function(i, o) {
        var n = this;
        this.isAnimating = !0,
        requestAnimationFrame(function() {
            var e = n.getRootElement()
              , t = function() {
                e.removeEventListener(EventType.TRANSITIONEND, t),
                n.isVisible = i,
                n.isAnimating = !1,
                o && o()
            };
            e.addEventListener(EventType.TRANSITIONEND, t),
            e.style.bottom = i ? n.__content.clientHeight + "px" : ""
        })
    }
    ,
    UTSquadSlotDockView.prototype.setIsSBC = function(e) {
        this.toggleClass("sbc", e)
    }
    ,
    UTSquadSlotDockView.prototype.getContentHeight = function() {
        return this.__content.clientHeight
    }
    ,
    UTSquadSlotDockView.prototype.open = function(e) {
        this.isAnimating || this.setViewState(!0, e)
    }
    ,
    UTSquadSlotDockView.prototype.close = function(e) {
        this.isAnimating || this.setViewState(!1, e)
    }
    ,
    UTSquadSlotDockView.prototype.toggle = function() {
        this.isAnimating || (this.isVisible ? this.close() : this.open())
    }
    ,
    UTSquadSlotDockView
}(UTView);
UTSquadSlotDockView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-slot-dock-view"),
        this.__content = document.createElement("div"),
        this.__content.classList.add("content-container"),
        this.__slotContainer = document.createElement("div"),
        this.__slotContainer.classList.add("ut-squad-slot-dock-view--slot-container"),
        this.__content.appendChild(this.__slotContainer),
        e.appendChild(this.__content),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadSlotDockView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__content = null,
    this.__slotContainer = null
}
,
UTSquadSlotDockView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadChemistryBarView = function(e) {
    function UTSquadChemistryBarView() {
        return e.call(this) || this
    }
    return __extends(UTSquadChemistryBarView, e),
    UTSquadChemistryBarView.prototype.init = function() {
        e.prototype.init.call(this),
        this._progressBar.init(),
        this.__chemistryValue.textContent = "0"
    }
    ,
    UTSquadChemistryBarView.prototype.setChemistry = function(e, t, i) {
        void 0 === t && (t = 100),
        void 0 === i && (i = !1),
        this.__chemistryValue.textContent = e.toString();
        var o = e / t * 100;
        this._progressBar.setProgress(o)
    }
    ,
    UTSquadChemistryBarView
}(UTView);
UTSquadChemistryBarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("progress-bar-container"),
        this._progressBar = new UTProgressBarView,
        this._progressBar.getRootElement().classList.add("rounded"),
        this._progressBar.getRootElement().classList.add("chemistryRatingBars"),
        e.appendChild(this._progressBar.getRootElement()),
        this.__chemistryValue = document.createElement("span"),
        this.__chemistryValue.classList.add("ut-squad-summary-value"),
        e.appendChild(this.__chemistryValue),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadChemistryBarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._progressBar.destroy(),
    this.__chemistryValue = null
}
,
UTSquadChemistryBarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStarRatingView = function(e) {
    function UTStarRatingView() {
        return e.call(this) || this
    }
    return __extends(UTStarRatingView, e),
    UTStarRatingView.prototype.setRatingPercent = function(e) {
        var t = Math.min(Math.max(0, e), 100);
        this.__fill.style.width = t + "%"
    }
    ,
    UTStarRatingView
}(UTView);
UTStarRatingView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-star-rating"),
        this.__fill = document.createElement("div"),
        this.__fill.classList.add("ut-star-rating--fill"),
        e.appendChild(this.__fill),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStarRatingView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__fill = null
}
,
UTStarRatingView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadStarRatingView = function(e) {
    function UTSquadStarRatingView() {
        return e.call(this) || this
    }
    return __extends(UTSquadStarRatingView, e),
    UTSquadStarRatingView.prototype.init = function() {
        e.prototype.init.call(this),
        this.__ratingValue.textContent = "0"
    }
    ,
    UTSquadStarRatingView.prototype.calculateFillWidthFromRating = function(e) {
        for (var t = 0; t < STAR_RATING_THRESHOLDS.length; t++)
            if (e <= STAR_RATING_THRESHOLDS[t])
                return 10 * t;
        return 100
    }
    ,
    UTSquadStarRatingView.prototype.setRating = function(e, t) {
        void 0 === t && (t = !1);
        var i = Math.min(Math.max(0, e), 99);
        this.__ratingValue.textContent = i.toString(),
        this._ratingStars.setRatingPercent(this.calculateFillWidthFromRating(i))
    }
    ,
    UTSquadStarRatingView
}(UTView);
UTSquadStarRatingView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.setAttribute("style", "display: flex; align-items: center;"),
        this.__ratingValue = document.createElement("span"),
        this.__ratingValue.classList.add("ut-squad-summary-value"),
        e.appendChild(this.__ratingValue),
        this._ratingStars = new UTStarRatingView,
        e.appendChild(this._ratingStars.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadStarRatingView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__ratingValue = null,
    this._ratingStars.destroy()
}
,
UTSquadStarRatingView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTChemistryButtonControl = function(e) {
    function UTChemistryButtonControl() {
        return e.call(this) || this
    }
    return __extends(UTChemistryButtonControl, e),
    UTChemistryButtonControl
}(UTImageButtonControl);
UTChemistryButtonControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("button");
        e.classList.add("chemistry-btn"),
        e.classList.add("ut-image-button-control");
        var t = document.createElement("span");
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTChemistryButtonControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTChemistryButtonControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadChemistryBaseEntryView = function(e) {
    function UTSquadChemistryBaseEntryView() {
        return null !== e && e.apply(this, arguments) || this
    }
    return __extends(UTSquadChemistryBaseEntryView, e),
    UTSquadChemistryBaseEntryView.prototype.init = function() {
        e.prototype.init.call(this),
        this._badge.init(),
        this._entryPointsView.init()
    }
    ,
    UTSquadChemistryBaseEntryView.prototype.getAssetUri = function(e, t) {
        var i = enums.UIThemeVariation.DARK;
        switch (e) {
        case ChemistryParamId.CLUB:
            return AssetLocationUtils.getBadgeImageUri(t, i);
        case ChemistryParamId.LEAGUE:
            return AssetLocationUtils.getLeagueImageUri(t, i);
        case ChemistryParamId.NATION:
            return AssetLocationUtils.getFlagImageUri(t)
        }
    }
    ,
    UTSquadChemistryBaseEntryView.prototype.loadAsset = function(n, e) {
        var r = this
          , t = this.getAssetUri(n, e);
        this._badge.setResource(t, !0).observe(this, function(e, t) {
            if (e.unobserve(r),
            !t) {
                var i = UTItemEntity.DEFAULT_ASSET_ID
                  , o = r.getAssetUri(n, i);
                r._badge.setResource(o)
            }
        })
    }
    ,
    UTSquadChemistryBaseEntryView
}(UTView)
  , UTSquadChemistrySummaryEntryView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTSquadChemistrySummaryEntryView() {
        return null !== e && e.apply(this, arguments) || this
    }
    return __extends(UTSquadChemistrySummaryEntryView, e),
    UTSquadChemistrySummaryEntryView.prototype.render = function(e) {
        this.loadAsset(e.typeId, e.metaId),
        this._entryPointsView.render(e.points, e.potentialPoints)
    }
    ,
    UTSquadChemistrySummaryEntryView.prototype.renderEmpty = function() {
        this.__fallback.textContent = "--",
        this._badge.setDisplay(!1)
    }
    ,
    UTSquadChemistrySummaryEntryView
}(UTSquadChemistryBaseEntryView));
UTSquadChemistrySummaryEntryView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-chemistry-entry");
        var t = document.createElement("div");
        t.classList.add("ut-squad-chemistry--badge-container"),
        this.__fallback = document.createElement("span"),
        t.appendChild(this.__fallback),
        this._badge = new UTImageView,
        this._badge.getRootElement().classList.add("ut-squad-chemistry-entry--badge"),
        t.appendChild(this._badge.getRootElement()),
        e.appendChild(t),
        this._entryPointsView = new UTSquadSlotChemistryPointsView,
        this._entryPointsView.getRootElement().classList.add("ut-squad-chemistry-entry-points"),
        e.appendChild(this._entryPointsView.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadChemistrySummaryEntryView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__fallback = null,
    this._badge.destroy(),
    this._entryPointsView.destroy()
}
,
UTSquadChemistrySummaryEntryView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var __spreadArrays = this && this.__spreadArrays || function() {
    for (var e = 0, t = 0, i = arguments.length; t < i; t++)
        e += arguments[t].length;
    var o = Array(e)
      , n = 0;
    for (t = 0; t < i; t++)
        for (var r = arguments[t], s = 0, a = r.length; s < a; s++,
        n++)
            o[n] = r[s];
    return o
}
  , UTSquadStatsView = function(t) {
    function UTSquadStatsView() {
        return null !== t && t.apply(this, arguments) || this
    }
    return __extends(UTSquadStatsView, t),
    UTSquadStatsView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this.__chemistryLabel.textContent = e.localize("squad.chemistry.label"),
        this._showChemistryBtn.init()
    }
    ,
    UTSquadStatsView.prototype.set = function(e, t) {
        this.setChemistry(e)
    }
    ,
    UTSquadStatsView.prototype.setChemistry = function(e) {
        var t = services.Localization
          , i = t.localize("squad.chemistry.fraction", [e.toString(), UTSquadEntity.TOTAL_MAX_CHEM.toString()])
          , o = t.localize("squad.chemistry.label") + " " + i;
        this.__chemistryLabel.textContent = o
    }
    ,
    UTSquadStatsView.prototype.setChemistryEntries = function(e) {
        var i = this
          , t = __spreadArrays(e, [null, null, null]).slice(0, 3);
        this.removeSubviews(),
        t.forEach(function(e) {
            var t = new UTSquadChemistrySummaryEntryView;
            t.init(),
            null != e ? t.render(e) : t.renderEmpty(),
            i.addSubview(t, i.__chemistryContainer)
        }),
        this.layoutSubviews()
    }
    ,
    UTSquadStatsView.prototype.getShowChemistryButton = function() {
        return this._showChemistryBtn
    }
    ,
    UTSquadStatsView
}(UTView);
UTSquadStatsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-summary-info--right"),
        e.classList.add("ut-squad-summary-info");
        var t = document.createElement("div");
        t.classList.add("chemistry-inline"),
        t.classList.add("chemistry");
        var i = document.createElement("div");
        i.classList.add("chemistry-summary"),
        this.__chemistryLabel = document.createElement("span"),
        this.__chemistryLabel.classList.add("ut-squad-summary-label"),
        i.appendChild(this.__chemistryLabel),
        this.__chemistryContainer = document.createElement("div"),
        this.__chemistryContainer.classList.add("chemistry-container"),
        i.appendChild(this.__chemistryContainer),
        t.appendChild(i),
        e.appendChild(t);
        var o = document.createElement("div");
        o.classList.add("chemistry-button"),
        this._showChemistryBtn = new UTChemistryButtonControl,
        o.appendChild(this._showChemistryBtn.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadStatsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__chemistryLabel = null,
    this.__chemistryContainer = null,
    this._showChemistryBtn.destroy()
}
,
UTSquadStatsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCSquadStatsView = function(e) {
    function UTSBCSquadStatsView() {
        return e.call(this) || this
    }
    return __extends(UTSBCSquadStatsView, e),
    UTSBCSquadStatsView.prototype.init = function() {
        e.prototype.init.call(this),
        this.__ratingLabel.textContent = services.Localization.localize("squads.rating")
    }
    ,
    UTSBCSquadStatsView.prototype.set = function(e, t) {
        var i = services.Localization
          , o = e.toString()
          , n = UTSquadEntity.TOTAL_MAX_CHEM.toString()
          , r = i.localize("squad.chemistry.fraction", [o, n]);
        this.__chemistryValue.textContent = r,
        this._ratingStars.setRating(t)
    }
    ,
    UTSBCSquadStatsView.prototype.setChemistry = function(e) {
        var t = services.Localization
          , i = e.toString()
          , o = UTSquadEntity.TOTAL_MAX_CHEM.toString()
          , n = t.localize("squad.chemistry.fraction", [i, o]);
        this.__chemistryValue.textContent = n
    }
    ,
    UTSBCSquadStatsView.prototype.setRating = function(e, t) {
        void 0 === t && (t = !1),
        this._ratingStars.setRating(e, t)
    }
    ,
    UTSBCSquadStatsView
}(UTSquadStatsView);
UTSBCSquadStatsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-summary-info--right"),
        e.classList.add("ut-squad-summary-info");
        var t = document.createElement("div");
        t.classList.add("rating"),
        this.__ratingLabel = document.createElement("span"),
        this.__ratingLabel.classList.add("ut-squad-summary-label"),
        t.appendChild(this.__ratingLabel),
        this._ratingStars = new UTSquadStarRatingView,
        t.appendChild(this._ratingStars.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("chemistry"),
        this.__chemistryLabel = document.createElement("span"),
        this.__chemistryLabel.classList.add("ut-squad-summary-label"),
        i.appendChild(this.__chemistryLabel),
        this.__chemistryValue = document.createElement("span"),
        this.__chemistryValue.classList.add("ut-squad-summary-value"),
        i.appendChild(this.__chemistryValue),
        this._showChemistryBtn = new UTImageButtonControl,
        this._showChemistryBtn.getRootElement().classList.add("chevron-btn"),
        i.appendChild(this._showChemistryBtn.getRootElement()),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCSquadStatsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__ratingLabel = null,
    this._ratingStars.destroy(),
    this.__chemistryLabel = null,
    this.__chemistryValue = null,
    this._showChemistryBtn.destroy()
}
,
UTSBCSquadStatsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadSummaryBannerView = function(t) {
    function UTSquadSummaryBannerView() {
        return t.call(this) || this
    }
    return __extends(UTSquadSummaryBannerView, t),
    UTSquadSummaryBannerView.prototype.init = function() {
        if (t.prototype.init.call(this),
        this._squadStats.init(),
        this._ratingStars.init(),
        this.__formationTitle) {
            var e = services.Localization;
            this.__formationTitle.textContent = e.localize("squads.formation"),
            this.__labelRating.textContent = e.localize("squads.rating")
        }
    }
    ,
    UTSquadSummaryBannerView.prototype.setChemistryAndRating = function(e, t, i) {
        this.setChemistry(e),
        this.setRating(t, i)
    }
    ,
    UTSquadSummaryBannerView.prototype.setChemistry = function(e) {
        this._squadStats.setChemistry(e)
    }
    ,
    UTSquadSummaryBannerView.prototype.setChemistryEntries = function(e) {
        this._squadStats.setChemistryEntries(e)
    }
    ,
    UTSquadSummaryBannerView.prototype.setRating = function(e, t) {
        this._ratingStars.setRating(e, t)
    }
    ,
    UTSquadSummaryBannerView.prototype.setFormation = function(e) {
        this.__formationTitle && (this.__formationTitle.textContent = services.Localization.localize("squads.formation.label", [e]))
    }
    ,
    UTSquadSummaryBannerView.prototype.show = function() {
        this.setDisplay(!0)
    }
    ,
    UTSquadSummaryBannerView.prototype.hide = function() {
        this.setDisplay(!1)
    }
    ,
    UTSquadSummaryBannerView.prototype.getShowChemistryButton = function() {
        return this._squadStats.getShowChemistryButton()
    }
    ,
    UTSquadSummaryBannerView
}(UTView);
UTSquadSummaryBannerView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-summary");
        var t = document.createElement("div");
        t.classList.add("ut-squad-summary-info"),
        this.__formationTitle = document.createElement("h1"),
        this.__formationTitle.classList.add("ut-squad-summary-label"),
        t.appendChild(this.__formationTitle);
        var i = document.createElement("div");
        i.classList.add("rating-inline"),
        this.__labelRating = document.createElement("span"),
        this.__labelRating.classList.add("ut-squad-summary-label"),
        i.appendChild(this.__labelRating),
        this._ratingStars = new UTSquadStarRatingView,
        i.appendChild(this._ratingStars.getRootElement()),
        t.appendChild(i),
        e.appendChild(t),
        this._squadStats = new UTSquadStatsView,
        e.appendChild(this._squadStats.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadSummaryBannerView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__formationTitle = null,
    this.__labelRating = null,
    this._ratingStars.destroy(),
    this._squadStats.destroy()
}
,
UTSquadSummaryBannerView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadOverviewView = function(s) {
    function UTSquadOverviewView() {
        var t = s.call(this) || this;
        return t.animationDuration = 500,
        t._detailsButton = null,
        t.dragEndHandler = function(e) {
            return t.onDragEnd(e)
        }
        ,
        t.dragMoveHandler = function(e) {
            return t.onDragMove(e)
        }
        ,
        t.dragOverHandler = function(e) {
            return t.onDroppable(e)
        }
        ,
        t.dragStartHandler = function(e) {
            return t.onDragStart(e)
        }
        ,
        t.dropHandler = function(e) {
            return t.onDrop(e)
        }
        ,
        t.leftDockClientRect = null,
        t.leftTabClientRect = null,
        t.rightDockClientRect = null,
        t.rightTabClientRect = null,
        t.slotViews = [],
        t.swapCallback = null,
        t._summaryPanel = null,
        t.utilDragDrop = null,
        t.renderConcepts = !0,
        t.renderManager = !0,
        t.renderRestrictions = !0,
        t
    }
    return __extends(UTSquadOverviewView, s),
    Object.defineProperty(UTSquadOverviewView.prototype, "renderChemistry", {
        get: function() {
            return !this._pitch || this._pitch.renderChemistry
        },
        set: function(e) {
            this._pitch && (this._pitch.renderChemistry = e)
        },
        enumerable: !1,
        configurable: !0
    }),
    UTSquadOverviewView.prototype.init = function() {
        s.prototype.init.call(this),
        this._pitch.init();
        var e = this.getSummaryPanel();
        e.init(),
        this.getRootElement().prepend(e.getRootElement()),
        this._initTabViews(),
        this.setInteractionState(!0),
        window.addEventListener(EventType.RESIZE, this.onWindowResize.bind(this), !1)
    }
    ,
    UTSquadOverviewView.prototype.dealloc = function() {
        var e, t, i, o, n, r;
        this.__draggableArea.removeEventListener("eadragstart", this.dragStartHandler),
        this.__draggableArea.removeEventListener("eadragmove", this.dragMoveHandler),
        this.__draggableArea.removeEventListener("eadragover", this.dragOverHandler),
        this.__draggableArea.removeEventListener("eadragend", this.dragEndHandler),
        this.__draggableArea.removeEventListener("eadrop", this.dropHandler),
        s.prototype.dealloc.call(this),
        window.removeEventListener(EventType.RESIZE, this.onWindowResize.bind(this), !1),
        null === (e = this._detailsButton) || void 0 === e || e.dealloc(),
        (this._detailsButton = null) === (t = this.leftTab) || void 0 === t || t.dealloc(),
        null === (i = this.rightTab) || void 0 === i || i.dealloc(),
        null === (o = this.leftDock) || void 0 === o || o.dealloc(),
        null === (n = this.rightDock) || void 0 === n || n.dealloc(),
        this.slotViews = [],
        (this.swapCallback = null) === (r = this._summaryPanel) || void 0 === r || r.dealloc(),
        this._summaryPanel = null,
        this.utilDragDrop = null
    }
    ,
    UTSquadOverviewView.prototype.getSummaryPanel = function() {
        return this._summaryPanel || (this._summaryPanel = new UTSquadSummaryBannerView),
        this._summaryPanel
    }
    ,
    UTSquadOverviewView.prototype.setInteractionState = function(e) {
        s.prototype.setInteractionState.call(this, e),
        this._pitch.setInteractionState(e)
    }
    ,
    UTSquadOverviewView.prototype.setTheme = function(e) {
        this._pitch.setTheme(e)
    }
    ,
    UTSquadOverviewView.prototype.setType = function(e) {
        this._pitch.setType(e)
    }
    ,
    UTSquadOverviewView.prototype.setMode = function(e) {
        this._pitch.setMode(e)
    }
    ,
    UTSquadOverviewView.prototype.setChemistry = function(e) {
        var t;
        null === (t = this._summaryPanel) || void 0 === t || t.setChemistry(e)
    }
    ,
    UTSquadOverviewView.prototype.setChemistryEntries = function(e) {
        var t;
        null === (t = this._summaryPanel) || void 0 === t || t.setChemistryEntries(e)
    }
    ,
    UTSquadOverviewView.prototype.setRating = function(e, t) {
        var i;
        null === (i = this._summaryPanel) || void 0 === i || i.setRating(e, t)
    }
    ,
    UTSquadOverviewView.prototype.setFormation = function(e) {
        var t, i = this, o = this.isInteractionEnabled();
        this.setInteractionState(!1),
        null === (t = this._summaryPanel) || void 0 === t || t.setFormation(e.displayName),
        requestAnimationFrame(function() {
            i._pitch.setFormation(e.name, function() {
                return i.setInteractionState(o)
            })
        })
    }
    ,
    UTSquadOverviewView.prototype.setSquad = function(e) {
        var t, i, o, n = this;
        this._summaryPanel && (this._summaryPanel.setRating(e.getRating()),
        this._summaryPanel.setChemistry(e.getChemistry()));
        var r = this.getSelectedSlot()
          , s = null !== (t = null == r ? void 0 : r.getIndex()) && void 0 !== t ? t : -1
          , a = this.renderManager ? e.getFieldPlayers().concat(e.getManager()) : e.getFieldPlayers();
        this._pitch.setSlots(a, this.renderConcepts, this.renderChemistry, this.renderRestrictions),
        null === (i = this.leftDock) || void 0 === i || i.setSlots(e.getSubPlayers(), this.renderConcepts, this.renderRestrictions),
        null === (o = this.rightDock) || void 0 === o || o.setSlots(e.getReservePlayers(), this.renderConcepts, this.renderRestrictions),
        this.slotViews = this.getDropSlotViews(),
        this.slotViews.forEach(function(e) {
            e.addTarget(n, n.onSlotTapped, EventType.TAP),
            e.addTarget(n, n.onSlotMouseEnter, EventType.MOUSEENTER),
            e.addTarget(n, n.onSlotMouseLeave, EventType.MOUSELEAVE)
        }),
        0 <= s && this.selectSlot(s);
        var l = e.getFormation();
        l && this.setFormation(l)
    }
    ,
    UTSquadOverviewView.prototype.setSlotInteractionState = function(t, i) {
        this.slotViews.forEach(function(e) {
            return e.toggleClass(i, e.getIndex() === t)
        })
    }
    ,
    UTSquadOverviewView.prototype.removeSlotInteractionState = function(t, e) {
        var i = JSUtils.find(this.slotViews, function(e) {
            return e.getIndex() === t
        });
        null == i || i.removeClass(e)
    }
    ,
    UTSquadOverviewView.prototype.clearSlotInteractionState = function(t) {
        this.slotViews.forEach(function(e) {
            return e.removeClass(t)
        })
    }
    ,
    UTSquadOverviewView.prototype.selectSlot = function(e) {
        this.setSlotInteractionState(e, enums.UISlotInteractionState.SELECTED)
    }
    ,
    UTSquadOverviewView.prototype.getSelectedSlot = function() {
        return JSUtils.find(this.slotViews, function(e) {
            return e.hasClass(enums.UISlotInteractionState.SELECTED)
        })
    }
    ,
    UTSquadOverviewView.prototype.updatePitchChemistry = function(e) {
        this.renderChemistry && this._pitch.updateChemistry(e)
    }
    ,
    UTSquadOverviewView.prototype.updateDocksChemistry = function(e) {
        var t, i;
        this.renderChemistry && (null === (t = this.leftDock) || void 0 === t || t.updateChemistry(e),
        null === (i = this.rightDock) || void 0 === i || i.updateChemistry(e))
    }
    ,
    UTSquadOverviewView.prototype.updateSlot = function(e) {
        var t, i;
        this._pitch.updateSlot(e, this.renderConcepts, this.renderChemistry),
        null === (t = this.leftDock) || void 0 === t || t.updateSlot(e, this.renderConcepts),
        null === (i = this.rightDock) || void 0 === i || i.updateSlot(e, this.renderConcepts)
    }
    ,
    UTSquadOverviewView.prototype.setDockLocalization = function() {
        var e, t, i;
        if (null === (e = this.utilDragDrop) || void 0 === e ? void 0 : e.enabled) {
            var o = services.Localization;
            null === (t = this.leftDock) || void 0 === t || t.setInstructions(o.localize("dock.label.dragSubsIntoPitchToSwap")),
            null === (i = this.rightDock) || void 0 === i || i.setInstructions(o.localize("dock.label.dragResIntoPitchToSwap"))
        }
    }
    ,
    UTSquadOverviewView.prototype._initTabViews = function() {
        var e = this
          , t = services.Localization;
        this.leftDock = new UTSquadSlotDockView,
        this.rightDock = new UTSquadSlotDockView,
        this.leftTab = new UTSquadTabButtonControl,
        this.rightTab = new UTSquadTabButtonControl,
        this.leftTab.init(),
        this.rightTab.init(),
        this.leftDock.init(),
        this.rightDock.init(),
        this.leftTab.addTarget(this, function() {
            return e.onDockBtnPressed(e.leftDock, e.leftTab, UTSquadOverviewView.DropAreas.LEFT_DOCK, e.rightDock)
        }, EventType.TAP),
        this.rightTab.addTarget(this, function() {
            return e.onDockBtnPressed(e.rightDock, e.rightTab, UTSquadOverviewView.DropAreas.RIGHT_DOCK, e.leftDock)
        }, EventType.TAP),
        this.leftTab.setText(t.localize("extendedPlayerInfo.sub")),
        this.leftTab.assignLeft(),
        this.rightTab.setText(t.localize("extendedPlayerInfo.res")),
        this.rightTab.assignRight(),
        this.leftTab.setType(enums.UISquadTabTypes.DOCK_TAB),
        this.rightTab.setType(enums.UISquadTabTypes.DOCK_TAB),
        this.setDockLocalization(),
        this.addSubview(this.leftTab, this.__draggableArea),
        this.addSubview(this.rightTab, this.__draggableArea),
        this.addSubview(this.leftDock, this.__draggableArea),
        this.addSubview(this.rightDock, this.__draggableArea),
        this.layoutSubviews()
    }
    ,
    UTSquadOverviewView.prototype.initDragDrop = function(e, t) {
        this.utilDragDrop ? this.utilDragDrop.disable() : (this.utilDragDrop = new UTDragDropUtils(this.__draggableArea),
        this.__draggableArea.addEventListener("eadragstart", this.dragStartHandler),
        this.__draggableArea.addEventListener("eadragmove", this.dragMoveHandler),
        this.__draggableArea.addEventListener("eadragover", this.dragOverHandler),
        this.__draggableArea.addEventListener("eadragend", this.dragEndHandler),
        this.__draggableArea.addEventListener("eadrop", this.dropHandler),
        this.setupDropContainers()),
        this.setupDropSlots(e, t),
        this.utilDragDrop.enable(),
        this.setDockLocalization()
    }
    ,
    UTSquadOverviewView.prototype.updateDropContainer = function(e) {
        this.utilDragDrop && (this.utilDragDrop.setDroppablesContainer(e),
        this.utilDragDrop.updateCollisionData())
    }
    ,
    UTSquadOverviewView.prototype.getDropSlotViews = function() {
        var e = this._pitch.getSlotViews();
        return this.leftDock && (e = e.concat(this.leftDock.getSlotViews())),
        this.rightDock && (e = e.concat(this.rightDock.getSlotViews())),
        e
    }
    ,
    UTSquadOverviewView.prototype.setupDropSlots = function(s, a) {
        var l = this;
        this.getDropSlotViews().forEach(function(e) {
            var t = e.getItemView();
            if (l.utilDragDrop && t) {
                var i = e.getIndex()
                  , o = 0 <= s.indexOf(i)
                  , n = 0 <= a.indexOf(i)
                  , r = i < UTSquadEntity.FIELD_PLAYERS;
                l.utilDragDrop.setDraggable(t, o),
                l.utilDragDrop.setDroppable(t, n),
                l.utilDragDrop.setSwapAnimation(t, o && r)
            }
        })
    }
    ,
    UTSquadOverviewView.prototype.setupDropContainers = function() {
        var e, t, i;
        null === (e = this.utilDragDrop) || void 0 === e || e.addDropContainer(UTSquadOverviewView.DropAreas.FIELD, this._pitch, !0),
        this.leftDock && (null === (t = this.utilDragDrop) || void 0 === t || t.addDropContainer(UTSquadOverviewView.DropAreas.LEFT_DOCK, this.leftDock)),
        this.rightDock && (null === (i = this.utilDragDrop) || void 0 === i || i.addDropContainer(UTSquadOverviewView.DropAreas.RIGHT_DOCK, this.rightDock))
    }
    ,
    UTSquadOverviewView.prototype.updateDockLayers = function(e) {
        var t, i, o, n, r = e.getRootElement().closest(".ut-squad-slot-dock-view"), s = null !== (i = null === (t = this.leftDock) || void 0 === t ? void 0 : t.getRootElement()) && void 0 !== i ? i : null, a = null !== (n = null === (o = this.rightDock) || void 0 === o ? void 0 : o.getRootElement()) && void 0 !== n ? n : null;
        r && s && r === s ? (s.style.zIndex = "3",
        a && (a.style.zIndex = "2")) : r && a && r === a && (s && (s.style.zIndex = "2"),
        a.style.zIndex = "3")
    }
    ,
    UTSquadOverviewView.prototype.resetDockLayers = function() {
        var e = this.leftDock ? this.leftDock.getRootElement() : null
          , t = this.rightDock ? this.rightDock.getRootElement() : null;
        e && (e.style.zIndex = "2"),
        t && (t.style.zIndex = "2")
    }
    ,
    UTSquadOverviewView.prototype.onWindowResize = function(e) {
        var t;
        this.closeDocks(),
        null === (t = this.utilDragDrop) || void 0 === t || t.updateInteractiveContainer()
    }
    ,
    UTSquadOverviewView.prototype.getSlotByIndex = function(t) {
        var e = this._pitch.getSlotViews();
        return this.leftDock && (e = e.concat(this.leftDock.getSlotViews())),
        this.rightDock && (e = e.concat(this.rightDock.getSlotViews())),
        e.filter(function(e) {
            return e.getIndex() === t
        })[0]
    }
    ,
    UTSquadOverviewView.prototype.onDragStart = function(e) {
        var l = this
          , t = this.getSlotByIndex(e.detail.index);
        this._triggerActions(enums.UISquadPitchEvent.DRAGSTART, e.detail),
        t.addClass("empty"),
        isPhone() || this.setSlotInteractionState(t.getIndex(), enums.UISlotInteractionState.SELECTED),
        this.updateDockLayers(t),
        requestAnimationFrame(function() {
            var e, t, i, o, n, r, s, a;
            l.leftTabClientRect = null !== (t = null === (e = l.leftTab) || void 0 === e ? void 0 : e.getBoundingClientRect()) && void 0 !== t ? t : null,
            l.rightTabClientRect = null !== (o = null === (i = l.rightTab) || void 0 === i ? void 0 : i.getBoundingClientRect()) && void 0 !== o ? o : null,
            l.leftDockClientRect = null !== (r = null === (n = l.leftDock) || void 0 === n ? void 0 : n.getBoundingClientRect()) && void 0 !== r ? r : null,
            l.rightDockClientRect = null !== (a = null === (s = l.rightDock) || void 0 === s ? void 0 : s.getBoundingClientRect()) && void 0 !== a ? a : null
        })
    }
    ,
    UTSquadOverviewView.prototype.onDragMove = function(e) {
        function hSa(e, t) {
            return !!t && (e.clientY >= t.top && e.clientY <= t.bottom && e.clientX >= t.left && e.clientX <= t.right)
        }
        function lSa() {
            var e, t, i, o, n;
            r.leftTabClientRect = null !== (t = null === (e = r.leftTab) || void 0 === e ? void 0 : e.getBoundingClientRect()) && void 0 !== t ? t : null,
            r.leftDockClientRect = null !== (o = null === (i = r.leftDock) || void 0 === i ? void 0 : i.getBoundingClientRect()) && void 0 !== o ? o : null,
            null === (n = r.utilDragDrop) || void 0 === n || n.updateCollisionData()
        }
        function mSa() {
            var e, t, i, o, n;
            r.rightTabClientRect = null !== (t = null === (e = r.rightTab) || void 0 === e ? void 0 : e.getBoundingClientRect()) && void 0 !== t ? t : null,
            r.rightDockClientRect = null !== (o = null === (i = r.rightDock) || void 0 === i ? void 0 : i.getBoundingClientRect()) && void 0 !== o ? o : null,
            null === (n = r.utilDragDrop) || void 0 === n || n.updateCollisionData()
        }
        var t, i, r = this, o = e.detail.touch;
        !function() {
            return !(!r.leftDock && !r.rightDock) && (!function() {
                var e, t, i;
                return null !== (i = (null === (e = r.leftDock) || void 0 === e ? void 0 : e.isAnimating) || (null === (t = r.rightDock) || void 0 === t ? void 0 : t.isAnimating)) && void 0 !== i && i
            }() && !function() {
                var e, t, i;
                return null !== (i = (null === (e = r.leftDock) || void 0 === e ? void 0 : e.isVisible) || (null === (t = r.rightDock) || void 0 === t ? void 0 : t.isVisible)) && void 0 !== i && i
            }())
        }
        .call(this) ? this.leftDockClientRect && (null === (t = this.leftDock) || void 0 === t ? void 0 : t.isVisible) && !this.leftDock.isAnimating && o.clientY < this.leftDockClientRect.top ? this.closeLeftDock(function() {
            return lSa()
        }) : this.rightDockClientRect && (null === (i = this.rightDock) || void 0 === i ? void 0 : i.isVisible) && !this.rightDock.isAnimating && o.clientY < this.rightDockClientRect.top && this.closeRightDock(function() {
            return mSa()
        }) : this.leftDock && hSa(o, this.leftTabClientRect) ? this.openLeftDock(lSa) : this.rightDock && hSa(o, this.rightTabClientRect) && this.openRightDock(mSa)
    }
    ,
    UTSquadOverviewView.prototype.onDroppable = function(e) {
        this._triggerActions(enums.UISquadPitchEvent.DRAGDROPPABLE, e.detail)
    }
    ,
    UTSquadOverviewView.prototype.onDragEnd = function(e) {
        var t, i = this, o = this.getSlotByIndex(e.detail.index), n = o.getItemView();
        if (n)
            if (null === (t = this.utilDragDrop) || void 0 === t ? void 0 : t.moved) {
                var r = n.getRootElement()
                  , s = o.getBoundingClientRect()
                  , a = [{
                    top: s.top + "px",
                    left: s.left + "px"
                }];
                this.setInteractionState(!1),
                this._triggerActions(enums.UISquadPitchEvent.DRAGEND, e.detail),
                r.animate(a, {
                    duration: this.animationDuration
                }).onfinish = function(e) {
                    return i.onDragReset(o)
                }
            } else
                this.onDragReset(o)
    }
    ,
    UTSquadOverviewView.prototype.onDrop = function(e) {
        var t;
        this.clearSlotInteractionState(enums.UISlotInteractionState.SELECTED),
        this.setInteractionState(!1),
        this.swapElements(e.detail.dragging, e.detail.target),
        null === (t = this.utilDragDrop) || void 0 === t || t.updateDropSlotCache(),
        this._triggerActions(enums.UISquadPitchEvent.DRAGDROP, e.detail)
    }
    ,
    UTSquadOverviewView.prototype.onDragReset = function(e) {
        var t, i, o;
        e.removeClass("empty"),
        null === (t = this.utilDragDrop) || void 0 === t || t.resetDrag(),
        (null === (i = this.rightDock) || void 0 === i ? void 0 : i.isVisible) ? this.updateDropContainer(UTSquadOverviewView.DropAreas.RIGHT_DOCK) : (null === (o = this.leftDock) || void 0 === o ? void 0 : o.isVisible) && this.updateDropContainer(UTSquadOverviewView.DropAreas.LEFT_DOCK),
        this.resetDockLayers(),
        this.setInteractionState(!0)
    }
    ,
    UTSquadOverviewView.prototype.swapElements = function(e, t) {
        var i, o = this, n = this.getSlotByIndex(e), r = this.getSlotByIndex(t), s = n.getBoundingClientRect(), a = r.getBoundingClientRect(), l = n.getItemView(), c = r.getItemView(), d = null === (i = null == c ? void 0 : c.hasClass("empty")) || void 0 === i || i, u = null == c ? void 0 : c.getRootElement(), h = null == l ? void 0 : l.getRootElement(), p = [{
            top: a.top + "px",
            left: a.left + "px"
        }], _ = [{
            top: s.top + "px",
            left: s.left + "px"
        }];
        if (c && l && (!d && u && (c.addClass("dropTarget"),
        u.style.left = a.left + "px",
        u.style.top = a.top + "px"),
        r.addClass("empty"),
        n.getRootElement().appendChild(c.getRootElement()),
        r.getRootElement().appendChild(l.getRootElement()),
        h && (h.animate(p, {
            duration: this.animationDuration
        }).onfinish = function(e) {
            return o.onDragReset(r)
        }
        ),
        u)) {
            function iTa() {
                n.removeClass("empty"),
                n.setItemView(c),
                r.setItemView(l),
                o._triggerActions(enums.UISquadPitchEvent.ITEM_SWAP, {
                    swapFrom: e,
                    swapTo: t
                })
            }
            d ? iTa() : (n.addClass("noBackground"),
            u.animate(_, {
                duration: this.animationDuration
            }).onfinish = function(e) {
                c.removeClass("dropTarget"),
                u.style.removeProperty("left"),
                u.style.removeProperty("top"),
                n.removeClass("noBackground"),
                iTa()
            }
            )
        }
    }
    ,
    UTSquadOverviewView.prototype.closeDocks = function(e) {
        this.closeLeftDock(e),
        this.closeRightDock(e)
    }
    ,
    UTSquadOverviewView.prototype.onDockBtnPressed = function(e, t, i, o) {
        !e || !t || null != o && o.isVisible || null != o && o.isAnimating || (e.isVisible ? this.closeDock(e, t) : this.openDock(e, t, i))
    }
    ,
    UTSquadOverviewView.prototype.closeDock = function(e, t, i) {
        DebugUtils.Assert(JSUtils.isValid(e), "variable 'dock' must be valid"),
        DebugUtils.Assert(JSUtils.isValid(t), "variable 'dockTab' must be valid"),
        e.isVisible && !e.isAnimating && (t.setArrowDirection("up"),
        this.updateDropContainer(UTSquadOverviewView.DropAreas.FIELD),
        e.close(i),
        requestAnimationFrame(function() {
            t.getRootElement().style.bottom = "0px"
        }))
    }
    ,
    UTSquadOverviewView.prototype.openDock = function(e, t, i, o) {
        DebugUtils.Assert(JSUtils.isValid(e), "variable 'dock' must be valid"),
        DebugUtils.Assert(JSUtils.isValid(t), "variable 'dockTab' must be valid"),
        e.isVisible || e.isAnimating || (t.setArrowDirection("down"),
        e.open(o),
        requestAnimationFrame(function() {
            t.getRootElement().style.bottom = e.getContentHeight() + "px"
        }),
        this.updateDropContainer(i))
    }
    ,
    UTSquadOverviewView.prototype.closeRightDock = function(e) {
        this.rightDock && this.rightTab && this.closeDock(this.rightDock, this.rightTab, e)
    }
    ,
    UTSquadOverviewView.prototype.closeLeftDock = function(e) {
        this.leftDock && this.leftTab && this.closeDock(this.leftDock, this.leftTab, e)
    }
    ,
    UTSquadOverviewView.prototype.openRightDock = function(e) {
        this.rightDock && this.rightTab && this.openDock(this.rightDock, this.rightTab, UTSquadOverviewView.DropAreas.RIGHT_DOCK, e)
    }
    ,
    UTSquadOverviewView.prototype.openLeftDock = function(e) {
        this.leftDock && this.leftTab && this.openDock(this.leftDock, this.leftTab, UTSquadOverviewView.DropAreas.LEFT_DOCK, e)
    }
    ,
    UTSquadOverviewView.prototype.setSwapCallback = function(e) {
        this.swapCallback = e
    }
    ,
    UTSquadOverviewView.prototype.getPitch = function() {
        return this._pitch
    }
    ,
    UTSquadOverviewView.prototype.getRightTab = function() {
        return this.rightTab
    }
    ,
    UTSquadOverviewView.prototype.getLeftTab = function() {
        return this.leftTab
    }
    ,
    UTSquadOverviewView.prototype.getLeftDock = function() {
        return this.leftDock
    }
    ,
    UTSquadOverviewView.prototype.getRightDock = function() {
        return this.rightDock
    }
    ,
    UTSquadOverviewView.prototype.getDetailsButton = function() {
        return this._detailsButton || (this._detailsButton = new UTFlatButtonControl,
        this._detailsButton.init(),
        this._detailsButton.addClass("pitch-icon"),
        this.addSubview(this._detailsButton, this.__draggableArea),
        this.layoutSubviews()),
        this._detailsButton
    }
    ,
    UTSquadOverviewView.prototype.onSlotTapped = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(enums.UISquadPitchEvent.SLOT_SELECT, {
            slot: e,
            slotIndex: e.getIndex()
        })
    }
    ,
    UTSquadOverviewView.prototype.onSlotMouseEnter = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(EventType.MOUSEENTER, {
            slot: e,
            slotIndex: e.getIndex()
        })
    }
    ,
    UTSquadOverviewView.prototype.onSlotMouseLeave = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(EventType.MOUSELEAVE, {
            slot: e,
            slotIndex: e.getIndex()
        })
    }
    ,
    UTSquadOverviewView.prototype.getShowChemistryButton = function() {
        var e, t;
        return null !== (t = null === (e = this._summaryPanel) || void 0 === e ? void 0 : e.getShowChemistryButton()) && void 0 !== t ? t : null
    }
    ,
    UTSquadOverviewView.DropAreas = Object.freeze({
        FIELD: "field",
        LEFT_DOCK: "leftDock",
        RIGHT_DOCK: "rightDock"
    }),
    UTSquadOverviewView
}(UTTargetActionView);
UTSquadOverviewView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-overview"),
        this.__draggableArea = document.createElement("div"),
        this.__draggableArea.classList.add("ut-draggable"),
        this._pitch = new UTSquadPitchView,
        this.__draggableArea.appendChild(this._pitch.getRootElement()),
        e.appendChild(this.__draggableArea),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadOverviewView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__draggableArea = null,
    this._pitch.destroy()
}
,
UTSquadOverviewView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadChemistryCondensedEntryView = function(e) {
    function UTSquadChemistryCondensedEntryView() {
        return e.call(this) || this
    }
    return __extends(UTSquadChemistryCondensedEntryView, e),
    UTSquadChemistryCondensedEntryView.prototype.init = function() {
        e.prototype.init.call(this),
        this._badge.init(),
        this._currentPoints.init(),
        this._nextPoints.init()
    }
    ,
    UTSquadChemistryCondensedEntryView.prototype.render = function(e) {
        this.renderIcons(e),
        this.loadAsset(e.typeId, e.metaId),
        this._currentPoints.render(e.points),
        this._nextPoints.render(e.points + 1);
        var t = e.currentThresholdIndex
          , i = e.getThresholdContributionCount(t) - e.getThresholdContributions(t);
        this.__progress.innerHTML = services.Localization.localize("chemistry.nextpoint", [i.toString(), '<span class="fut_icon icon_player_faction counted"></span>'])
    }
    ,
    UTSquadChemistryCondensedEntryView.prototype.renderWithDiff = function(e, t) {
        var i = null;
        if (e ? i = e : t && (i = t),
        i) {
            this.loadAsset(i.typeId, i.metaId),
            this.renderIconsWithDiff(i, e, t),
            this._currentPoints.render(i.points),
            this._nextPoints.render(i.points + 1);
            var o = i.currentThresholdIndex
              , n = i.getThresholdContributionCount(o) - i.getThresholdContributions(o);
            this.__progress.innerHTML = services.Localization.localize("chemistry.nextpoint", [n.toString(), '<span class="fut_icon icon_player_faction counted"></span>'])
        } else
            DebugUtils.Assert(!1, "Asset was called with two null params")
    }
    ,
    UTSquadChemistryCondensedEntryView.prototype.renderIcons = function(e) {
        var t = e.potentialThresholdIndex
          , i = e.currentThresholdIndex
          , o = e.getThresholdContributionCount(i);
        DOMKit.empty(this.__threshold);
        for (var n = 0; n < o; n++) {
            var r = document.createElement("span");
            DOMKit.addClass(r, "fut_icon icon_player_faction"),
            e.getThresholdContributions(i) > n ? DOMKit.addClass(r, "counted") : e.getThresholdPotentialContributions(t) > n && DOMKit.addClass(r, "potential"),
            this.__threshold.appendChild(r)
        }
    }
    ,
    UTSquadChemistryCondensedEntryView.prototype.renderIconsWithDiff = function(e, t, i) {
        var o, n, r = e.potentialThresholdIndex, s = e.getThresholdContributionCount(r);
        DOMKit.empty(this.__threshold);
        for (var a = null !== (o = null == t ? void 0 : t.getThresholdContributions(r)) && void 0 !== o ? o : 0, l = null !== (n = null == i ? void 0 : i.getThresholdContributions(r)) && void 0 !== n ? n : 0, c = 0; c < s; c++) {
            var d = document.createElement("span");
            DOMKit.addClass(d, "fut_icon icon_player_faction"),
            c < a ? l <= c ? DOMKit.addClass(d, "positive") : DOMKit.addClass(d, "counted") : c < l && (a <= l ? DOMKit.addClass(d, "negative") : l < a && DOMKit.addClass(d, "counted")),
            this.__threshold.appendChild(d)
        }
    }
    ,
    UTSquadChemistryCondensedEntryView.prototype.getAssetUri = function(e, t) {
        var i = enums.UIThemeVariation.DARK;
        switch (e) {
        case ChemistryParamId.CLUB:
            return AssetLocationUtils.getBadgeImageUri(t, i);
        case ChemistryParamId.LEAGUE:
            return AssetLocationUtils.getLeagueImageUri(t, i);
        case ChemistryParamId.NATION:
            return AssetLocationUtils.getFlagImageUri(t)
        }
    }
    ,
    UTSquadChemistryCondensedEntryView.prototype.loadAsset = function(n, e) {
        var r = this
          , t = this.getAssetUri(n, e);
        this._badge.setResource(t, !0).observe(this, function(e, t) {
            if (e.unobserve(r),
            !t) {
                var i = UTItemEntity.DEFAULT_ASSET_ID
                  , o = r.getAssetUri(n, i);
                r._badge.setResource(o)
            }
        })
    }
    ,
    UTSquadChemistryCondensedEntryView
}(UTView);
UTSquadChemistryCondensedEntryView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-chemistry-condensed-entry");
        var t = document.createElement("div");
        t.classList.add("ut-squad-chemistry-condensed-entry-column"),
        this._badge = new UTImageView,
        this._badge.getRootElement().classList.add("ut-squad-chemistry-condensed-entry--badge"),
        t.appendChild(this._badge.getRootElement()),
        this.__threshold = document.createElement("div"),
        this.__threshold.classList.add("ut-squad-chemistry-condensed-entry--threshold"),
        t.appendChild(this.__threshold),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-squad-chemistry-condensed-entry-column"),
        this._currentPoints = new UTSquadSlotChemistryPointsView,
        this._currentPoints.getRootElement().classList.add("current"),
        this._currentPoints.getRootElement().classList.add("ut-squad-chemistry-condensed-entry--points"),
        i.appendChild(this._currentPoints.getRootElement()),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-squad-chemistry-condensed-entry-column"),
        this.__progress = document.createElement("div"),
        this.__progress.classList.add("ut-squad-chemistry-condensed-entry--progress"),
        o.appendChild(this.__progress),
        this._nextPoints = new UTSquadSlotChemistryPointsView,
        this._nextPoints.getRootElement().classList.add("next"),
        this._nextPoints.getRootElement().classList.add("ut-squad-chemistry-condensed-entry--points"),
        o.appendChild(this._nextPoints.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadChemistryCondensedEntryView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._badge.destroy(),
    this.__threshold = null,
    this._currentPoints.destroy(),
    this.__progress = null,
    this._nextPoints.destroy()
}
,
UTSquadChemistryCondensedEntryView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadChemistryFullEntryView = function(e) {
    function UTSquadChemistryFullEntryView() {
        return null !== e && e.apply(this, arguments) || this
    }
    return __extends(UTSquadChemistryFullEntryView, e),
    UTSquadChemistryFullEntryView.prototype.render = function(e) {
        this.loadAsset(e.typeId, e.metaId),
        this.renderIcons(e),
        this._entryPointsView.render(e.points, e.potentialPoints)
    }
    ,
    UTSquadChemistryFullEntryView.prototype.renderWithDiff = function(e, t) {
        var i = null;
        e ? i = e : t && (i = t),
        i ? (this.loadAsset(i.typeId, i.metaId),
        this.renderIconsWithDiff(e, t),
        this._entryPointsView.render(i.points, 0)) : DebugUtils.Assert(!1, "Asset was called with two null params")
    }
    ,
    UTSquadChemistryFullEntryView.prototype.renderIcons = function(o) {
        var n = this
          , r = o.contributionThresholds
          , e = [this.__firstThreshold, this.__secondThreshold, this.__thirdThreshold]
          , s = 0;
        this.playerIcons = [],
        e.forEach(function(e, t) {
            for (; s < r[t]; s++) {
                var i = document.createElement("span");
                DOMKit.addClass(i, "fut_icon icon_player_faction"),
                o.contributions > s ? DOMKit.addClass(i, "counted") : o.potentialContributions > s && DOMKit.addClass(i, "potential"),
                e.appendChild(i),
                n.playerIcons.push(i)
            }
        })
    }
    ,
    UTSquadChemistryFullEntryView.prototype.renderIconsWithDiff = function(a, l) {
        var c = this
          , d = [];
        a ? d = a.contributionThresholds : l && (d = l.contributionThresholds);
        var e = [this.__firstThreshold, this.__secondThreshold, this.__thirdThreshold]
          , u = 0;
        this.playerIcons = [],
        e.forEach(function(e, t) {
            for (var i, o; u < d[t]; u++) {
                var n = document.createElement("span");
                DOMKit.addClass(n, "fut_icon icon_player_faction");
                var r = null !== (i = null == a ? void 0 : a.contributions) && void 0 !== i ? i : 0
                  , s = null !== (o = null == l ? void 0 : l.contributions) && void 0 !== o ? o : 0;
                u < r ? s <= u ? DOMKit.addClass(n, "positive") : DOMKit.addClass(n, "counted") : u < s && (r < s ? DOMKit.addClass(n, "negative") : s <= r && DOMKit.addClass(n, "counted")),
                e.appendChild(n),
                c.playerIcons.push(n)
            }
        })
    }
    ,
    UTSquadChemistryFullEntryView.prototype.renderDiamond = function(e, t, i) {
        t <= i && DOMKit.addClass(e, "obtained")
    }
    ,
    UTSquadChemistryFullEntryView
}(UTSquadChemistryBaseEntryView);
UTSquadChemistryFullEntryView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-chemistry-full-entry");
        var t = document.createElement("span");
        t.classList.add("ut-squad-chemistry-full-entry--column");
        var i = document.createElement("div");
        i.classList.add("ut-squad-chemistry-full-entry--badge-container"),
        this._badge = new UTImageView,
        this._badge.getRootElement().classList.add("ut-squad-chemistry-full-entry--badge"),
        i.appendChild(this._badge.getRootElement()),
        t.appendChild(i),
        this.__firstThreshold = document.createElement("span"),
        this.__firstThreshold.classList.add("ut-squad-chemistry-full-entry--threshold"),
        t.appendChild(this.__firstThreshold),
        e.appendChild(t),
        this.__secondThreshold = document.createElement("span"),
        this.__secondThreshold.classList.add("ut-squad-chemistry-full-entry--column"),
        e.appendChild(this.__secondThreshold),
        this.__thirdThreshold = document.createElement("span"),
        this.__thirdThreshold.classList.add("ut-squad-chemistry-full-entry--column"),
        e.appendChild(this.__thirdThreshold),
        this._entryPointsView = new UTSquadSlotChemistryPointsView,
        this._entryPointsView.getRootElement().classList.add("ut-squad-chemistry-full-entry--points"),
        e.appendChild(this._entryPointsView.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadChemistryFullEntryView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._badge.destroy(),
    this.__firstThreshold = null,
    this.__secondThreshold = null,
    this.__thirdThreshold = null,
    this._entryPointsView.destroy()
}
,
UTSquadChemistryFullEntryView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadChemistryTutorialView = function(t) {
    function UTSquadChemistryTutorialView() {
        return null !== t && t.apply(this, arguments) || this
    }
    return __extends(UTSquadChemistryTutorialView, t),
    UTSquadChemistryTutorialView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this.__title.textContent = e.localize("squads.chemistry.tutorial.title"),
        this.__content.textContent = e.localize("squads.chemistry.tutorial.description"),
        this.__contributing.textContent = e.localize("squads.chemistry.tutorial.contributing"),
        this.__outOfPosition.textContent = e.localize("squads.chemistry.tutorial.outofposition"),
        this.__noContribution.textContent = e.localize("squads.chemistry.tutorial.nocontribution"),
        this._btnToggle.init(),
        this._btnToggle.addTarget(this, this._eToggle, EventType.TAP),
        this.setOpenState(!0)
    }
    ,
    UTSquadChemistryTutorialView.prototype._eToggle = function(e, t, i) {
        this.setOpenState(!this.isOpen)
    }
    ,
    UTSquadChemistryTutorialView.prototype.setOpenState = function(e) {
        this.isOpen = e,
        this._btnToggle.toggleClass("open", e),
        DOMKit.toggleClass(this.__shelf, "open", e)
    }
    ,
    UTSquadChemistryTutorialView.prototype.setCollapsibleState = function(e) {
        this._btnToggle.setInteractionState(e),
        this._btnToggle.setDisplay(e)
    }
    ,
    UTSquadChemistryTutorialView
}(UTTargetActionView);
UTSquadChemistryTutorialView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-chemistry-tutorial-view");
        var t = document.createElement("div");
        t.classList.add("ut-squad-chemistry-tutorial-view--header"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-squad-chemistry-tutorial-view--title"),
        t.appendChild(this.__title),
        this._btnToggle = new UTImageButtonControl,
        t.appendChild(this._btnToggle.getRootElement()),
        e.appendChild(t),
        this.__shelf = document.createElement("div"),
        this.__shelf.classList.add("ut-squad-chemistry-tutorial-view--shelf"),
        this.__content = document.createElement("p"),
        this.__content.classList.add("ut-squad-chemistry-tutorial-view--body"),
        this.__shelf.appendChild(this.__content),
        e.appendChild(this.__shelf);
        var i = document.createElement("div")
          , o = document.createElement("span");
        o.classList.add("counted"),
        o.classList.add("icon_player_faction"),
        o.classList.add("fut_icon"),
        i.appendChild(o),
        this.__contributing = document.createElement("span"),
        i.appendChild(this.__contributing),
        e.appendChild(i);
        var n = document.createElement("div")
          , r = document.createElement("span");
        r.classList.add("potential"),
        r.classList.add("icon_player_faction"),
        r.classList.add("fut_icon"),
        n.appendChild(r),
        this.__outOfPosition = document.createElement("span"),
        n.appendChild(this.__outOfPosition),
        e.appendChild(n);
        var s = document.createElement("div")
          , a = document.createElement("span");
        a.classList.add("icon_player_faction"),
        a.classList.add("fut_icon"),
        s.appendChild(a),
        this.__noContribution = document.createElement("span"),
        s.appendChild(this.__noContribution),
        e.appendChild(s),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadChemistryTutorialView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._btnToggle.destroy(),
    this.__shelf = null,
    this.__content = null,
    this.__contributing = null,
    this.__outOfPosition = null,
    this.__noContribution = null
}
,
UTSquadChemistryTutorialView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadChemistryCondensedHeaderView = function(e) {
    function UTSquadChemistryCondensedHeaderView() {
        return e.call(this) || this
    }
    return __extends(UTSquadChemistryCondensedHeaderView, e),
    UTSquadChemistryCondensedHeaderView.prototype.render = function() {
        var e = services.Localization;
        this.__firstColumn.textContent = e.localize("squad.chemistry.condensed.amount-in-squad"),
        this.__secondColumn.textContent = e.localize("squad.chemistry.condensed.current-points"),
        this.__thirdColumn.textContent = e.localize("squad.chemistry.condensed.next-threshold")
    }
    ,
    UTSquadChemistryCondensedHeaderView
}(UTView);
UTSquadChemistryCondensedHeaderView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("condensed"),
        e.classList.add("ut-squad-chemistry-header-view"),
        this.__firstColumn = document.createElement("span"),
        this.__firstColumn.classList.add("ut-squad-chemistry-header-view-column"),
        e.appendChild(this.__firstColumn),
        this.__secondColumn = document.createElement("span"),
        this.__secondColumn.classList.add("ut-squad-chemistry-header-view-column"),
        e.appendChild(this.__secondColumn),
        this.__thirdColumn = document.createElement("span"),
        this.__thirdColumn.classList.add("ut-squad-chemistry-header-view-column"),
        e.appendChild(this.__thirdColumn),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadChemistryCondensedHeaderView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__firstColumn = null,
    this.__secondColumn = null,
    this.__thirdColumn = null
}
,
UTSquadChemistryCondensedHeaderView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadChemistryFullHeaderView = function(e) {
    function UTSquadChemistryFullHeaderView() {
        return e.call(this) || this
    }
    return __extends(UTSquadChemistryFullHeaderView, e),
    UTSquadChemistryFullHeaderView.prototype.render = function() {
        this._pointsView1.render(1),
        this._pointsView2.render(2),
        this._pointsView3.render(3)
    }
    ,
    UTSquadChemistryFullHeaderView
}(UTView);
UTSquadChemistryFullHeaderView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("full"),
        e.classList.add("ut-squad-chemistry-header-view");
        var t = document.createElement("span");
        t.classList.add("ut-squad-chemistry-header-view-column"),
        this._pointsView1 = new UTSquadSlotChemistryPointsView,
        this._pointsView1.getRootElement().classList.add("ut-squad-chemistry-header-view-column--points"),
        t.appendChild(this._pointsView1.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("span");
        i.classList.add("ut-squad-chemistry-header-view-column"),
        this._pointsView2 = new UTSquadSlotChemistryPointsView,
        this._pointsView2.getRootElement().classList.add("ut-squad-chemistry-header-view-column--points"),
        i.appendChild(this._pointsView2.getRootElement()),
        e.appendChild(i);
        var o = document.createElement("span");
        o.classList.add("ut-squad-chemistry-header-view-column"),
        this._pointsView3 = new UTSquadSlotChemistryPointsView,
        this._pointsView3.getRootElement().classList.add("ut-squad-chemistry-header-view-column--points"),
        o.appendChild(this._pointsView3.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadChemistryFullHeaderView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._pointsView1.destroy(),
    this._pointsView2.destroy(),
    this._pointsView3.destroy()
}
,
UTSquadChemistryFullHeaderView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadChemistryPopupView = function(t) {
    function UTSquadChemistryPopupView() {
        var e = t.call(this) || this;
        return e.entryViews = [],
        e
    }
    return __extends(UTSquadChemistryPopupView, t),
    UTSquadChemistryPopupView.prototype.init = function() {
        t.prototype.init.call(this),
        this._tutorialView.init(),
        this._setupChemToggle(),
        this._closeBtn.init(),
        this._closeBtn.addTarget(this, this.onButtonSelected, EventType.TAP)
    }
    ,
    UTSquadChemistryPopupView.prototype.dealloc = function() {
        this.entryViews.forEach(function(e) {
            return e.dealloc()
        }),
        t.prototype.dealloc.call(this)
    }
    ,
    UTSquadChemistryPopupView.prototype.clearHeaderAndEntries = function() {
        this.entryViews.forEach(function(e) {
            return e.dealloc()
        }),
        this.entryViews = [],
        this.removeSubviews()
    }
    ,
    UTSquadChemistryPopupView.prototype.setChemistry = function(e) {
        var t = services.Localization
          , i = e.toString()
          , o = UTSquadEntity.TOTAL_MAX_CHEM.toString()
          , n = t.localize("squad.chemistry.fraction", [i, o])
          , r = t.localize("squad.chemistry.label") + " " + n;
        this.__titleText.textContent = r
    }
    ,
    UTSquadChemistryPopupView.prototype.setParameterChemistry = function(e, t) {
        var i = this;
        this._fullViewChemToggle.setDisplay(0 < e.length),
        0 == e.length ? this._tutorialView.setCollapsibleState(!1) : (this._tutorialView.setCollapsibleState(!0),
        this.entryViews.forEach(function(e) {
            return e.dealloc()
        }),
        t ? (this.entryViews = e.map(this.generateFullEntryView),
        this.addSubview(this.generateFullHeaderView(), this.__entries)) : (this.entryViews = e.map(this.generateCollapsedEntryView),
        this.addSubview(this.generateCondensedHeaderView(), this.__entries)),
        this.entryViews.forEach(function(e) {
            return i.addSubview(e, i.__entries)
        }),
        this.layoutSubviews())
    }
    ,
    UTSquadChemistryPopupView.prototype.generateCondensedHeaderView = function() {
        var e = new UTSquadChemistryCondensedHeaderView;
        return e.init(),
        e.render(),
        e
    }
    ,
    UTSquadChemistryPopupView.prototype.generateFullHeaderView = function() {
        var e = new UTSquadChemistryFullHeaderView;
        return e.init(),
        e.render(),
        e
    }
    ,
    UTSquadChemistryPopupView.prototype.generateCollapsedEntryView = function(e) {
        var t = new UTSquadChemistryCondensedEntryView;
        return t.init(),
        t.render(e),
        t
    }
    ,
    UTSquadChemistryPopupView.prototype.generateFullEntryView = function(e) {
        var t = new UTSquadChemistryFullEntryView;
        return t.init(),
        t.render(e),
        t
    }
    ,
    UTSquadChemistryPopupView.prototype._setupChemToggle = function() {
        this._fullViewChemToggle.init(),
        this._fullViewChemToggle.addToggleCell(UTSquadChemistryPopupView.CHEM_FULLVIEW_SLIDER, services.Localization.localize("squad.chemistry.fullview.title")),
        this._fullViewChemToggle.setDisplay(!1)
    }
    ,
    UTSquadChemistryPopupView.prototype.onButtonSelected = function(e, t, i) {
        e === this._closeBtn && this._triggerActions(UTSquadChemistryPopupView.Event.CLOSE)
    }
    ,
    UTSquadChemistryPopupView.prototype.getCollapsedChemToggle = function() {
        return this._fullViewChemToggle
    }
    ,
    UTSquadChemistryPopupView.Event = Object.freeze({
        CLOSE: "UTSquadChemistryPopupView.CLOSE"
    }),
    UTSquadChemistryPopupView.CHEM_FULLVIEW_SLIDER = "chemFullEnabled",
    UTSquadChemistryPopupView
}(UTTargetActionView);
UTSquadChemistryPopupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-chemistry-popup-view");
        var t = document.createElement("header");
        this.__titleText = document.createElement("h1"),
        t.appendChild(this.__titleText),
        this._closeBtn = new UTImageButtonControl,
        this._closeBtn.getRootElement().classList.add("exit-btn"),
        t.appendChild(this._closeBtn.getRootElement()),
        e.appendChild(t),
        this.__body = document.createElement("div"),
        this.__body.classList.add("bodySection");
        var i = document.createElement("div");
        i.classList.add("tutorialSection"),
        this._tutorialView = new UTSquadChemistryTutorialView,
        i.appendChild(this._tutorialView.getRootElement()),
        this._fullViewChemToggle = new UTToggleControlGroupView,
        i.appendChild(this._fullViewChemToggle.getRootElement()),
        this.__body.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("entriesSection"),
        this.__entries = document.createElement("div"),
        this.__entries.classList.add("ut-squad-chemistry-popup-view--entries"),
        o.appendChild(this.__entries),
        this.__body.appendChild(o),
        e.appendChild(this.__body),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadChemistryPopupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__titleText = null,
    this._closeBtn.destroy(),
    this.__body = null,
    this._tutorialView.destroy(),
    this._fullViewChemToggle.destroy(),
    this.__entries = null
}
,
UTSquadChemistryPopupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadChemistryPopupViewController = function(t) {
    function UTSquadChemistryPopupViewController() {
        var e = t.call(this) || this;
        return e.isFullViewToggled = !1,
        e
    }
    return __extends(UTSquadChemistryPopupViewController, t),
    UTSquadChemistryPopupViewController.prototype.viewDidAppear = function() {
        var e = this.getView();
        t.prototype.viewDidAppear.call(this),
        e.getCollapsedChemToggle().layoutSubviews(),
        e.getCollapsedChemToggle().addTarget(this, this.eChemFullViewToggled, EventType.CHANGE),
        e.getCollapsedChemToggle().toggleById(UTSquadChemistryPopupView.CHEM_FULLVIEW_SLIDER, !1),
        e.layoutSubviews(),
        e.addTarget(this, this.handleClose, UTSquadChemistryPopupView.Event.CLOSE)
    }
    ,
    UTSquadChemistryPopupViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        t.prototype.viewWillDisappear.call(this),
        e.getCollapsedChemToggle().removeTarget(this, this.eChemFullViewToggled, EventType.CHANGE),
        e.removeTarget(this, this.handleClose, UTSquadChemistryPopupView.Event.CLOSE)
    }
    ,
    UTSquadChemistryPopupViewController.prototype._getViewInstanceFromData = function() {
        return new UTSquadChemistryPopupView
    }
    ,
    UTSquadChemistryPopupViewController.prototype.handleClose = function(e, t, i) {
        this.onExit.notify(enums.UIDialogOptions.CANCEL)
    }
    ,
    UTSquadChemistryPopupViewController.prototype.handleKeyUpEvent = function(e) {
        e.key !== KeyboardKey.ESCAPE && e.key !== KeyboardKey.MS_ESCAPE || this.onExit.notify(enums.UIDialogOptions.CANCEL)
    }
    ,
    UTSquadChemistryPopupViewController.prototype.setChemistry = function(e) {
        var t = e.getChemistry()
          , i = e.getSortedParameterChemistry();
        this.currentSquadParameterVO = i;
        var o = this.getView();
        o.setChemistry(t),
        o.setParameterChemistry(i, this.isFullViewToggled)
    }
    ,
    UTSquadChemistryPopupViewController.prototype.eChemFullViewToggled = function(e, t, i) {
        if (i.id === UTSquadChemistryPopupView.CHEM_FULLVIEW_SLIDER) {
            var o = this.getView();
            o.clearHeaderAndEntries(),
            i.checked ? this.isFullViewToggled = !0 : this.isFullViewToggled = !1,
            o.setParameterChemistry(this.currentSquadParameterVO, this.isFullViewToggled)
        }
    }
    ,
    UTSquadChemistryPopupViewController
}(BasePopupViewController)
  , _this = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
this)
  , UTSquadOverviewViewController = function(r) {
    function UTSquadOverviewViewController() {
        var e = r.call(this) || this;
        return e.onDragEnd = new EAObservable,
        e.onItemMove = new EAObservable,
        e.onItemSwap = new EAObservable,
        e._squad = null,
        e._squadOverviewDelegate = null,
        e
    }
    return __extends(UTSquadOverviewViewController, r),
    UTSquadOverviewViewController.prototype.init = function() {
        if (!this.initialized) {
            r.prototype.init.call(this);
            var e = this.getView();
            getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_WINTER_THEME) && e.setTheme("winter")
        }
    }
    ,
    UTSquadOverviewViewController.prototype.initWithSquad = function(e) {
        this.initialized || (this._squad = e,
        this._squad.onDataUpdated.observe(this, this._eSquadDataChange),
        this.init())
    }
    ,
    UTSquadOverviewViewController.prototype.dealloc = function() {
        this.onItemMove.dealloc(),
        this.onItemSwap.dealloc(),
        this.onDragEnd.dealloc(),
        this._squad && (this._squad.onDataUpdated.unobserve(this),
        this._squad = null),
        this._squadOverviewDelegate = null,
        r.prototype.dealloc.call(this)
    }
    ,
    UTSquadOverviewViewController.prototype._getViewInstanceFromData = function() {
        return new UTSquadOverviewView
    }
    ,
    UTSquadOverviewViewController.prototype._getTelemetryId = function() {
        return "Squads - Squad Overview"
    }
    ,
    UTSquadOverviewViewController.prototype._trackPageView = function() {
        TelemetryManager.trackPage(TelemetryManager.Sections.SQUADS, this._getTelemetryId())
    }
    ,
    UTSquadOverviewViewController.prototype.getNavigationTitle = function() {
        var e, t;
        return null !== (t = null === (e = this._squad) || void 0 === e ? void 0 : e.getName()) && void 0 !== t ? t : BLANK_STR
    }
    ,
    UTSquadOverviewViewController.prototype.viewDidAppear = function() {
        var e, t, i, o = this.getView(), n = null !== (t = null === (e = this._squad) || void 0 === e ? void 0 : e.isTOTW()) && void 0 !== t && t;
        r.prototype.viewDidAppear.call(this),
        DebugUtils.Assert(this._squad instanceof UTSquadEntity, "View appearing on screen without a squad to display."),
        this._squad && this._pushSquadToView(this._squad),
        isPhone() && !n && o.getDetailsButton().addTarget(this, this._eDetailsButtonSelected, EventType.TAP),
        o.getPitch().addTarget(this, this._ePitchTapped, EventType.TAP),
        null === (i = o.getShowChemistryButton()) || void 0 === i || i.addTarget(this, this._showChemistry, EventType.TAP),
        o.addTarget(this, this._eItemTap, enums.UISquadPitchEvent.SLOT_SELECT),
        o.addTarget(this, this._eItemSwap, enums.UISquadPitchEvent.ITEM_SWAP),
        o.addTarget(this, this._eDragStart, enums.UISquadPitchEvent.DRAGSTART),
        o.addTarget(this, this._eDragEnd, enums.UISquadPitchEvent.DRAGEND),
        o.addTarget(this, this._eItemMouseEnter, EventType.MOUSEENTER),
        o.addTarget(this, this._eItemMouseLeave, EventType.MOUSELEAVE),
        getDefaultDispatcher().addObserver(AppNotification.UI_ITEM_STATE_CHANGE, this, this._nInfoStateChanged),
        this._trackPageView()
    }
    ,
    UTSquadOverviewViewController.prototype.viewWillDisappear = function() {
        var e, t, i, o = this.getView(), n = null !== (t = null === (e = this._squad) || void 0 === e ? void 0 : e.isTOTW()) && void 0 !== t && t;
        r.prototype.viewWillDisappear.call(this),
        getDefaultDispatcher().removeObserver(AppNotification.UI_ITEM_STATE_CHANGE, this),
        o.getPitch().removeTarget(this, this._ePitchTapped, EventType.TAP),
        isPhone() && !n && o.getDetailsButton().removeTarget(this, this._eDetailsButtonSelected, EventType.TAP),
        null === (i = o.getShowChemistryButton()) || void 0 === i || i.removeTarget(this, this._showChemistry, EventType.TAP),
        o.removeTarget(this, this._eItemTap, enums.UISquadPitchEvent.SLOT_SELECT),
        o.removeTarget(this, this._eItemSwap, enums.UISquadPitchEvent.ITEM_SWAP),
        o.removeTarget(this, this._eDragStart, enums.UISquadPitchEvent.DRAGSTART),
        o.removeTarget(this, this._eDragEnd, enums.UISquadPitchEvent.DRAGEND),
        o.removeTarget(this, this._eItemMouseEnter, EventType.MOUSEENTER),
        o.removeTarget(this, this._eItemMouseLeave, EventType.MOUSELEAVE)
    }
    ,
    UTSquadOverviewViewController.prototype.onWindowSizeChange = function() {
        this.getView().closeDocks()
    }
    ,
    UTSquadOverviewViewController.prototype._updateDragDrop = function() {
        var e, t, i = null !== (t = null === (e = this._squad) || void 0 === e ? void 0 : e.getNonBrickSlots(!0)) && void 0 !== t ? t : [];
        this.getView().initDragDrop(i.filter(function(e) {
            return e.isValid()
        }).map(function(e) {
            return e.index
        }), i.map(function(e) {
            return e.index
        }))
    }
    ,
    UTSquadOverviewViewController.prototype._pushSquadToView = function(e) {
        var t = this.getView();
        t.setType(e.isDream() ? "concept" : "standard"),
        t.setSquad(e),
        t.setChemistryEntries(e.getSortedParameterChemistry()),
        this._updateDragDrop()
    }
    ,
    UTSquadOverviewViewController.prototype._showChemistry = function(e, t, i) {
        if (this._squad) {
            var o = new UTSquadChemistryPopupViewController;
            o.modalDisplayDimensions.width = "360px",
            o.init(),
            o.setChemistry(this._squad),
            gPopupClickShield.setActivePopup(o)
        }
    }
    ,
    UTSquadOverviewViewController.prototype.setSquadOverviewDelegate = function(e) {
        this._squadOverviewDelegate = e
    }
    ,
    UTSquadOverviewViewController.prototype.setSquadById = function(e) {
        var n = this;
        services.Squad.requestSquadById(e).observe(this, function(e, t) {
            var i, o;
            e.unobserve(n),
            DebugUtils.Assert((null === (i = t.data) || void 0 === i ? void 0 : i.squad)instanceof UTSquadEntity, "Missing squad entity."),
            t.success && (null === (o = t.data) || void 0 === o ? void 0 : o.squad) && n.setSquad(t.data.squad)
        })
    }
    ,
    UTSquadOverviewViewController.prototype._setSquad = function(e) {
        this._squad && this._squad.onDataUpdated.unobserve(this),
        this._squad = e,
        this._squad.onDataUpdated.observe(this, this._eSquadDataChange)
    }
    ,
    UTSquadOverviewViewController.prototype.setSquad = function(e) {
        this._setSquad(e),
        this._pushSquadToView(e)
    }
    ,
    UTSquadOverviewViewController.prototype.selectSlot = function(e) {
        this.getView().selectSlot(e)
    }
    ,
    UTSquadOverviewViewController.prototype.updateSlot = function(e) {
        this.getView().updateSlot(e)
    }
    ,
    UTSquadOverviewViewController.prototype._gotoDetailsView = function(e) {
        var t = this.getNavigationController();
        if (t) {
            var i = new UTSquadItemDetailsNavigationController;
            this._squad ? i.initWithSquad(this._squad, e) : i.init(),
            i.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
            t.pushViewController(i)
        }
    }
    ,
    UTSquadOverviewViewController.prototype.applyDataChange = function() {
        this._squad && this._pushSquadToView(this._squad)
    }
    ,
    UTSquadOverviewViewController.prototype._eSquadDataChange = function(e, t) {
        var i;
        if (this._squad && this.isViewDisplayed()) {
            var o = this.getView();
            if (t.type && o.setType(t.type === SquadType.CONCEPT ? "concept" : "standard"),
            JSUtils.isNumber(t.chemistry) && (o.setChemistry(t.chemistry),
            o.setChemistryEntries(this._squad.getSortedParameterChemistry())),
            JSUtils.isNumber(t.rating) && o.setRating(t.rating, !0),
            Array.isArray(t.slots))
                if (t.slots.forEach(this.updateSlot, this),
                this._updateDragDrop(),
                !t.formation)
                    o.updatePitchChemistry(this._squad.getFieldPlayers()),
                    JSUtils.isValid(JSUtils.find(t.slots, function(e) {
                        return e.item.isManager()
                    })) && o.updateDocksChemistry(this._squad.getSubAndReservePlayers());
            t.formation && o.setFormation(t.formation),
            t.name && (null === (i = this.getNavigationController()) || void 0 === i || i.setNavigationTitle(t.name))
        }
    }
    ,
    UTSquadOverviewViewController.prototype._eItemTap = function(e, t, i) {
        var o = i.slotIndex;
        this._squad && 0 <= this._squad.simpleBrickIndices.indexOf(o) || (this._squad && this._squadOverviewDelegate ? this._squadOverviewDelegate.selectSlotIndexForSquad(this, this._squad, o) : this._gotoDetailsView(o))
    }
    ,
    UTSquadOverviewViewController.prototype._eItemSwap = function(e, t, i) {
        var o = i.swapFrom
          , n = i.swapTo
          , r = e;
        r.removeSlotInteractionState(o, enums.UISlotInteractionState.HOVER),
        r.removeSlotInteractionState(n, enums.UISlotInteractionState.HOVER),
        this._squad && (this._squad.swapPlayersByIndex(o, n),
        this._squad.save(),
        this.onItemSwap.notify(o, n),
        r.updatePitchChemistry(this._squad.getFieldPlayers()))
    }
    ,
    UTSquadOverviewViewController.prototype._eDragStart = function(e, t, i) {
        this._squad && this.onItemMove.notify(this._squad.getSlot(i.index).item)
    }
    ,
    UTSquadOverviewViewController.prototype._eDragEnd = function(e, t, i) {
        this._squad && this.onDragEnd.notify(this._squad.getSlot(i.index).item)
    }
    ,
    UTSquadOverviewViewController.prototype._ePitchTapped = function(e, t, i) {
        var o = this.getView();
        o.clearSlotInteractionState(enums.UISlotInteractionState.SELECTED),
        o.closeDocks()
    }
    ,
    UTSquadOverviewViewController.prototype._eItemMouseEnter = function(e, t, i) {
        this.getView().setSlotInteractionState(i.slotIndex, enums.UISlotInteractionState.HOVER)
    }
    ,
    UTSquadOverviewViewController.prototype._eItemMouseLeave = function(e, t, i) {
        this.getView().removeSlotInteractionState(i.slotIndex, enums.UISlotInteractionState.HOVER)
    }
    ,
    UTSquadOverviewViewController.prototype._eDetailsButtonSelected = function(e, t, i) {
        var o = this.getNavigationController();
        if (o) {
            var n = new UTSquadActionsViewController;
            this._squad ? n.initWithSquad(this._squad) : n.init(),
            n.setSquadContext(!0),
            o.pushViewController(n)
        }
    }
    ,
    UTSquadOverviewViewController.prototype._nInfoStateChanged = function(e, t, i) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.SQUADS, TelemetryManager.Categories.BUTTON_PRESS, "Item Info Switch Button - Squad")
    }
    ,
    UTSquadOverviewViewController
}(UTViewController);
services.URL.registerDeepLinkID(DeepLinkSection.ACTIVE_SQUAD, function(e) {
    var t, i = getAppMain().getRootViewController();
    i.setGameViewTab(UTGameTabBarController.TabTag.SQUADS);
    var n = null === (t = i.getPresentedViewController()) || void 0 === t ? void 0 : t.getCurrentViewController();
    n && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Squad.requestSquadByType("active").observe(_this, function(e, t) {
        var i;
        if (e.unobserve(_this),
        t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.squad)) {
            var o = isPhone() ? new UTSquadOverviewViewController : new UTSquadSplitViewController;
            o.initWithSquad(t.data.squad),
            null == n || n.pushViewController(o)
        } else
            services.Notification.queue([services.Localization.localize("notification.squad.failedToLoad"), UINotificationType.NEGATIVE]);
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }))
});
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTransferSectionListViewModel = function(i) {
    function UTTransferSectionListViewModel(e) {
        var t = i.call(this, e) || this;
        return t.refreshActiveTrades = !1,
        t.setSection(UTTransferSectionListViewModel.SECTION.SOLD, function(e) {
            return e.getAuctionData().isSold()
        }, UTTransferSectionListViewModel.SECTION.SOLD),
        t.setSection(UTTransferSectionListViewModel.SECTION.UNSOLD, function(e) {
            var t = e.getAuctionData();
            return t.isExpired() || t.isValid() && t.isInactive()
        }, UTTransferSectionListViewModel.SECTION.UNSOLD),
        t.setSection(UTTransferSectionListViewModel.SECTION.AVAILABLE, function(e) {
            return !e.getAuctionData().isValid()
        }, UTTransferSectionListViewModel.SECTION.AVAILABLE),
        t.setSection(UTTransferSectionListViewModel.SECTION.ACTIVE, function(e) {
            return e.getAuctionData().isActiveTrade()
        }, UTTransferSectionListViewModel.SECTION.ACTIVE),
        t.organizeItems(),
        t
    }
    return __extends(UTTransferSectionListViewModel, i),
    UTTransferSectionListViewModel.prototype.startAuctionUpdates = function(e) {
        e = !!e,
        this.refreshActiveTrades && (this.values().forEach(function(e) {
            var t = e.getAuctionData();
            t.isActiveTrade() && t.setStale(!0)
        }, this),
        this.refreshActiveTrades = !1),
        i.prototype.startAuctionUpdates.call(this, e)
    }
    ,
    UTTransferSectionListViewModel.prototype.hasSoldItems = function() {
        return -1 < this.indexOf(function(e) {
            return e.getAuctionData().isSold()
        })
    }
    ,
    UTTransferSectionListViewModel.prototype.getSoldItems = function() {
        return this.values().filter(function(e) {
            return e.getAuctionData().isSold()
        })
    }
    ,
    UTTransferSectionListViewModel.prototype.hasUnsoldItems = function() {
        return -1 < this.indexOf(function(e) {
            var t = e.getAuctionData();
            return t.isExpired() || t.isValid() && t.isInactive()
        })
    }
    ,
    UTTransferSectionListViewModel.prototype.getUnsoldItems = function() {
        return this.values().filter(function(e) {
            var t = e.getAuctionData();
            return t.isExpired() || t.isValid() && t.isInactive()
        })
    }
    ,
    UTTransferSectionListViewModel.prototype.getActiveItems = function() {
        return this.values().filter(function(e) {
            return e.getAuctionData().isActiveTrade()
        })
    }
    ,
    UTTransferSectionListViewModel.SECTION = {
        SOLD: 0,
        UNSOLD: 1,
        AVAILABLE: 2,
        ACTIVE: 3
    },
    UTTransferSectionListViewModel
}(UTItemSectionListViewModel)
  , UTTransferListView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTTransferListView() {
        var e = t.call(this) || this;
        return e.sections = [],
        e.emptyListView = null,
        e
    }
    return __extends(UTTransferListView, t),
    UTTransferListView.prototype.dealloc = function() {
        var e;
        this.emptyListView && (null === (e = this.emptyListView) || void 0 === e || e.dealloc(),
        this.emptyListView = null),
        this.clearSections(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTTransferListView.prototype.clearSections = function() {
        this.sections.forEach(function(e) {
            return e.dealloc()
        }),
        this.sections = []
    }
    ,
    UTTransferListView.prototype.renderSection = function(e, t, i) {
        var o = this.sections[t];
        o ? o.clearList() : ((o = new UTSectionedItemListView).init(),
        this.sections[t] = o),
        o.addItems(e, i),
        o.render();
        var n = this.getRootElement();
        return DOMKit.empty(n),
        this.sections.forEach(function(e) {
            return n.appendChild(e.getRootElement())
        }),
        o
    }
    ,
    UTTransferListView.prototype.getSection = function(e) {
        return this.sections[e] || null
    }
    ,
    UTTransferListView.prototype.renderEmptyView = function(e, t, i) {
        this.clearSections(),
        this.emptyListView = new UTListNoResultsView,
        this.emptyListView.init(),
        this.emptyListView.setText(e),
        this.emptyListView.setDescription(services.Localization.localize("popup.error.noresults.description")),
        JSUtils.isFunction(i) && this.emptyListView.setupButton(t, i),
        this.getRootElement().appendChild(this.emptyListView.getRootElement())
    }
    ,
    UTTransferListView.prototype.onTimedUpdate = function() {
        this.sections.forEach(function(e) {
            return e.onTimedUpdate()
        })
    }
    ,
    UTTransferListView.prototype.selectListRow = function(t) {
        this.sections.forEach(function(e) {
            return e.selectRowByItemId(t)
        })
    }
    ,
    UTTransferListView.prototype.removeItemsById = function(t) {
        this.sections.forEach(function(e) {
            return e.removeItemsById(t)
        })
    }
    ,
    UTTransferListView
}(UTView));
function UTTransferListViewController() {
    UTViewController.call(this),
    this._viewmodel = new UTTransferSectionListViewModel([]),
    this.onDataChange = new EAObservable,
    Object.defineProperty(this, "onDataChange", {
        writable: !1,
        enumerable: !0
    }),
    this.onItemSelected = new EAObservable,
    Object.defineProperty(this, "onItemSelected", {
        writable: !1,
        enumerable: !0
    }),
    this.onSearchClub = new EAObservable,
    Object.defineProperty(this, "onSearchClub", {
        writable: !1,
        enumerable: !0
    })
}
function UTTransferClubResultsViewController() {
    UTViewController.call(this),
    this._searchCriteria = null,
    this._viewmodel = new UTClubViewModel([]),
    this._transferClubSearchDelegate = null
}
function UTTransferListNavigationController(e, t) {
    UTNavigationController.call(this, e, t),
    this.onAddPlayer = new EAObservable,
    Object.defineProperty(this, "onAddPlayer", {
        writable: !1
    }),
    this._transferClubSearchDelegate = null
}
function UTTransferListSplitViewController() {
    UTSplitViewController.call(this),
    this._listController = new UTTransferListViewController,
    this._itemDetailController = new controllers.navigation.ItemDetails,
    this._clubSearchController = null
}
UTTransferListView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-transfer-list-view"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTransferListView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTTransferListView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
JSUtils.inherits(UTTransferListViewController, UTViewController),
UTTransferListViewController.prototype.dealloc = function dealloc() {
    this.onDataChange.dealloc(),
    this.onItemSelected.dealloc(),
    this.superclass()
}
,
UTTransferListViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTTransferListView
}
,
UTTransferListViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "Transfer List - List View"
}
,
UTTransferListViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("nav.label.transferList")
}
,
UTTransferListViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    getDefaultDispatcher().addObserver(AppNotification.UI_ITEM_STATE_CHANGE, this, this._nInfoStateChanged),
    this._viewmodel.dataUpdated.observe(this, this._eViewmodelDataUpdated),
    this._requestItems(isPhone()),
    TelemetryManager.trackPage(TelemetryManager.Sections.AUCTIONS, "Transfer List")
}
,
UTTransferListViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass(),
    getDefaultDispatcher().removeObserver(AppNotification.UI_ITEM_STATE_CHANGE, this),
    this._viewmodel && (this._viewmodel.dataUpdated.unobserve(this),
    this._viewmodel.stopAuctionUpdates())
}
,
UTTransferListViewController.prototype.getIterator = function getIterator() {
    return this._viewmodel
}
,
UTTransferListViewController.prototype._requestItems = function _requestItems(e) {
    var n = this.getView()
      , r = !JSUtils.isBoolean(e) || e
      , s = services.User.getUser().hasTradeAccess();
    r && s && this._viewmodel.stopAuctionUpdates(),
    n.setInteractionState(!1),
    services.Item.requestTransferItems().observe(this, function _onRequestItemsComplete(e, t) {
        e.unobserve(this);
        var i = 0 < this._viewmodel.values().length;
        if (t.success) {
            var o = this._viewmodel.getIndex();
            this._viewmodel.resetCollection([]),
            this._viewmodel.addArray(t.response.items),
            0 <= o && 0 <= this._viewmodel.getLastIndex() && this._viewmodel.setIndex(Math.min(o, this._viewmodel.getLastIndex())),
            this.onDataChange.notify({
                items: this._viewmodel.values()
            }),
            this._renderView(),
            0 < this._viewmodel.values().length && !isPhone() && n.selectListRow(this._viewmodel.current().id),
            n.setInteractionState(!0)
        } else
            services.Notification.queue([services.Localization.localize("notification.transferList.failedToLoad"), UINotificationType.NEGATIVE]),
            this.getNavigationController().popViewController(!0);
        this._viewmodel.refreshActiveTrades = !i && s,
        r && s && this._viewmodel.startAuctionUpdates()
    })
}
,
UTTransferListViewController.prototype.removeItemsById = function removeItemsById(e) {
    if (0 < this._viewmodel.length) {
        var t = this.getView();
        t.removeItemsById(e),
        t.selectListRow(this._viewmodel.current().id),
        this._updateSectionHeaders()
    } else
        this._renderView()
}
,
UTTransferListViewController.prototype.refreshList = function refreshList() {
    repositories.Item.setDirty(ItemPile.TRANSFER),
    this._requestItems()
}
,
UTTransferListViewController.prototype._updateSectionHeaders = function _updateSectionHeaders() {
    var e = this.getView()
      , t = e.getSection(UTTransferSectionListViewModel.SECTION.SOLD)
      , i = e.getSection(UTTransferSectionListViewModel.SECTION.UNSOLD)
      , o = e.getSection(UTTransferSectionListViewModel.SECTION.AVAILABLE)
      , n = this._viewmodel.hasSoldItems()
      , r = this._viewmodel.hasUnsoldItems()
      , s = repositories.Item.isPileFull(ItemPile.TRANSFER);
    if (t && (t.setHeader(services.Localization.localize("tradepile.dock.categories.expired.sold"), services.Localization.localize("tradepile.label.clearsolditems"), n ? this._clearSold.bind(this) : null),
    t.toggleHeaderButton(n)),
    i) {
        var a = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED) && services.User.getUser().hasTradeAccess();
        i.setHeader(services.Localization.localize("tradepile.dock.categories.expired.notsold"), services.Localization.localize("tradepile.button.relistall"), a && r ? this._relistAll.bind(this) : null),
        i.toggleHeaderButton(a && r)
    }
    o && o.toggleHeaderButtonEnabled(!s)
}
,
UTTransferListViewController.prototype._renderView = function _renderView() {
    var r = this.getView();
    function _rowTapCallback(t) {
        var e = this._viewmodel.indexOf(function(e) {
            return e.id === t.id
        });
        if (this._viewmodel.setIndex(e),
        isPhone()) {
            var i = t.getAuctionData();
            if (!services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED) && (i.isActiveTrade() || i.isClosedTrade()))
                return void utils.PopupManager.showAlert(utils.PopupManager.Alerts.TRADING_DISABLED);
            var o = this.getNavigationController();
            if (o) {
                var n = new controllers.items.ItemDetails;
                n.initWithIterator(this._viewmodel),
                o.pushViewController(n, !0)
            }
        } else
            r.selectListRow(t.id),
            this.onItemSelected.notify(e)
    }
    r.clearSections(),
    r.renderSection(this._viewmodel.getSectionItems(UTTransferSectionListViewModel.SECTION.SOLD), UTTransferSectionListViewModel.SECTION.SOLD, _rowTapCallback.bind(this)).setEmptyMessage(services.Localization.localize("tradepile.sold.empty.header"), services.Localization.localize("tradepile.sold.empty.body")),
    r.renderSection(this._viewmodel.getSectionItems(UTTransferSectionListViewModel.SECTION.UNSOLD), UTTransferSectionListViewModel.SECTION.UNSOLD, _rowTapCallback.bind(this)).setEmptyMessage(services.Localization.localize("tradepile.unsold.empty.header"), services.Localization.localize("tradepile.unsold.empty.body"));
    var e = r.renderSection(this._viewmodel.getSectionItems(UTTransferSectionListViewModel.SECTION.AVAILABLE), UTTransferSectionListViewModel.SECTION.AVAILABLE, _rowTapCallback.bind(this));
    e.setHeader(services.Localization.localize("tradepile.dock.categories.available"), services.Localization.localize("infopanel.label.addplayer"), function _eOnAddAvailableItems() {
        if (isPhone()) {
            var e = this.getNavigationController();
            if (e) {
                var t = new UTTransferListNavigationController;
                t.init(),
                t.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
                e.pushViewController(t, !0)
            }
        } else
            this.onSearchClub.notify()
    }
    .bind(this)),
    e.setEmptyMessage(services.Localization.localize("tradepile.availableitems.empty.header"), services.Localization.localize("tradepile.availableitems.empty.body"));
    var t = repositories.Item.isPileFull(ItemPile.TRANSFER);
    e.toggleHeaderButtonEnabled(!t);
    var i = r.renderSection(this._viewmodel.getSectionItems(UTTransferSectionListViewModel.SECTION.ACTIVE), UTTransferSectionListViewModel.SECTION.ACTIVE, _rowTapCallback.bind(this));
    i.setHeader(services.Localization.localize("tradepile.dock.categories.current"), "", null),
    i.setEmptyMessage(services.Localization.localize("tradepile.availabletransfers.empty.header"), services.Localization.localize("tradepile.availabletransfers.empty.body")),
    this._updateSectionHeaders(),
    0 < this._viewmodel.values().length && !isPhone() && r.selectListRow(this._viewmodel.current().id)
}
,
UTTransferListViewController.prototype._clearSold = function _clearSold() {
    this.getView().setInteractionState(!1),
    services.Item.clearSoldItems().observe(this, function _clearSoldComplete(e, t) {
        e.unobserve(this),
        this.refreshList()
    })
}
,
UTTransferListViewController.prototype._relistAll = function _relistAll() {
    function _relistAllComplete(e, t) {
        e.unobserve(this),
        NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : (t.status === HttpStatusCode.FORBIDDEN ? services.Notification.queue([services.Localization.localize("popup.error.relistall.forbidden.message"), UINotificationType.NEGATIVE]) : t.success || services.Notification.queue([services.Localization.localize("popup.error.relistall"), UINotificationType.NEGATIVE]),
        this.refreshList())
    }
    TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.BUTTON_PRESS, "Transfer List - Re-List All"),
    this.getView().setInteractionState(!1),
    utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.CONFIRM_RELIST_ALL, null, function _relistAllConfirmed() {
        services.Item.relistExpiredAuctions().observe(this, _relistAllComplete)
    }
    .bind(this), function _relistAllCancelled() {
        this.getView().setInteractionState(!0)
    }
    .bind(this))
}
,
UTTransferListViewController.prototype._eViewmodelDataUpdated = function _eViewmodelDataUpdated() {
    var e = this.getView();
    e.onTimedUpdate(),
    this._viewmodel.getActiveItems().length !== e.getSection(UTTransferSectionListViewModel.SECTION.ACTIVE).getNumOfRows() && this.refreshList()
}
,
UTTransferListViewController.prototype._nInfoStateChanged = function _nInfoStateChanged() {
    TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.BUTTON_PRESS, "Item Info Switch Button - Transfer List")
}
,
services.URL.registerDeepLinkID(DeepLinkSection.TRADE_PILE, function(e) {
    var t = getAppMain().getRootViewController();
    if (t.setGameViewTab(UTGameTabBarController.TabTag.TRANSFERS),
    !getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_HIDE_TRANSFER_MARKET)) {
        var i = t.getPresentedViewController().getCurrentViewController();
        if (i) {
            var o = isPhone() ? new UTTransferListViewController : new UTTransferListSplitViewController;
            o.init(),
            i.pushViewController(o)
        }
    }
}),
JSUtils.inherits(UTTransferClubResultsViewController, UTViewController),
UTTransferClubResultsViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass(),
        TelemetryManager.trackPage(TelemetryManager.Sections.CLUB, "TransferList Club Results");
        var e = this.getView();
        e.onSearch.observe(this, this._eModifySearchSelected),
        e.addTarget(this, this._eRowActionSelected, enums.UIListEvent.ROW_ACTION),
        e.addTarget(this, this._eNextPage, enums.UIPaginationEvent.NEXT),
        e.addTarget(this, this._ePrevPage, enums.UIPaginationEvent.PREVIOUS)
    }
}
,
UTTransferClubResultsViewController.prototype.initWithSearchCriteria = function initWithSearchCriteria(e) {
    this.initialized || (DebugUtils.Assert(e instanceof UTSearchCriteriaDTO, "Expected a search criteria DTO during initialization."),
    this._searchCriteria = e,
    this._searchCriteria.count = this._viewmodel.numItemsPerPage + 1,
    this.init())
}
,
UTTransferClubResultsViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._searchCriteria = null,
    this._viewmodel = null
}
,
UTTransferClubResultsViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTClubSearchResultsView
}
,
UTTransferClubResultsViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("infopanel.label.sendTradePile")
}
,
UTTransferClubResultsViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this._requestItems();
    var e = this.getView();
    e.updateListTopPosition(),
    e.toggleSubTypesOptions(!1)
}
,
UTTransferClubResultsViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass(),
    this._viewmodel.resetCollection([])
}
,
UTTransferClubResultsViewController.prototype._pruneDuplicates = function _pruneDuplicates(e) {
    return e.reduce(function(e, t) {
        return JSUtils.find(e, function(e) {
            return e.id === t.id
        }) || e.push(t),
        e
    }, [])
}
,
UTTransferClubResultsViewController.prototype.setTransferClubSearchDelegate = function setTransferClubSearchDelegate(e) {
    e.conforms(interfaces.TransferClubSearch) && (this._transferClubSearchDelegate = e)
}
,
UTTransferClubResultsViewController.prototype._updateItemList = function _updateItemList(e) {
    var t = this.getView();
    0 < e.length ? t.setItems(e) : t.setEmptyListMessage(this._searchCriteria.isModified()),
    t.setPaginationState(this._viewmodel.hasPreviousPage(), this._viewmodel.hasNextPage()),
    t.setRowActionCallback(null)
}
,
UTTransferClubResultsViewController.prototype._handleItemRetrieval = function _handleItemRetrieval(e, t) {
    var i = this._viewmodel.getIndex()
      , o = this._pruneDuplicates(this._viewmodel.values().concat(e))
      , n = this._searchCriteria.sortBy === SearchSortType.RECENCY;
    this._viewmodel.sortByRecency = n,
    this._viewmodel.sort = this._searchCriteria.sort,
    this._viewmodel.sortType = this._searchCriteria.sortBy,
    this._viewmodel.removeArray(o),
    this._viewmodel.addArray(o),
    this._viewmodel.isFull = t,
    this._viewmodel.setIndex(i),
    !this._viewmodel.canShowPage(this._viewmodel.getCurrentPage()) || this._viewmodel.shouldRequestItems() ? (this._searchCriteria.offset += this._searchCriteria.count,
    this._requestItems()) : this._updateItemList(this._viewmodel.getPageItems())
}
,
UTTransferClubResultsViewController.prototype._onClubItemRetrievalComplete = function _onClubItemRetrievalComplete(e, t) {
    e.unobserve(this),
    t.success && JSUtils.isObject(t.response) ? this._handleItemRetrieval(t.response.items, t.response.retrievedAll) : t.error && NetworkErrorManager.handleStatus(t.error.code)
}
,
UTTransferClubResultsViewController.prototype._requestItems = function _requestItems() {
    this._viewmodel.canShowPage() && !this._viewmodel.shouldRequestItems() ? this._updateItemList(this._viewmodel.getPageItems()) : this._searchCriteria && services.Club.search(this._searchCriteria).observe(this, this._onClubItemRetrievalComplete)
}
,
UTTransferClubResultsViewController.prototype._eRowActionSelected = function _eRowActionSelected(e, t, i) {
    var o = i.item || null;
    DebugUtils.Assert(o instanceof UTItemEntity, "Expected to receive an item entity."),
    o && services.Item.move(o, ItemPile.TRANSFER).observe(this, function _eMoveComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = this._viewmodel.getIndex()
              , o = this._viewmodel.values().filter(function(e) {
                return t.data.itemIds.indexOf(e.id) < 0
            })
              , n = Math.max(o.length - 1, 0);
            n < i && (i = n),
            this._viewmodel.resetCollection(o),
            this._viewmodel.setIndex(i),
            this._searchCriteria.offset = i,
            services.Club.search(this._searchCriteria).observe(this, this._onClubItemRetrievalComplete),
            this._transferClubSearchDelegate && this._transferClubSearchDelegate.addPlayer()
        } else
            t.status !== HttpStatusCode.UNKNOWN && NetworkErrorManager.handleStatus(t.status),
            services.Notification.queue([services.Localization.localize("notification.item.moveFailed"), UINotificationType.NEGATIVE]),
            this._requestItems()
    })
}
,
UTTransferClubResultsViewController.prototype._eModifySearchSelected = function _eModifySearchSelected() {
    var e = this.getNavigationController();
    e && e.popViewController(!0)
}
,
UTTransferClubResultsViewController.prototype._eNextPage = function _eNextPage() {
    this._viewmodel.hasNextPage() && (this._viewmodel.nextPage(),
    this._viewmodel.shouldRequestItems() ? (this._searchCriteria.offset += this._searchCriteria.count,
    this._requestItems()) : this._updateItemList(this._viewmodel.getPageItems()))
}
,
UTTransferClubResultsViewController.prototype._ePrevPage = function _ePrevPage() {
    this._viewmodel.hasPreviousPage() && this._updateItemList(this._viewmodel.previousPage())
}
,
UTTransferClubSearchViewController = function UTTransferClubSearchViewController() {
    UTViewController.call(this),
    this._viewmodel = new UTItemSearchViewModel,
    this._transferClubSearchDelegate = null
}
,
JSUtils.inherits(UTTransferClubSearchViewController, UTViewController),
UTTransferClubSearchViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass(),
        TelemetryManager.trackPage(TelemetryManager.Sections.AUCTIONS, "Transfer List Club Search");
        var e = this.getView();
        e.getSearchButton().addTarget(this, this._eSearchSelected, EventType.TAP),
        e.getResetButton().addTarget(this, this._eResetSelected, EventType.TAP),
        e.getPlayerNameSearch().addTarget(this, this._ePlayerNameChange, EventType.CHANGE),
        e.getSortOptions().addTarget(this, this._eSortToggled, EventType.CHANGE),
        e.getSortDropDown().addTarget(this, this._eDropDownChanged, EventType.CHANGE),
        e.onFilterChange.observe(this, this._eFilterChanged),
        e.setupSearchOptions(!1, !0),
        e.setSortOptions(this._viewmodel.searchCriteria.type === SearchType.STAFF ? factories.DataProvider.getStaffSortTypeDP() : factories.DataProvider.getSortTypeDP()),
        this._viewmodel.searchCriteria.untradeables = SearchUntradeables.EXCLUDE
    }
}
,
UTTransferClubSearchViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._viewmodel = null
}
,
UTTransferClubSearchViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTClubSearchFiltersView
}
,
UTTransferClubSearchViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var e = this.getView();
    this.getNavigationController().setNavigationVisibility(!0, !0),
    this._viewmodel.searchCriteria.excludeDefIds = [],
    e.getSortOptions().toggleSlider(enums.UISortOptionType.EXCLUDE_SQUAD, !1),
    this._viewmodel.updateSearchCriteria(this._viewmodel.searchCriteria),
    e.setFilters(this._viewmodel),
    services.Club.getStats()
}
,
UTTransferClubSearchViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.clubsearch")
}
,
UTTransferClubSearchViewController.prototype.setSearchCriteria = function setSearchCriteria(e) {
    this._viewmodel.updateSearchCriteria(e)
}
,
UTTransferClubSearchViewController.prototype.setTransferClubSearchDelegate = function setTransferClubSearchDelegate(e) {
    e.conforms(interfaces.TransferClubSearch) && (this._transferClubSearchDelegate = e)
}
,
UTTransferClubSearchViewController.prototype._eSortToggled = function _eSortToggled(e, t, i) {
    i.id === enums.UISortOptionType.EXCLUDE_SQUAD && (i.checked ? this._viewmodel.requestActiveSquadDefIds().observe(this, function(e, t) {
        e.unobserve(this),
        this._viewmodel.searchCriteria.excludeDefIds = t.data.defIds
    }) : this._viewmodel.searchCriteria.excludeDefIds = [])
}
,
UTTransferClubSearchViewController.prototype._eDropDownChanged = function _eDropDownChanged(e) {
    var t = "Club Search Filters - Sort By DropDown changed to: ";
    switch (e.getId()) {
    case SearchSortID.VALUE_DESC:
        this._viewmodel.searchCriteria.sort = e.getValue(),
        this._viewmodel.searchCriteria.sortBy = SearchSortType.VALUE,
        t += "'Highest Quick Sell'";
        break;
    case SearchSortID.VALUE_ASC:
        this._viewmodel.searchCriteria.sort = e.getValue(),
        this._viewmodel.searchCriteria.sortBy = SearchSortType.VALUE,
        t += "'Lowest Quick Sell'";
        break;
    case SearchSortID.RATING_DESC:
        this._viewmodel.searchCriteria.sort = e.getValue(),
        this._viewmodel.searchCriteria.sortBy = SearchSortType.RATING,
        t += "'Rating High to Low'";
        break;
    case SearchSortID.RATING_ASC:
        this._viewmodel.searchCriteria.sort = e.getValue(),
        this._viewmodel.searchCriteria.sortBy = SearchSortType.RATING,
        t += "'Rating Low to High'";
        break;
    case SearchSortID.RECENCY_DESC:
        this._viewmodel.searchCriteria.sort = SearchSortOrder.DESCENDING,
        this._viewmodel.searchCritera.sortBy = SearchSortType.RECENCY,
        t += "'Most Recent'";
        break;
    default:
        DebugUtils.Assert(!1, "ClubSearchFilters :: Passed an invalid SearchSort Enums.")
    }
    TelemetryManager.trackEvent(TelemetryManager.Sections.CLUB, TelemetryManager.Categories.FILTER, t)
}
,
UTTransferClubSearchViewController.prototype._eFilterChanged = function _eFilterChanged(e, t, i, o) {
    this._viewmodel.updateFromFilterChange(t, i, o),
    this.getView().setFilters(this._viewmodel)
}
,
UTTransferClubSearchViewController.prototype._eResetSelected = function _eResetSelected() {
    this._viewmodel.resetSearch();
    var e = this.getView()
      , t = e.getSortDropDown();
    e.setFilters(this._viewmodel),
    e.getSortOptions().reset(),
    t.setIndex(t.getDefaultIndex())
}
,
UTTransferClubSearchViewController.prototype._ePlayerNameChange = function _ePlayerNameChange() {
    var e = this.getView().getPlayerNameSearch().getSelected()
      , t = this.getView();
    JSUtils.isValid(e) ? this._viewmodel.setPlayerData(e) : this._viewmodel.clearPlayerData(),
    t.setFilters(this._viewmodel),
    JSUtils.isValid(e) && (t.setFilterValue(enums.UISearchFilters.NATION, -1),
    t.setFilterValue(enums.UISearchFilters.LEAGUE, -1),
    t.setFilterValue(enums.UISearchFilters.CLUB, -1))
}
,
UTTransferClubSearchViewController.prototype._eSearchSelected = function _eSearchSelected() {
    if (hasConnection()) {
        var e = new UTTransferClubResultsViewController
          , t = this._viewmodel.searchCriteria;
        this._transferClubSearchDelegate && e.setTransferClubSearchDelegate(this._transferClubSearchDelegate),
        t.offset = 0,
        e.initWithSearchCriteria(t),
        this.getNavigationController().pushViewController(e)
    } else
        utils.PopupManager.showAlert(utils.PopupManager.Alerts.NO_INTERNET_CONNECTION)
}
,
JSUtils.inherits(UTTransferListNavigationController, UTNavigationController),
UTTransferListNavigationController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this.onAddPlayer.dealloc(),
    this.onAddPlayer = null
}
,
UTTransferListNavigationController.prototype._getRootControllerInstance = function _getRootControllerInstance() {
    return new UTTransferClubSearchViewController
}
,
UTTransferListNavigationController.prototype.setTransferClubSearchDelegate = function setTransferClubSearchDelegate(e) {
    e.conforms(interfaces.TransferClubSearch) && (this._transferClubSearchDelegate = e,
    this.getRootController().setTransferClubSearchDelegate(e))
}
,
NamespaceManager.Register("interfaces"),
interfaces.TransferClubSearch = function ITransferClubSearch() {}
,
interfaces.TransferClubSearch.prototype.conforms = function conforms() {}
,
interfaces.TransferClubSearch.prototype.addPlayer = function addPlayer() {}
,
JSUtils.inherits(UTTransferListSplitViewController, UTSplitViewController),
UTTransferListSplitViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass(),
        this._listController.init(),
        this._listController.onDataChange.observe(this, this._eListDataChanged),
        this._listController.onItemSelected.observe(this, this._eItemSelected),
        this._listController.onSearchClub.observe(this, this._eAddPlayerSelected),
        this._itemDetailController.initWithIterator(this._listController.getIterator()),
        this._itemDetailController.enableSwiping(!1),
        this.addChildViewController(this._listController),
        this.addChildViewController(this._itemDetailController);
        var e = getDefaultDispatcher();
        e.addObserver(AppNotification.ITEM_ACTIVATE, this, this._nItemActivated),
        e.addObserver(AppNotification.ITEM_DISCARD, this, this._nItemDiscarded),
        e.addObserver(AppNotification.ITEM_LIST, this, this._nItemListed),
        e.addObserver(AppNotification.ITEM_MOVE, this, this._nItemMoved),
        e.addObserver(AppNotification.ITEM_CLEARSOLD, this, this._nClearSold)
    }
}
,
UTTransferListSplitViewController.prototype.dealloc = function dealloc() {
    this._itemDetailController.dealloc(),
    this._itemDetailController = null,
    this._listController.dealloc(),
    this._listController = null,
    this._clubSearchController && (this._clubSearchController.dealloc(),
    this._clubSearchController = null);
    var e = getDefaultDispatcher();
    e.removeObserver(AppNotification.ITEM_ACTIVATE, this),
    e.removeObserver(AppNotification.ITEM_DISCARD, this),
    e.removeObserver(AppNotification.ITEM_LIST, this),
    e.removeObserver(AppNotification.ITEM_MOVE, this),
    e.removeObserver(AppNotification.ITEM_CLEARSOLD, this),
    this.superclass()
}
,
UTTransferListSplitViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return this._listController.getNavigationTitle()
}
,
UTTransferListSplitViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this._setLeftController(this._listController),
    this._itemDetailController.setNavigationStyle(UTNavigationBarView.Style.SECONDARY)
}
,
UTTransferListSplitViewController.prototype._eItemSelected = function _eItemSelected(e, t) {
    this._itemDetailController.setIndex(t),
    this._setRightController(this._itemDetailController),
    this._resetSearch()
}
,
UTTransferListSplitViewController.prototype._eAddPlayerSelected = function _eAddPlayerSelected() {
    this._clubSearchController || (this._clubSearchController = new UTTransferListNavigationController,
    this._clubSearchController.setTransferClubSearchDelegate(this),
    this._clubSearchController.init(),
    this.addChildViewController(this._clubSearchController)),
    this._setRightController(this._clubSearchController)
}
,
UTTransferListSplitViewController.prototype.addPlayer = function addPLayer() {
    this._listController.refreshList()
}
,
UTTransferListSplitViewController.prototype._eListDataChanged = function _eListDataChanged(e, t) {
    t.items && (0 < t.items.length ? (repositories.Item.isPileFull(ItemPile.TRANSFER) && this._resetSearch(),
    this._getRightController()instanceof UTTransferListNavigationController || this._setRightController(this._itemDetailController),
    this._itemDetailController.setIndex(this._listController.getIterator().getIndex())) : (this._resetSearch(),
    this.hideRightController()))
}
,
UTTransferListSplitViewController.prototype._nItemActivated = function _nItemActivated(e, t, i) {
    this._listController.removeItemsById(i.itemIds || [])
}
,
UTTransferListSplitViewController.prototype._nItemDiscarded = function _nItemDiscarded(e, t, i) {
    this._listController.removeItemsById(i.itemIds || []),
    this._listController.getIterator().length || (this._resetSearch(),
    this.hideRightController())
}
,
UTTransferListSplitViewController.prototype._nClearSold = function _nClearSold(e, t, i) {
    this._listController.removeItemsById(i.itemIds || [])
}
,
UTTransferListSplitViewController.prototype._nItemListed = function _nItemListed() {
    this._listController.refreshList(),
    this._resetSearch()
}
,
UTTransferListSplitViewController.prototype._nItemMoved = function _nItemMoved() {
    this._listController.refreshList()
}
,
UTTransferListSplitViewController.prototype._resetSearch = function _resetSearch() {
    this._clubSearchController && this._clubSearchController.popToRootViewController()
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTDailyGiftPopupView = function(i) {
    function UTDailyGiftPopupView() {
        var e = i.call(this) || this;
        return e.onComplete = new EAObservable,
        e
    }
    return __extends(UTDailyGiftPopupView, i),
    UTDailyGiftPopupView.prototype.init = function() {
        var e = this
          , t = services.Localization;
        this._claimButton.init(),
        this._claimButton.setText(t.localize("common.dialog.accept")),
        this._claimButton.addTarget(this, function() {
            return e.onComplete.notify()
        }, EventType.TAP),
        this.__textInfo.textContent = t.localize("dailyreward.popupInfo"),
        i.prototype.init.call(this)
    }
    ,
    UTDailyGiftPopupView.prototype.dealloc = function() {
        this.onComplete.dealloc(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTDailyGiftPopupView.prototype.render = function(e, t) {
        var i = services.Localization
          , o = 0;
        e === RewardType.COIN ? (DOMKit.toggleDisplayStyle(this.__packGiftImage, !1),
        DOMKit.toggleDisplayStyle(this.__coinGiftImage, !0),
        this._coinGiftBackground.hide(),
        this._coinGiftForeground.setResource(AssetLocationUtils.getMiscImageUri(ItemSubType.FREE_COINS, 1)),
        this.__giftType.textContent = i.localizeNumber(t) + " " + i.localize("card.title.coins")) : e === RewardType.PACK && (o = PurchaseDisplayGroupId.MYPACKS,
        DOMKit.toggleDisplayStyle(this.__packGiftImage, !0),
        DOMKit.toggleDisplayStyle(this.__coinGiftImage, !1),
        this._packBackgroundImage.setResource(AssetLocationUtils.getPackBackgroundImageUri(o)),
        this._packForegroundImage.setResource(AssetLocationUtils.getPackForegroundImageUri(o, 0)),
        this.__giftType.textContent = i.localize("FUT_STORE_PACK_" + t.toString() + "_NAME_MOBILE")),
        this.__popupTitle.textContent = i.localize("dailyreward.popupheader").toUpperCase()
    }
    ,
    UTDailyGiftPopupView.DailyGift = Object.freeze({
        COIN_ASSET_ID: 99
    }),
    UTDailyGiftPopupView
}(UTView);
UTDailyGiftPopupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("daily-gift");
        var t = document.createElement("header");
        this.__popupTitle = document.createElement("h1"),
        this.__popupTitle.classList.add("daily-gift-title"),
        t.appendChild(this.__popupTitle),
        e.appendChild(t),
        this.__textInfo = document.createElement("p"),
        this.__textInfo.classList.add("text-info"),
        e.appendChild(this.__textInfo);
        var i = document.createElement("div");
        i.classList.add("daily-gift-body"),
        this.__packGiftImage = document.createElement("div"),
        this.__packGiftImage.classList.add("pack-gift-image"),
        this._packBackgroundImage = new UTImageView,
        this._packBackgroundImage.getRootElement().classList.add("pack-background-image"),
        this.__packGiftImage.appendChild(this._packBackgroundImage.getRootElement()),
        this._packForegroundImage = new UTImageView,
        this._packForegroundImage.getRootElement().classList.add("pack-foreground-image"),
        this.__packGiftImage.appendChild(this._packForegroundImage.getRootElement()),
        i.appendChild(this.__packGiftImage),
        this.__coinGiftImage = document.createElement("div"),
        this.__coinGiftImage.classList.add("coin-gift-image"),
        this._coinGiftBackground = new UTImageView,
        this._coinGiftBackground.getRootElement().classList.add("pack-background-image"),
        this.__coinGiftImage.appendChild(this._coinGiftBackground.getRootElement()),
        this._coinGiftForeground = new UTImageView,
        this._coinGiftForeground.getRootElement().classList.add("pack-foreground-image"),
        this.__coinGiftImage.appendChild(this._coinGiftForeground.getRootElement()),
        i.appendChild(this.__coinGiftImage),
        this.__giftType = document.createElement("p"),
        this.__giftType.classList.add("daily-gift-award"),
        i.appendChild(this.__giftType),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("daily-gift-footer"),
        this._claimButton = new UTStandardButtonControl,
        this._claimButton.getRootElement().classList.add("call-to-action"),
        o.appendChild(this._claimButton.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTDailyGiftPopupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__popupTitle = null,
    this.__textInfo = null,
    this.__packGiftImage = null,
    this._packBackgroundImage.destroy(),
    this._packForegroundImage.destroy(),
    this.__coinGiftImage = null,
    this._coinGiftBackground.destroy(),
    this._coinGiftForeground.destroy(),
    this.__giftType = null,
    this._claimButton.destroy()
}
,
UTDailyGiftPopupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTDailyGiftViewController = function(i) {
    function UTDailyGiftViewController(e) {
        var t = i.call(this) || this;
        return t._rewardType = e.rewardType || "",
        t._rewardValue = e.rewardValue || -1,
        t
    }
    return __extends(UTDailyGiftViewController, i),
    UTDailyGiftViewController.prototype.init = function() {
        i.prototype.init.call(this),
        this.getView().render(this._rewardType, this._rewardValue),
        this.getView().onComplete.observe(this, this.onExit.notify.bind(this.onExit)),
        TelemetryManager.trackPage(TelemetryManager.Sections.MISC, "Daily Gift")
    }
    ,
    UTDailyGiftViewController.prototype._getViewInstanceFromData = function() {
        return new UTDailyGiftPopupView
    }
    ,
    UTDailyGiftViewController
}(BasePopupViewController)
  , UTLiveMessagePopupView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTLiveMessagePopupView() {
        var e = t.call(this) || this;
        return e.isRendered = !1,
        e
    }
    return __extends(UTLiveMessagePopupView, t),
    UTLiveMessagePopupView.prototype.init = function() {
        t.prototype.init.call(this),
        this._continueBtn.init(),
        this._continueBtn.setText(services.Localization.localize("common.dialog.continue")),
        this.setInteractionState(!0)
    }
    ,
    UTLiveMessagePopupView.prototype.setInteractionState = function(e) {
        this._setInteractionStateFlag(e),
        this._continueBtn.setInteractionState(e)
    }
    ,
    UTLiveMessagePopupView.prototype.renderImages = function(e, t) {
        this._image.setExternalResource(e, !0).observe(this, this.imageLoad),
        this.getRootElement().style.backgroundImage = JSUtils.isEmpty(t) ? "" : "url(" + t + ")"
    }
    ,
    UTLiveMessagePopupView.prototype.imageLoad = function(e, t, i, o) {
        e.unobserve(this),
        t || i.setLocalResource("images/liveMessageDefault.png")
    }
    ,
    UTLiveMessagePopupView.prototype.renderHeader = function(e, t) {
        this.renderTitleText(e.title),
        this.__title.style.color = e.titleColor,
        this.renderSubtitleText(e.subtitle),
        this.__subtitle.style.color = e.subtitleColor,
        this.renderInfoText(e.info),
        this.__info.style.backgroundColor = e.infoColor,
        this.__info.style.color = JSUtils.isEmpty(e.infoColor) ? "" : "#fff",
        this.__numMessages.textContent = t
    }
    ,
    UTLiveMessagePopupView.prototype.renderTitleText = function(e) {
        this.__title.textContent = e
    }
    ,
    UTLiveMessagePopupView.prototype.renderSubtitleText = function(e) {
        this.__subtitle.textContent = e
    }
    ,
    UTLiveMessagePopupView.prototype.renderInfoText = function(e) {
        this.__info.textContent = e
    }
    ,
    UTLiveMessagePopupView.prototype.renderContent = function(e, t) {
        this.renderContentText(e),
        this.__content.style.color = t
    }
    ,
    UTLiveMessagePopupView.prototype.renderContentText = function(e) {
        this.__content.innerHTML = e
    }
    ,
    UTLiveMessagePopupView.prototype.render = function(t, i) {
        var o = this;
        if (this.isRendered) {
            var n = this._image.getRootElement()
              , r = [{
                opacity: "0%"
            }, {
                opacity: "100%"
            }]
              , e = [{
                opacity: "100%"
            }, {
                opacity: "0%"
            }];
            this.__header.animate(e, {
                duration: 200
            }).onfinish = function(e) {
                o.renderHeader(t, i),
                o.__header.animate(r, {
                    duration: 200
                })
            }
            ,
            this.__content.animate(e, {
                duration: 200
            }).onfinish = function(e) {
                o.renderContent(t.body, t.bodyColor),
                o.__content.animate(r, {
                    duration: 200
                })
            }
            ,
            n.animate(e, {
                duration: 200
            }).onfinish = function(e) {
                o.renderImages(t.bodyImagePath, t.backgroundImagePath),
                n.animate(r, {
                    duration: 200
                })
            }
        } else
            this.renderHeader(t, i),
            this.renderImages(t.bodyImagePath, t.backgroundImagePath),
            this.renderContent(t.body, t.bodyColor),
            this.isRendered = !0
    }
    ,
    UTLiveMessagePopupView.prototype.getContinueButton = function() {
        return this._continueBtn
    }
    ,
    UTLiveMessagePopupView
}(UTView));
UTLiveMessagePopupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-livemessage"),
        this.__header = document.createElement("header"),
        this.__header.classList.add("ut-livemessage-header");
        var t = document.createElement("div");
        t.classList.add("ut-livemessage-header--meta"),
        this.__numMessages = document.createElement("p"),
        this.__numMessages.classList.add("ut-livemessage-header--counter"),
        t.appendChild(this.__numMessages),
        this.__header.appendChild(t),
        this.__title = document.createElement("h1"),
        this.__header.appendChild(this.__title),
        this.__subtitle = document.createElement("h2"),
        this.__header.appendChild(this.__subtitle),
        this.__info = document.createElement("h3"),
        this.__header.appendChild(this.__info),
        this.__date = document.createElement("p"),
        this.__date.classList.add("ut-livemessage-header--date"),
        this.__header.appendChild(this.__date),
        e.appendChild(this.__header);
        var i = document.createElement("div");
        i.classList.add("ut-livemessage-content"),
        this._image = new UTImageView,
        this._image.getRootElement().classList.add("ut-livemessage-content--image"),
        i.appendChild(this._image.getRootElement()),
        this.__content = document.createElement("div"),
        this.__content.classList.add("ut-livemessage-content--body"),
        i.appendChild(this.__content),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-livemessage-footer"),
        this._continueBtn = new UTStandardButtonControl,
        this._continueBtn.getRootElement().classList.add("call-to-action"),
        o.appendChild(this._continueBtn.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTLiveMessagePopupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__header = null,
    this.__numMessages = null,
    this.__title = null,
    this.__subtitle = null,
    this.__info = null,
    this.__date = null,
    this._image.destroy(),
    this.__content = null,
    this._continueBtn.destroy()
}
,
UTLiveMessagePopupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTLiveMessagePopupViewController = function(i) {
    function UTLiveMessagePopupViewController(e) {
        var t = i.call(this) || this;
        return t.viewModel = new EAIterator(e),
        t.countdownTimer = null,
        t
    }
    return __extends(UTLiveMessagePopupViewController, i),
    UTLiveMessagePopupViewController.prototype.init = function() {
        i.prototype.init.call(this),
        this.getView().getContinueButton().addTarget(this, this.onContinue, EventType.TAP)
    }
    ,
    UTLiveMessagePopupViewController.prototype.dealloc = function() {
        this.viewModel.dealloc(),
        this.stopCountdownTimer(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTLiveMessagePopupViewController.prototype._getViewInstanceFromData = function() {
        return new UTLiveMessagePopupView
    }
    ,
    UTLiveMessagePopupViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this);
        var e = this.getView()
          , t = this.viewModel.current();
        t && (e.render(t, this.viewModel.getIndex() + 1 + "/" + this.viewModel.length),
        t.hasCountdowns() && this.startCountdownTimer(),
        this.startButtonCountdown(t.duration))
    }
    ,
    UTLiveMessagePopupViewController.prototype.onBackButton = function() {
        return !1
    }
    ,
    UTLiveMessagePopupViewController.prototype.startCountdownTimer = function() {
        this.countdownTimer || (this.updateCountdownTimer(),
        this.countdownTimer = new EAIntervalController(1e3,this.updateCountdownTimer.bind(this)),
        this.countdownTimer.start())
    }
    ,
    UTLiveMessagePopupViewController.prototype.stopCountdownTimer = function() {
        this.countdownTimer && (this.countdownTimer.dealloc(),
        this.countdownTimer = null)
    }
    ,
    UTLiveMessagePopupViewController.prototype.updateCountdownTimer = function() {
        var e = this.viewModel.current()
          , t = this.getView()
          , i = services.Localization;
        e && (0 <= e.titleCountdown && t.renderTitleText(e.title.replace(ArubaPlaceholderEnum.COUNTDOWN, i.localizeTimeRemaining(Math.max(0, e.titleCountdown - Date.now())))),
        0 <= e.subtitleCountdown && t.renderSubtitleText(e.subtitle.replace(ArubaPlaceholderEnum.COUNTDOWN, i.localizeTimeRemaining(Math.max(0, e.subtitleCountdown - Date.now())))),
        0 <= e.infoCountdown && t.renderInfoText(e.info.replace(ArubaPlaceholderEnum.COUNTDOWN, i.localizeTimeRemaining(Math.max(0, e.infoCountdown - Date.now())))),
        0 <= e.bodyCountdown && t.renderContentText(e.body.replace(ArubaPlaceholderEnum.COUNTDOWN, i.localizeTimeRemaining(Math.max(0, e.bodyCountdown - Date.now())))))
    }
    ,
    UTLiveMessagePopupViewController.prototype.startButtonCountdown = function(e) {
        var t = this.getView();
        t.setInteractionState(!1),
        window.setTimeout(function() {
            return t.setInteractionState(!0)
        }, e)
    }
    ,
    UTLiveMessagePopupViewController.prototype.continue = function() {
        var e = this.viewModel.current();
        if (e)
            if (e.hasCountdowns() && this.stopCountdownTimer(),
            services.Messages.readLiveMessage(e.id),
            this.viewModel.endOfList)
                this.closePopup();
            else {
                var t = this.viewModel.next();
                t && (t.hasCountdowns() && this.startCountdownTimer(),
                this.getView().render(t, this.viewModel.getIndex() + 1 + "/" + this.viewModel.length),
                this.startButtonCountdown(t.duration))
            }
    }
    ,
    UTLiveMessagePopupViewController.prototype.handleKeyUpEvent = function(e) {
        !this.getView().isInteractionEnabled() || e.key !== KeyboardKey.ESCAPE && e.key !== KeyboardKey.MS_ESCAPE && e.key !== KeyboardKey.ENTER || this.continue()
    }
    ,
    UTLiveMessagePopupViewController.prototype.onContinue = function(e, t, i) {
        this.continue()
    }
    ,
    UTLiveMessagePopupViewController
}(BasePopupViewController)
  , UTHomeHubViewModel = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTHomeHubViewModel() {
        var e = t.call(this) || this;
        return e.requests = [],
        e
    }
    return __extends(UTHomeHubViewModel, t),
    UTHomeHubViewModel.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.cancelRequests()
    }
    ,
    UTHomeHubViewModel.prototype.cancelRequests = function() {
        0 < this.requests.length && (this.requests.forEach(function(e) {
            e.clearObservers(),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }, this),
        this.requests = [])
    }
    ,
    UTHomeHubViewModel.prototype.completeRequest = function(e, t) {
        e.unobserve(this),
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING);
        var i = this.requests.indexOf(e);
        0 <= i && this.requests.splice(i, 1)
    }
    ,
    UTHomeHubViewModel
}(EAObject))
  , UTTileSquadStatsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTTileSquadStatsView() {
        return null !== t && t.apply(this, arguments) || this
    }
    return __extends(UTTileSquadStatsView, t),
    UTTileSquadStatsView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this.__ratingLabel.textContent = e.localize("squads.rating"),
        this.__chemistryLabel.textContent = e.localize("squad.chemistry.label"),
        this._ratingStars.init()
    }
    ,
    UTTileSquadStatsView.prototype.set = function(e, t) {
        this.setChemistry(e),
        this._ratingStars.setRating(t)
    }
    ,
    UTTileSquadStatsView.prototype.setChemistry = function(e) {
        var t = services.Localization.localize("squad.chemistry.fraction", [e.toString(), UTSquadEntity.TOTAL_MAX_CHEM.toString()]);
        this.__chemistryValue.textContent = t
    }
    ,
    UTTileSquadStatsView
}(UTView));
UTTileSquadStatsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-summary-info");
        var t = document.createElement("div");
        t.classList.add("rating"),
        this.__ratingLabel = document.createElement("span"),
        this.__ratingLabel.classList.add("ut-squad-summary-label"),
        t.appendChild(this.__ratingLabel),
        this._ratingStars = new UTSquadStarRatingView,
        t.appendChild(this._ratingStars.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("chemistry"),
        this.__chemistryLabel = document.createElement("span"),
        this.__chemistryLabel.classList.add("ut-squad-summary-label"),
        i.appendChild(this.__chemistryLabel),
        this.__chemistryValue = document.createElement("span"),
        this.__chemistryValue.classList.add("ut-squad-summary-value"),
        i.appendChild(this.__chemistryValue),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTileSquadStatsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__ratingLabel = null,
    this._ratingStars.destroy(),
    this.__chemistryLabel = null,
    this.__chemistryValue = null
}
,
UTTileSquadStatsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadTileContentView = function(e) {
    function UTSquadTileContentView() {
        return e.call(this) || this
    }
    return __extends(UTSquadTileContentView, e),
    UTSquadTileContentView.prototype.init = function() {
        e.prototype.init.call(this),
        this._squadStats.init()
    }
    ,
    UTSquadTileContentView.prototype.setSquad = function(e) {
        var t, i;
        this.__squadName.textContent = e.getName(),
        this._squadStats.set(e.getChemistry(), e.getRating()),
        this.__formation.textContent = null !== (i = null === (t = null == e ? void 0 : e.getFormation()) || void 0 === t ? void 0 : t.displayName) && void 0 !== i ? i : "",
        e.isDream() ? this.addClass("concept") : this.removeClass("concept")
    }
    ,
    UTSquadTileContentView
}(UTView);
UTSquadTileContentView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tile-content-squad");
        var t = document.createElement("div");
        t.classList.add("pitch-image"),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("info-container"),
        this.__squadName = document.createElement("div"),
        this.__squadName.classList.add("squad-name"),
        i.appendChild(this.__squadName),
        this.__formation = document.createElement("div"),
        this.__formation.classList.add("formation"),
        i.appendChild(this.__formation),
        e.appendChild(i),
        this._squadStats = new UTTileSquadStatsView,
        e.appendChild(this._squadStats.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadTileContentView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__squadName = null,
    this.__formation = null,
    this._squadStats.destroy()
}
,
UTSquadTileContentView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadTileView = function(e) {
    function UTSquadTileView() {
        return e.call(this) || this
    }
    return __extends(UTSquadTileView, e),
    UTSquadTileView.prototype._getContentViewInstance = function() {
        return new UTSquadTileContentView
    }
    ,
    UTSquadTileView.prototype.setSquad = function(e) {
        var t = this.getContentView();
        t && t.setSquad(e)
    }
    ,
    UTSquadTileView
}(UTTileView)
  , UTGraphicalInfoTileContentView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTGraphicalInfoTileContentView() {
        return e.call(this) || this
    }
    return __extends(UTGraphicalInfoTileContentView, e),
    UTGraphicalInfoTileContentView.prototype.setDescription = function(e) {
        this.__description.textContent = e.toString()
    }
    ,
    UTGraphicalInfoTileContentView
}(UTView));
UTGraphicalInfoTileContentView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tile-content-graphic-info");
        var t = document.createElement("div");
        t.classList.add("image"),
        e.appendChild(t),
        this.__description = document.createElement("p"),
        this.__description.classList.add("description"),
        e.appendChild(this.__description),
        this.__root = e,
        this._generated = !0
    }
}
,
UTGraphicalInfoTileContentView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__description = null
}
,
UTGraphicalInfoTileContentView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTGraphicalInfoTileView = function(e) {
    function UTGraphicalInfoTileView() {
        return e.call(this) || this
    }
    return __extends(UTGraphicalInfoTileView, e),
    UTGraphicalInfoTileView.prototype._getContentViewInstance = function() {
        return new UTGraphicalInfoTileContentView
    }
    ,
    UTGraphicalInfoTileView.prototype.setDescription = function(e) {
        var t = this.getContentView();
        t && (null == t || t.setDescription(e))
    }
    ,
    UTGraphicalInfoTileView
}(UTTileView)
  , UTObjectivesHubTileContentView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTObjectivesHubTileContentView() {
        return e.call(this) || this
    }
    return __extends(UTObjectivesHubTileContentView, e),
    UTObjectivesHubTileContentView.prototype.setUnclaimedTagText = function(e) {
        this._unclaimedRewardsTag.setAngle(isPhone() ? UTLabelView.Angle.BOTTOM_RIGHT : UTLabelView.Angle.TOP_RIGHT),
        this._unclaimedRewardsTag.setLabel(e)
    }
    ,
    UTObjectivesHubTileContentView.prototype.toggleNumUnclaimedObjectives = function(e) {
        DOMKit.toggleDisplayStyle(this.__unclaimedRewardsBubble, e)
    }
    ,
    UTObjectivesHubTileContentView.prototype.setNumUnclaimedObjectives = function(e) {
        this.__unclaimedRewardsBubble.textContent = 0 < e ? e.toString() : ""
    }
    ,
    UTObjectivesHubTileContentView.prototype.setSubtitle = function(e) {
        this.__subtitle.textContent = e
    }
    ,
    UTObjectivesHubTileContentView.prototype.setExpiryLabel = function(e) {
        this.__expiry.textContent = e
    }
    ,
    UTObjectivesHubTileContentView.prototype.setDescription = function(e) {
        this.__description.textContent = e
    }
    ,
    UTObjectivesHubTileContentView
}(UTView));
UTObjectivesHubTileContentView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tile-content-objectives"),
        this.__unclaimedRewardsBubble = document.createElement("span"),
        this.__unclaimedRewardsBubble.classList.add("ut-numeric-notification-bubble"),
        e.appendChild(this.__unclaimedRewardsBubble);
        var t = document.createElement("div");
        t.classList.add("ut-tile-view--campaign-content"),
        this.__subtitle = document.createElement("h2"),
        this.__subtitle.classList.add("ut-tile-view--subtitle"),
        t.appendChild(this.__subtitle),
        this.__expiry = document.createElement("div"),
        this.__expiry.classList.add("ut-tile-view--expiry"),
        t.appendChild(this.__expiry),
        e.appendChild(t),
        this._unclaimedRewardsTag = new UTLabelView,
        e.appendChild(this._unclaimedRewardsTag.getRootElement());
        var i = document.createElement("div");
        i.classList.add("image"),
        e.appendChild(i),
        this.__description = document.createElement("p"),
        this.__description.classList.add("description"),
        e.appendChild(this.__description),
        this.__root = e,
        this._generated = !0
    }
}
,
UTObjectivesHubTileContentView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__unclaimedRewardsBubble = null,
    this.__subtitle = null,
    this.__expiry = null,
    this._unclaimedRewardsTag.destroy(),
    this.__description = null
}
,
UTObjectivesHubTileContentView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTObjectivesHubTileView = function(e) {
    function UTObjectivesHubTileView() {
        return e.call(this) || this
    }
    return __extends(UTObjectivesHubTileView, e),
    UTObjectivesHubTileView.prototype._getContentViewInstance = function() {
        return new UTObjectivesHubTileContentView
    }
    ,
    UTObjectivesHubTileView.prototype.setUnclaimedTagText = function(e) {
        this.getContentView().setUnclaimedTagText(e)
    }
    ,
    UTObjectivesHubTileView.prototype.setNumUnclaimedObjectives = function(e) {
        var t = this.getContentView();
        t.setNumUnclaimedObjectives(e),
        t.toggleNumUnclaimedObjectives(0 < e),
        this.toggleHasRewardsClass(0 < e)
    }
    ,
    UTObjectivesHubTileView.prototype.toggleHasRewardsClass = function(e) {
        this.toggleClass(UTObjectivesHubTileView.Style.HAS_UNCLAIMED_REWARDS, e)
    }
    ,
    UTObjectivesHubTileView.prototype.setSubtitle = function(e) {
        this.getContentView().setSubtitle(e)
    }
    ,
    UTObjectivesHubTileView.prototype.setExpiryLabel = function(e) {
        this.getContentView().setExpiryLabel(e)
    }
    ,
    UTObjectivesHubTileView.prototype.setDescriptionFromObjectiveState = function(e, t) {
        var i = this.getContentView()
          , o = services.Localization;
        t ? 1 < e ? i.setDescription(o.localize("dynamicObjective.tile.unclaimedDescription", [e.toString()])) : 1 === e ? i.setDescription(o.localize("dynamicObjective.tile.unclaimedDescription.singular")) : i.setDescription(o.localize("dynamicObjective.tile.description")) : i.setDescription(o.localize("dynamicObjective.tile.disabled"))
    }
    ,
    UTObjectivesHubTileView.Style = Object.freeze({
        LOADING: "loading",
        LOADING_IMAGES: "loading-images",
        HAS_UNCLAIMED_REWARDS: "has-unclaimed-rewards"
    }),
    UTObjectivesHubTileView
}(UTTileView)
  , UTTransfersTileContentView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTTransfersTileContentView() {
        return e.call(this) || this
    }
    return __extends(UTTransfersTileContentView, e),
    UTTransfersTileContentView.prototype.setActiveTransferLabel = function(e) {
        this.__activeTransferLabel.textContent = e
    }
    ,
    UTTransfersTileContentView.prototype.setActiveTransferCount = function(e) {
        this.__activeTransferValue.textContent = e.toString()
    }
    ,
    UTTransfersTileContentView.prototype.setTotalTransferLabel = function(e) {
        this.__totalTransferLabel.textContent = e
    }
    ,
    UTTransfersTileContentView.prototype.setTotalTransferCount = function(e) {
        this.__totalTransferValue.textContent = e.toString()
    }
    ,
    UTTransfersTileContentView.prototype.setFinishedTransferLabel = function(e) {
        this.__finishedTransferLabel.textContent = e
    }
    ,
    UTTransfersTileContentView.prototype.setFinishedTransferCount = function(e) {
        this.__finishedTransferValue.textContent = e.toString()
    }
    ,
    UTTransfersTileContentView
}(UTView));
UTTransfersTileContentView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tile-content-transfers");
        var t = document.createElement("div");
        t.classList.add("total-transfers"),
        this.__totalTransferValue = document.createElement("span"),
        this.__totalTransferValue.classList.add("value"),
        t.appendChild(this.__totalTransferValue),
        this.__totalTransferLabel = document.createElement("span"),
        this.__totalTransferLabel.classList.add("label"),
        t.appendChild(this.__totalTransferLabel),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("active-transfers"),
        this.__activeTransferLabel = document.createElement("span"),
        this.__activeTransferLabel.classList.add("label"),
        i.appendChild(this.__activeTransferLabel),
        this.__activeTransferValue = document.createElement("span"),
        this.__activeTransferValue.classList.add("value"),
        i.appendChild(this.__activeTransferValue),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("finished-transfers"),
        this.__finishedTransferLabel = document.createElement("span"),
        this.__finishedTransferLabel.classList.add("label"),
        o.appendChild(this.__finishedTransferLabel),
        this.__finishedTransferValue = document.createElement("span"),
        this.__finishedTransferValue.classList.add("value"),
        o.appendChild(this.__finishedTransferValue),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTransfersTileContentView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__totalTransferValue = null,
    this.__totalTransferLabel = null,
    this.__activeTransferLabel = null,
    this.__activeTransferValue = null,
    this.__finishedTransferLabel = null,
    this.__finishedTransferValue = null
}
,
UTTransfersTileContentView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTransfersTileView = function(e) {
    function UTTransfersTileView() {
        return e.call(this) || this
    }
    return __extends(UTTransfersTileView, e),
    UTTransfersTileView.prototype.init = function() {
        e.prototype.init.call(this),
        this.setDimOverlayType(TileDimOverlayType.LOCKED)
    }
    ,
    UTTransfersTileView.prototype._getContentViewInstance = function() {
        return new UTTransfersTileContentView
    }
    ,
    UTTransfersTileView.prototype.setTotalTransferLabel = function(e) {
        var t = this.getContentView();
        null == t || t.setTotalTransferLabel(e)
    }
    ,
    UTTransfersTileView.prototype.setActiveTransferLabel = function(e) {
        this.getContentView().setActiveTransferLabel(e)
    }
    ,
    UTTransfersTileView.prototype.setFinishedTransferLabel = function(e) {
        this.getContentView().setFinishedTransferLabel(e)
    }
    ,
    UTTransfersTileView.prototype.setTotalTransferCount = function(e) {
        this.getContentView().setTotalTransferCount(e)
    }
    ,
    UTTransfersTileView.prototype.setActiveTransferCount = function(e) {
        this.getContentView().setActiveTransferCount(e)
    }
    ,
    UTTransfersTileView.prototype.setFinishedTransferCount = function(e) {
        this.getContentView().setFinishedTransferCount(e)
    }
    ,
    UTTransfersTileView
}(UTTileView)
  , UTHubMessagesTileView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTHubMessagesTileView() {
        var e = i.call(this) || this;
        return e._data = [],
        e._loadedImages = 0,
        e._countdownTimer = null,
        e
    }
    return __extends(UTHubMessagesTileView, i),
    UTHubMessagesTileView.prototype.init = function() {
        i.prototype.init.call(this),
        this.showLoadingState()
    }
    ,
    UTHubMessagesTileView.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this._data = [],
        this._stopCountdownTimer()
    }
    ,
    UTHubMessagesTileView.prototype.useDefaultState = function() {
        var e = services.Localization
          , t = document.createElement("img");
        t.setAttribute("src", "images/tileFETDefault.png"),
        DOMKit.addClass(t, "FETImage"),
        this._tnsCarousel.appendElem(t),
        this.title = e.localize("tile.fet.title"),
        this.__content.textContent = e.localize("tile.fet.message"),
        this.setInteractionState(!1),
        this.hideLoadingState()
    }
    ,
    UTHubMessagesTileView.prototype.setData = function(e) {
        var t = this;
        if (this._data = e,
        this._loadedImages = 0,
        this._tnsCarousel.teardown(this.getRootElement()),
        0 < this._data.length) {
            var i = this._data[0];
            this.addClass(UTTileView.Style.LOADING_IMAGES),
            this._data.forEach(function(e) {
                return t._tnsCarousel.appendElem(t._createMessageImg(e))
            }),
            this.setInteractionState(!JSUtils.isEmpty(i.goToLink)),
            i.titleCountdown < 0 && (this.title = i.title),
            i.bodyCountdown < 0 && this._renderContent(i.body),
            i.hasCountdowns() && this._startCountdownTimer(i),
            this.hideLoadingState()
        } else
            this.useDefaultState()
    }
    ,
    UTHubMessagesTileView.prototype.setDisplay = function(e) {
        DOMKit.toggleDisplayStyle(this.getRootElement(), e)
    }
    ,
    UTHubMessagesTileView.prototype.showLoadingState = function() {
        this.addClass(UTTileView.Style.LOADING)
    }
    ,
    UTHubMessagesTileView.prototype.hideLoadingState = function() {
        this.removeClass(UTTileView.Style.LOADING)
    }
    ,
    UTHubMessagesTileView.prototype._onSlideFadeOut = function(e) {
        var t = this
          , i = [{
            opacity: "0%"
        }, {
            opacity: "100%"
        }]
          , o = [{
            opacity: "100%"
        }, {
            opacity: "0%"
        }]
          , n = this._data[e];
        n && (this.setInteractionState(!JSUtils.isEmpty(n.goToLink)),
        this._stopCountdownTimer(),
        this.__header.animate(o, {
            duration: 200
        }).onfinish = function(e) {
            n.titleCountdown < 0 && (t.title = n.title),
            t.__header.animate(i, {
                duration: 200
            })
        }
        ,
        this.__content.animate(o, {
            duration: 200
        }).onfinish = function(e) {
            n.bodyCountdown < 0 && t._renderContent(n.body),
            n.hasCountdowns() && t._startCountdownTimer(n),
            t.__content.animate(i, {
                duration: 200
            })
        }
        )
    }
    ,
    UTHubMessagesTileView.prototype._startCountdownTimer = function(e) {
        var t = this;
        this._countdownTimer || (this._updateCountdownTimer(e),
        this._countdownTimer = new EAIntervalController(1e3,function() {
            return t._updateCountdownTimer(e)
        }
        ),
        this._countdownTimer.start())
    }
    ,
    UTHubMessagesTileView.prototype._stopCountdownTimer = function() {
        this._countdownTimer && (this._countdownTimer.dealloc(),
        this._countdownTimer = null)
    }
    ,
    UTHubMessagesTileView.prototype._updateCountdownTimer = function(e) {
        var t = services.Localization;
        0 <= e.titleCountdown && (this.title = e.title.replace(ArubaPlaceholderEnum.COUNTDOWN, t.localizeTimeRemaining(Math.max(0, e.titleCountdown - Date.now())))),
        0 <= e.bodyCountdown && this._renderContent(e.body.replace(ArubaPlaceholderEnum.COUNTDOWN, t.localizeTimeRemaining(Math.max(0, e.bodyCountdown - Date.now()))))
    }
    ,
    UTHubMessagesTileView.prototype._renderContent = function(e) {
        this.__content.innerHTML = e
    }
    ,
    UTHubMessagesTileView.prototype._createMessageImg = function(e) {
        var t = new UTImageView;
        return t.setExternalResource(e.bodyImagePath, !0).observe(this, this._imageLoad),
        t.addClass("FETImage"),
        t.getRootElement()
    }
    ,
    UTHubMessagesTileView.prototype._imageLoad = function(e, t, i, o) {
        if (e.unobserve(this),
        t || i.setLocalResource("images/tileFETDefault.png"),
        ++this._loadedImages >= this._data.length && (this.removeClass(UTTileView.Style.LOADING_IMAGES),
        !this._tnsCarousel.isOn())) {
            var n = new TNSPropertiesDTO;
            n.nav = !0,
            n.controls = !1,
            n.loop = !0,
            n.autoplay = !0,
            n.autoplaySpeed = 4e3,
            n.container = this._tnsCarousel.getRootElement(),
            this._tnsCarousel.setup(n),
            1 < this._data.length && this._tnsCarousel.afterChange(this._onSlideFadeOut.bind(this))
        }
    }
    ,
    UTHubMessagesTileView.prototype._handleLink = function(e) {
        this._triggerActions(UTHubMessagesTileView.Event.GOTOLINK, e)
    }
    ,
    UTHubMessagesTileView.prototype._touchStarted = function(e) {
        this._isTouchTargetValid(e.target) && i.prototype._touchStarted.call(this, e)
    }
    ,
    UTHubMessagesTileView.prototype._tapDetected = function(e) {
        if (this._isTouchTargetValid(e.target)) {
            i.prototype._tapDetected.call(this, e);
            var t = this._data[this._tnsCarousel.getCurrentSlide()];
            JSUtils.isEmpty(t.goToLink) || this._handleLink(t)
        }
    }
    ,
    UTHubMessagesTileView.prototype._isTouchTargetValid = function(e) {
        for (; e !== this.__root; ) {
            if (DOMKit.hasClass(e, "tns-nav"))
                return !1;
            e.parentElement && (e = e.parentElement)
        }
        return !0
    }
    ,
    UTHubMessagesTileView.prototype.destroyCarousel = function() {
        this._tnsCarousel.teardown(this.getRootElement())
    }
    ,
    UTHubMessagesTileView.Event = Object.freeze({
        GOTOLINK: "UTHubMessagesTileView.Event.GOTOLINK"
    }),
    UTHubMessagesTileView
}(UTTileView));
UTHubMessagesTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-hub-messages-tile-view"),
        e.classList.add("tile"),
        this.__header = document.createElement("header"),
        this.__tileTitle = document.createElement("h1"),
        this.__tileTitle.classList.add("tileHeader"),
        this.__header.appendChild(this.__tileTitle),
        e.appendChild(this.__header),
        this._tnsCarousel = new TNSContainerView,
        this._tnsCarousel.getRootElement().classList.add("carousel"),
        e.appendChild(this._tnsCarousel.getRootElement());
        var t = document.createElement("div");
        t.classList.add("FETContent"),
        this.__content = document.createElement("p"),
        t.appendChild(this.__content),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("loadingSpinner"),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTHubMessagesTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__header = null,
    this.__tileTitle = null,
    this._tnsCarousel.destroy(),
    this.__content = null
}
,
UTHubMessagesTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPlayerPicksTileView = function(t) {
    function UTPlayerPicksTileView() {
        return t.call(this) || this
    }
    return __extends(UTPlayerPicksTileView, t),
    UTPlayerPicksTileView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this.title = e.localize("playerpicks.tile.header"),
        this.__label.innerHTML = e.localize("playerpicks.tile.content")
    }
    ,
    UTPlayerPicksTileView
}(UTTileView);
UTPlayerPicksTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-player-picks-tile-view"),
        e.classList.add("tile");
        var t = document.createElement("header");
        this.__tileTitle = document.createElement("h1"),
        this.__tileTitle.classList.add("tileHeader"),
        t.appendChild(this.__tileTitle),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("img"),
        e.appendChild(i),
        this.__label = document.createElement("div"),
        this.__label.classList.add("reward-tile--label"),
        e.appendChild(this.__label),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPlayerPicksTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__tileTitle = null,
    this.__label = null
}
,
UTPlayerPicksTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTLeaderboardsTileView = function(e) {
    function UTLeaderboardsTileView() {
        return e.call(this) || this
    }
    return __extends(UTLeaderboardsTileView, e),
    UTLeaderboardsTileView.prototype.init = function() {
        e.prototype.init.call(this),
        this.title = services.Localization.localize("leaderboards.tile.title")
    }
    ,
    UTLeaderboardsTileView.prototype.setBadge = function(e) {
        this._badge.setResource(AssetLocationUtils.getBadgeImageUri(e, enums.UIThemeVariation.DARK), !0)
    }
    ,
    UTLeaderboardsTileView.prototype.setName = function(e) {
        this.__label.textContent = e
    }
    ,
    UTLeaderboardsTileView
}(UTTileView);
UTLeaderboardsTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-leaderboards-tile-view"),
        e.classList.add("tile");
        var t = document.createElement("div");
        t.classList.add("loadingSpinner"),
        e.appendChild(t);
        var i = document.createElement("header");
        this.__tileTitle = document.createElement("h1"),
        this.__tileTitle.classList.add("tileHeader"),
        i.appendChild(this.__tileTitle),
        e.appendChild(i),
        this.__tileContent = document.createElement("div"),
        this.__tileContent.classList.add("tileContent"),
        this.__label = document.createElement("div"),
        this.__label.classList.add("label"),
        this.__tileContent.appendChild(this.__label),
        this._badge = new UTImageView,
        this.__tileContent.appendChild(this._badge.getRootElement()),
        e.appendChild(this.__tileContent),
        this.__root = e,
        this._generated = !0
    }
}
,
UTLeaderboardsTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__tileTitle = null,
    this.__tileContent = null,
    this.__label = null,
    this._badge.destroy()
}
,
UTLeaderboardsTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTUnassignedTileView = function(e) {
    function UTUnassignedTileView() {
        return e.call(this) || this
    }
    return __extends(UTUnassignedTileView, e),
    UTUnassignedTileView.prototype.init = function() {
        e.prototype.init.call(this),
        this.title = services.Localization.localize("navbar.label.newitems")
    }
    ,
    UTUnassignedTileView.prototype.setNumberOfItems = function(e) {
        this.__number.textContent = e.toString(),
        this.__label.innerHTML = services.Localization.localize(1 === e ? "unassigned.tile.itemRemaining" : "unassigned.tile.itemsRemaining")
    }
    ,
    UTUnassignedTileView
}(UTTileView);
UTUnassignedTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-unassigned-tile-view"),
        e.classList.add("tile");
        var t = document.createElement("header");
        this.__tileTitle = document.createElement("h1"),
        this.__tileTitle.classList.add("tileHeader"),
        t.appendChild(this.__tileTitle),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("img"),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("data-container"),
        this.__number = document.createElement("span"),
        this.__number.classList.add("itemsNumber"),
        o.appendChild(this.__number),
        this.__label = document.createElement("span"),
        this.__label.classList.add("itemsLabel"),
        o.appendChild(this.__label),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTUnassignedTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__tileTitle = null,
    this.__number = null,
    this.__label = null
}
,
UTUnassignedTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTHomeHubView = function(e) {
    function UTHomeHubView() {
        return e.call(this) || this
    }
    return __extends(UTHomeHubView, e),
    UTHomeHubView.prototype.init = function() {
        var e = services.Localization;
        this._activeSquadTile.init(),
        this._activeSquadTile.title = e.localize("navbar.label.activesquad"),
        this._objectivesTile.init(),
        this._objectivesTile.title = e.localize("navbar.label.objectivehub"),
        this._hubMessagesTile.init(),
        this._sbcTile.init(),
        this._sbcTile.title = e.localize("navbar.label.sbcHub"),
        this._cgeTile.init(),
        this._cgeTile.title = e.localize("cge.tile.title"),
        this._proClubsTile.init(),
        this._proClubsTile.title = e.localize("proclubs.tile.title"),
        this._gameModesHubTile.init(),
        this._gameModesHubTile.title = e.localize("gamemodes.tile.title"),
        this._customizeTile.init(),
        this._customizeTile.title = e.localize("navbar.label.customizeHub"),
        this._transferListTile.init(),
        this._transferListTile.title = e.localize("navbar.label.tradepile"),
        this._transferListTile.setTotalTransferLabel(e.localize("dock.label.items")),
        this._transferListTile.setTotalTransferCount(0),
        this._transferListTile.setActiveTransferLabel(e.localize("dock.label.selling")),
        this._transferListTile.setActiveTransferCount(0),
        this._transferListTile.setFinishedTransferLabel(e.localize("tradepile.dock.categories.sold")),
        this._transferListTile.setFinishedTransferCount(0),
        this._leaderboardsTile.init(),
        isPhone() || this._leaderboardsTile.setDisplay(!1),
        this._unassignedTile.init(),
        this._unassignedTile.setDisplay(!1),
        this._playerPicksTile.init(),
        this._playerPicksTile.setDisplay(!1)
    }
    ,
    UTHomeHubView.prototype.renderActiveSquadTile = function(e) {
        this._activeSquadTile.setSquad(e)
    }
    ,
    UTHomeHubView.prototype.renderHubMessagesTile = function(e) {
        this._hubMessagesTile.setData(e)
    }
    ,
    UTHomeHubView.prototype.renderObjectivesTile = function(e) {
        this._objectivesTile.setNumUnclaimedObjectives(e)
    }
    ,
    UTHomeHubView.prototype.renderUnassignedTile = function(e) {
        this._unassignedTile.setNumberOfItems(e),
        this._unassignedTile.setDisplay(0 < e)
    }
    ,
    UTHomeHubView.prototype.getActiveSquadTile = function() {
        return this._activeSquadTile
    }
    ,
    UTHomeHubView.prototype.getObjectivesTile = function() {
        return this._objectivesTile
    }
    ,
    UTHomeHubView.prototype.getSBCTile = function() {
        return this._sbcTile
    }
    ,
    UTHomeHubView.prototype.getCGETile = function() {
        return this._cgeTile
    }
    ,
    UTHomeHubView.prototype.getProClubsTile = function() {
        return this._proClubsTile
    }
    ,
    UTHomeHubView.prototype.getCustomizeTile = function() {
        return this._customizeTile
    }
    ,
    UTHomeHubView.prototype.getGameModesHubTile = function() {
        return this._gameModesHubTile
    }
    ,
    UTHomeHubView.prototype.getTransferListTile = function() {
        return this._transferListTile
    }
    ,
    UTHomeHubView.prototype.getLeaderboardsTile = function() {
        return this._leaderboardsTile
    }
    ,
    UTHomeHubView.prototype.getUnassignedTile = function() {
        return this._unassignedTile
    }
    ,
    UTHomeHubView.prototype.getHubMessagesTile = function() {
        return this._hubMessagesTile
    }
    ,
    UTHomeHubView.prototype.getPlayerPicksTile = function() {
        return this._playerPicksTile
    }
    ,
    UTHomeHubView
}(UTView);
UTHomeHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div")
          , t = document.createElement("div");
        t.classList.add("grid"),
        t.classList.add("layout-hub"),
        this._unassignedTile = new UTUnassignedTileView,
        this._unassignedTile.getRootElement().classList.add("col-1-1"),
        t.appendChild(this._unassignedTile.getRootElement()),
        this._playerPicksTile = new UTPlayerPicksTileView,
        this._playerPicksTile.getRootElement().classList.add("col-1-1"),
        t.appendChild(this._playerPicksTile.getRootElement()),
        this._objectivesTile = new UTObjectivesHubTileView,
        this._objectivesTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._objectivesTile.getRootElement().classList.add("col-1-2"),
        this._objectivesTile.getRootElement().classList.add("ut-tile-hub-objective"),
        t.appendChild(this._objectivesTile.getRootElement()),
        this._sbcTile = new UTGraphicalInfoTileView,
        this._sbcTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._sbcTile.getRootElement().classList.add("col-1-2"),
        this._sbcTile.getRootElement().classList.add("ut-tile-hub-sbc"),
        t.appendChild(this._sbcTile.getRootElement()),
        this._hubMessagesTile = new UTHubMessagesTileView,
        this._hubMessagesTile.getRootElement().classList.add("col-1-1"),
        t.appendChild(this._hubMessagesTile.getRootElement()),
        this._transferListTile = new UTTransfersTileView,
        this._transferListTile.getRootElement().classList.add("col-1-2"),
        this._transferListTile.getRootElement().classList.add("ut-tile-transfer-list"),
        t.appendChild(this._transferListTile.getRootElement()),
        this._customizeTile = new UTGraphicalInfoTileView,
        this._customizeTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._customizeTile.getRootElement().classList.add("col-1-2"),
        this._customizeTile.getRootElement().classList.add("ut-tile-hub-customize"),
        t.appendChild(this._customizeTile.getRootElement()),
        this._activeSquadTile = new UTSquadTileView,
        this._activeSquadTile.getRootElement().classList.add("col-1-2-md"),
        this._activeSquadTile.getRootElement().classList.add("col-1-1"),
        t.appendChild(this._activeSquadTile.getRootElement()),
        this._gameModesHubTile = new UTGraphicalInfoTileView,
        this._gameModesHubTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._gameModesHubTile.getRootElement().classList.add("ut-tile-hub-gamemodeshub"),
        this._gameModesHubTile.getRootElement().classList.add("col-1-2"),
        t.appendChild(this._gameModesHubTile.getRootElement()),
        this._leaderboardsTile = new UTLeaderboardsTileView,
        this._leaderboardsTile.getRootElement().classList.add("col-1-2"),
        t.appendChild(this._leaderboardsTile.getRootElement()),
        this._cgeTile = new UTGraphicalInfoTileView,
        this._cgeTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._cgeTile.getRootElement().classList.add("ut-tile-hub-cge"),
        this._cgeTile.getRootElement().classList.add("col-1-2-md"),
        this._cgeTile.getRootElement().classList.add("col-1-2"),
        t.appendChild(this._cgeTile.getRootElement()),
        this._proClubsTile = new UTGraphicalInfoTileView,
        this._proClubsTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._proClubsTile.getRootElement().classList.add("ut-tile-hub-proclubs"),
        this._proClubsTile.getRootElement().classList.add("col-1-2-md"),
        this._proClubsTile.getRootElement().classList.add("col-1-2"),
        t.appendChild(this._proClubsTile.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTHomeHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._unassignedTile.destroy(),
    this._playerPicksTile.destroy(),
    this._objectivesTile.destroy(),
    this._sbcTile.destroy(),
    this._hubMessagesTile.destroy(),
    this._transferListTile.destroy(),
    this._customizeTile.destroy(),
    this._activeSquadTile.destroy(),
    this._gameModesHubTile.destroy(),
    this._leaderboardsTile.destroy(),
    this._cgeTile.destroy(),
    this._proClubsTile.destroy()
}
,
UTHomeHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTGameModeTileView = function(e) {
    function UTGameModeTileView() {
        return e.call(this) || this
    }
    return __extends(UTGameModeTileView, e),
    UTGameModeTileView.prototype.init = function() {
        e.prototype.init.call(this),
        this._tag.init()
    }
    ,
    UTGameModeTileView.prototype.setDescription = function(e) {
        var t = this.getContentView();
        e && t && t.setDescription(e)
    }
    ,
    UTGameModeTileView.prototype.setTagText = function(e) {
        this._tag && (this._tag.setAngle(isPhone() ? UTLabelView.Angle.BOTTOM_RIGHT : UTLabelView.Angle.TOP_RIGHT),
        this._tag.setLabel(e))
    }
    ,
    UTGameModeTileView.prototype.toggleRewardsState = function(e) {
        this.toggleClass("has-unclaimed-rewards", e)
    }
    ,
    UTGameModeTileView
}(UTGraphicalInfoTileView);
UTGameModeTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tile-view--with-gfx"),
        e.classList.add("ut-game-mode-tile-view"),
        e.classList.add("tile");
        var t = document.createElement("div");
        t.classList.add("loadingSpinner"),
        e.appendChild(t);
        var i = document.createElement("header");
        this.__tileTitle = document.createElement("h1"),
        this.__tileTitle.classList.add("tileHeader"),
        i.appendChild(this.__tileTitle),
        e.appendChild(i),
        this.__tileContent = document.createElement("div"),
        this.__tileContent.classList.add("tileContent"),
        this._tag = new UTLabelView,
        this.__tileContent.appendChild(this._tag.getRootElement()),
        e.appendChild(this.__tileContent),
        this.__root = e,
        this._generated = !0
    }
}
,
UTGameModeTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__tileTitle = null,
    this.__tileContent = null,
    this._tag.destroy()
}
,
UTGameModeTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTGameModesHubView = function(i) {
    function UTGameModesHubView(e) {
        var t = i.call(this) || this;
        return t.loc = e.localization,
        t
    }
    return __extends(UTGameModesHubView, i),
    UTGameModesHubView.prototype.init = function() {
        var e = this.loc;
        this._squadBattlesTile.init(),
        this._squadBattlesTile.title = e.localize("gamemodes.squadbattles.tile.title"),
        this._squadBattlesTile.setDescription(e.localize("gamemodes.squadbattles.tile.description")),
        this._squadBattlesTile.setInteractionState(!1),
        this._rivalsTile.init(),
        this._rivalsTile.title = e.localize("gamemodes.rivals.tile.title"),
        this._rivalsTile.setDescription(e.localize("gamemodes.rivals.tile.description")),
        this._rivalsTile.setInteractionState(!1),
        this._championsTile.init(),
        this._championsTile.title = e.localize("gamemodes.champions.tile.title"),
        this._championsTile.setDescription(e.localize("gamemodes.champions.tile.description")),
        this._championsTile.setInteractionState(!1)
    }
    ,
    UTGameModesHubView.prototype.getSquadBattlesTile = function() {
        return this._squadBattlesTile
    }
    ,
    UTGameModesHubView.prototype.getRivalsTile = function() {
        return this._rivalsTile
    }
    ,
    UTGameModesHubView.prototype.getChampsTile = function() {
        return this._championsTile
    }
    ,
    UTGameModesHubView
}(UTView);
UTGameModesHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div")
          , t = document.createElement("div");
        t.classList.add("grid"),
        t.classList.add("layout-hub"),
        this._squadBattlesTile = new UTGameModeTileView,
        this._squadBattlesTile.getRootElement().classList.add("col-1-2"),
        this._squadBattlesTile.getRootElement().classList.add("ut-game-mode-tile-view--squadbattles"),
        t.appendChild(this._squadBattlesTile.getRootElement()),
        this._rivalsTile = new UTGameModeTileView,
        this._rivalsTile.getRootElement().classList.add("col-1-2"),
        this._rivalsTile.getRootElement().classList.add("ut-game-mode-tile-view--rivals"),
        t.appendChild(this._rivalsTile.getRootElement()),
        this._championsTile = new UTGameModeTileView,
        this._championsTile.getRootElement().classList.add("col-1-2"),
        this._championsTile.getRootElement().classList.add("ut-game-mode-tile-view--champions"),
        t.appendChild(this._championsTile.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTGameModesHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._squadBattlesTile.destroy(),
    this._rivalsTile.destroy(),
    this._championsTile.destroy()
}
,
UTGameModesHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTChampionsViewModel = function(i) {
    function UTChampionsViewModel(e) {
        var t = i.call(this) || this;
        return t.currentEvent = null,
        t.service = e,
        t
    }
    return __extends(UTChampionsViewModel, i),
    UTChampionsViewModel.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.currentEvent && (this.currentEvent = null)
    }
    ,
    UTChampionsViewModel.prototype.requestEvent = function() {
        var o = this
          , e = this.service.requestChampsHub();
        return this._trackRequest(e, !0, function(e) {
            var t, i;
            o.currentEvent = null !== (i = null === (t = e.data) || void 0 === t ? void 0 : t.event) && void 0 !== i ? i : null
        }),
        e
    }
    ,
    UTChampionsViewModel.prototype.claimRewards = function() {
        var e = this.service.claimRewards();
        return this._trackRequest(e, !0),
        e
    }
    ,
    UTChampionsViewModel
}(UTViewModel)
  , UTRivalsViewModel = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTRivalsViewModel(e) {
        var t = i.call(this) || this;
        return t.currentEvent = null,
        t.service = e,
        t
    }
    return __extends(UTRivalsViewModel, i),
    UTRivalsViewModel.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.currentEvent && (this.currentEvent = null)
    }
    ,
    UTRivalsViewModel.prototype.requestEvent = function() {
        var o = this
          , e = this.service.getRivalsHub();
        return this._trackRequest(e, !0, function(e) {
            var t, i;
            o.currentEvent = null !== (i = null === (t = e.data) || void 0 === t ? void 0 : t.event) && void 0 !== i ? i : null
        }),
        e
    }
    ,
    UTRivalsViewModel.prototype.getWeeklyRewardsInfo = function() {
        var e = this.service.getWeeklyRewardsInfo();
        return this._trackRequest(e, !0),
        e
    }
    ,
    UTRivalsViewModel.prototype.getSeasonalRewardsInfo = function() {
        var e = this.service.getSeasonalRewardsInfo();
        return this._trackRequest(e, !0),
        e
    }
    ,
    UTRivalsViewModel.prototype.claimWeeklyRivalsRewardsById = function(e) {
        var t = this.service.claimWeeklyRivalsRewardsById(e);
        return this._trackRequest(t, !0),
        t
    }
    ,
    UTRivalsViewModel.prototype.claimSeasonalRivalsRewardsById = function(e) {
        var t = this.service.claimSeasonalRivalsRewardsById(e);
        return this._trackRequest(t, !0),
        t
    }
    ,
    UTRivalsViewModel
}(UTViewModel))
  , UTSquadBattlesViewModel = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTSquadBattlesViewModel(e) {
        var t = i.call(this) || this;
        return t.currentEvent = null,
        t.service = e,
        t
    }
    return __extends(UTSquadBattlesViewModel, i),
    UTSquadBattlesViewModel.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.currentEvent && (this.currentEvent = null)
    }
    ,
    UTSquadBattlesViewModel.prototype.requestEvent = function() {
        var i = this
          , e = this.service.requestCurrentEventFullScope();
        return this._trackRequest(e, !0, function(e) {
            var t;
            i.currentEvent = (null === (t = e.data) || void 0 === t ? void 0 : t.event) ? i.sortedEvent(e.data.event) : null
        }),
        e
    }
    ,
    UTSquadBattlesViewModel.prototype.sortedEvent = function(e) {
        var t = e.prizeTiers.sort(function(e, t) {
            return e.level > t.level ? -1 : e.level < t.level ? 1 : 0
        });
        return e.prizeTiers = t,
        e
    }
    ,
    UTSquadBattlesViewModel.prototype.claimRewards = function() {
        var e = this.service.claimRewards();
        return this._trackRequest(e, !0),
        e
    }
    ,
    UTSquadBattlesViewModel
}(UTViewModel))
  , UTSquadBattlesTierView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSquadBattlesTierView() {
        var e = t.call(this) || this;
        return e.id = -1,
        e.levelRewards = [],
        e
    }
    return __extends(UTSquadBattlesTierView, t),
    UTSquadBattlesTierView.prototype.init = function() {
        t.prototype.init.call(this),
        this._rewardsInfoBtn.init(),
        this._rewardsInfoBtn.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._rewardsInfoBtn.setInteractionState(!1),
        this.setInteractionState(!0)
    }
    ,
    UTSquadBattlesTierView.prototype.setTierLevelRewardOptions = function(e) {
        this.levelRewards = e
    }
    ,
    UTSquadBattlesTierView.prototype.setState = function(e) {
        e === TierViewState.NONE ? this.removeClass("in-progress surpassed obtained") : (this.toggleClass("in-progress", e === TierViewState.IN_PROGRESS),
        this.toggleClass("surpassed", e === TierViewState.SURPASSED),
        this.toggleClass("obtained", e === TierViewState.OBTAINED))
    }
    ,
    UTSquadBattlesTierView.prototype.setLabel = function(e) {
        this.__label.textContent = e
    }
    ,
    UTSquadBattlesTierView.prototype.setupRewardsCarousel = function(e) {
        0 !== this.levelRewards.length ? (0 < e && this._rewardsCarousel.setDefaultIndex(e),
        this._rewardsCarousel.setupRewards(this.levelRewards)) : DebugUtils.Assert(!1, "Tried to setup rewards for a level that has no reward data.")
    }
    ,
    UTSquadBattlesTierView.prototype.onButtonSelected = function(e, t, i) {
        if (this.isInteractionEnabled()) {
            var o = {
                id: this.id
            };
            e === this._rewardsInfoBtn && this._triggerActions(UTSquadBattlesTierView.Event.REWARDS_INFO, o)
        }
    }
    ,
    UTSquadBattlesTierView.Event = {
        REWARDS_INFO: "UTSquadBattlesTierView.Event.REWARDS_INFO"
    },
    UTSquadBattlesTierView
}(UTTierView));
UTTierView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tier-view"),
        this.__overlay = document.createElement("div"),
        this.__overlay.classList.add("ut-tier-view--overlay"),
        this.__overlayText = document.createElement("span"),
        this.__overlay.appendChild(this.__overlayText),
        e.appendChild(this.__overlay);
        var t = document.createElement("section");
        t.classList.add("ut-tier-view--meta"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-tier-view--title"),
        t.appendChild(this.__title),
        this.__label = document.createElement("div"),
        this.__label.classList.add("ut-tier-view--label"),
        t.appendChild(this.__label),
        this._claimBtn = new UTStandardButtonControl,
        this._claimBtn.getRootElement().classList.add("call-to-action"),
        this._claimBtn.getRootElement().classList.add("mini"),
        this._claimBtn.getRootElement().classList.add("ut-tier-view--button"),
        t.appendChild(this._claimBtn.getRootElement()),
        e.appendChild(t),
        this._rewardsCarousel = new UTCampaignRewardsCarouselView,
        this._rewardsCarousel.getRootElement().classList.add("carousel"),
        e.appendChild(this._rewardsCarousel.getRootElement()),
        this.__choiceNumContainer = document.createElement("div"),
        this.__choiceNumContainer.classList.add("ut-tier-view--choices"),
        this.__choiceNum = document.createElement("span"),
        this.__choiceNumContainer.appendChild(this.__choiceNum),
        e.appendChild(this.__choiceNumContainer),
        this._rewardsInfoBtn = new UTImageButtonControl,
        this._rewardsInfoBtn.getRootElement().classList.add("ut-tier-view--button--info"),
        this._rewardsInfoBtn.getRootElement().classList.add("info-btn"),
        e.appendChild(this._rewardsInfoBtn.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTierView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__overlay = null,
    this.__overlayText = null,
    this.__title = null,
    this.__label = null,
    this._claimBtn.destroy(),
    this._rewardsCarousel.destroy(),
    this.__choiceNumContainer = null,
    this.__choiceNum = null,
    this._rewardsInfoBtn.destroy()
}
,
UTTierView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTProgressionHeaderView = function(e) {
    function UTProgressionHeaderView() {
        return e.call(this) || this
    }
    return __extends(UTProgressionHeaderView, e),
    UTProgressionHeaderView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTProgressionHeaderView.prototype.setSubtitle = function(e) {
        this.__subtitle.textContent = e
    }
    ,
    UTProgressionHeaderView.prototype.setCountdown = function(e) {
        this.__countdown.textContent = e
    }
    ,
    UTProgressionHeaderView.prototype.toggleCountdown = function(e) {
        DOMKit.toggleDisplayStyle(this.__countdown, e)
    }
    ,
    UTProgressionHeaderView.prototype.setProgress = function(e) {
        this._progressBar.setProgress(e)
    }
    ,
    UTProgressionHeaderView.prototype.setProgressLabel = function(e) {
        this._progressBar.setProgressLabel(e)
    }
    ,
    UTProgressionHeaderView.prototype.toggleProgressBar = function(e) {
        this.__progressBarContainer.style.display = e ? "" : "none",
        this._progressBar.setDisplay(e)
    }
    ,
    UTProgressionHeaderView.prototype.toggleInfo = function(e) {
        e ? (this._infoBtn.init(),
        this._infoBtn.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._infoBtn.setInteractionState(!0)) : (this._infoBtn.setInteractionState(!1),
        this._infoBtn.removeTarget(this, this.onButtonSelected, EventType.TAP)),
        this._infoBtn.setDisplay(e)
    }
    ,
    UTProgressionHeaderView.prototype.onButtonSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTProgressionHeaderView.Event.INFO_TAP)
    }
    ,
    UTProgressionHeaderView.Event = {
        INFO_TAP: "UTProgressionHeaderView.INFO_TAP"
    },
    UTProgressionHeaderView
}(UTTargetActionView)
  , UTSquadBattlesProgressionHeaderView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTSquadBattlesProgressionHeaderView() {
        return e.call(this) || this
    }
    return __extends(UTSquadBattlesProgressionHeaderView, e),
    UTSquadBattlesProgressionHeaderView.prototype.setProgressSecondLabel = function(e) {
        var t = document.createElement("span");
        t.className = "ut-squad-battles-progression-header-view--required",
        t.textContent = e,
        this._progressBar.getRootElement().appendChild(t)
    }
    ,
    UTSquadBattlesProgressionHeaderView.prototype.setTierPoints = function(e, t, i) {
        var o = e < i ? (e - t) / Math.max(i - t, 1) * 100 : 100;
        this.setProgress(o)
    }
    ,
    UTSquadBattlesProgressionHeaderView.prototype.setRankPoints = function(e, t, i) {
        var o = e < i ? (i - e) / Math.max(i - t, 1) * 100 : 100;
        this.setProgress(o)
    }
    ,
    UTSquadBattlesProgressionHeaderView.prototype.setTier = function(e) {
        var t = "";
        switch (e) {
        case 1:
            t = "SquadBattles_0_1.png";
            break;
        case 2:
            t = "SquadBattles_0_2.png";
            break;
        case 3:
            t = "SquadBattles_0_3.png";
            break;
        case 4:
            t = "SquadBattles_1_1.png";
            break;
        case 5:
            t = "SquadBattles_1_2.png";
            break;
        case 6:
            t = "SquadBattles_1_3.png";
            break;
        case 7:
            t = "SquadBattles_2_1.png";
            break;
        case 8:
            t = "SquadBattles_2_2.png";
            break;
        case 9:
            t = "SquadBattles_2_3.png";
            break;
        case 10:
            t = "SquadBattles_3_1.png";
            break;
        case 11:
            t = "SquadBattles_3_2.png";
            break;
        case 12:
            t = "SquadBattles_3_3.png";
            break;
        default:
            t = "SquadBattle_Unranked.png"
        }
        this._tierImage.setLocalResource("images/gameModes/squadBattles/" + t)
    }
    ,
    UTSquadBattlesProgressionHeaderView.prototype.setRank = function(e) {
        this._tierImage.setLocalResource("images/gameModes/squadBattles/SquadBattles_ranked.png"),
        this.__tierValue.textContent = e.toString()
    }
    ,
    UTSquadBattlesProgressionHeaderView.prototype.setWeeklyPointsLabel = function(e) {
        this.__currentPointsLabel.textContent = e
    }
    ,
    UTSquadBattlesProgressionHeaderView
}(UTProgressionHeaderView));
UTSquadBattlesProgressionHeaderView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-battles-progression-header-view"),
        e.classList.add("ut-progression-header-view");
        var t = document.createElement("div");
        t.classList.add("ut-progression-header-view--body");
        var i = document.createElement("div");
        i.classList.add("ut-progression-header-view--image"),
        this._tierImage = new UTImageView,
        i.appendChild(this._tierImage.getRootElement()),
        this.__tierValue = document.createElement("div"),
        i.appendChild(this.__tierValue),
        t.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-progression-header-view--meta"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-progression-header-view--title"),
        o.appendChild(this.__title),
        this.__subtitle = document.createElement("p"),
        this.__subtitle.classList.add("ut-progression-header-view--subtitle"),
        o.appendChild(this.__subtitle),
        this.__currentPointsLabel = document.createElement("p"),
        this.__currentPointsLabel.classList.add("ut-squad-battles-progression-header-view--points"),
        o.appendChild(this.__currentPointsLabel),
        this.__countdown = document.createElement("p"),
        this.__countdown.classList.add("ut-progression-header-view--countdown"),
        o.appendChild(this.__countdown),
        t.appendChild(o),
        e.appendChild(t),
        this._infoBtn = new UTImageButtonControl,
        this._infoBtn.getRootElement().classList.add("info-btn"),
        this._infoBtn.getRootElement().classList.add("ut-progression-header-view--button--info"),
        e.appendChild(this._infoBtn.getRootElement()),
        this.__progressBarContainer = document.createElement("div"),
        this.__progressBarContainer.classList.add("ut-squad-battles-progression-header-view--progress-container"),
        this._progressBar = new UTProgressBarView,
        this.__progressBarContainer.appendChild(this._progressBar.getRootElement()),
        e.appendChild(this.__progressBarContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadBattlesProgressionHeaderView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._tierImage.destroy(),
    this.__tierValue = null,
    this.__title = null,
    this.__subtitle = null,
    this.__currentPointsLabel = null,
    this.__countdown = null,
    this._infoBtn.destroy(),
    this.__progressBarContainer = null,
    this._progressBar.destroy()
}
,
UTSquadBattlesProgressionHeaderView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadBattlesTierProgressBarView = function(e) {
    function UTSquadBattlesTierProgressBarView() {
        return e.call(this) || this
    }
    return __extends(UTSquadBattlesTierProgressBarView, e),
    UTSquadBattlesTierProgressBarView.prototype.setTier = function(e) {
        var t = "";
        switch (e) {
        case 1:
            t = "SquadBattles_0_1.png";
            break;
        case 2:
            t = "SquadBattles_0_2.png";
            break;
        case 3:
            t = "SquadBattles_0_3.png";
            break;
        case 4:
            t = "SquadBattles_1_1.png";
            break;
        case 5:
            t = "SquadBattles_1_2.png";
            break;
        case 6:
            t = "SquadBattles_1_3.png";
            break;
        case 7:
            t = "SquadBattles_2_1.png";
            break;
        case 8:
            t = "SquadBattles_2_2.png";
            break;
        case 9:
            t = "SquadBattles_2_3.png";
            break;
        case 10:
            t = "SquadBattles_3_1.png";
            break;
        case 11:
            t = "SquadBattles_3_2.png";
            break;
        case 12:
            t = "SquadBattles_3_3.png";
            break;
        default:
            t = "SquadBattle_Unranked.png"
        }
        this._tierImage.setLocalResource("images/gameModes/squadBattles/" + t)
    }
    ,
    UTSquadBattlesTierProgressBarView.prototype.setRank = function(e) {
        this.addClass("rank");
        this._tierImage.setLocalResource("images/gameModes/squadBattles/SquadBattles_ranked.png"),
        this.setProgressLabel(e.toString())
    }
    ,
    UTSquadBattlesTierProgressBarView.prototype.setProgressLabel = function(e) {
        this.__tierValue.textContent = e
    }
    ,
    UTSquadBattlesTierProgressBarView
}(UTTierProgressBarView);
UTSquadBattlesTierProgressBarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tier-progress-bar--section"),
        e.classList.add("ut-squad-battles-tier-progress-bar-view"),
        this.__fill = document.createElement("div"),
        this.__fill.classList.add("ut-tier-progress-bar--fill"),
        this.__progressLabel = document.createElement("span"),
        this.__fill.appendChild(this.__progressLabel),
        e.appendChild(this.__fill);
        var t = document.createElement("div");
        t.classList.add("ut-squad-battles-tier-progress-bar-view--image"),
        this._tierImage = new UTImageView,
        t.appendChild(this._tierImage.getRootElement()),
        this.__tierValue = document.createElement("div"),
        t.appendChild(this.__tierValue),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadBattlesTierProgressBarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__fill = null,
    this.__progressLabel = null,
    this._tierImage.destroy(),
    this.__tierValue = null
}
,
UTSquadBattlesTierProgressBarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadBattlesView = function(i) {
    function UTSquadBattlesView(e) {
        var t = i.call(this) || this;
        return t.activeProgressBar = null,
        t.levels = [],
        t.loc = e.localization,
        t.progressBars = [],
        t
    }
    return __extends(UTSquadBattlesView, i),
    UTSquadBattlesView.prototype.dealloc = function() {
        this.clearViews(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTSquadBattlesView.prototype.clearViews = function() {
        this.levels.forEach(function(e) {
            return e.dealloc()
        }),
        this.progressBars.forEach(function(e) {
            return e.dealloc()
        }),
        this.levels = [],
        this.progressBars = [],
        this.activeProgressBar = null
    }
    ,
    UTSquadBattlesView.prototype.scrollToActiveTier = function() {
        this.activeProgressBar && this._header && (isPhone() ? this.getRootElement().scrollTop = this.activeProgressBar.getRootElement().offsetTop + this._header.getRootElement().clientHeight - 32 : this.__container.scrollLeft = this.activeProgressBar.getRootElement().offsetLeft),
        this.setInteractionState(!0)
    }
    ,
    UTSquadBattlesView.prototype.generateEventTierProgress = function(e, t, i, o) {
        var n = new UTSquadBattlesTierProgressBarView;
        if (n.init(),
        n.direction = isPhone() ? TierProgressBarDirection.VERTICAL : TierProgressBarDirection.HORIZONTAL,
        n.setTier(e.level),
        o)
            n.setProgress(100),
            n.setTierState("complete");
        else if (i < e.level)
            n.setProgress(100),
            n.setTierState("complete");
        else if (t >= e.startPoints || t >= e.previousTierStartPoints) {
            var r = t < e.startPoints ? (t - e.previousTierStartPoints) / (e.startPoints - e.previousTierStartPoints) * 100 : 100;
            n.setProgress(r),
            n.setProgressMarker(t),
            100 <= r ? n.setTierState("complete") : n.setTierState("inprogress")
        }
        return this.addSubview(n, this.__progressView),
        !this.activeProgressBar && i <= e.level && (this.activeProgressBar = n),
        n
    }
    ,
    UTSquadBattlesView.prototype.generateEventTierTile = function(e, t, i) {
        var o = new UTSquadBattlesTierView
          , n = TierViewState.NONE;
        return i ? n = TierViewState.SURPASSED : t < e.level ? n = TierViewState.SURPASSED : t === e.level ? n = TierViewState.OBTAINED : t - 1 === e.level && (n = TierViewState.IN_PROGRESS),
        o.init(),
        o.setId(e.awardSetId),
        o.setStyle(isPhone() ? "vertical" : "horizontal"),
        o.setTierLevelRewardOptions(e.rewardSet.rewards),
        o.setTitle(this.loc.localize("squadbattles.tier" + e.level + ".title")),
        o.setState(n),
        o.setLabel(this.loc.localize("squadbattles.tier.pointsentry", [this.loc.localizeNumber(e.startPoints)])),
        o.toggleRewardsInfoButton(n !== TierViewState.SURPASSED && 1 < e.rewardSet.rewards.length),
        o.addTarget(this, this.onRewardInfoSelected, UTSquadBattlesTierView.Event.REWARDS_INFO),
        this.addSubview(o, this.__tierView),
        o
    }
    ,
    UTSquadBattlesView.prototype.generateRankProgress = function(e, t) {
        var i = new UTSquadBattlesTierProgressBarView;
        return i.init(),
        i.direction = isPhone() ? TierProgressBarDirection.VERTICAL : TierProgressBarDirection.HORIZONTAL,
        i.setRank(e.start),
        0 < t && (t >= e.start && t <= e.end ? (i.setProgress(100),
        i.setTierState("inprogress"),
        this.activeProgressBar = i) : t < e.start && i.setTierState("complete")),
        this.addSubview(i, this.__progressView),
        i
    }
    ,
    UTSquadBattlesView.prototype.generateRankTile = function(e, t) {
        var i = new UTSquadBattlesTierView
          , o = TierViewState.NONE;
        return 0 < t && (t < e.start ? o = TierViewState.SURPASSED : t >= e.start && t < e.end && (o = TierViewState.OBTAINED,
        i.setLabel(this.loc.localize("squadbattles.tier.requirements-met")))),
        i.init(),
        i.setId(e.awardSetId),
        i.setStyle(isPhone() ? "vertical" : "horizontal"),
        i.setTierLevelRewardOptions(e.rewardSet.rewards),
        i.setTitle(e.start === e.end ? this.loc.localize("squadbattles.rank.title", [e.start.toString()]) : this.loc.localize("squadbattles.rank.title-range", [e.start.toString(), e.end.toString()])),
        i.setState(o),
        i.toggleRewardsInfoButton(o !== TierViewState.SURPASSED && 1 < e.rewardSet.rewards.length),
        i.addTarget(this, this.onRewardInfoSelected, UTSquadBattlesTierView.Event.REWARDS_INFO),
        this.addSubview(i, this.__tierView),
        i
    }
    ,
    UTSquadBattlesView.prototype.setEvent = function(t) {
        var i = this;
        this.clearViews(),
        DOMKit.removeClass(this.__progressView, "horizontal vertical"),
        DOMKit.addClass(this.__progressView, isPhone() ? "vertical" : "horizontal");
        var e = t.isRanked() ? t.prizeTiers.filter(function(e) {
            return e.type === SquadBattlesTierType.RANK_TIERS
        }).find(function(e) {
            return t.rank >= e.start && t.rank <= e.end
        }) : t.prizeTiers.filter(function(e) {
            return e.type === SquadBattlesTierType.POINT_TIERS
        }).find(function(e) {
            return t.userCurrentTierLevel === e.level
        });
        if (e) {
            var o = Date.now() / MS_PER_SECOND;
            if (this._header.setCountdown(this.loc.localizeTimeRemaining(t.endTime - o)),
            t.isRanked())
                this._header.setTitle(this.loc.localize("squadbattles.rank.title", [t.rank.toString()])),
                this._header.setRank(t.rank),
                this._header.toggleProgressBar(!0),
                this._header.setRankPoints(t.rank, e.start, e.end),
                this._header.setProgressLabel(this.loc.localize("gamemodes.common.rank", [e.end.toString()])),
                this._header.setProgressSecondLabel(this.loc.localize("gamemodes.common.rank", [e.start.toString()])),
                this._header.toggleInfo(!1);
            else {
                this._header.setTitle(this.loc.localize("squadbattles.tier" + e.level + ".title")),
                this._header.setSubtitle(this.loc.localize("squadbattles.gamesplayed", [t.gamesPlayed.toString()]));
                var n = t.score
                  , r = e.startPoints
                  , s = e.endPoints;
                this._header.setWeeklyPointsLabel(this.loc.localize("squadbattles.weeklypoints", [this.loc.localizeNumber(t.score)])),
                1 === e.level && -1 === s ? (this._header.setProgress(50),
                this._header.setProgressLabel(this.loc.localize("gamemodes.common.points", [n.toString()]))) : (this._header.setTierPoints(n, r, s),
                this._header.setProgressLabel(this.loc.localize("gamemodes.common.points", [r.toString()])),
                this._header.setProgressSecondLabel(this.loc.localize("gamemodes.common.points", [s.toString()]))),
                this._header.setTier(t.userCurrentTierLevel),
                this._header.toggleInfo(!1)
            }
            t.prizeTiers.filter(function(e) {
                return e.type === SquadBattlesTierType.POINT_TIERS
            }).forEach(function(e) {
                i.progressBars.push(i.generateEventTierProgress(e, t.score, t.userCurrentTierLevel, t.isRanked())),
                i.levels.push(i.generateEventTierTile(e, t.userCurrentTierLevel, t.isRanked()))
            }, this),
            t.prizeTiers.filter(function(e) {
                return e.type === SquadBattlesTierType.RANK_TIERS
            }).forEach(function(e) {
                i.progressBars.push(i.generateRankProgress(e, t.rank)),
                i.levels.push(i.generateRankTile(e, t.rank))
            }, this),
            this.layoutSubviews(),
            this.levels.forEach(function(e, t) {
                e.setupRewardsCarousel(0)
            }, this),
            this.scrollToActiveTier()
        } else
            DebugUtils.Assert(!1, "User is not ranked nor do they have an available current tier. ViewController should have figured this out")
    }
    ,
    UTSquadBattlesView.prototype.onRewardInfoSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTSquadBattlesTierView.Event.REWARDS_INFO, i)
    }
    ,
    UTSquadBattlesView
}(UTTargetActionView);
UTSquadBattlesView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-battles-view"),
        this._header = new UTSquadBattlesProgressionHeaderView,
        this._header.getRootElement().classList.add("ut-squad-battles-view--header"),
        e.appendChild(this._header.getRootElement()),
        this.__container = document.createElement("div"),
        this.__container.classList.add("ut-squad-battles-view--details");
        var t = document.createElement("div");
        t.classList.add("ut-squad-battles-view--event"),
        this.__progressView = document.createElement("div"),
        this.__progressView.classList.add("ut-tier-progress-bar"),
        t.appendChild(this.__progressView),
        this.__tierView = document.createElement("div"),
        this.__tierView.classList.add("ut-squad-battles-view--tiers"),
        t.appendChild(this.__tierView),
        this.__container.appendChild(t),
        e.appendChild(this.__container),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadBattlesView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._header.destroy(),
    this.__container = null,
    this.__progressView = null,
    this.__tierView = null
}
,
UTSquadBattlesView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadBattlesViewController = function(t) {
    function UTSquadBattlesViewController() {
        var e = t.call(this) || this;
        return e.vm = new UTSquadBattlesViewModel(services.SquadBattles),
        e
    }
    return __extends(UTSquadBattlesViewController, t),
    UTSquadBattlesViewController.prototype._getViewInstanceFromData = function() {
        return new UTSquadBattlesView({
            localization: services.Localization
        })
    }
    ,
    UTSquadBattlesViewController.prototype._getTelemetryId = function() {
        return "Squad Battles"
    }
    ,
    UTSquadBattlesViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.squadbattles")
    }
    ,
    UTSquadBattlesViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this.requestEventData(),
        TelemetryManager.trackPage(TelemetryManager.Sections.SQUADBATTLES, "Squad Battles Main")
    }
    ,
    UTSquadBattlesViewController.prototype.requestEventData = function() {
        var r = this;
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.vm.requestEvent().observe(this, function(e, t) {
            var i, o;
            e.unobserve(r);
            var n = r.getView();
            t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.event) ? (n.setEvent(t.data.event),
            n.addTarget(r, r.onSelectRewardInfo, UTSquadBattlesTierView.Event.REWARDS_INFO)) : (services.Notification.queue([services.Localization.localize("squadbattles.loaderror"), UINotificationType.NEGATIVE]),
            NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : null === (o = r.getNavigationController()) || void 0 === o || o.popViewController()),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    UTSquadBattlesViewController.prototype.onSelectRewardInfo = function(e, t, i) {
        if (this.vm) {
            var o = this.vm.currentEvent
              , n = i.id
              , r = o ? JSUtils.find(o.prizeTiers, function(e) {
                return e.awardSetId === n
            }) : null;
            r ? this.triggerConsolidatedRewardsPopup([r.rewardSet], services.Localization.localize("gamemodeshub.sqbt.rewards.title", [n.toString()]), !1) : services.Notification.queue([services.Localization.localize("notification.sqbt.rewardsInfoFailed"), UINotificationType.NEGATIVE])
        }
    }
    ,
    UTSquadBattlesViewController.prototype.triggerConsolidatedRewardsPopup = function(e, t, i) {
        var o = new UTRewardSelectionChoiceViewController(e);
        o.setTitleText(t),
        o.setClaimableState(i),
        gPopupClickShield.setActivePopup(o)
    }
    ,
    UTSquadBattlesViewController
}(UTViewController)
  , UTRivalsNextDivisionTierView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTRivalsNextDivisionTierView() {
        var e = t.call(this) || this;
        return e.id = -1,
        e
    }
    return __extends(UTRivalsNextDivisionTierView, t),
    UTRivalsNextDivisionTierView.prototype.setDivisionCrest = function(e) {
        var t = "";
        t = e <= 0 ? "division_crest_master.png" : "division_crest_" + e + ".png",
        this._divisionCrest.setLocalResource("images/gameModes/rivals/division/crests/" + t)
    }
    ,
    UTRivalsNextDivisionTierView
}(UTTierView));
UTRivalsNextDivisionTierView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-rivals-next-division-tier-view");
        var t = document.createElement("section");
        t.classList.add("ut-rivals-next-division-tier-view--content"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-rivals-next-division-tier-view--title"),
        t.appendChild(this.__title);
        var i = document.createElement("div");
        i.classList.add("ut-rivals-next-division-tier-view--crest"),
        this._divisionCrest = new UTImageView,
        i.appendChild(this._divisionCrest.getRootElement()),
        t.appendChild(i),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRivalsNextDivisionTierView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._divisionCrest.destroy()
}
,
UTRivalsNextDivisionTierView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTRivalsTierView = function(t) {
    function UTRivalsTierView() {
        var e = t.call(this) || this;
        return e.id = -1,
        e.levelRewards = [],
        e
    }
    return __extends(UTRivalsTierView, t),
    UTRivalsTierView.prototype.init = function() {
        t.prototype.init.call(this),
        this._rewardsInfoBtn.init(),
        this._rewardsInfoBtn.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._rewardsInfoBtn.setInteractionState(!1),
        this.setInteractionState(!0)
    }
    ,
    UTRivalsTierView.prototype.setTierLevelRewardOptions = function(e) {
        this.levelRewards = e
    }
    ,
    UTRivalsTierView.prototype.setState = function(e) {
        e === TierViewState.NONE ? this.removeClass("in-progress surpassed obtained") : (this.toggleClass("in-progress", e === TierViewState.IN_PROGRESS),
        this.toggleClass("surpassed", e === TierViewState.SURPASSED),
        this.toggleClass("obtained", e === TierViewState.OBTAINED))
    }
    ,
    UTRivalsTierView.prototype.setSubtitle = function(e) {
        this.__subtitle.textContent = e
    }
    ,
    UTRivalsTierView.prototype.setLabel = function(e) {
        this.__label.textContent = e
    }
    ,
    UTRivalsTierView.prototype.setupMatchesProgressLabel = function(e, t) {
        t < e && (e = t),
        this.__choiceNum.textContent = services.Localization.localize("rivals.season.tier.progress", [e.toString(), t.toString()]),
        DOMKit.addClass(this.__choiceNumContainer, "ut-tier-view--choices--visible")
    }
    ,
    UTRivalsTierView.prototype.setupWinsProgressLabel = function(e, t) {
        t < e && (e = t),
        this.__choiceNum.textContent = services.Localization.localize("rivals.division.tier.progress", [e.toString(), t.toString()]),
        DOMKit.addClass(this.__choiceNumContainer, "ut-tier-view--choices--visible")
    }
    ,
    UTRivalsTierView.prototype.setupRewardsCarousel = function(e) {
        0 !== this.levelRewards.length ? (0 < e && this._rewardsCarousel.setDefaultIndex(e),
        this._rewardsCarousel.setupCampaignRewards(this.levelRewards)) : DebugUtils.Assert(!1, "Tried to setup rewards for a level that has no reward data.")
    }
    ,
    UTRivalsTierView.prototype.onButtonSelected = function(e, t, i) {
        if (this.isInteractionEnabled()) {
            var o = {
                id: this.id
            };
            e === this._rewardsInfoBtn && this._triggerActions(UTRivalsTierView.Event.REWARDS_INFO, o)
        }
    }
    ,
    UTRivalsTierView.Event = {
        REWARDS_INFO: "UTRivalsTierView.Event.REWARDS_INFO"
    },
    UTRivalsTierView
}(UTTierView);
UTRivalsTierView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-rivals-tier-view"),
        e.classList.add("ut-tier-view"),
        this.__overlay = document.createElement("div"),
        this.__overlay.classList.add("ut-tier-view--overlay"),
        this.__overlayText = document.createElement("span"),
        this.__overlay.appendChild(this.__overlayText),
        e.appendChild(this.__overlay);
        var t = document.createElement("section");
        t.classList.add("ut-tier-view--meta"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-tier-view--title"),
        t.appendChild(this.__title),
        this.__subtitle = document.createElement("h2"),
        this.__subtitle.classList.add("ut-tier-view--subtitle"),
        t.appendChild(this.__subtitle),
        this.__label = document.createElement("div"),
        this.__label.classList.add("ut-tier-view--label"),
        t.appendChild(this.__label),
        this._claimBtn = new UTStandardButtonControl,
        this._claimBtn.getRootElement().classList.add("call-to-action"),
        this._claimBtn.getRootElement().classList.add("mini"),
        this._claimBtn.getRootElement().classList.add("ut-tier-view--button"),
        t.appendChild(this._claimBtn.getRootElement()),
        e.appendChild(t),
        this._rewardsCarousel = new UTCampaignRewardsCarouselView,
        this._rewardsCarousel.getRootElement().classList.add("carousel"),
        e.appendChild(this._rewardsCarousel.getRootElement()),
        this.__choiceNumContainer = document.createElement("div"),
        this.__choiceNumContainer.classList.add("ut-tier-view--choices"),
        this.__choiceNum = document.createElement("span"),
        this.__choiceNumContainer.appendChild(this.__choiceNum),
        e.appendChild(this.__choiceNumContainer),
        this._rewardsInfoBtn = new UTImageButtonControl,
        this._rewardsInfoBtn.getRootElement().classList.add("ut-tier-view--button--info"),
        this._rewardsInfoBtn.getRootElement().classList.add("info-btn"),
        e.appendChild(this._rewardsInfoBtn.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRivalsTierView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__overlay = null,
    this.__overlayText = null,
    this.__title = null,
    this.__subtitle = null,
    this.__label = null,
    this._claimBtn.destroy(),
    this._rewardsCarousel.destroy(),
    this.__choiceNumContainer = null,
    this.__choiceNum = null,
    this._rewardsInfoBtn.destroy()
}
,
UTRivalsTierView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTRivalsProgressionHeaderView = function(e) {
    function UTRivalsProgressionHeaderView() {
        return e.call(this) || this
    }
    return __extends(UTRivalsProgressionHeaderView, e),
    UTRivalsProgressionHeaderView.prototype.setSeasonalCrest = function(e, t) {
        var i = "";
        i = 0 === t ? "DIV_" + e + "_1.png" : "DIV_" + e + "_" + t + ".png",
        this._tierImage.setLocalResource("images/gameModes/rivals/seasonal/" + i)
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setDivisionCrest = function(e) {
        var t = "";
        JSUtils.isValid(e) ? 0 === e ? t = "division_crest_master.png" : e && 0 < e && e < 11 && (t = "division_crest_" + e + ".png") : t = "division_crest_unranked.png",
        this._tierImage.setLocalResource("images/gameModes/rivals/division/crests/" + t)
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setSkillRatingRank = function(e, t) {
        this.__subtitle.innerHTML = "";
        var i = services.Localization
          , o = i.localize("rivals.label.skillRating")
          , n = i.localize("rivals.label.rank")
          , r = document.createElement("div");
        r.textContent = o,
        r.className = "label";
        var s = document.createElement("span");
        s.textContent = 0 < e ? e.toString() : i.localize("rivals.label.skillRating.unrated"),
        s.className = "value",
        r.append(s);
        var a = document.createElement("div");
        a.textContent = n,
        a.className = "label";
        var l = document.createElement("span");
        l.textContent = 0 < t ? t.toString() : i.localize("rivals.label.rank.unranked"),
        l.className = "value",
        a.append(l),
        this.__subtitle.append(r, a)
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setRewardPreview = function(e) {
        this._reward.setData([e]),
        this._reward.render(!0)
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setWeeklyRewardsTitle = function(e) {
        this.__weeklyRewardsTitle.textContent = e
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setUpgradedRewardsTitle = function(e) {
        this.__upgradedRewardsTitle.textContent = e
    }
    ,
    UTRivalsProgressionHeaderView.prototype.toggleWeeklyRewardsTitle = function(e) {
        this.__weeklyRewardsTitle.style.display = e ? "" : "none"
    }
    ,
    UTRivalsProgressionHeaderView.prototype.toggleUpgradedRewardsTitle = function(e) {
        this.__upgradedRewardsTitle.style.display = e ? "" : "none"
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setWeeklyRewardsComplete = function() {
        DOMKit.addClass(this.__weeklyRewardsTitle, "complete")
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setUpgradedRewardsComplete = function() {
        DOMKit.addClass(this.__upgradedRewardsTitle, "complete")
    }
    ,
    UTRivalsProgressionHeaderView.prototype.setMatchesRemainingLabel = function(e) {
        this.__matchesRemainingLabel.textContent = e
    }
    ,
    UTRivalsProgressionHeaderView.prototype.toggleRewardPreviewContainer = function(e) {
        this.__rewardPreviewContainer.style.display = e ? "" : "none"
    }
    ,
    UTRivalsProgressionHeaderView.prototype.toggleDivisionElements = function(e) {
        this.toggleRewardPreviewContainer(e),
        this.toggleUpgradedRewardsTitle(e),
        this.toggleWeeklyRewardsTitle(e)
    }
    ,
    UTRivalsProgressionHeaderView
}(UTProgressionHeaderView);
UTRivalsProgressionHeaderView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-rivals-progression-header-view"),
        e.classList.add("ut-progression-header-view");
        var t = document.createElement("div");
        t.classList.add("ut-progression-header-view--body");
        var i = document.createElement("div");
        i.classList.add("ut-progression-header-view--image"),
        this._tierImage = new UTImageView,
        i.appendChild(this._tierImage.getRootElement()),
        this.__tierValue = document.createElement("div"),
        i.appendChild(this.__tierValue),
        t.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-progression-header-view--meta"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-progression-header-view--title"),
        o.appendChild(this.__title),
        this.__subtitle = document.createElement("div"),
        this.__subtitle.classList.add("ut-progression-header-view--subtitle"),
        o.appendChild(this.__subtitle),
        this.__countdown = document.createElement("p"),
        this.__countdown.classList.add("ut-progression-header-view--countdown"),
        o.appendChild(this.__countdown),
        this.__weeklyRewardsTitle = document.createElement("p"),
        this.__weeklyRewardsTitle.classList.add("ut-progression-header-view--rewards"),
        o.appendChild(this.__weeklyRewardsTitle),
        this.__upgradedRewardsTitle = document.createElement("p"),
        this.__upgradedRewardsTitle.classList.add("ut-progression-header-view--rewards"),
        o.appendChild(this.__upgradedRewardsTitle),
        this.__rewardPreviewContainer = document.createElement("div"),
        this.__rewardPreviewContainer.classList.add("ut-progression-header-view--rewards-preview"),
        this._reward = new UTRewardsFooterView,
        this.__rewardPreviewContainer.appendChild(this._reward.getRootElement()),
        this.__matchesRemainingLabel = document.createElement("p"),
        this.__rewardPreviewContainer.appendChild(this.__matchesRemainingLabel),
        o.appendChild(this.__rewardPreviewContainer),
        t.appendChild(o),
        e.appendChild(t),
        this._infoBtn = new UTImageButtonControl,
        this._infoBtn.getRootElement().classList.add("info-btn"),
        this._infoBtn.getRootElement().classList.add("ut-progression-header-view--button--info"),
        e.appendChild(this._infoBtn.getRootElement()),
        this.__progressBarContainer = document.createElement("div"),
        this.__progressBarContainer.classList.add("ut-rivals-progression-header-view--progress-container"),
        this._progressBar = new UTProgressBarView,
        this.__progressBarContainer.appendChild(this._progressBar.getRootElement()),
        e.appendChild(this.__progressBarContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRivalsProgressionHeaderView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._tierImage.destroy(),
    this.__tierValue = null,
    this.__title = null,
    this.__subtitle = null,
    this.__countdown = null,
    this.__weeklyRewardsTitle = null,
    this.__upgradedRewardsTitle = null,
    this.__rewardPreviewContainer = null,
    this._reward.destroy(),
    this.__matchesRemainingLabel = null,
    this._infoBtn.destroy(),
    this.__progressBarContainer = null,
    this._progressBar.destroy()
}
,
UTRivalsProgressionHeaderView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTRivalsTierProgressBarView = function(e) {
    function UTRivalsTierProgressBarView() {
        return e.call(this) || this
    }
    return __extends(UTRivalsTierProgressBarView, e),
    UTRivalsTierProgressBarView.prototype.setMilestoneCrest = function(e, t) {
        var i = "DIV_" + e + "_" + t + ".png";
        this._tierImage.setLocalResource("images/gameModes/rivals/seasonal/" + i)
    }
    ,
    UTRivalsTierProgressBarView.prototype.setRankCrest = function(e, t) {
        var i = "";
        i = 0 === e ? "crest_rank0_1.png" : "crest_rank" + e + "_" + t + ".png",
        this._tierImage.setLocalResource("images/gameModes/rivals/division/ranks/" + i)
    }
    ,
    UTRivalsTierProgressBarView.prototype.setDivisionCrest = function(e) {
        var t = "";
        t = 0 === e ? "division_crest_0.png" : "division_crest_" + e + ".png",
        this._tierImage.setLocalResource("images/gameModes/rivals/division/crests/" + t)
    }
    ,
    UTRivalsTierProgressBarView.prototype.setThresholdFlag = function(e, t) {
        var i = "notch threshold";
        t && (i += " filled"),
        this.__tierValue.className = e ? i : ""
    }
    ,
    UTRivalsTierProgressBarView.prototype.addProgressionNotches = function(e, t, i) {
        var o = this;
        this.notches = [];
        for (var n = 0, r = 0; r < e; r++) {
            var s = (r + 1) / (e + 1) * 100
              , a = document.createElement("div")
              , l = "notch";
            r <= t && (l += " filled",
            t === r && (n = s)),
            i.includes(r) && (l += " threshold"),
            a.className = l,
            this.direction === TierProgressBarDirection.VERTICAL ? a.style.top = s + "%" : a.style.left = s + "%",
            this.notches.push(a)
        }
        this.notches.map(function(e) {
            return o.__notchesContainer.appendChild(e)
        }),
        this.setProgress(n)
    }
    ,
    UTRivalsTierProgressBarView.prototype.toggleWinStreakFlag = function(e) {
        1 < e && (this.setProgressMarker(services.Localization.localize("rivals.winstreak.multiplier", [e.toString()])),
        this.addProgressMarkerClass("streak"))
    }
    ,
    UTRivalsTierProgressBarView
}(UTTierProgressBarView);
UTRivalsTierProgressBarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tier-progress-bar--section"),
        e.classList.add("ut-rivals-tier-progress-bar-view"),
        this.__fill = document.createElement("div"),
        this.__fill.classList.add("ut-tier-progress-bar--fill"),
        this.__progressLabel = document.createElement("span"),
        this.__fill.appendChild(this.__progressLabel),
        e.appendChild(this.__fill);
        var t = document.createElement("div");
        t.classList.add("ut-rivals-tier-progress-bar-view--image"),
        this._tierImage = new UTImageView,
        t.appendChild(this._tierImage.getRootElement()),
        this.__tierValue = document.createElement("div"),
        t.appendChild(this.__tierValue),
        e.appendChild(t),
        this.__notchesContainer = document.createElement("div"),
        this.__notchesContainer.classList.add("ut-rivals-tier-progress-bar-view--notches"),
        e.appendChild(this.__notchesContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRivalsTierProgressBarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__fill = null,
    this.__progressLabel = null,
    this._tierImage.destroy(),
    this.__tierValue = null,
    this.__notchesContainer = null
}
,
UTRivalsTierProgressBarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
var RivalsRewardTileType;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
!function(e) {
    e[e.UPGRADED_REWARDS = 1] = "UPGRADED_REWARDS",
    e[e.WEEKLY_REWARDS = 2] = "WEEKLY_REWARDS"
}(RivalsRewardTileType = RivalsRewardTileType || {});
var UTRivalsView = function(i) {
    function UTRivalsView(e) {
        var t = i.call(this) || this;
        return t.loc = e.localization,
        t.activeProgressBar = null,
        t.levels = [],
        t.progressBars = [],
        t
    }
    return __extends(UTRivalsView, i),
    UTRivalsView.prototype.init = function() {
        i.prototype.init.call(this),
        this._navigation.addTarget(this, this._handleTabSelect, EventType.TAP),
        this.setInteractionState(!0)
    }
    ,
    UTRivalsView.prototype.clearViews = function() {
        this.levels.forEach(function(e) {
            return e.dealloc()
        }),
        this.progressBars.forEach(function(e) {
            return e.dealloc()
        }),
        this.levels = [],
        this.progressBars = [],
        this.activeProgressBar = null
    }
    ,
    UTRivalsView.prototype.render = function(e, t) {
        this.clearViews(),
        DOMKit.removeClass(this.__progressView, "horizontal vertical"),
        DOMKit.addClass(this.__progressView, isPhone() ? "vertical" : "horizontal"),
        e === RivalsTierType.SEASONAL ? this.renderSeasonalView(t) : this.renderDivisionView(t)
    }
    ,
    UTRivalsView.prototype.renderSeasonalView = function(t) {
        var i = this;
        this._header.toggleInfo(!1),
        this._header.toggleProgressBar(!1),
        this._header.setTitle(t.season.name),
        this._header.setSeasonalCrest(t.user.divisionId, t.user.seasonTier),
        this._header.toggleDivisionElements(!1),
        this._header.setCountdown(this.loc.localize("rivals.season.rewards.countdown", [this.loc.localizeTimeRemaining(t.getSeasonTimeRemaining())])),
        t.division.prizeTiers.forEach(function(e) {
            i.progressBars.push(i.generateSeasonalTierProgress(t.user.divisionId, e, t.user.matchesPlayed, t.user.seasonTier, t.season)),
            i.levels.push(i.generateSeasonalTierTile(e, t.user.matchesPlayed, t.user.seasonTier, t.season))
        }, this),
        this.layoutSubviews(),
        this.levels.forEach(function(e, t) {
            e instanceof UTRivalsTierView && e.setupRewardsCarousel(0)
        }, this),
        this.scrollToActiveTier()
    }
    ,
    UTRivalsView.prototype.renderDivisionView = function(e) {
        var t, i, o, n;
        this._header.toggleInfo(!1),
        0 === e.user.divisionId ? (this._header.toggleProgressBar(!1),
        this._header.setTitle(this.loc.localize("rivals.masters.progress.title")),
        this._header.setSkillRatingRank(null !== (t = e.user.elo) && void 0 !== t ? t : 0, null !== (i = e.user.rank) && void 0 !== i ? i : 0)) : this._header.setTitle(this.loc.localize("rivals.division.progress.title", [e.user.divisionId.toString(), (null !== (n = null === (o = e.getUserCurrentRank()) || void 0 === o ? void 0 : o.rank) && void 0 !== n ? n : "").toString()])),
        this._header.setDivisionCrest(e.user.divisionId),
        this._header.setCountdown(this.loc.localize("rivals.division.rewards.countdown", [this.loc.localizeTimeRemaining(e.getDivisionTimeRemaining())])),
        this._header.toggleDivisionElements(!0),
        this._header.setWeeklyRewardsTitle(this.loc.localize("rivals.division.header.weeklyrewards.title")),
        this._header.setUpgradedRewardsTitle(this.loc.localize("rivals.division.header.upgradedrewards.title")),
        e.user.matchesWon >= e.season.weeklyTier2Threshold ? (this._header.setUpgradedRewardsComplete(),
        this._header.setWeeklyRewardsComplete(),
        this._header.toggleRewardPreviewContainer(!1)) : e.user.matchesWon < e.season.weeklyTier2Threshold && e.user.matchesWon >= e.season.weeklyTier1Threshold ? (this._header.setWeeklyRewardsComplete(),
        this._header.setMatchesRemainingLabel(this.loc.localize("rivals.division.header.matchesremaining.label", [(e.season.weeklyTier2Threshold - e.user.matchesWon).toString()]))) : this._header.setMatchesRemainingLabel(this.loc.localize("rivals.division.header.matchesremaining.label", [(e.season.weeklyTier1Threshold - e.user.matchesWon).toString()])),
        this._header.toggleProgressBar(!1);
        var r = e.division.stages.filter(function(e) {
            return e.type === RivalsStageType.REWARD
        }).length
          , s = e.division.stages.length - r
          , a = 0
          , l = 0
          , c = []
          , d = e.division.stages.length - 1;
        r <= 2 && DOMKit.addClass(this.__progressView, "small");
        for (var u = e.getWinStreak(), h = 0; h < e.division.stages.length; h++) {
            var p = e.division.stages[h];
            if (p.type === RivalsStageType.REWARD) {
                var _ = e.getUserCurrentRank();
                this.progressBars.push(this.generateDivisionTierProgress(e.user, p, _, r, a, u, c, l)),
                this.levels.push(this.generateDivisionTierTile(p, r, e.user.matchesWon, _, e.user.weeklyTier, e.season)),
                l = p.id,
                r--,
                s -= a,
                a = 0
            } else if (h === d && p.type === RivalsStageType.PROGRESSION && 0 < s) {
                this.progressBars.push(this.generateLastDivisionTierProgress(e.user, s, e.user.divisionId, p.id, e.user.stageId, u, c, l));
                e.user.stageId,
                p.id
            } else
                p.demotionThreshold && c.push(a),
                a++
        }
        this._header.setRewardPreview(this.rewardPreview),
        this.layoutSubviews(),
        this.levels.forEach(function(e, t) {
            e instanceof UTRivalsTierView && e.setupRewardsCarousel(0)
        }, this),
        this.scrollToActiveTier()
    }
    ,
    UTRivalsView.prototype.generateSeasonalTierProgress = function(e, t, i, o, n) {
        var r = new UTRivalsTierProgressBarView;
        r.init(),
        r.direction = isPhone() ? TierProgressBarDirection.VERTICAL : TierProgressBarDirection.HORIZONTAL,
        r.setMilestoneCrest(e, t.subLevel);
        var s = n.seasonRewardTier1Threshold;
        return 2 === t.subLevel ? (s = n.seasonRewardTier2Threshold - n.seasonRewardTier1Threshold,
        i -= n.seasonRewardTier1Threshold) : 3 === t.subLevel && (s = n.seasonRewardTier3Threshold - n.seasonRewardTier2Threshold,
        i -= n.seasonRewardTier2Threshold),
        o === t.subLevel ? (r.setProgress(100),
        r.setTierState("complete")) : o + 1 === t.subLevel ? (r.setProgress(i / s * 100),
        r.setTierState("inprogress")) : o > t.subLevel && r.setTierState("complete"),
        this.addSubview(r, this.__progressView),
        r
    }
    ,
    UTRivalsView.prototype.generateSeasonalTierTile = function(e, t, i, o) {
        var n = this
          , r = new UTRivalsTierView
          , s = TierViewState.NONE
          , a = 0;
        return i > e.subLevel && (s = TierViewState.SURPASSED),
        i === e.subLevel ? s = TierViewState.OBTAINED : i + 1 === e.subLevel && (s = TierViewState.IN_PROGRESS),
        r.init(),
        r.setStyle(isPhone() ? "vertical" : "horizontal"),
        r.setTierLevelRewardOptions(e.rewardSet),
        r.setState(s),
        r.setTitle(this.loc.localize("rivals.season.tier.title", [e.subLevel.toString()])),
        a = 2 === e.subLevel ? (r.setupMatchesProgressLabel(t, o.seasonRewardTier2Threshold),
        o.seasonRewardTier2Threshold - t) : 3 === e.subLevel ? (r.setupMatchesProgressLabel(t, o.seasonRewardTier3Threshold),
        o.seasonRewardTier3Threshold - t) : (r.setupMatchesProgressLabel(t, o.seasonRewardTier1Threshold),
        o.seasonRewardTier1Threshold - t),
        s === TierViewState.OBTAINED ? r.setLabel(this.loc.localize("rivals.tier.requirements-met")) : r.setLabel(this.loc.localize("rivals.season.tier.label", [a.toString()])),
        r.toggleRewardsInfoButton(s !== TierViewState.SURPASSED && 1 < e.rewardSet[0].rewards.length),
        r.addTarget(this, function() {
            return n.onRewardInfoSelected(r, UTRivalsTierView.Event.REWARDS_INFO, {
                id: e.competitionId,
                rewardSet: e.rewardSet
            })
        }, UTRivalsTierView.Event.REWARDS_INFO),
        this.addSubview(r, this.__tierView),
        r
    }
    ,
    UTRivalsView.prototype.generateDivisionTierProgress = function(e, t, i, o, n, r, s, a) {
        var l = new UTRivalsTierProgressBarView;
        if (l.init(),
        l.direction = isPhone() ? TierProgressBarDirection.VERTICAL : TierProgressBarDirection.HORIZONTAL,
        i)
            if (i.rank < t.rank || i.rank === t.rank && i.id === t.id)
                l.setTierState("complete"),
                l.setProgress(100),
                l.setThresholdFlag(t.demotionThreshold, !0),
                0 < n && l.addProgressionNotches(n, n - 1, s);
            else if (i.rank - 1 === t.rank) {
                var c = e.stageId - a;
                l.addProgressionNotches(n, c - 1, s),
                l.toggleWinStreakFlag(r),
                l.setTierState("inprogress"),
                l.setThresholdFlag(t.demotionThreshold, !1)
            } else
                0 < n && l.addProgressionNotches(n, -1, s);
        else
            0 < n && l.addProgressionNotches(n, -1, s);
        return l.setRankCrest(e.divisionId, o),
        this.addSubview(l, this.__progressView),
        l
    }
    ,
    UTRivalsView.prototype.generateDivisionTierTile = function(e, t, i, o, n, r) {
        var s = this
          , a = new UTRivalsTierView
          , l = TierViewState.NONE;
        i >= r.weeklyTier2Threshold ? l = TierViewState.OBTAINED : i >= r.weeklyTier1Threshold ? t === RivalsRewardTileType.WEEKLY_REWARDS ? l = TierViewState.OBTAINED : t === RivalsRewardTileType.UPGRADED_REWARDS && (l = TierViewState.IN_PROGRESS) : t === RivalsRewardTileType.WEEKLY_REWARDS && (l = TierViewState.IN_PROGRESS),
        a.init(),
        a.setStyle(isPhone() ? "vertical" : "horizontal"),
        a.setState(l),
        a.addClass("division"),
        o && a.setTitle(this.loc.localize("gamemodes.common.rank", [o.rank.toString()])),
        t === RivalsRewardTileType.UPGRADED_REWARDS ? a.setSubtitle(this.loc.localize("rivals.division.tier.upgraded.title")) : t === RivalsRewardTileType.WEEKLY_REWARDS && a.setSubtitle(this.loc.localize("rivals.division.tier.weekly.title"));
        var c = e.prizeTiers[n].rewardSet;
        return this.rewardPreview = c[0].rewards[0],
        a.setTierLevelRewardOptions(c),
        l !== TierViewState.OBTAINED ? t === RivalsRewardTileType.WEEKLY_REWARDS ? (a.setLabel(this.loc.localize("rivals.division.tier.weekly.label", [(r.weeklyTier1Threshold - i).toString()])),
        a.setupWinsProgressLabel(i, r.weeklyTier1Threshold)) : (a.setLabel(this.loc.localize("rivals.division.tier.upgraded.label", [(r.weeklyTier2Threshold - i).toString()])),
        a.setupWinsProgressLabel(i, r.weeklyTier2Threshold)) : l === TierViewState.OBTAINED && (t === RivalsRewardTileType.UPGRADED_REWARDS ? a.setLabel(this.loc.localize("rivals.division.tier.upgraded.qualified.label")) : t === RivalsRewardTileType.WEEKLY_REWARDS && a.setLabel(this.loc.localize("rivals.division.tier.weekly.qualified.label"))),
        a.toggleRewardsInfoButton(1 < c.length),
        a.addTarget(this, function() {
            return s.onRewardInfoSelected(a, UTRivalsTierView.Event.REWARDS_INFO, {
                id: e.id,
                rewardSet: c
            })
        }, UTRivalsTierView.Event.REWARDS_INFO),
        this.addSubview(a, this.__tierView),
        a
    }
    ,
    UTRivalsView.prototype.generateLastDivisionTierProgress = function(e, t, i, o, n, r, s, a) {
        var l = new UTRivalsTierProgressBarView;
        if (l.init(),
        l.direction = isPhone() ? TierProgressBarDirection.VERTICAL : TierProgressBarDirection.HORIZONTAL,
        0 < t)
            if (o - t <= n) {
                var c = e.stageId - a;
                l.setTierState("inprogress"),
                l.addProgressionNotches(t, c - 1, s),
                l.toggleWinStreakFlag(r)
            } else
                l.addProgressionNotches(t, -1, s);
        return l.setDivisionCrest(i - 1),
        this.addSubview(l, this.__progressView),
        l
    }
    ,
    UTRivalsView.prototype.scrollToActiveTier = function() {
        this.activeProgressBar && this._header && (isPhone() ? this.getRootElement().scrollTop = this.activeProgressBar.getRootElement().offsetTop + this._header.getRootElement().clientHeight - 32 : this.__container.scrollLeft = this.activeProgressBar.getRootElement().offsetLeft),
        this.setInteractionState(!0)
    }
    ,
    UTRivalsView.prototype.setupNavigation = function() {
        var e = services.Localization;
        this._navigation.clearTabs(),
        this._navigation.addTab(RivalsTierType.WEEKLY, e.localize("rivals.division.title")),
        this._navigation.addTab(RivalsTierType.SEASONAL, e.localize("rivals.season.title")),
        this._navigation.setActiveTab(RivalsTierType.WEEKLY),
        this._navigation.layoutSubviews()
    }
    ,
    UTRivalsView.prototype._handleTabSelect = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTRivalsView.Event.TAB_SELECTED, i)
    }
    ,
    UTRivalsView.prototype.onRewardInfoSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTRivalsTierView.Event.REWARDS_INFO, i)
    }
    ,
    UTRivalsView.Event = {
        TAB_SELECTED: "UTRivalsView.Event.TAB_SELECTED"
    },
    UTRivalsView
}(UTTargetActionView);
UTRivalsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-rivals-view"),
        this._navigation = new EAFilterBarView,
        e.appendChild(this._navigation.getRootElement()),
        this._header = new UTRivalsProgressionHeaderView,
        this._header.getRootElement().classList.add("ut-rivals-view--header"),
        e.appendChild(this._header.getRootElement()),
        this.__container = document.createElement("div"),
        this.__container.classList.add("ut-rivals-view--details");
        var t = document.createElement("div");
        t.classList.add("ut-rivals-view--event"),
        this.__progressView = document.createElement("div"),
        this.__progressView.classList.add("ut-tier-progress-bar"),
        t.appendChild(this.__progressView),
        this.__tierView = document.createElement("div"),
        this.__tierView.classList.add("ut-rivals-view--tiers"),
        t.appendChild(this.__tierView),
        this.__container.appendChild(t),
        e.appendChild(this.__container),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRivalsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._navigation.destroy(),
    this._header.destroy(),
    this.__container = null,
    this.__progressView = null,
    this.__tierView = null
}
,
UTRivalsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTRivalsViewController = function(t) {
    function UTRivalsViewController() {
        var e = t.call(this) || this;
        return e.vm = new UTRivalsViewModel(services.Rivals),
        e.currentEvent = null,
        e
    }
    return __extends(UTRivalsViewController, t),
    UTRivalsViewController.prototype._getViewInstanceFromData = function() {
        return new UTRivalsView({
            localization: services.Localization
        })
    }
    ,
    UTRivalsViewController.prototype._getTelemetryId = function() {
        return "Rivals"
    }
    ,
    UTRivalsViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.rivals")
    }
    ,
    UTRivalsViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this);
        var e = this.getView();
        this.requestEventData(),
        TelemetryManager.trackPage(TelemetryManager.Sections.RIVALS, "Rivals Main"),
        e.setupNavigation(),
        e.addTarget(this, this.eNavSelected, UTRivalsView.Event.TAB_SELECTED)
    }
    ,
    UTRivalsViewController.prototype.eNavSelected = function(e, t, i) {
        this.currentEvent && this.getView().render(i.id, this.currentEvent)
    }
    ,
    UTRivalsViewController.prototype.requestEventData = function() {
        var r = this;
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.vm.requestEvent().observe(this, function(e, t) {
            var i, o;
            e.unobserve(r);
            var n = r.getView();
            t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.event) ? (n.render(RivalsTierType.WEEKLY, t.data.event),
            r.currentEvent = t.data.event,
            n.addTarget(r, r.onSelectRewardInfo, UTRivalsTierView.Event.REWARDS_INFO)) : (services.Notification.queue([services.Localization.localize("rivals.loaderror"), UINotificationType.NEGATIVE]),
            NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : null === (o = r.getNavigationController()) || void 0 === o || o.popViewController()),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    UTRivalsViewController.prototype.onSelectRewardInfo = function(e, t, i) {
        this.vm && (i.rewardSet ? this.triggerConsolidatedRewardsPopup(i.rewardSet, services.Localization.localize("gamemodeshub.rivals.rewards.title", [i.id.toString()]), !1) : services.Notification.queue([services.Localization.localize("notification.rivals.rewardsInfoFailed"), UINotificationType.NEGATIVE]))
    }
    ,
    UTRivalsViewController.prototype.triggerConsolidatedRewardsPopup = function(e, t, i) {
        var o = new UTRewardSelectionChoiceViewController(e);
        o.setTitleText(t),
        o.setClaimableState(i),
        gPopupClickShield.setActivePopup(o)
    }
    ,
    UTRivalsViewController
}(UTViewController)
  , UTChampionsTierView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTChampionsTierView() {
        var e = t.call(this) || this;
        return e.id = -1,
        e.levelRewards = [],
        e
    }
    return __extends(UTChampionsTierView, t),
    UTChampionsTierView.prototype.init = function() {
        t.prototype.init.call(this),
        this._rewardsInfoBtn.init(),
        this._rewardsInfoBtn.addTarget(this, this.onButtonSelected, EventType.TAP),
        this._rewardsInfoBtn.setInteractionState(!1),
        this.setInteractionState(!0)
    }
    ,
    UTChampionsTierView.prototype.setTierLevelRewardOptions = function(e) {
        this.levelRewards = e
    }
    ,
    UTChampionsTierView.prototype.setState = function(e) {
        e === TierViewState.NONE ? this.removeClass("in-progress surpassed obtained") : (this.toggleClass("in-progress", e === TierViewState.IN_PROGRESS),
        this.toggleClass("surpassed", e === TierViewState.SURPASSED),
        this.toggleClass("obtained", e === TierViewState.OBTAINED))
    }
    ,
    UTChampionsTierView.prototype.setPointsRequired = function(e) {
        var t = services.Localization;
        this.__label.textContent = 0 < e ? t.localize("champions.tier.pointsNeeded", [t.localizeNumber(e)]) : t.localize("champions.tier.requirements-met")
    }
    ,
    UTChampionsTierView.prototype.setupRewardsCarousel = function(e) {
        0 !== this.levelRewards.length ? (0 < e && this._rewardsCarousel.setDefaultIndex(e),
        this._rewardsCarousel.setupRewards(this.levelRewards)) : DebugUtils.Assert(!1, "Tried to setup rewards for a level that has no reward data.")
    }
    ,
    UTChampionsTierView.prototype.onButtonSelected = function(e, t, i) {
        if (this.isInteractionEnabled()) {
            var o = {
                id: this.id
            };
            e === this._rewardsInfoBtn && this._triggerActions(UTChampionsTierView.Event.REWARDS_INFO, o)
        }
    }
    ,
    UTChampionsTierView.Event = {
        REWARDS_INFO: "UTChampionsTierView.Event.REWARDS_INFO"
    },
    UTChampionsTierView
}(UTTierView));
UTTierView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tier-view"),
        this.__overlay = document.createElement("div"),
        this.__overlay.classList.add("ut-tier-view--overlay"),
        this.__overlayText = document.createElement("span"),
        this.__overlay.appendChild(this.__overlayText),
        e.appendChild(this.__overlay);
        var t = document.createElement("section");
        t.classList.add("ut-tier-view--meta"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-tier-view--title"),
        t.appendChild(this.__title),
        this.__label = document.createElement("div"),
        this.__label.classList.add("ut-tier-view--label"),
        t.appendChild(this.__label),
        this._claimBtn = new UTStandardButtonControl,
        this._claimBtn.getRootElement().classList.add("call-to-action"),
        this._claimBtn.getRootElement().classList.add("mini"),
        this._claimBtn.getRootElement().classList.add("ut-tier-view--button"),
        t.appendChild(this._claimBtn.getRootElement()),
        e.appendChild(t),
        this._rewardsCarousel = new UTCampaignRewardsCarouselView,
        this._rewardsCarousel.getRootElement().classList.add("carousel"),
        e.appendChild(this._rewardsCarousel.getRootElement()),
        this.__choiceNumContainer = document.createElement("div"),
        this.__choiceNumContainer.classList.add("ut-tier-view--choices"),
        this.__choiceNum = document.createElement("span"),
        this.__choiceNumContainer.appendChild(this.__choiceNum),
        e.appendChild(this.__choiceNumContainer),
        this._rewardsInfoBtn = new UTImageButtonControl,
        this._rewardsInfoBtn.getRootElement().classList.add("ut-tier-view--button--info"),
        this._rewardsInfoBtn.getRootElement().classList.add("info-btn"),
        e.appendChild(this._rewardsInfoBtn.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTierView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__overlay = null,
    this.__overlayText = null,
    this.__title = null,
    this.__label = null,
    this._claimBtn.destroy(),
    this._rewardsCarousel.destroy(),
    this.__choiceNumContainer = null,
    this.__choiceNum = null,
    this._rewardsInfoBtn.destroy()
}
,
UTTierView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTChampionsProgressionHeaderView = function(e) {
    function UTChampionsProgressionHeaderView() {
        return e.call(this) || this
    }
    return __extends(UTChampionsProgressionHeaderView, e),
    UTChampionsProgressionHeaderView.prototype.init = function() {
        DOMKit.toggleDisplayStyle(this.__entries, !1),
        DOMKit.toggleDisplayStyle(this.__winloss, !1)
    }
    ,
    UTChampionsProgressionHeaderView.prototype.setProgressSecondLabel = function(e) {
        var t = document.createElement("span");
        t.className = "ut-champions-progression-header-view--required",
        t.textContent = e,
        this._progressBar.getRootElement().appendChild(t)
    }
    ,
    UTChampionsProgressionHeaderView.prototype.setTierPoints = function(e, t, i) {
        var o = e < i ? (e - t) / Math.max(i - t, 1) * 100 : 100;
        this.setProgress(o)
    }
    ,
    UTChampionsProgressionHeaderView.prototype.setWinLossMeta = function(e, t) {
        var i = services.Localization
          , o = i.localize("champions.label.wins")
          , n = i.localize("champions.value.points", [e.toString()])
          , r = i.localize("champions.label.losses")
          , s = i.localize("champions.value.points", [t.toString()])
          , a = document.createElement("div");
        a.className = "label",
        a.textContent = o;
        var l = document.createElement("span");
        l.textContent = n,
        l.className = "value",
        a.append(l);
        var c = document.createElement("div");
        c.textContent = r,
        c.className = "label";
        var d = document.createElement("span");
        d.textContent = s,
        d.className = "value",
        c.append(d),
        this.__winloss.append(a, c),
        DOMKit.toggleDisplayStyle(this.__winloss, !0)
    }
    ,
    UTChampionsProgressionHeaderView.prototype.setEntriesUsed = function(e, t) {
        var i = services.Localization
          , o = i.localize("champions.label.gamesplayed")
          , n = i.localize("champions.fraction.gamesplayed", [e.toString(), t.toString()])
          , r = document.createElement("div");
        r.textContent = o,
        r.className = "label";
        var s = document.createElement("span");
        s.textContent = n,
        s.className = "value",
        r.append(s),
        this.__entries.append(r),
        DOMKit.toggleDisplayStyle(this.__winloss, !0)
    }
    ,
    UTChampionsProgressionHeaderView.prototype.setStageAssets = function(e, t) {
        void 0 === t && (t = 0);
        var i = "notfound.png";
        0 < e && 0 < t ? i = "crest_stage" + e + "_" + t + ".png" : 0 < e && (i = "crest_stage" + e + ".png"),
        this._tierImage.setLocalResource("images/gameModes/champions/" + i)
    }
    ,
    UTChampionsProgressionHeaderView.prototype.setQualificationImage = function() {
        this._tierImage.setLocalResource("images/gameModes/champions/weekendLeagueLogo.png")
    }
    ,
    UTChampionsProgressionHeaderView
}(UTProgressionHeaderView);
UTChampionsProgressionHeaderView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-champions-progression-header-view"),
        e.classList.add("ut-progression-header-view");
        var t = document.createElement("div");
        t.classList.add("ut-progression-header-view--body");
        var i = document.createElement("div");
        i.classList.add("ut-progression-header-view--image"),
        this._tierImage = new UTImageView,
        i.appendChild(this._tierImage.getRootElement()),
        this.__tierValue = document.createElement("div"),
        i.appendChild(this.__tierValue),
        t.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-progression-header-view--meta"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("ut-progression-header-view--title"),
        o.appendChild(this.__title),
        this.__subtitle = document.createElement("p"),
        this.__subtitle.classList.add("ut-progression-header-view--subtitle"),
        o.appendChild(this.__subtitle),
        this.__countdown = document.createElement("p"),
        this.__countdown.classList.add("ut-progression-header-view--countdown"),
        o.appendChild(this.__countdown),
        this.__entries = document.createElement("div"),
        this.__entries.classList.add("ut-champions-progression-header-view--entries"),
        o.appendChild(this.__entries),
        this.__winloss = document.createElement("div"),
        this.__winloss.classList.add("ut-champions-progression-header-view--winloss"),
        o.appendChild(this.__winloss),
        t.appendChild(o),
        e.appendChild(t),
        this._infoBtn = new UTImageButtonControl,
        this._infoBtn.getRootElement().classList.add("info-btn"),
        this._infoBtn.getRootElement().classList.add("ut-progression-header-view--button--info"),
        e.appendChild(this._infoBtn.getRootElement()),
        this.__progressBarContainer = document.createElement("div"),
        this.__progressBarContainer.classList.add("ut-champions-progression-header-view--progress-container"),
        this._progressBar = new UTProgressBarView,
        this.__progressBarContainer.appendChild(this._progressBar.getRootElement()),
        e.appendChild(this.__progressBarContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTChampionsProgressionHeaderView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._tierImage.destroy(),
    this.__tierValue = null,
    this.__title = null,
    this.__subtitle = null,
    this.__countdown = null,
    this.__entries = null,
    this.__winloss = null,
    this._infoBtn.destroy(),
    this.__progressBarContainer = null,
    this._progressBar.destroy()
}
,
UTChampionsProgressionHeaderView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTChampionsTierProgressBarView = function(e) {
    function UTChampionsTierProgressBarView() {
        return e.call(this) || this
    }
    return __extends(UTChampionsTierProgressBarView, e),
    UTChampionsTierProgressBarView.prototype.setStageAssets = function(e, t) {
        void 0 === t && (t = 0);
        var i = "notfound.png";
        0 < e && 0 < t ? 1 === e && 5 < t || (i = "crest_stage" + e + "_" + t + ".png") : 0 < e && (i = "crest_stage" + e + ".png"),
        this._tierImage.setLocalResource("images/gameModes/champions/" + i)
    }
    ,
    UTChampionsTierProgressBarView.prototype.setProgressLabel = function(e) {
        this.__tierValue.textContent = e
    }
    ,
    UTChampionsTierProgressBarView
}(UTTierProgressBarView);
UTChampionsTierProgressBarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tier-progress-bar--section"),
        e.classList.add("ut-champions-tier-progress-bar-view"),
        this.__fill = document.createElement("div"),
        this.__fill.classList.add("ut-tier-progress-bar--fill"),
        this.__progressLabel = document.createElement("span"),
        this.__fill.appendChild(this.__progressLabel),
        e.appendChild(this.__fill);
        var t = document.createElement("div");
        t.classList.add("ut-champions-tier-progress-bar-view--image"),
        this._tierImage = new UTImageView,
        t.appendChild(this._tierImage.getRootElement()),
        this.__tierValue = document.createElement("div"),
        t.appendChild(this.__tierValue),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTChampionsTierProgressBarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__fill = null,
    this.__progressLabel = null,
    this._tierImage.destroy(),
    this.__tierValue = null
}
,
UTChampionsTierProgressBarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTChampionsView = function(i) {
    function UTChampionsView(e) {
        var t = i.call(this) || this;
        return t.activeProgressBar = null,
        t.levels = [],
        t.loc = e.localization,
        t.progressBars = [],
        t
    }
    return __extends(UTChampionsView, i),
    UTChampionsView.prototype.dealloc = function() {
        this.clearViews(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTChampionsView.prototype.clearViews = function() {
        this.levels.forEach(function(e) {
            return e.dealloc()
        }),
        this.progressBars.forEach(function(e) {
            return e.dealloc()
        }),
        this.levels = [],
        this.progressBars = [],
        this.activeProgressBar = null
    }
    ,
    UTChampionsView.prototype.scrollToActiveTier = function() {
        this.activeProgressBar && this._header && (isPhone() ? this.getRootElement().scrollTop = this.activeProgressBar.getRootElement().offsetTop + this._header.getRootElement().clientHeight - 32 : this.__container.scrollLeft = this.activeProgressBar.getRootElement().offsetLeft),
        this.setInteractionState(!0)
    }
    ,
    UTChampionsView.prototype.generateEventTierProgress = function(e, t, i) {
        var o = new UTChampionsTierProgressBarView;
        if (o.init(),
        o.direction = isPhone() ? TierProgressBarDirection.VERTICAL : TierProgressBarDirection.HORIZONTAL,
        o.setStageAssets(e.stageLevel, t.tierLevel),
        i >= t.tierStart) {
            var n = i < t.tierEnd ? (i - t.tierStart) / (t.tierEnd - t.tierStart) * 100 : 100;
            o.setProgress(n),
            100 <= n ? o.setTierState("complete") : (o.setTierState("inprogress"),
            o.setProgressMarker(this.loc.localize("gamemodes.common.points", [i.toString()])))
        }
        return this.addSubview(o, this.__progressView),
        !this.activeProgressBar && i >= t.tierStart && i <= t.tierEnd && (this.activeProgressBar = o),
        o
    }
    ,
    UTChampionsView.prototype.generateEventTierTile = function(e, t) {
        var i = new UTChampionsTierView
          , o = TierViewState.NONE;
        return t > e.tierEnd ? o = TierViewState.SURPASSED : t === e.tierEnd ? o = TierViewState.OBTAINED : t >= e.tierStart && t < e.tierEnd && (o = TierViewState.IN_PROGRESS),
        i.init(),
        i.setId(e.awardSetId),
        i.setStyle(isPhone() ? "vertical" : "horizontal"),
        i.setTierLevelRewardOptions(e.eventRewardSet.rewards),
        i.setTitle(this.loc.localize("champions.tier.title", [e.tierLevel.toString()])),
        i.setPointsRequired(e.tierEnd - t),
        i.setState(o),
        i.toggleRewardsInfoButton(o !== TierViewState.SURPASSED && 1 < e.eventRewardSet.rewards.length),
        i.addTarget(this, this.onRewardInfoSelected, UTChampionsTierView.Event.REWARDS_INFO),
        this.addSubview(i, this.__tierView),
        i
    }
    ,
    UTChampionsView.prototype.setEvent = function(t, e, i, o, n) {
        var r, s, a, l, c = this;
        this.clearViews(),
        this._header.toggleInfo(!1),
        DOMKit.removeClass(this.__progressView, "horizontal vertical"),
        DOMKit.addClass(this.__progressView, isPhone() ? "vertical" : "horizontal");
        var d = t.stages.find(function(e) {
            return 1 === e.stageLevel
        })
          , u = t.stages.find(function(e) {
            return e.stageEventId === t.currentStageId
        })
          , h = t.userProgress.find(function(e) {
            return e.stageEventId === t.currentStageId
        })
          , p = null !== (s = null === (r = repositories.Rivals.getEvent()) || void 0 === r ? void 0 : r.getSeasonTimeRemaining()) && void 0 !== s ? s : 0;
        if (this._header.setCountdown(this.loc.localizeTimeRemaining(p)),
        !u && d) {
            this._header.setQualificationImage(),
            this._header.setTitle(this.loc.localize("champions.qualification.title")),
            this._header.setSubtitle(this.loc.localize("champions.qualification.subtitle"));
            var _ = e
              , T = o;
            this._header.setTierPoints(_, 0, T),
            this._header.setProgressLabel(this.loc.localize("gamemodes.common.points", [(0).toString()])),
            this._header.setProgressSecondLabel(this.loc.localize("gamemodes.common.points", [T.toString()])),
            this._header.setEntriesUsed(0, d.maxGames)
        } else {
            if (!u || !h)
                return void DebugUtils.Assert(!1, "User is has not made any champions progress ViewController should have figured this out");
            this._header.setStageAssets(u.stageLevel),
            this._header.setTitle(this.loc.localize("champions.stage" + u.stageLevel + ".title")),
            this._header.setWinLossMeta(u.pointsPerWin, u.pointsPerLoss),
            this._header.setEntriesUsed(h.gamesPlayed, u.maxGames);
            var m = u.prizeTiers.find(function(e) {
                return h.pointsProgress >= e.tierStart && h.pointsProgress < e.tierEnd
            })
              , g = m ? m.tierStart : 0
              , w = m ? m.tierEnd : null !== (l = null === (a = u.getFirstStageTier()) || void 0 === a ? void 0 : a.tierStart) && void 0 !== l ? l : 0;
            this._header.setProgressLabel(this.loc.localize("gamemodes.common.points", [g.toString()])),
            this._header.setProgressSecondLabel(this.loc.localize("gamemodes.common.points", [w.toString()])),
            this._header.setTierPoints(h.pointsProgress, g, w)
        }
        if (u || d) {
            var v = null != u ? u : d;
            null == v || v.prizeTiers.forEach(function(e) {
                var t, i;
                c.progressBars.push(c.generateEventTierProgress(v, e, null !== (t = null == h ? void 0 : h.pointsProgress) && void 0 !== t ? t : 0)),
                c.levels.push(c.generateEventTierTile(e, null !== (i = null == h ? void 0 : h.pointsProgress) && void 0 !== i ? i : 0))
            }, this)
        }
        this.layoutSubviews(),
        this.levels.forEach(function(e, t) {
            e.setupRewardsCarousel(0)
        }, this),
        this.scrollToActiveTier()
    }
    ,
    UTChampionsView.prototype.onRewardInfoSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTChampionsTierView.Event.REWARDS_INFO, i)
    }
    ,
    UTChampionsView
}(UTTargetActionView);
UTChampionsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-champions-view"),
        this._header = new UTChampionsProgressionHeaderView,
        this._header.getRootElement().classList.add("ut-champions-view--header"),
        e.appendChild(this._header.getRootElement()),
        this.__container = document.createElement("div"),
        this.__container.classList.add("ut-champions-view--details");
        var t = document.createElement("div");
        t.classList.add("ut-champions-view--event"),
        this.__progressView = document.createElement("div"),
        this.__progressView.classList.add("ut-tier-progress-bar"),
        t.appendChild(this.__progressView),
        this.__tierView = document.createElement("div"),
        this.__tierView.classList.add("ut-champions-view--tiers"),
        t.appendChild(this.__tierView),
        this.__container.appendChild(t),
        e.appendChild(this.__container),
        this.__root = e,
        this._generated = !0
    }
}
,
UTChampionsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._header.destroy(),
    this.__container = null,
    this.__progressView = null,
    this.__tierView = null
}
,
UTChampionsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTChampionsViewController = function(t) {
    function UTChampionsViewController() {
        var e = t.call(this) || this;
        return e.vm = new UTChampionsViewModel(services.Champions),
        e
    }
    return __extends(UTChampionsViewController, t),
    UTChampionsViewController.prototype._getViewInstanceFromData = function() {
        return new UTChampionsView({
            localization: services.Localization
        })
    }
    ,
    UTChampionsViewController.prototype._getTelemetryId = function() {
        return "Champions"
    }
    ,
    UTChampionsViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.champions")
    }
    ,
    UTChampionsViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this.requestEventData(),
        TelemetryManager.trackPage(TelemetryManager.Sections.CHAMPIONS, "Champions Main")
    }
    ,
    UTChampionsViewController.prototype.requestEventData = function() {
        var p = this;
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.vm.requestEvent().observe(this, function(e, t) {
            var i, o, n, r, s, a, l, c, d, u;
            e.unobserve(p);
            var h = p.getView();
            t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.event) ? (h.setEvent(t.data.event, null !== (n = null === (o = repositories.Rivals.getEvent()) || void 0 === o ? void 0 : o.user.championsPoints) && void 0 !== n ? n : 0, null !== (s = null === (r = repositories.Rivals.getEvent()) || void 0 === r ? void 0 : r.user.championsEntries) && void 0 !== s ? s : 0, null !== (l = null === (a = repositories.Rivals.getEvent()) || void 0 === a ? void 0 : a.season.championsPointsThreshold) && void 0 !== l ? l : 0, null !== (d = null === (c = repositories.Rivals.getEvent()) || void 0 === c ? void 0 : c.season.championsEntries) && void 0 !== d ? d : 0),
            h.addTarget(p, p.onSelectRewardInfo, UTChampionsTierView.Event.REWARDS_INFO)) : (services.Notification.queue([services.Localization.localize("champions.loaderror"), UINotificationType.NEGATIVE]),
            NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : null === (u = p.getNavigationController()) || void 0 === u || u.popViewController()),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    UTChampionsViewController.prototype.onSelectRewardInfo = function(e, t, i) {
        var o, n, r;
        if (this.vm) {
            var s = null !== (r = null === (n = null === (o = this.vm.currentEvent) || void 0 === o ? void 0 : o.getCurrentStage()) || void 0 === n ? void 0 : n.prizeTiers) && void 0 !== r ? r : []
              , a = i.id
              , l = s ? JSUtils.find(s, function(e) {
                return e.awardSetId === a
            }) : null;
            l ? this.triggerConsolidatedRewardsPopup([l.eventRewardSet], services.Localization.localize("gamemodeshub.champions.rewards.title", [a.toString()]), !1) : services.Notification.queue([services.Localization.localize("notification.champions.rewardsInfoFailed"), UINotificationType.NEGATIVE])
        }
    }
    ,
    UTChampionsViewController.prototype.triggerConsolidatedRewardsPopup = function(e, t, i) {
        var o = new UTRewardSelectionChoiceViewController(e);
        o.setTitleText(t),
        o.setClaimableState(i),
        gPopupClickShield.setActivePopup(o)
    }
    ,
    UTChampionsViewController
}(UTViewController)
  , UTGameModesHubViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTGameModesHubViewController() {
        var e = t.call(this) || this;
        return e.championsViewModel = new UTChampionsViewModel(services.Champions),
        e.rivalsViewModel = new UTRivalsViewModel(services.Rivals),
        e.squadBattlesViewModel = new UTSquadBattlesViewModel(services.SquadBattles),
        e
    }
    return __extends(UTGameModesHubViewController, t),
    UTGameModesHubViewController.prototype._getViewInstanceFromData = function() {
        return new UTGameModesHubView({
            localization: services.Localization
        })
    }
    ,
    UTGameModesHubViewController.prototype._getTelemetryId = function() {
        return "Game Modes Hub"
    }
    ,
    UTGameModesHubViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.gamemodes")
    }
    ,
    UTGameModesHubViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        TelemetryManager.trackPage(TelemetryManager.Sections.GAMEMODES, "Game Modes Hub"),
        this.requestEventData()
    }
    ,
    UTGameModesHubViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        e.getSquadBattlesTile().removeTarget(this, this.eSquadBattlesTileSelected, EventType.TAP),
        e.getRivalsTile().removeTarget(this, this.eRivalsTileSelected, EventType.TAP),
        e.getChampsTile().removeTarget(this, this.eChampsTileSelected, EventType.TAP),
        e.getSquadBattlesTile().removeTarget(this, this.eSquadBattlesRewardSelected, EventType.TAP),
        e.getRivalsTile().removeTarget(this, this.eRivalsRewardSelected, EventType.TAP),
        e.getChampsTile().removeTarget(this, this.eChampionsRewardSelected, EventType.TAP),
        e.getRivalsTile().removeTarget(this, this.eRivalsTileNoProgressSelected, EventType.TAP),
        e.getChampsTile().removeTarget(this, this.eChampsTileNoProgressSelected, EventType.TAP),
        e.getSquadBattlesTile().removeTarget(this, this.eSquadBattlesTileNoProgressSelected, EventType.TAP),
        t.prototype.viewWillDisappear.call(this)
    }
    ,
    UTGameModesHubViewController.prototype.onRequestSquadBattlesEventDataComplete = function(e, t) {
        var i, o, n = services.Localization, r = services.Notification;
        e.unobserve(this);
        var s = this.getView().getSquadBattlesTile();
        if (s.setInteractionState(!1),
        s.toggleRewardsState(!1),
        t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.event)) {
            var a = null === (o = t.data) || void 0 === o ? void 0 : o.event;
            a.hasOutStandingRewards() ? (s.setTagText(n.localize("gamemodeshub.tag.enterclaim")),
            s.addTarget(this, this.eSquadBattlesRewardSelected, EventType.TAP),
            s.toggleRewardsState(!0),
            s.setInteractionState(!0)) : a.hasProgression() ? (s.addTarget(this, this.eSquadBattlesTileSelected, EventType.TAP),
            s.setInteractionState(!0)) : (s.setInteractionState(!0),
            s.setTagText(n.localize("gamemodes.tag.no-progress")),
            s.addTarget(this, this.eSquadBattlesTileNoProgressSelected, EventType.TAP))
        }
        t.success || r.queue([n.localize("squadbattles.loaderror"), UINotificationType.NEGATIVE])
    }
    ,
    UTGameModesHubViewController.prototype.onRequestRivalsEventDataComplete = function(e, t) {
        var i, o, n = services.Localization, r = services.Notification;
        e.unobserve(this);
        var s = this.getView().getRivalsTile();
        if (s.setInteractionState(!1),
        s.toggleRewardsState(!1),
        t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.event)) {
            var a = null === (o = t.data) || void 0 === o ? void 0 : o.event;
            a.hasOutStandingRewards() ? (s.setTagText(n.localize("gamemodeshub.tag.enterclaim")),
            s.addTarget(this, this.eRivalsRewardSelected, EventType.TAP),
            s.toggleRewardsState(!0),
            s.setInteractionState(!0)) : a.isFeatureAccessible() ? (s.addTarget(this, this.eRivalsTileSelected, EventType.TAP),
            s.setInteractionState(!0)) : (s.setInteractionState(!0),
            s.setTagText(n.localize("gamemodes.tag.no-progress")),
            s.addTarget(this, this.eRivalsTileNoProgressSelected, EventType.TAP))
        }
        t.success || r.queue([n.localize("rivals.loaderror"), UINotificationType.NEGATIVE])
    }
    ,
    UTGameModesHubViewController.prototype.onRequestChampionsEventDataComplete = function(e, t) {
        var i, o, n, r, s, a = services.Localization, l = services.Notification;
        e.unobserve(this);
        var c = this.getView().getChampsTile();
        if (c.setInteractionState(!1),
        c.toggleRewardsState(!1),
        t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.event)) {
            var d = null === (o = t.data) || void 0 === o ? void 0 : o.event;
            d.hasOutStandingRewards() ? (c.setTagText(a.localize("gamemodeshub.tag.enterclaim")),
            c.addTarget(this, this.eChampionsRewardSelected, EventType.TAP),
            c.toggleRewardsState(!0),
            c.setInteractionState(!0)) : d.hasProgression() || 0 < (null !== (s = null === (r = null === (n = repositories.Rivals.getEvent()) || void 0 === n ? void 0 : n.user) || void 0 === r ? void 0 : r.championsPoints) && void 0 !== s ? s : 0) ? (c.addTarget(this, this.eChampsTileSelected, EventType.TAP),
            c.setInteractionState(!0)) : (c.setInteractionState(!0),
            c.setTagText(a.localize("gamemodes.tag.no-progress")),
            c.addTarget(this, this.eChampsTileNoProgressSelected, EventType.TAP))
        }
        t.success || l.queue([a.localize("champions.loaderror"), UINotificationType.NEGATIVE])
    }
    ,
    UTGameModesHubViewController.prototype.requestEventData = function() {
        var i = this;
        this.championsViewModel.requestEvent().observe(this, function(e, t) {
            i.onRequestChampionsEventDataComplete(e, t),
            i.squadBattlesViewModel.requestEvent().observe(i, function(e, t) {
                i.onRequestSquadBattlesEventDataComplete(e, t),
                i.rivalsViewModel.requestEvent().observe(i, function(e, t) {
                    i.onRequestRivalsEventDataComplete(e, t)
                })
            })
        })
    }
    ,
    UTGameModesHubViewController.prototype.createNoProgressPopup = function(e, t) {
        var i = services.Localization
          , o = new EADialogViewController({
            dialogOptions: [{
                labelEnum: enums.UIDialogOptions.OK
            }],
            message: i.localize(t),
            title: i.localize(e)
        });
        o.init(),
        o.viewWillAppear(),
        o.modalDisplayDimensions.width = "380px",
        gPopupClickShield.setActivePopup(o)
    }
    ,
    UTGameModesHubViewController.prototype.eSquadBattlesTileSelected = function(e, t, i) {
        if (e.isInteractionEnabled()) {
            var o = this.getNavigationController()
              , n = new UTSquadBattlesViewController;
            n.init(),
            o && o.pushViewController(n),
            TelemetryManager.trackEvent(TelemetryManager.Sections.GAMEMODES, TelemetryManager.Categories.BUTTON_PRESS, "Game Modes Hub Tile - Squad Battles Tile Tapped")
        }
    }
    ,
    UTGameModesHubViewController.prototype.eRivalsTileSelected = function(e, t, i) {
        if (e.isInteractionEnabled()) {
            var o = this.getNavigationController()
              , n = new UTRivalsViewController;
            n.init(),
            o && o.pushViewController(n),
            TelemetryManager.trackEvent(TelemetryManager.Sections.GAMEMODES, TelemetryManager.Categories.BUTTON_PRESS, "Game Modes Hub Tile - Rivals Tile Tapped")
        }
    }
    ,
    UTGameModesHubViewController.prototype.eRivalsTileNoProgressSelected = function(e, t, i) {
        e.isInteractionEnabled() && this.createNoProgressPopup("gamemodes.rivals.tile.title", "gamesmodes.rivals.noprogress.popup.message")
    }
    ,
    UTGameModesHubViewController.prototype.eSquadBattlesTileNoProgressSelected = function(e, t, i) {
        e.isInteractionEnabled() && this.createNoProgressPopup("gamemodes.squadbattles.tile.title", "gamesmodes.squadbattles.noprogress.popup.message")
    }
    ,
    UTGameModesHubViewController.prototype.eChampsTileNoProgressSelected = function(e, t, i) {
        e.isInteractionEnabled() && this.createNoProgressPopup("gamemodes.champions.tile.title", "gamesmodes.champs.noprogress.popup.message")
    }
    ,
    UTGameModesHubViewController.prototype.eChampsTileSelected = function(e, t, i) {
        if (e.isInteractionEnabled()) {
            var o = this.getNavigationController()
              , n = new UTChampionsViewController;
            n.init(),
            o && o.pushViewController(n),
            TelemetryManager.trackEvent(TelemetryManager.Sections.GAMEMODES, TelemetryManager.Categories.BUTTON_PRESS, "Game Modes Hub Tile - Champs Tile Tapped")
        }
    }
    ,
    UTGameModesHubViewController.prototype.eChampionsRewardSelected = function(e, t, i) {
        var r = this;
        TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Champions Tile");
        var s = services.Localization;
        this.championsViewModel.claimRewards().observe(this, function(e, t) {
            e.unobserve(r);
            var i = JSUtils.isObject(t.response) ? t.response.rewards : [];
            if (t.success && i) {
                var o;
                if (1 === i.length)
                    (o = new UTGameRewardsViewController(i[0].rewards)).getView().setTitle(s.localize("champions.rewards.title")),
                    o.getView().setDescription(s.localize("champions.rewards.description")),
                    o.getView().setButtonText(s.localize("champions.rewards.claim")),
                    o.modalDisplayDimensions.width = "24em",
                    gPopupClickShield.setActivePopup(o);
                else
                    (o = new UTRewardSelectionChoiceViewController(i)).setTitleText(s.localize("champions.rewards.title")),
                    o.getView().addTarget(r, r.eClosePopup, UTRewardSelectionChoiceView.Event.CONFIRM),
                    gPopupClickShield.setActivePopup(o);
                var n = r.getView().getChampsTile();
                n.toggleRewardsState(!1),
                n.setInteractionState(!1),
                n.setTagText(s.localize("gamemodes.tag.no-progress"))
            } else
                services.Notification.queue([s.localize("notification.champions.claimFailed"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTGameModesHubViewController.prototype.eSquadBattlesRewardSelected = function(e, t, i) {
        var s = this;
        TelemetryManager.trackEvent(TelemetryManager.Sections.GAMEMODES, TelemetryManager.Categories.BUTTON_PRESS, "Game Modes - Squad Battles Rewards Tile");
        var a = services.Localization;
        this.squadBattlesViewModel.claimRewards().observe(this, function(e, t) {
            e.unobserve(s);
            var i = JSUtils.isObject(t.response) ? t.response.rewards : []
              , o = !!JSUtils.isObject(t.response) && t.response.allClaimed;
            if (t.success && 0 < i.length) {
                var n;
                if (1 === i.length)
                    (n = new UTGameRewardsViewController(i[0].rewards)).getView().setTitle(a.localize("squadbattles.rewards.title")),
                    n.getView().setDescription(a.localize("squadbattles.rewards.description")),
                    n.getView().setButtonText(a.localize("squadbattles.rewards.claim")),
                    n.modalDisplayDimensions.width = "24em",
                    gPopupClickShield.setActivePopup(n);
                else
                    (n = new UTRewardSelectionChoiceViewController(i)).setTitleText(a.localize("squadbattles.rewards.title")),
                    n.getView().addTarget(s, s.eClosePopup, UTRewardSelectionChoiceView.Event.CONFIRM),
                    gPopupClickShield.setActivePopup(n);
                if (o) {
                    var r = s.getView().getSquadBattlesTile();
                    r.toggleRewardsState(!1),
                    r.setInteractionState(!1),
                    r.setTagText(a.localize("gamemodes.tag.no-progress"))
                }
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : t.success && (!t.success || o) || services.Notification.queue([services.Localization.localize("notification.sqbt.claimAllFailed"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTGameModesHubViewController.prototype.eRivalsRewardSelected = function(e, t, i) {
        var o, s = this;
        TelemetryManager.trackEvent(TelemetryManager.Sections.GAMEMODES, TelemetryManager.Categories.BUTTON_PRESS, "Game Modes - Rivals Reward Tile");
        function Fnb(e, t) {
            var i, o;
            e.unobserve(s);
            var n = null !== (o = null === (i = null == t ? void 0 : t.data) || void 0 === i ? void 0 : i.rewards) && void 0 !== o ? o : [];
            if (t.success && 0 < n.length) {
                s.evaluateRivalsClaimState();
                var r = new UTGameRewardsViewController(n);
                r.getView().setTitle(a.localize("rivals.rewards.weeklyclaimedtitle")),
                r.getView().setDescription(a.localize("rivals.rewards.weeklydescription")),
                r.getView().setButtonText(a.localize("rivals.rewards.claim")),
                r.modalDisplayDimensions.width = "24em",
                r.onExit.observe(s, s.checkForSeasonalRivalRewards),
                gPopupClickShield.setActivePopup(r)
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : services.Notification.queue([a.localize("notification.rivals.claimFailed"), UINotificationType.NEGATIVE])
        }
        var a = services.Localization;
        (null === (o = this.rivalsViewModel.currentEvent) || void 0 === o ? void 0 : o.isWeeklyPrizeAvailable()) ? this.rivalsViewModel.getWeeklyRewardsInfo().observe(this, function(e, t) {
            var i, o;
            e.unobserve(s);
            var n = null !== (o = null === (i = null == t ? void 0 : t.data) || void 0 === i ? void 0 : i.unclaimedRewards) && void 0 !== o ? o : [];
            if (t.success && 0 < n.length)
                if (1 === n.length)
                    s.rivalsViewModel.claimWeeklyRivalsRewardsById(n[0].id).observe(s, Fnb);
                else {
                    var r = new UTRewardSelectionChoiceViewController(n);
                    r.setTitleText(a.localize("rivals.rewards.weeklyclaimedtitle")),
                    r.getView().addTarget(s, s.eRivalsWeeklyRewardClaimed, UTRewardSelectionChoiceView.Event.CONFIRM),
                    gPopupClickShield.setActivePopup(r)
                }
            else
                t.success && 0 === n.length ? s.checkForSeasonalRivalRewards() : NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
        }) : this.checkForSeasonalRivalRewards()
    }
    ,
    UTGameModesHubViewController.prototype.checkForSeasonalRivalRewards = function() {
        function Wnb(e, t) {
            var i, o;
            e.unobserve(s);
            var n = null !== (o = null === (i = null == t ? void 0 : t.data) || void 0 === i ? void 0 : i.rewards) && void 0 !== o ? o : [];
            if (t.success && 0 < n.length) {
                s.evaluateRivalsClaimState();
                var r = new UTGameRewardsViewController(n);
                r.getView().setTitle(a.localize("rivals.rewards.seasonalclaimedtitle")),
                r.getView().setDescription(a.localize("rivals.rewards.seasonaldescription")),
                r.getView().setButtonText(a.localize("rivals.rewards.claim")),
                r.modalDisplayDimensions.width = "24em",
                gPopupClickShield.setActivePopup(r)
            } else
                NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : services.Notification.queue([a.localize("notification.rivals.claimFailed"), UINotificationType.NEGATIVE])
        }
        var e, s = this, a = services.Localization;
        (null === (e = this.rivalsViewModel.currentEvent) || void 0 === e ? void 0 : e.isSeasonPrizeAvailable()) && this.rivalsViewModel.getSeasonalRewardsInfo().observe(this, function(e, t) {
            var i, o;
            e.unobserve(s);
            var n = null !== (o = null === (i = null == t ? void 0 : t.data) || void 0 === i ? void 0 : i.unclaimedRewards) && void 0 !== o ? o : [];
            if (t.success && 0 < n.length)
                if (1 === n.length)
                    s.rivalsViewModel.claimSeasonalRivalsRewardsById(n[0].id).observe(s, Wnb);
                else {
                    var r = new UTRewardSelectionChoiceViewController(n);
                    r.setTitleText(a.localize("rivals.rewards.seasonaltitle")),
                    r.getView().addTarget(s, s.eRivalsSeasonalRewardClaimed, UTRewardSelectionChoiceView.Event.CONFIRM),
                    gPopupClickShield.setActivePopup(r)
                }
            else
                NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
        })
    }
    ,
    UTGameModesHubViewController.prototype.eRivalsWeeklyRewardClaimed = function(e, t, i) {
        var r = this;
        e.removeTarget(this, this.eRivalsWeeklyRewardClaimed, UTRewardSelectionChoiceView.Event.CONFIRM);
        this.rivalsViewModel.claimWeeklyRivalsRewardsById(i.selectedId).observe(this, function(e, t) {
            var i, o;
            e.unobserve(r);
            var n = null !== (o = null === (i = null == t ? void 0 : t.data) || void 0 === i ? void 0 : i.rewards) && void 0 !== o ? o : [];
            t.success && 0 < n.length ? r.checkForSeasonalRivalRewards() : NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : services.Notification.queue([services.Localization.localize("notification.rivals.claimFailed"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTGameModesHubViewController.prototype.eRivalsSeasonalRewardClaimed = function(e, t, i) {
        var r = this;
        e.removeTarget(this, this.eRivalsSeasonalRewardClaimed, UTRewardSelectionChoiceView.Event.CONFIRM);
        this.rivalsViewModel.claimSeasonalRivalsRewardsById(i.selectedId).observe(this, function(e, t) {
            var i, o;
            e.unobserve(r);
            var n = null !== (o = null === (i = null == t ? void 0 : t.data) || void 0 === i ? void 0 : i.rewards) && void 0 !== o ? o : [];
            t.success && 0 < n.length ? r.evaluateRivalsClaimState() : NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : services.Notification.queue([services.Localization.localize("notification.rivals.claimFailed"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTGameModesHubViewController.prototype.evaluateRivalsClaimState = function() {
        var e, t;
        (null === (e = this.rivalsViewModel.currentEvent) || void 0 === e ? void 0 : e.hasOutStandingRewards()) ? ((t = this.getView().getRivalsTile()).toggleRewardsState(!0),
        t.setInteractionState(!0)) : ((t = this.getView().getRivalsTile()).toggleRewardsState(!1),
        t.setInteractionState(!0),
        t.setTagText(services.Localization.localize("gamemodes.tag.no-progress")))
    }
    ,
    UTGameModesHubViewController.prototype.eClosePopup = function(e, t, i) {
        e.getView().removeTarget(this, this.eClosePopup, UTRewardSelectionChoiceView.Event.CONFIRM),
        gPopupClickShield.closeActivePopup()
    }
    ,
    UTGameModesHubViewController
}(UTViewController));
function UTHomeHubViewController() {
    UTViewController.call(this),
    this._viewmodel = new UTHomeHubViewModel,
    this._goToLinkController = new UTGoToLinkController,
    this._playerPicks = []
}
NamespaceManager.Register("controllers.home"),
JSUtils.inherits(UTHomeHubViewController, UTViewController),
UTHomeHubViewController.prototype.init = function init() {
    this.initialized || (this.superclass(),
    this._goToLinkController.init())
}
,
UTHomeHubViewController.prototype.dealloc = function dealloc() {
    this._viewmodel.dealloc(),
    this._goToLinkController.dealloc(),
    this._playerPicks = [],
    this.superclass()
}
,
UTHomeHubViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTHomeHubView
}
,
UTHomeHubViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "Hub - Home"
}
,
UTHomeHubViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.home")
}
,
UTHomeHubViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var e = this.getView();
    this.getNavigationController().setNavigationVisibility(!0, !0),
    this._goToLinkController.setNavigationController(this.getNavigationController());
    var t = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.SBC_ENABLED)
      , i = e.getSBCTile();
    i.setInteractionState(t),
    i.setDescription(services.Localization.localize(t ? "sbc.tile.description" : "sbc.notification.disabled")),
    e.getCustomizeTile().setDescription(services.Localization.localize("customize.tile.description")),
    e.getGameModesHubTile().setDescription(services.Localization.localize("gamemodes.tile.description"));
    var o = e.getCGETile();
    o.setInteractionState(t),
    o.setDescription(services.Localization.localize("cge.tile.description"));
    var n = e.getProClubsTile();
    if (n.setInteractionState(t),
    n.setDescription(services.Localization.localize("proclubs.tile.description")),
    hasConnection()) {
        services.Messages.getLiveMessages().observe(this, this._onLiveMessagesRetrieved),
        this._populateLeaderboardsTile(),
        services.Item.requestUnassignedItems().observe(this, this._onUnassignedItemsRequested),
        services.Squad.requestSquadByType("active").observe(this, this._onActiveSquadRequested),
        services.MyStadium.getStadium().observe(this, this._onStadiumRequested),
        services.Objectives.requestActiveCampaign().observe(this, this._onActiveCampaignRequested),
        services.User.getUser().hasPlayerPicksPending ? services.Item.requestPendingPlayerPickItemSelection().observe(this, this._onPendingPlayerPickItemsRequested) : e.getPlayerPicksTile().hide();
        var r = services.LtpEvent.getCurrentEvent();
        r && (r.hasAutoClaimRewards() || r.hasOutstandingRewards()) && services.LtpEvent.claimLtpEventRewards().observe(this, this._onClaimLtpRewards),
        this._requestTransferListData(),
        services.Messages.getHubMessages(3).observe(this, this._onHubMessagesRequested)
    }
    getDefaultDispatcher().addObserver(AppNotification.UNASSIGNED_ITEM_ADDED, this, this._nUnassignedItemAdded),
    e.getActiveSquadTile().addTarget(this, this._eActiveSquadTileSelected, EventType.TAP),
    e.getSBCTile().addTarget(this, this._eSBCTileSelected, EventType.TAP),
    e.getCustomizeTile().addTarget(this, this._eCustomizeTileSelected, EventType.TAP),
    e.getGameModesHubTile().addTarget(this, this._eGameModesTilesSelected, EventType.TAP),
    e.getTransferListTile().addTarget(this, this._eTransferListTileSelected, EventType.TAP),
    e.getUnassignedTile().addTarget(this, this._eUnassignedTileSelected, EventType.TAP),
    e.getPlayerPicksTile().addTarget(this, this._ePlayerPicksTileSelected, EventType.TAP),
    e.getObjectivesTile().addTarget(this, this._eObjectivesTileSelected, EventType.TAP),
    e.getHubMessagesTile().addTarget(this, this._eGoToLink, UTHubMessagesTileView.Event.GOTOLINK),
    e.getLeaderboardsTile().addTarget(this, this._eLeaderboardsTileSelected, EventType.TAP),
    e.getCGETile().addTarget(this, this._eCGETileSelected, EventType.TAP),
    e.getProClubsTile().addTarget(this, this._eProClubsTileSelected, EventType.TAP),
    TelemetryManager.trackPage(TelemetryManager.Sections.HOME, "Home")
}
,
UTHomeHubViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass();
    var e = this.getView();
    e.getHubMessagesTile().destroyCarousel(),
    getDefaultDispatcher().removeObserver(AppNotification.UNASSIGNED_ITEM_ADDED, this),
    e.getActiveSquadTile().removeTarget(this, this._eActiveSquadTileSelected, EventType.TAP),
    e.getSBCTile().removeTarget(this, this._eSBCTileSelected, EventType.TAP),
    e.getCustomizeTile().removeTarget(this, this._eCustomizeTileSelected, EventType.TAP),
    e.getGameModesHubTile().removeTarget(this, this._eGameModesTilesSelected, EventType.TAP),
    e.getTransferListTile().removeTarget(this, this._eTransferListTileSelected, EventType.TAP),
    e.getUnassignedTile().removeTarget(this, this._eUnassignedTileSelected, EventType.TAP),
    e.getPlayerPicksTile().removeTarget(this, this._ePlayerPicksTileSelected, EventType.TAP),
    e.getObjectivesTile().removeTarget(this, this._eObjectivesTileSelected, EventType.TAP),
    e.getHubMessagesTile().removeTarget(this, this._eGoToLink, UTHubMessagesTileView.Event.GOTOLINK),
    e.getLeaderboardsTile().removeTarget(this, this._eLeaderboardsTileSelected, EventType.TAP),
    e.getCGETile().removeTarget(this, this._eCGETileSelected, EventType.TAP),
    e.getProClubsTile().removeTarget(this, this._eProClubsTileSelected, EventType.TAP)
}
,
UTHomeHubViewController.prototype.didDismiss = function didDismiss(e) {
    this.superclass(),
    e instanceof UTPlayerPicksViewController && !services.User.getUser().hasPlayerPicksPending && (this.getView().getPlayerPicksTile().hide(),
    this._playerPicks = []),
    e.dealloc()
}
,
UTHomeHubViewController.prototype._gotoActiveSquadOverview = function _gotoActiveSquadOverview() {
    var o = this.getNavigationController();
    o && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Squad.requestSquadByType("active").observe(this, function _onSquadLoadComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = isPhone() ? new UTSquadOverviewViewController : new UTSquadSplitViewController;
            i.initWithSquad(t.data.squad),
            o.pushViewController(i)
        } else
            NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : services.Notification.queue([services.Localization.localize("notification.squad.failedToLoad"), UINotificationType.NEGATIVE]);
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }))
}
,
UTHomeHubViewController.prototype._onLiveMessagesRetrieved = function _onLiveMessagesRetrieved(e, t) {
    e.unobserve(this);
    var i = !1
      , o = !1;
    if (0 < t.data.messages.length) {
        i = t.data.promoCoins,
        o = t.data.promoItems;
        var n = isPhone() ? PopupQueueViewController.ModalType.PAGE : PopupQueueViewController.ModalType.FORM
          , r = new UTLiveMessagePopupViewController(t.data.messages);
        r.onExit.observe(this, function onLiveMessagesRead(e) {
            e.unobserve(this),
            i && services.User.requestCurrencies(),
            o && repositories.Item.setDirty(ItemPile.PURCHASED)
        }),
        isPhone() || (r.modalDisplayDimensions.width = "800px",
        r.modalDisplayDimensions.maxWidth = "90%"),
        gPopupClickShield.setActivePopup(r, n)
    }
    this._displayLoyaltyRewards(),
    services.Messages.getDailyGift().observe(this, this._onDailyGiftRequested)
}
,
UTHomeHubViewController.prototype._displayLoyaltyRewards = function _displayLoyaltyRewards() {
    var e = services.User.getUser().getSelectedPersona()
      , t = e.getLoyaltyRewards();
    if (0 < t.length) {
        var i = new UTGameRewardsViewController(t);
        i.setTitle(services.Localization.localize("mobilestart.title.loyaltyRewards").toUpperCase()),
        i.setDescription(services.Localization.localize("mobilestart.text.rewardInfo")),
        i.setButtonText(services.Localization.localize("common.dialog.accept")),
        i.modalDisplayDimensions.width = "24em",
        gPopupClickShield.setActivePopup(i),
        e.setLoyaltyRewards([]),
        TelemetryManager.trackPage(TelemetryManager.Sections.MISC, "Loyalty Rewards Popup")
    }
}
,
UTHomeHubViewController.prototype._requestTransferListData = function _requestTransferListData() {
    var r = this.getView().getTransferListTile();
    r.showLoadingState(),
    services.Item.requestTransferItems().observe(this, function _onRequestTransferItemsComplete(e, t) {
        if (e.unobserve(this),
        r.hideLoadingState(),
        r && t.success && JSUtils.isObject(t.response)) {
            var i = new UTTransferSectionListViewModel(t.response.items)
              , o = t.response.items.length
              , n = 1 === o ? services.Localization.localize("dock.label.item") : services.Localization.localize("dock.label.items");
            r.setTotalTransferLabel(n),
            r.setTotalTransferCount(o),
            r.setActiveTransferCount(i.getActiveItems().length),
            r.setFinishedTransferCount(i.getSoldItems().length),
            r.setInteractionState(!0),
            r.setDimmed(!1)
        } else
            NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : t.success || (services.Notification.queue([services.Localization.localize("tradepile.unavailable"), UINotificationType.NEGATIVE]),
            r.setInteractionState(!1),
            r.setDimmed(!0))
    })
}
,
UTHomeHubViewController.prototype._populateLeaderboardsTile = function _populateLeaderboardsTile() {
    var e = this.getView().getLeaderboardsTile();
    if (e) {
        var t = services.User.getUser().getSelectedPersona()
          , i = t.getCurrentClub().assetId;
        e.setName(t.name),
        e.setBadge(i)
    }
}
,
UTHomeHubViewController.prototype._onUnassignedItemsRequested = function _onUnassignedItemsRequested(e, t) {
    e.unobserve(this),
    t.success ? this.getView().renderUnassignedTile(t.response.items.length) : NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
}
,
UTHomeHubViewController.prototype._onStadiumRequested = function _onStadiumRequested(e, t) {
    e.unobserve(this);
    var i = t.success;
    this.getView().getCustomizeTile().setInteractionState(i),
    !i && NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
}
,
UTHomeHubViewController.prototype._onHubMessagesRequested = function _onHubMessagesRequested(e, t) {
    e.unobserve(this),
    this.getView().renderHubMessagesTile(t.data.messages)
}
,
UTHomeHubViewController.prototype._onActiveSquadRequested = function _onActiveSquadRequested(e, t) {
    e.unobserve(this),
    t.success ? this.getView().renderActiveSquadTile(t.data.squad) : NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
}
,
UTHomeHubViewController.prototype._onLearningClaimed = function _onLearningClaimed(e, t) {
    if (e.unobserve(this),
    t.success) {
        var i = services.Localization
          , o = new UTGameRewardsViewController(t.data.rewards);
        o.init(),
        o.modalDisplayDimensions.width = "24em";
        var n = o.getView();
        n.setTitle(i.localize("scmp.milestones.rewards.title")),
        n.setDescription(i.localize(0 < t.data.rewards.length ? "objective.rewards.claimAlldescription" : "objective.rewards.autoclaimed")),
        n.setButtonText(i.localize("objective.rewards.claim")),
        gPopupClickShield.setActivePopup(o);
        var r = this.getView().getObjectivesTile();
        r.setInteractionState(!1),
        r.removeTarget(this, this._eClaimExpiredMilestoneRewards, EventType.TAP),
        r.addTarget(this, this._eObjectivesTileSelected, EventType.TAP),
        services.Objectives.requestActiveCampaign().observe(this, this._onActiveCampaignRequested)
    }
}
,
UTHomeHubViewController.prototype._eClaimAllExpiredRewards = function _eClaimAllExpiredRewards() {
    services.Objectives.claimExpiredRewards().observe(this, function(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = services.Localization
              , o = new UTGameRewardsViewController(t.data.rewards);
            o.init(),
            o.modalDisplayDimensions.width = "24em";
            var n = o.getView();
            n.setTitle(i.localize("scmp.generic.rewards.title")),
            n.setDescription(i.localize(0 < t.data.rewards.length ? "objective.rewards.claimAlldescription" : "objective.rewards.autoclaimed")),
            n.setButtonText(i.localize("objective.rewards.claim")),
            gPopupClickShield.setActivePopup(o),
            o.onExit.observe(this, function(e) {
                e.unobserve(this),
                services.Objectives.claimExpiredLearningRewards().observe(this, this._onLearningClaimed)
            })
        }
    })
}
,
UTHomeHubViewController.prototype._eClaimExpiredRewards = function _eClaimExpiredRewards() {
    services.Objectives.claimExpiredRewards().observe(this, function(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = services.Localization
              , o = new UTGameRewardsViewController(t.data.rewards);
            o.init(),
            o.modalDisplayDimensions.width = "24em";
            var n = o.getView();
            n.setTitle(i.localize("scmp.generic.rewards.title")),
            n.setDescription(i.localize(0 < t.data.rewards.length ? "objective.rewards.claimAlldescription" : "objective.rewards.autoclaimed")),
            n.setButtonText(i.localize("objective.rewards.claim")),
            gPopupClickShield.setActivePopup(o);
            var r = this.getView().getObjectivesTile();
            r.setInteractionState(!1),
            r.removeTarget(this, this._eClaimExpiredRewards, EventType.TAP),
            r.addTarget(this, this._eObjectivesTileSelected, EventType.TAP),
            services.Objectives.requestActiveCampaign().observe(this, this._onActiveCampaignRequested)
        }
    })
}
,
UTHomeHubViewController.prototype._eClaimExpiredMilestoneRewards = function _eClaimExpiredMilestoneRewards() {
    services.Objectives.claimExpiredLearningRewards().observe(this, this._onLearningClaimed)
}
,
UTHomeHubViewController.prototype._onActiveCampaignRequested = function _onActiveCampaignRequested(e, t) {
    if (e.unobserve(this),
    t.success || !NetworkErrorManager.checkCriticalStatus(t.status)) {
        var i = this.getView().getObjectivesTile()
          , o = t.success ? t.data.campaign : null
          , n = Math.round(Date.now() / 1e3)
          , r = !(t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED)
          , s = o ? o.remainingRewards : 0
          , a = !!o && (o.startTime <= n && n <= o.startTime + 172800)
          , l = o ? o.endTime - n : 0;
        i.setNumUnclaimedObjectives(s),
        i.setDescriptionFromObjectiveState(s, r),
        o && (i.setSubtitle(o.title),
        0 < l && i.setExpiryLabel(services.Localization.localize("scmp.campaign.countdown", [services.Localization.localizeTimeRemaining(l)])),
        a && !o.hasOutstandingRewards() && i.setUnclaimedTagText(services.Localization.localize("scmp.campaign.refreshed")),
        o.hasOutstandingRewards() && o.hasOutstandingMilestoneRewards() ? (i.removeTarget(this, this._eObjectivesTileSelected, EventType.TAP),
        i.addTarget(this, this._eClaimAllExpiredRewards, EventType.TAP),
        i.setUnclaimedTagText(services.Localization.localize("scmp.campaign.entertoClaim")),
        i.toggleHasRewardsClass(!0)) : o.hasOutstandingRewards() ? (i.removeTarget(this, this._eObjectivesTileSelected, EventType.TAP),
        i.addTarget(this, this._eClaimExpiredRewards, EventType.TAP),
        i.setUnclaimedTagText(services.Localization.localize("scmp.campaign.entertoClaim")),
        i.toggleHasRewardsClass(!0)) : o.hasOutstandingMilestoneRewards() && (i.removeTarget(this, this._eObjectivesTileSelected, EventType.TAP),
        i.addTarget(this, this._eClaimExpiredMilestoneRewards, EventType.TAP),
        i.setUnclaimedTagText(services.Localization.localize("scmp.milestones.entertoClaim")),
        i.toggleHasRewardsClass(!0))),
        i.setInteractionState(r)
    } else
        NetworkErrorManager.handleStatus(t.status)
}
,
UTHomeHubViewController.prototype._onPendingPlayerPickItemsRequested = function _onPendingPlayerPickItemsRequested(e, t) {
    e.unobserve(this),
    t.success ? (this._playerPicks = t.response.items,
    this.getView().getPlayerPicksTile().show()) : NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
}
,
UTHomeHubViewController.prototype._onDailyGiftRequested = function _onDailyGiftRequested(e, i) {
    function onGiftClaimed(e, t) {
        e.unobserve(this),
        t.success ? services.Notification.queue([services.Localization.localize("infopanel.label.claimed"), UINotificationType.POSITIVE]) : NetworkErrorManager.checkCriticalStatus(i.status) ? NetworkErrorManager.handleStatus(i.status) : services.Notification.queue([services.Localization.localize("dailyreward.claimfailed"), UINotificationType.NEGATIVE])
    }
    if (e.unobserve(this),
    i.success && JSUtils.isValid(i.data.dailyGift)) {
        var t = new UTDailyGiftViewController(i.data.dailyGift);
        t.onExit.observe(this, function onCloseDailyGiftPopup(e) {
            e.unobserve(this),
            services.Messages.claimDailyGift().observe(this, onGiftClaimed)
        }),
        t.modalDisplayDimensions.width = "24em",
        gPopupClickShield.setActivePopup(t)
    }
}
,
UTHomeHubViewController.prototype._eActiveSquadTileSelected = function _eActiveSquadTileSelected() {
    TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Active Squad Tile"),
    this._gotoActiveSquadOverview()
}
,
UTHomeHubViewController.prototype._eTransferListTileSelected = function _eTransferListTileSelected() {
    TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Transfer List Tile");
    var e = this.getNavigationController();
    if (e) {
        var t = isPhone() ? new UTTransferListViewController : new UTTransferListSplitViewController;
        t.init(),
        e.pushViewController(t)
    }
}
,
UTHomeHubViewController.prototype._onClaimLtpRewards = function _onClaimLtpRewards(e, t) {
    if (e.unobserve(this),
    t.success) {
        var i = services.Localization
          , o = new UTRewardSelectionChoiceViewController(t.data.rewards);
        o.setTitleText(i.localize("worldcup.rewards.title")),
        o.setDescriptionText(i.localize("worldcup.rewards.description", t.data.lastTierAchieved)),
        o.setClaimableState(!0),
        gPopupClickShield.setActivePopup(o)
    } else
        NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
}
,
UTHomeHubViewController.prototype._eUnassignedTileSelected = function _eUnassignedTileSelected() {
    TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Unassigned Tile");
    var n = null;
    function _onRequestUnassignedComplete(e, t) {
        if (e.unobserve(this),
        t.success || !NetworkErrorManager.checkCriticalStatus(t.status)) {
            var i = this.getNavigationController();
            if (i) {
                var o = isPhone() ? new UTUnassignedItemsViewController : new UTUnassignedItemsSplitViewController;
                t.success ? o.initWithItems(t.response.items) : o.init(),
                n && o.setStadiumViewModel(new UTMyStadiumViewModel(n)),
                i.pushViewController(o)
            }
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        } else
            NetworkErrorManager.handleStatus(t.status)
    }
    gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.MyStadium.getStadium().observe(this, function _onRequestStadiumComplete(e, t) {
        e.unobserve(this),
        t.success && t.data.stadium && (n = t.data.stadium),
        services.Item.requestUnassignedItems().observe(this, _onRequestUnassignedComplete)
    })
}
,
UTHomeHubViewController.prototype._ePlayerPicksTileSelected = function _ePlayerPicksTileSelected() {
    TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Player Picks Tile");
    var e = new UTPlayerPicksViewController;
    e.initWithPicks(this._playerPicks),
    e.modalDisplayStyle = isPhone() ? "fullscreen" : "form",
    this.presentViewController(e, !0)
}
,
UTHomeHubViewController.prototype._eObjectivesTileSelected = function _eObjectivesTileSelected() {
    var e = this.getNavigationController();
    if (TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Dynamic Objectives Tile"),
    e) {
        var t = new UTObjectivesHubViewController;
        t.init(),
        e.pushViewController(t)
    }
}
,
UTHomeHubViewController.prototype._eSBCTileSelected = function _eSBCTileSelected() {
    if (this.getNavigationController()) {
        var e = new UTSBCHubViewController;
        e.init(),
        this.getNavigationController().pushViewController(e)
    }
    TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - SBC Tile")
}
,
UTHomeHubViewController.prototype._eCustomizeTileSelected = function _eCustomizeTileSelected() {
    var e = this.getNavigationController()
      , t = new UTCustomizeHubViewController;
    t.init(),
    e.pushViewController(t),
    TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Club Tile")
}
,
UTHomeHubViewController.prototype._eGameModesTilesSelected = function _eGameModesTilesSelected() {
    var e = this.getNavigationController()
      , t = new UTGameModesHubViewController;
    t.init(),
    e.pushViewController(t),
    TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - Game Modes Hub Tile")
}
,
UTHomeHubViewController.prototype._eCGETileSelected = function _eCGETileSelected() {
    services.URL.process(services.Localization.localize("link.cge.url"))
}
,
UTHomeHubViewController.prototype._eProClubsTileSelected = function _eProClubsTileSelected() {
    services.URL.process(services.Localization.localize("link.proclubs.url"))
}
,
UTHomeHubViewController.prototype._eLeaderboardsTileSelected = function _eLeaderboardsTileSelected() {
    if (this.getNavigationController()) {
        var e = new UTLeaderboardsHubViewController;
        e.init(),
        this.getNavigationController().pushViewController(e)
    }
}
,
UTHomeHubViewController.prototype._eGoToLink = function _eGoToLink(e, t, i) {
    var o = i.goToLink;
    (0 === o.indexOf("goto") ? this._goToLinkController.attemptNavigation(o) : services.URL.process(o)) && (TelemetryManager.trackEvent(TelemetryManager.Sections.HOME, TelemetryManager.Categories.BUTTON_PRESS, "Home - FET Tile"),
    services.PIN.sendData(PINEventType.MESSAGE, {
        type: PINMessageEventType.FET,
        service: "aruba",
        count: "1",
        track: {
            trackingTag: i.trackingTag
        },
        status: PIN_MESSAGE_EVT_STATUS,
        destination_id: o,
        msg_id: i.id.toString()
    }))
}
,
UTHomeHubViewController.prototype._nUnassignedItemAdded = function _nUnassignedItemAdded() {
    services.Item.requestUnassignedItems().observe(this, this._onUnassignedItemsRequested)
}
,
services.URL.registerDeepLinkID(DeepLinkSection.HOME, function(e) {
    getAppMain().getRootViewController().setGameViewTab(UTGameTabBarController.TabTag.HOME)
});
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTAboutView = function(o) {
    function UTAboutView() {
        return o.call(this) || this
    }
    return __extends(UTAboutView, o),
    UTAboutView.prototype.init = function() {
        o.prototype.init.call(this);
        var e = services.Localization;
        for (var t = "", i = 1; i <= 3; i++)
            t += e.localize("about.message3.part" + i + ".web") + " ";
        this.__gamename.innerHTML = e.localize("about.gamename.web"),
        this.__message1.innerHTML = e.localize("about.message1.web"),
        this.__message2.innerHTML = e.localize("about.message2"),
        this.__message3.innerHTML = t,
        this.__support.innerHTML = e.localize("about.support")
    }
    ,
    UTAboutView.prototype.setVersion = function(e, t) {
        var i = "v" + e;
        i += "." + t,
        this.__version.textContent = i
    }
    ,
    UTAboutView
}(UTView);
UTAboutView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-about"),
        this.__gamename = document.createElement("p"),
        e.appendChild(this.__gamename),
        this.__message1 = document.createElement("p"),
        e.appendChild(this.__message1),
        this.__message2 = document.createElement("p"),
        e.appendChild(this.__message2),
        this.__message3 = document.createElement("p"),
        e.appendChild(this.__message3),
        this.__version = document.createElement("p"),
        e.appendChild(this.__version),
        this.__support = document.createElement("p"),
        e.appendChild(this.__support),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAboutView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__gamename = null,
    this.__message1 = null,
    this.__message2 = null,
    this.__message3 = null,
    this.__version = null,
    this.__support = null
}
,
UTAboutView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTAboutViewController = function(e) {
    function UTAboutViewController() {
        return e.call(this) || this
    }
    return __extends(UTAboutViewController, e),
    UTAboutViewController.prototype.init = function() {
        e.prototype.init.call(this),
        this.getView().setVersion(getAppVersion(), getAppMain().getConfigRepository().getConfigString(EAConfigurationRepository.KEY_CHANGELIST))
    }
    ,
    UTAboutViewController.prototype._getTelemetryId = function() {
        return "Settings - About"
    }
    ,
    UTAboutViewController.prototype._getViewInstanceFromData = function() {
        return new UTAboutView
    }
    ,
    UTAboutViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.about")
    }
    ,
    UTAboutViewController
}(UTViewController)
  , UTPlayerHealthTileContentView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTPlayerHealthTileContentView() {
        return e.call(this) || this
    }
    return __extends(UTPlayerHealthTileContentView, e),
    UTPlayerHealthTileContentView.prototype.displayDashboardStats = function(e) {
        DOMKit.toggleDisplayStyle(this.__dashboardStats, e)
    }
    ,
    UTPlayerHealthTileContentView.prototype.setDescription = function(e) {
        this.__description && (this.__description.textContent = e)
    }
    ,
    UTPlayerHealthTileContentView.prototype.setTotalLabel = function(e) {
        this.__totalLabel && (this.__totalLabel.textContent = e)
    }
    ,
    UTPlayerHealthTileContentView.prototype.setTotalValue = function(e) {
        this.__totalValue && (this.__totalValue.textContent = e)
    }
    ,
    UTPlayerHealthTileContentView.prototype.setAvgLabel = function(e) {
        this.__avgLabel && (this.__avgLabel.textContent = e)
    }
    ,
    UTPlayerHealthTileContentView.prototype.setAvgValue = function(e) {
        this.__avgValue && (this.__avgValue.textContent = e)
    }
    ,
    UTPlayerHealthTileContentView.prototype.setComparisonLabel = function(e) {
        this.__comparisonLabel && (this.__comparisonLabel.textContent = e)
    }
    ,
    UTPlayerHealthTileContentView.prototype.setComparisonValue = function(e, t) {
        if (this.__comparisonValue && (this.__comparisonValue.textContent = e),
        t) {
            var i = [enums.UIValueArrowStyle.NEGATIVE_DECREASE, enums.UIValueArrowStyle.NEGATIVE_INCREASE, enums.UIValueArrowStyle.POSITIVE_DECREASE, enums.UIValueArrowStyle.POSITIVE_INCREASE].join(" ");
            DOMKit.removeClass(this.__comparisonValue, i),
            DOMKit.addClass(this.__comparisonValue, t)
        }
    }
    ,
    UTPlayerHealthTileContentView
}(UTView));
UTPlayerHealthTileContentView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tile-content--player-health"),
        this.__description = document.createElement("p"),
        this.__description.classList.add("ut-tile-view--description"),
        e.appendChild(this.__description),
        this.__dashboardStats = document.createElement("div"),
        this.__dashboardStats.classList.add("ut-tile-content--player-health--stats");
        var t = document.createElement("div");
        t.classList.add("ut-tile-content--player-health--total"),
        this.__totalValue = document.createElement("span"),
        this.__totalValue.classList.add("value"),
        t.appendChild(this.__totalValue),
        this.__totalLabel = document.createElement("span"),
        this.__totalLabel.classList.add("label"),
        t.appendChild(this.__totalLabel),
        this.__dashboardStats.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-tile-content--player-health--avg"),
        this.__avgValue = document.createElement("span"),
        this.__avgValue.classList.add("value"),
        i.appendChild(this.__avgValue),
        this.__avgLabel = document.createElement("span"),
        this.__avgLabel.classList.add("label"),
        i.appendChild(this.__avgLabel),
        this.__dashboardStats.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-tile-content--player-health--comparison"),
        this.__comparisonValue = document.createElement("span"),
        this.__comparisonValue.classList.add("value"),
        o.appendChild(this.__comparisonValue),
        this.__comparisonLabel = document.createElement("span"),
        this.__comparisonLabel.classList.add("label"),
        o.appendChild(this.__comparisonLabel),
        this.__dashboardStats.appendChild(o),
        e.appendChild(this.__dashboardStats),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPlayerHealthTileContentView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__description = null,
    this.__dashboardStats = null,
    this.__totalValue = null,
    this.__totalLabel = null,
    this.__avgValue = null,
    this.__avgLabel = null,
    this.__comparisonValue = null,
    this.__comparisonLabel = null
}
,
UTPlayerHealthTileContentView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPlayerHealthTileView = function(e) {
    function UTPlayerHealthTileView() {
        return e.call(this) || this
    }
    return __extends(UTPlayerHealthTileView, e),
    UTPlayerHealthTileView.prototype.init = function() {
        e.prototype.init.call(this),
        this._tag.init()
    }
    ,
    UTPlayerHealthTileView.prototype.dealloc = function() {
        e.prototype.dealloc.call(this)
    }
    ,
    UTPlayerHealthTileView.prototype._getContentViewInstance = function() {
        return new UTPlayerHealthTileContentView
    }
    ,
    UTPlayerHealthTileView.prototype.setId = function(e) {
        this.id = e
    }
    ,
    UTPlayerHealthTileView.prototype.getId = function() {
        return this.id
    }
    ,
    UTPlayerHealthTileView.prototype.displayDashboardStats = function(e) {
        var t = this.getContentView();
        t && t.displayDashboardStats(e)
    }
    ,
    UTPlayerHealthTileView.prototype.setDescription = function(e) {
        var t = this.getContentView();
        e && t && t.setDescription(e)
    }
    ,
    UTPlayerHealthTileView.prototype.setTotalLabel = function(e) {
        var t = this.getContentView();
        e && t && t.setTotalLabel(e)
    }
    ,
    UTPlayerHealthTileView.prototype.setTotalValue = function(e) {
        var t = this.getContentView();
        e && t && t.setTotalValue(e)
    }
    ,
    UTPlayerHealthTileView.prototype.setAvgLabel = function(e) {
        var t = this.getContentView();
        e && t && t.setAvgLabel(e)
    }
    ,
    UTPlayerHealthTileView.prototype.setAvgValue = function(e) {
        var t = this.getContentView();
        e && t && t.setAvgValue(e)
    }
    ,
    UTPlayerHealthTileView.prototype.setComparisonLabel = function(e) {
        var t = this.getContentView();
        e && t && t.setComparisonLabel(e)
    }
    ,
    UTPlayerHealthTileView.prototype.setComparisonValue = function(e, t) {
        var i = this.getContentView();
        e && i && i.setComparisonValue(e, t)
    }
    ,
    UTPlayerHealthTileView.prototype.setTagText = function(e) {
        this._tag && (this._tag.setAngle(UTLabelView.Angle.TOP_LEFT),
        this._tag.setLabel(e))
    }
    ,
    UTPlayerHealthTileView
}(UTTileView);
UTPlayerHealthTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-player-health-tile-view"),
        e.classList.add("tile");
        var t = document.createElement("div");
        t.classList.add("loadingSpinner"),
        e.appendChild(t),
        this._tag = new UTLabelView,
        e.appendChild(this._tag.getRootElement());
        var i = document.createElement("header");
        this.__tileTitle = document.createElement("h1"),
        this.__tileTitle.classList.add("tileHeader"),
        i.appendChild(this.__tileTitle),
        e.appendChild(i),
        this.__tileContent = document.createElement("div"),
        this.__tileContent.classList.add("tileContent"),
        e.appendChild(this.__tileContent),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPlayerHealthTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._tag.destroy(),
    this.__tileTitle = null,
    this.__tileContent = null
}
,
UTPlayerHealthTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPlayerHealthStatView = function(e) {
    function UTPlayerHealthStatView() {
        return e.call(this) || this
    }
    return __extends(UTPlayerHealthStatView, e),
    UTPlayerHealthStatView.prototype.setId = function(e) {
        this.id = e
    }
    ,
    UTPlayerHealthStatView.prototype.getId = function() {
        return this.id
    }
    ,
    UTPlayerHealthStatView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTPlayerHealthStatView.prototype.setDescription = function(e) {
        this.__description && (this.__description.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.displayDetailedStats = function(e) {
        DOMKit.toggleDisplayStyle(this.__detailedStats, e)
    }
    ,
    UTPlayerHealthStatView.prototype.setWeeklyAvgLabel = function(e) {
        this.__weeklyAvgLabel && (this.__weeklyAvgLabel.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setWeeklyAvgValue = function(e) {
        this.__weeklyAvgValue && (this.__weeklyAvgValue.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setWeeklyComparisonLabel = function(e) {
        this.__weeklyComparisonLabel && (this.__weeklyComparisonLabel.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setWeeklyComparisonValue = function(e, t) {
        if (this.__weeklyComparisonValue && (this.__weeklyComparisonValue.textContent = e),
        t) {
            var i = [enums.UIValueArrowStyle.NEGATIVE_DECREASE, enums.UIValueArrowStyle.NEGATIVE_INCREASE, enums.UIValueArrowStyle.POSITIVE_DECREASE, enums.UIValueArrowStyle.POSITIVE_INCREASE].join(" ");
            DOMKit.removeClass(this.__weeklyComparisonValue, i),
            DOMKit.addClass(this.__weeklyComparisonValue, t)
        }
    }
    ,
    UTPlayerHealthStatView.prototype.setPersonaUsageNote = function(e) {
        this.__personaUsageNote && (this.__personaUsageNote.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.displayTimeSpent = function(e) {
        DOMKit.toggleDisplayStyle(this.__timeSpent, e)
    }
    ,
    UTPlayerHealthStatView.prototype.setTotalTimeSpentLabel = function(e) {
        this.__totalTimeSpentLabel && (this.__totalTimeSpentLabel.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setTotalTimeSpentValue = function(e) {
        this.__totalTimeSpentValue && (this.__totalTimeSpentValue.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setConsoleTimeSpentLabel = function(e) {
        this.__consoleTimeSpentLabel && (this.__consoleTimeSpentLabel.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setConsoleTimeSpentValue = function(e) {
        this.__consoleTimeSpentValue && (this.__consoleTimeSpentValue.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setWebTimeSpentLabel = function(e) {
        this.__webTimeSpentLabel && (this.__webTimeSpentLabel.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setWebTimeSpentValue = function(e) {
        this.__webTimeSpentValue && (this.__webTimeSpentValue.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setCompAppTimeSpentLabel = function(e) {
        this.__compAppTimeSpentLabel && (this.__compAppTimeSpentLabel.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.setCompAppTimeSpentValue = function(e) {
        this.__compAppTimeSpentValue && (this.__compAppTimeSpentValue.textContent = e)
    }
    ,
    UTPlayerHealthStatView.prototype.displayDonutGraph = function(e) {
        DOMKit.toggleDisplayStyle(this.__donutGraph, e)
    }
    ,
    UTPlayerHealthStatView.prototype.displayLimitInput = function(e) {
        this.__limitInputLabel.textContent = services.Localization.localize("playerHealth.label.setLimit"),
        DOMKit.toggleDisplayStyle(this.__limitInput, e)
    }
    ,
    UTPlayerHealthStatView.prototype.addDonutGraph = function(e) {
        this.addSubview(e, this.__donutGraph),
        this.layoutSubviews()
    }
    ,
    UTPlayerHealthStatView.prototype.addLimitInput = function(e, t) {
        this.addSubview(e, this.__limitInput),
        this.addSubview(t, this.__limitInput),
        this.layoutSubviews()
    }
    ,
    UTPlayerHealthStatView.prototype.addElementToContentView = function(e) {
        this.addSubview(e, this.__statContentView),
        this.layoutSubviews()
    }
    ,
    UTPlayerHealthStatView
}(UTView);
UTPlayerHealthStatView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-player-health-stat-view");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        e.appendChild(t),
        this.__statContentView = document.createElement("div"),
        this.__statContentView.classList.add("ut-player-health-stat-view--content"),
        this.__description = document.createElement("p"),
        this.__description.classList.add("ut-tile-view--description"),
        this.__statContentView.appendChild(this.__description),
        this.__donutGraph = document.createElement("div"),
        this.__donutGraph.classList.add("ut-player-health-stat-view--content--donut-graph"),
        this.__statContentView.appendChild(this.__donutGraph),
        this.__timeSpent = document.createElement("div"),
        this.__timeSpent.classList.add("ut-player-health-stat-view--content--time-spent");
        var i = document.createElement("div");
        i.classList.add("ut-player-health-stat-view--content--total-time-spent"),
        this.__totalTimeSpentValue = document.createElement("span"),
        this.__totalTimeSpentValue.classList.add("value"),
        i.appendChild(this.__totalTimeSpentValue),
        this.__totalTimeSpentLabel = document.createElement("span"),
        this.__totalTimeSpentLabel.classList.add("label"),
        i.appendChild(this.__totalTimeSpentLabel),
        this.__timeSpent.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-player-health-stat-view--content--web-time-spent"),
        this.__webTimeSpentValue = document.createElement("span"),
        this.__webTimeSpentValue.classList.add("value"),
        o.appendChild(this.__webTimeSpentValue),
        this.__webTimeSpentLabel = document.createElement("span"),
        this.__webTimeSpentLabel.classList.add("label"),
        o.appendChild(this.__webTimeSpentLabel),
        this.__timeSpent.appendChild(o);
        var n = document.createElement("div");
        n.classList.add("ut-player-health-stat-view--content--compapp-time-spent"),
        this.__compAppTimeSpentValue = document.createElement("span"),
        this.__compAppTimeSpentValue.classList.add("value"),
        n.appendChild(this.__compAppTimeSpentValue),
        this.__compAppTimeSpentLabel = document.createElement("span"),
        this.__compAppTimeSpentLabel.classList.add("label"),
        n.appendChild(this.__compAppTimeSpentLabel),
        this.__timeSpent.appendChild(n);
        var r = document.createElement("div");
        r.classList.add("ut-player-health-stat-view--content--console-time-spent"),
        this.__consoleTimeSpentValue = document.createElement("span"),
        this.__consoleTimeSpentValue.classList.add("value"),
        r.appendChild(this.__consoleTimeSpentValue),
        this.__consoleTimeSpentLabel = document.createElement("span"),
        this.__consoleTimeSpentLabel.classList.add("label"),
        r.appendChild(this.__consoleTimeSpentLabel),
        this.__timeSpent.appendChild(r),
        this.__statContentView.appendChild(this.__timeSpent),
        this.__detailedStats = document.createElement("div"),
        this.__detailedStats.classList.add("ut-player-health-stat-view--content--detailed-stats");
        var s = document.createElement("div");
        s.classList.add("ut-player-health-stat-view--content--weekly-avg"),
        this.__weeklyAvgValue = document.createElement("span"),
        this.__weeklyAvgValue.classList.add("value"),
        s.appendChild(this.__weeklyAvgValue),
        this.__weeklyAvgLabel = document.createElement("span"),
        this.__weeklyAvgLabel.classList.add("label"),
        s.appendChild(this.__weeklyAvgLabel),
        this.__detailedStats.appendChild(s);
        var a = document.createElement("div");
        a.classList.add("ut-player-health-stat-view--content--weekly-comparison"),
        this.__weeklyComparisonValue = document.createElement("span"),
        this.__weeklyComparisonValue.classList.add("value"),
        a.appendChild(this.__weeklyComparisonValue),
        this.__weeklyComparisonLabel = document.createElement("span"),
        this.__weeklyComparisonLabel.classList.add("label"),
        a.appendChild(this.__weeklyComparisonLabel),
        this.__detailedStats.appendChild(a),
        this.__statContentView.appendChild(this.__detailedStats),
        this.__limitInput = document.createElement("div"),
        this.__limitInput.classList.add("ut-player-health-stat-view--content--limit-input"),
        this.__limitInputLabel = document.createElement("span"),
        this.__limitInputLabel.classList.add("label"),
        this.__limitInput.appendChild(this.__limitInputLabel),
        this.__statContentView.appendChild(this.__limitInput),
        this.__personaUsageNote = document.createElement("p"),
        this.__personaUsageNote.classList.add("ut-player-health-stat-view--content--persona"),
        this.__statContentView.appendChild(this.__personaUsageNote),
        e.appendChild(this.__statContentView),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPlayerHealthStatView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__statContentView = null,
    this.__description = null,
    this.__donutGraph = null,
    this.__timeSpent = null,
    this.__totalTimeSpentValue = null,
    this.__totalTimeSpentLabel = null,
    this.__webTimeSpentValue = null,
    this.__webTimeSpentLabel = null,
    this.__compAppTimeSpentValue = null,
    this.__compAppTimeSpentLabel = null,
    this.__consoleTimeSpentValue = null,
    this.__consoleTimeSpentLabel = null,
    this.__detailedStats = null,
    this.__weeklyAvgValue = null,
    this.__weeklyAvgLabel = null,
    this.__weeklyComparisonValue = null,
    this.__weeklyComparisonLabel = null,
    this.__limitInput = null,
    this.__limitInputLabel = null,
    this.__personaUsageNote = null
}
,
UTPlayerHealthStatView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTNumberInputSpinnerControl = function(i) {
    function UTNumberInputSpinnerControl() {
        var e = i.call(this) || this;
        return e.decreaseTimeout = 0,
        e.duration = 0,
        e.increaseTimeout = 0,
        e.speedInterval = 50,
        e.startInterval = 250,
        e
    }
    return __extends(UTNumberInputSpinnerControl, i),
    UTNumberInputSpinnerControl.prototype.init = function() {
        var e = this;
        i.prototype.init.call(this),
        this._numberInput.init(),
        this._numberInput.setPlaceholder(services.Localization.localize("post.spinnerDefaultValue")),
        this._numberInput.addTarget(this, this.eInputChanged, EventType.CHANGE);
        var t = JSUtils.debounce(this._triggerActions.bind(this), 500);
        this._decrementBtn.init(),
        this._decrementBtn.addTarget(this, function() {
            e.beginDecrease(),
            e.setInteractionState(!0)
        }, EventType.TOUCHSTART),
        this._decrementBtn.addTarget(this, function() {
            e.endDecrease(),
            t(EventType.CHANGE, {
                value: e.getValue()
            }),
            e.setInteractionState(!0)
        }, EventType.TOUCHEND),
        this._decrementBtn.addTarget(this, function() {
            e.endDecrease(),
            t(EventType.CHANGE, {
                value: e.getValue()
            }),
            e.setInteractionState(!0)
        }, EventType.TOUCHCANCEL),
        this._incrementBtn.init(),
        this._incrementBtn.addTarget(this, function() {
            e.beginIncrease(),
            e.setInteractionState(!0)
        }, EventType.TOUCHSTART),
        this._incrementBtn.addTarget(this, function() {
            e.endIncrease(),
            t(EventType.CHANGE, {
                value: e.getValue()
            }),
            e.setInteractionState(!0)
        }, EventType.TOUCHEND),
        this._incrementBtn.addTarget(this, function() {
            e.endIncrease(),
            t(EventType.CHANGE, {
                value: e.getValue()
            }),
            e.setInteractionState(!0)
        }, EventType.TOUCHCANCEL)
    }
    ,
    UTNumberInputSpinnerControl.prototype.reset = function() {
        this._numberInput.reset()
    }
    ,
    UTNumberInputSpinnerControl.prototype.setInteractionState = function(e) {
        i.prototype.setInteractionState.call(this, e),
        this._numberInput.setInteractionState(e),
        this.updateIncrementDecrementButtonInteractionStates()
    }
    ,
    UTNumberInputSpinnerControl.prototype.getValue = function() {
        return this._numberInput.value
    }
    ,
    UTNumberInputSpinnerControl.prototype.setValue = function(e) {
        this._numberInput.value = e,
        this.updateIncrementDecrementButtonInteractionStates()
    }
    ,
    UTNumberInputSpinnerControl.prototype.getMinValue = function() {
        return this._numberInput.getMinValue()
    }
    ,
    UTNumberInputSpinnerControl.prototype.setMinValue = function(e) {
        this._numberInput.setMinValue(e)
    }
    ,
    UTNumberInputSpinnerControl.prototype.getMaxValue = function() {
        return this._numberInput.getMaxValue()
    }
    ,
    UTNumberInputSpinnerControl.prototype.setMaxValue = function(e) {
        this._numberInput.setMaxValue(e)
    }
    ,
    UTNumberInputSpinnerControl.prototype.setLimits = function(e, t) {
        var i = this.getValue();
        this._numberInput.setMinValue(e),
        this._numberInput.setMaxValue(t),
        this._decrementBtn.setInteractionState(e < i),
        this._incrementBtn.setInteractionState(i < t)
    }
    ,
    UTNumberInputSpinnerControl.prototype.focus = function() {
        this._numberInput.focus()
    }
    ,
    UTNumberInputSpinnerControl.prototype.blur = function() {
        this._numberInput.blur()
    }
    ,
    UTNumberInputSpinnerControl.prototype.setPlaceholder = function(e) {
        this._numberInput.placeholder = e
    }
    ,
    UTNumberInputSpinnerControl.prototype.getNumberInput = function() {
        return this._numberInput
    }
    ,
    UTNumberInputSpinnerControl.prototype.updateIncrementDecrementButtonInteractionStates = function() {
        this._decrementBtn.setInteractionState(this.getValue() > this._numberInput.getMinValue()),
        this._incrementBtn.setInteractionState(this.getValue() < this._numberInput.getMaxValue())
    }
    ,
    UTNumberInputSpinnerControl.prototype.increment = function() {
        var e = this.getValue() + 1;
        this.setValue(e)
    }
    ,
    UTNumberInputSpinnerControl.prototype.decrement = function() {
        var e = this.getValue() - 1;
        this.setValue(e)
    }
    ,
    UTNumberInputSpinnerControl.prototype.beginIncrease = function() {
        if (!this.decreaseTimeout)
            if (this.getValue() < this.getMaxValue()) {
                this.increment(),
                this.duration++;
                var e = this.duration <= 4 ? this.startInterval : this.speedInterval;
                this.increaseTimeout = window.setTimeout(this.beginIncrease.bind(this), e)
            } else
                this.endIncrease()
    }
    ,
    UTNumberInputSpinnerControl.prototype.beginDecrease = function() {
        if (!this.increaseTimeout)
            if (this.getValue() > this.getMinValue()) {
                this.decrement(),
                this.duration++;
                var e = this.duration <= 4 ? this.startInterval : this.speedInterval;
                this.decreaseTimeout = window.setTimeout(this.beginDecrease.bind(this), e)
            } else
                this.endDecrease()
    }
    ,
    UTNumberInputSpinnerControl.prototype.endIncrease = function() {
        window.clearTimeout(this.increaseTimeout),
        this.increaseTimeout = 0,
        this.duration = 0
    }
    ,
    UTNumberInputSpinnerControl.prototype.endDecrease = function() {
        window.clearTimeout(this.decreaseTimeout),
        this.decreaseTimeout = 0,
        this.duration = 0
    }
    ,
    UTNumberInputSpinnerControl.prototype.eInputChanged = function(e, t, i) {
        this._triggerActions(EventType.CHANGE, {
            value: i.value
        }),
        this.setInteractionState(!0)
    }
    ,
    UTNumberInputSpinnerControl
}(UTControl);
UTNumberInputSpinnerControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-numeric-input-spinner-control"),
        this._decrementBtn = new UTStandardButtonControl,
        this._decrementBtn.getRootElement().classList.add("decrement-value"),
        e.appendChild(this._decrementBtn.getRootElement()),
        this._numberInput = new UTNumberInputControl,
        e.appendChild(this._numberInput.getRootElement()),
        this._incrementBtn = new UTStandardButtonControl,
        this._incrementBtn.getRootElement().classList.add("increment-value"),
        e.appendChild(this._incrementBtn.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTNumberInputSpinnerControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._decrementBtn.destroy(),
    this._numberInput.destroy(),
    this._incrementBtn.destroy()
}
,
UTNumberInputSpinnerControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTLimitStatInputSpinnerControl = function(n) {
    function UTLimitStatInputSpinnerControl() {
        var e = n.call(this) || this;
        return e.currentValue = 0,
        e.unlimitedValue = 0,
        e
    }
    return __extends(UTLimitStatInputSpinnerControl, n),
    UTLimitStatInputSpinnerControl.prototype.getValue = function() {
        return this.currentValue
    }
    ,
    UTLimitStatInputSpinnerControl.prototype.setValue = function(e) {
        (this.currentValue = e) === this.unlimitedValue ? this.getNumberInput().getRootElement().value = "" : this.getNumberInput().value = e,
        this.updateIncrementDecrementButtonInteractionStates()
    }
    ,
    UTLimitStatInputSpinnerControl.prototype.eInputChanged = function(e, t, i) {
        var o = Number(i);
        this.currentValue = JSUtils.isNumber(o) ? o : 0,
        n.prototype.eInputChanged.call(this, e, t, {
            value: this.currentValue
        })
    }
    ,
    UTLimitStatInputSpinnerControl
}(UTNumberInputSpinnerControl)
  , UTPlayerHealthView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTPlayerHealthView() {
        var e = t.call(this) || this;
        return e.donutGraph = null,
        e
    }
    return __extends(UTPlayerHealthView, t),
    UTPlayerHealthView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTPlayerHealthView.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.btnEnablePlayerHealth && this.btnEnablePlayerHealth.dealloc(),
        this.donutGraph && this.donutGraph.dealloc(),
        this.limitInput && this.limitInput.dealloc(),
        this.resetButton && this.resetButton.dealloc()
    }
    ,
    UTPlayerHealthView.prototype.initTabMenu = function(e) {
        var t = this
          , i = services.Localization;
        this._tabMenu.addTab("All", i.localize("playerHealth.tabTitle.dashboard")),
        e && 0 < e.stats.length && e.stats.values().forEach(function(e) {
            e.id !== PlayerHealthStatId.MATCHES_PLAYED && e.id !== PlayerHealthStatId.TIME_SPENT_CONSOLE && e.id !== PlayerHealthStatId.TIME_SPENT_COMP_APP && t._tabMenu.addTab(e.id, i.localize("playerHealth.tabTitle." + e.id))
        }),
        this._tabMenu.setActiveTab("All"),
        this._tabMenu.layoutSubviews(),
        this._tabMenu.addTarget(this, this.handleTabSelect, EventType.TAP)
    }
    ,
    UTPlayerHealthView.prototype.clearViews = function() {
        this.playerHealthSection = [],
        this.removeSubviews()
    }
    ,
    UTPlayerHealthView.prototype.render = function(t, e) {
        var i = this;
        if (this.clearViews(),
        t && 0 < t.stats.length)
            if ("All" === e)
                t.stats.values().forEach(function(e) {
                    e.id !== PlayerHealthStatId.TIME_SPENT_CONSOLE && e.id !== PlayerHealthStatId.TIME_SPENT_COMP_APP && i.playerHealthSection.push(i.generateDashboardTile(t, e))
                });
            else if (e !== PlayerHealthStatId.MATCHES_PLAYED) {
                var o = t.getStatById(e);
                o && this.playerHealthSection.push(this.generateDetailedStatView(t, o))
            }
        this._tabMenu.setActiveTab(e),
        this.layoutSubviews()
    }
    ,
    UTPlayerHealthView.prototype.generateDashboardTile = function(e, t) {
        var i = services.Localization
          , o = new UTPlayerHealthTileView;
        o.init(),
        o.setId(t.id),
        o.title = i.localize("playerHealth.tileTitle." + t.id),
        o.setDescription(i.localize("playerHealth.tileDescription." + t.id));
        var n = t.percentChange;
        if (t.id === PlayerHealthStatId.TIME_SPENT_WEB_APP)
            n = e.getTotalTimeSpentPercentChange(),
            o.setTotalLabel(i.localize("playerHealth.label.totalTime")),
            o.setTotalValue(i.localizeTimeRemaining(e.getCurrentTotalTimeSpent())),
            o.setAvgLabel(i.localize("playerHealth.label.weeklyAvg")),
            o.setAvgValue(i.localizeTimeRemaining(e.getTotalTimeSpentWeeklyAvg()));
        else {
            o.setTotalLabel(i.localize("playerHealth.label.thisWeek"));
            var r = t.limit === UTPlayerHealthStatEntity.DEFAULT_LIMIT ? i.localize("playerHealth.inputPlaceholder.unlimited") : i.localizeNumber(t.limit);
            o.setTotalValue(i.localize("common.fraction", [i.localizeNumber(t.currentPeriodValue), r])),
            o.setAvgLabel(i.localize("playerHealth.label.weeklyAvg")),
            o.setAvgValue(i.localizeNumber(t.weeklyAverage))
        }
        var s = enums.UIValueArrowStyle.NONE;
        0 !== n && (s = 0 < n ? enums.UIValueArrowStyle.NEGATIVE_INCREASE : enums.UIValueArrowStyle.POSITIVE_DECREASE),
        o.setComparisonLabel(i.localize("playerHealth.label.lastWeek"));
        var a = 0 <= n ? n : -n;
        return o.setComparisonValue(i.localize("common.percentage", [i.localizeNumber(a)]), s),
        t.isLimitReached() && o.setTagText(i.localize("playerHealth.label.limitReached")),
        t.id !== PlayerHealthStatId.MATCHES_PLAYED ? o.setInteractionState(!0) : o.setInteractionState(!1),
        o.addTarget(this, this.handleTileSelect, EventType.TAP),
        this.addSubview(o, this.__tiles),
        o
    }
    ,
    UTPlayerHealthView.prototype.generateDetailedStatView = function(e, t) {
        var i, o = services.Localization, n = new UTPlayerHealthStatView;
        n.init(),
        n.setInteractionState(!1),
        n.setId(t.id),
        n.setTitle(o.localize("playerHealth.tileTitle." + t.id)),
        n.setDescription(o.localize("playerHealth.tileDescription." + t.id)),
        n.displayDonutGraph(!1),
        n.displayLimitInput(!1),
        n.displayTimeSpent(!1),
        n.displayDetailedStats(!0);
        var r = t.percentChange;
        if (t.id === PlayerHealthStatId.TIME_SPENT_WEB_APP) {
            r = e.getTotalTimeSpentPercentChange(),
            n.displayTimeSpent(!0),
            n.setTotalTimeSpentLabel(o.localize("playerHealth.label.thisWeek")),
            n.setTotalTimeSpentValue(o.localizeTimeRemaining(e.getCurrentTotalTimeSpent())),
            n.setWebTimeSpentLabel(o.localize("playerHealth.label." + t.id)),
            n.setWebTimeSpentValue(o.localizeTimeRemaining(t.currentPeriodValue));
            var s = e.getStatById(PlayerHealthStatId.TIME_SPENT_COMP_APP);
            n.setCompAppTimeSpentLabel(o.localize("playerHealth.label." + PlayerHealthStatId.TIME_SPENT_COMP_APP)),
            n.setCompAppTimeSpentValue(o.localizeTimeRemaining(s ? s.currentPeriodValue : 0));
            var a = e.getStatById(PlayerHealthStatId.TIME_SPENT_CONSOLE);
            n.setConsoleTimeSpentLabel(o.localize("playerHealth.label." + PlayerHealthStatId.TIME_SPENT_CONSOLE)),
            n.setConsoleTimeSpentValue(o.localizeTimeRemaining(a ? a.currentPeriodValue : 0)),
            n.setWeeklyAvgValue(o.localizeTimeRemaining(e.getTotalTimeSpentWeeklyAvg()));
            var l = null === (i = services.User.getUser()) || void 0 === i ? void 0 : i.getSelectedPersona();
            if (l && l.sku !== GameSku.UNKNOWN) {
                var c = this.getConsoleNameBySku(l.sku);
                n.setPersonaUsageNote(o.localize("playerHealth.tileNote.persona", [c]))
            }
        } else {
            if (this.donutGraph = new UTDonutGraphView,
            this.donutGraph.init(),
            isPhone() ? this.donutGraph.setWidth(160) : this.donutGraph.setWidth(250),
            this.donutGraph.toggleLabelDisplay(!0),
            t.isLimitReached())
                this.donutGraph.setState(UTDonutGraphView.State.CAPPED),
                this.donutGraph.setData([100]),
                this.donutGraph.setLabel(o.localize("playerHealth.label.limitReached"), "");
            else {
                var d = t.limit === UTPlayerHealthStatEntity.DEFAULT_LIMIT ? 0 : t.currentPeriodValue / t.limit * 100;
                this.donutGraph.setData([d]),
                this.donutGraph.setLabel(o.localize("playerHealth.label.allTime"), o.localizeNumber(t.previousPeriodsValue))
            }
            this.donutGraph.setStartLabel(o.localize("playerHealth.label.thisWeek"), o.localizeNumber(t.currentPeriodValue));
            var u = t.limit === UTPlayerHealthStatEntity.DEFAULT_LIMIT ? o.localize("playerHealth.inputPlaceholder.unlimited") : o.localizeNumber(t.limit);
            this.donutGraph.setEndLabel(o.localize("playerHealth.label.limit"), u),
            n.addDonutGraph(this.donutGraph),
            n.displayDonutGraph(!0),
            this.limitInput = new UTLimitStatInputSpinnerControl,
            this.limitInput.init(),
            this.limitInput.unlimitedValue = UTPlayerHealthStatEntity.DEFAULT_LIMIT,
            this.limitInput.setPlaceholder(o.localize("playerHealth.inputPlaceholder.unlimited")),
            this.limitInput.setValue(t.limit),
            this.limitInput.setMinValue(0),
            this.limitInput.setMaxValue(UTPlayerHealthStatEntity.MAXIMUM_LIMIT),
            this.limitInput.setInteractionState(!0),
            this.limitInput.addTarget(this, this.handleLimitInput, EventType.CHANGE),
            this.resetButton = new UTFlatButtonControl,
            this.resetButton.init(),
            this.resetButton.setText(o.localize("playerHealth.button.reset")),
            this.resetButton.setInteractionState(this.limitInput.getValue() !== UTPlayerHealthStatEntity.DEFAULT_LIMIT),
            this.resetButton.addTarget(this, this.handleReset, EventType.TAP),
            n.addLimitInput(this.limitInput, this.resetButton),
            n.displayLimitInput(!0),
            n.setWeeklyAvgValue(o.localizeNumber(t.weeklyAverage))
        }
        n.setWeeklyAvgLabel(o.localize("playerHealth.label.weeklyAvg")),
        n.setWeeklyComparisonLabel(o.localize("playerHealth.label.lastWeek"));
        var h = 0 <= r ? r : -r
          , p = enums.UIValueArrowStyle.NONE;
        return 0 !== r && (p = 0 < r ? enums.UIValueArrowStyle.NEGATIVE_INCREASE : enums.UIValueArrowStyle.POSITIVE_DECREASE),
        n.setWeeklyComparisonValue(o.localize("common.percentage", [o.localizeNumber(h)]), p),
        this.addSubview(n, this.__tiles),
        n
    }
    ,
    UTPlayerHealthView.prototype.renderDisabled = function() {
        this.clearViews();
        var e = services.Localization
          , t = new UTPlayerHealthStatView;
        t.init(),
        t.setInteractionState(!1),
        t.setTitle(e.localize("playerHealth.disabled.title")),
        t.setDescription(e.localize("playerHealth.disabled.description")),
        t.addClass(UTPlayerHealthView.TILE_CLASS.SHARING_DISABLED),
        this.addSubview(t, this.__tiles),
        this.layoutSubviews()
    }
    ,
    UTPlayerHealthView.prototype.bubbleEvent = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTPlayerHealthView.Events.ENABLE_PLAYER_HEALTH, i)
    }
    ,
    UTPlayerHealthView.prototype.handleTileSelect = function(e, t, i) {
        this.isInteractionEnabled() && (this.__tiles.scrollTop = 0,
        this._triggerActions(UTPlayerHealthView.Events.TAB_SELECTED, {
            id: e.getId()
        }),
        this._tabMenu.setActiveTab(e.getId()))
    }
    ,
    UTPlayerHealthView.prototype.handleTabSelect = function(e, t, i) {
        this.isInteractionEnabled() && i && (this.__tiles.scrollTop = 0,
        this._triggerActions(UTPlayerHealthView.Events.TAB_SELECTED, i),
        this._tabMenu.setActiveTab(i.id))
    }
    ,
    UTPlayerHealthView.prototype.handleLimitInput = function(e, t, i) {
        this.isInteractionEnabled() && (this.resetButton && this.resetButton.setInteractionState(!0),
        this._triggerActions(UTPlayerHealthView.Events.LIMIT_CHANGED, i))
    }
    ,
    UTPlayerHealthView.prototype.handleReset = function(e, t, i) {
        this.isInteractionEnabled() && (this.limitInput && this.limitInput.setValue(UTPlayerHealthStatEntity.DEFAULT_LIMIT),
        this.resetButton && this.resetButton.setInteractionState(!1),
        this._triggerActions(UTPlayerHealthView.Events.LIMIT_CHANGED, {
            value: UTPlayerHealthStatEntity.DEFAULT_LIMIT
        }))
    }
    ,
    UTPlayerHealthView.prototype.getConsoleNameBySku = function(e) {
        var t = services.Localization;
        switch (e) {
        case GameSku.XBO:
        case GameSku.PREV_XBO:
            return t.localize("platform.console.xboxOne");
        case GameSku.XBX:
        case GameSku.PREV_XBX:
            return t.localize("platform.console.xboxX");
        case GameSku.PS4:
        case GameSku.PREV_PS4:
            return t.localize("platform.console.ps4");
        case GameSku.PS5:
        case GameSku.PREV_PS5:
            return t.localize("platform.console.ps5");
        case GameSku.PC:
        case GameSku.PREV_PC:
        case GameSku.STEAM:
        case GameSku.PREV_STEAM:
            return t.localize("platform.pc")
        }
        return BLANK_STR
    }
    ,
    UTPlayerHealthView.TILE_CLASS = {
        SHARING_DISABLED: "sharing-disabled"
    },
    UTPlayerHealthView.Events = {
        ENABLE_PLAYER_HEALTH: "ENABLE_PLAYER_HEALTH",
        TAB_SELECTED: "TAB_SELECTED",
        LIMIT_CHANGED: "LIMIT_CHANGED"
    },
    UTPlayerHealthView
}(UTTargetActionView));
UTPlayerHealthView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-player-health-view"),
        this._tabMenu = new EAFilterBarView,
        e.appendChild(this._tabMenu.getRootElement()),
        this.__tiles = document.createElement("div"),
        this.__tiles.classList.add("ut-player-health-view--tiles"),
        e.appendChild(this.__tiles),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPlayerHealthView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._tabMenu.destroy(),
    this.__tiles = null
}
,
UTPlayerHealthView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPlayerHealthViewModel = function(t) {
    function UTPlayerHealthViewModel() {
        var e = t.call(this) || this;
        return e.selectedCategory = "All",
        e
    }
    return __extends(UTPlayerHealthViewModel, t),
    UTPlayerHealthViewModel.prototype.setCurrentCategoryById = function(e) {
        this.selectedCategory = e
    }
    ,
    UTPlayerHealthViewModel.prototype.getCurrentCategory = function() {
        return this.selectedCategory
    }
    ,
    UTPlayerHealthViewModel
}(UTViewModel)
  , UTPlayerHealthViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTPlayerHealthViewController() {
        var e = t.call(this) || this;
        return e.viewmodel = new UTPlayerHealthViewModel,
        e
    }
    return __extends(UTPlayerHealthViewController, t),
    UTPlayerHealthViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("more.playerHealth")
    }
    ,
    UTPlayerHealthViewController.prototype._getViewInstanceFromData = function() {
        return new UTPlayerHealthView
    }
    ,
    UTPlayerHealthViewController.prototype.viewDidAppear = function() {
        var e = this.getView();
        e.addTarget(this, this.onTabSelected, UTPlayerHealthView.Events.TAB_SELECTED),
        e.addTarget(this, this.onEnablePlayerHealth, UTPlayerHealthView.Events.ENABLE_PLAYER_HEALTH),
        services.PlayerHealth.isFeatureEnabled() ? (this.requestPlayerHealth(),
        e.addTarget(this, this.onLimitChanged, UTPlayerHealthView.Events.LIMIT_CHANGED)) : e.renderDisabled()
    }
    ,
    UTPlayerHealthViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        e.removeTarget(this, this.onTabSelected, UTPlayerHealthView.Events.TAB_SELECTED),
        e.removeTarget(this, this.onEnablePlayerHealth, UTPlayerHealthView.Events.ENABLE_PLAYER_HEALTH),
        e.removeTarget(this, this.onLimitChanged, UTPlayerHealthView.Events.LIMIT_CHANGED)
    }
    ,
    UTPlayerHealthViewController.prototype.setData = function() {
        this.getView().render(this.playerHealthEntity, this.viewmodel.getCurrentCategory())
    }
    ,
    UTPlayerHealthViewController.prototype.requestPlayerHealth = function() {
        var n = this;
        services.PlayerHealth.isFeatureEnabled() && services.PlayerHealth.readPlayerHealth().observe(this, function(e, t) {
            var i;
            if (e.unobserve(n),
            n.isViewDisplayed())
                if (t.success && t.data && t.data.playerHealth) {
                    var o = n.getView();
                    n.playerHealthEntity = t.data.playerHealth,
                    n.playerHealthEntity.enabled ? (o.initTabMenu(n.playerHealthEntity),
                    n.setData(),
                    n.triggerTelemetryPage()) : o.renderDisabled()
                } else
                    services.Notification.queue([services.Localization.localize("notification.playerHealth.loadFailed"), UINotificationType.NEGATIVE]),
                    null === (i = n.getNavigationController()) || void 0 === i || i.popViewController()
        })
    }
    ,
    UTPlayerHealthViewController.prototype.onTabSelected = function(e, t, i) {
        services.PlayerHealth.isFeatureEnabled() && i && (this.viewmodel.setCurrentCategoryById(i.id),
        this.setData())
    }
    ,
    UTPlayerHealthViewController.prototype.onEnablePlayerHealth = function(e, t, i) {
        var o = this;
        services.PlayerHealth.updatePlayerHealthOptin(!0).observe(this, function(e, t) {
            var i;
            e.unobserve(o),
            t.success ? (services.PIN.sendData(PINEventType.SETTINGS, {
                status: "accepted",
                type: PINSettingsEventType.ENABLE_PLAY_TIME
            }),
            o.requestPlayerHealth()) : (services.PIN.sendData(PINEventType.ERROR, {
                sid: services.Authentication.getUtasSession().id.toString(),
                errid: "server",
                type: services.PIN.getErrorType(t.status)
            }),
            services.Notification.queue([services.Localization.localize("notification.playerHealth.toggleFailed"), UINotificationType.NEGATIVE]),
            null === (i = o.getNavigationController()) || void 0 === i || i.popViewController())
        }),
        getAppMain().getPlayerHealthController().startTimeTracking()
    }
    ,
    UTPlayerHealthViewController.prototype.onLimitChanged = function(e, t, i) {
        var o = this
          , n = this.viewmodel.getCurrentCategory()
          , r = Math.round(i.value);
        n && JSUtils.isNumber(r) && services.PlayerHealth.updatePlayerHealthStatLimit(n, r).observe(this, function(e, t) {
            e.unobserve(o),
            t.success ? (services.PIN.sendData(PINEventType.SETTINGS, {
                status: "update",
                type: PINSettingsEventType.PLAY_TIME_LIMIT
            }),
            services.Notification.queue([services.Localization.localize("notification.playerHealth.limitUpdateSuccess"), UINotificationType.POSITIVE]),
            services.PlayerHealth.readPlayerHealth().observe(o, function(e, t) {
                e.unobserve(o),
                t.success && JSUtils.isObject(t.data) && t.data.playerHealth && (o.playerHealthEntity = t.data.playerHealth,
                o.setData())
            })) : (services.PIN.sendData(PINEventType.ERROR, {
                sid: services.Authentication.getUtasSession().id.toString(),
                errid: "server",
                type: services.PIN.getErrorType(t.status)
            }),
            services.Notification.queue([services.Localization.localize("notification.playerHealth.limitUpdateFailed"), UINotificationType.NEGATIVE]))
        })
    }
    ,
    UTPlayerHealthViewController.prototype.triggerTelemetryPage = function() {
        var e = this.viewmodel.getCurrentCategory()
          , t = e ? "Player Health - " + services.Localization.localize("playerHealth.tileTitle." + e) : "Player Health Hub";
        services.PIN.sendData(PINEventType.PAGE_VIEW, {
            type: PIN_PAGEVIEW_EVT_TYPE,
            pgid: t
        }),
        TelemetryManager.trackPage(TelemetryManager.Sections.OBJECTIVES, t)
    }
    ,
    UTPlayerHealthViewController
}(UTViewController))
  , UTAppSettingsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTAppSettingsView() {
        return e.call(this) || this
    }
    return __extends(UTAppSettingsView, e),
    UTAppSettingsView.prototype.init = function() {
        var e = services.Localization;
        this._aboutButton.init(),
        this._impressumButton.init(),
        this._languageSelectBtn.init(),
        this._licenseAgreementButton.init(),
        this._logoutButton.init(),
        this._playerHealthButton.init(),
        this._privacyPolicyButton.init(),
        this._aboutButton.setText(e.localize("more.about")),
        this._impressumButton.setText(e.localize("more.impressum")),
        this._languageSelectBtn.setText(e.localize("navbar.label.selectLanguage")),
        this._licenseAgreementButton.setText(e.localize("more.license")),
        this._logoutButton.setText(e.localize("more.signout")),
        this._playerHealthButton.setText(e.localize("more.playerHealth")),
        this._privacyPolicyButton.setText(e.localize("more.privacy")),
        this._rateThisAppButton.setText(e.localize("navbar.label.ratethisapp")),
        this._openSettingsButton.setText(e.localize("more.settings.ios")),
        this._impressumButton.addTarget(this, this.onButtonTap, EventType.TAP),
        this._playerHealthSharingButton.init(),
        this._playerHealthSharingButton.addToggleCell(UTAppSettingsView.PLAYER_HEALTH_SLIDER, e.localize("more.playerHealthSharingEnabled")),
        this._openSettingsButton.setDisplay(!1),
        this._usageSharingToggle.init(),
        this._usageSharingToggle.addToggleCell(UTAppSettingsView.USAGE_SHARING_SLIDER, e.localize("more.usagesharing.enable")),
        DOMKit.toggleDisplayStyle(this._rateThisAppButton.getRootElement(), !1),
        DOMKit.toggleDisplayStyle(this._optionsPN.getRootElement(), !1)
    }
    ,
    UTAppSettingsView.prototype.appendPersonaSelector = function(e) {
        this.addSubview(e, this.__personaSelectorContainer)
    }
    ,
    UTAppSettingsView.prototype.getPNToggle = function() {
        return this._optionsPN
    }
    ,
    UTAppSettingsView.prototype.getPlayerHealthSharingToggle = function() {
        return this._playerHealthSharingButton
    }
    ,
    UTAppSettingsView.prototype.getLanguageSelectButton = function() {
        return this._languageSelectBtn
    }
    ,
    UTAppSettingsView.prototype.getRateAppButton = function() {
        return this._rateThisAppButton
    }
    ,
    UTAppSettingsView.prototype.getLogoutButton = function() {
        return this._logoutButton
    }
    ,
    UTAppSettingsView.prototype.getAboutButton = function() {
        return this._aboutButton
    }
    ,
    UTAppSettingsView.prototype.getLicenseAgreementButton = function() {
        return this._licenseAgreementButton
    }
    ,
    UTAppSettingsView.prototype.getPrivacyPolicyButton = function() {
        return this._privacyPolicyButton
    }
    ,
    UTAppSettingsView.prototype.getPlayerHealthButton = function() {
        return this._playerHealthButton
    }
    ,
    UTAppSettingsView.prototype.getUsageSharingToggle = function() {
        return this._usageSharingToggle
    }
    ,
    UTAppSettingsView.prototype.getOpenSettingsButton = function() {
        return this._openSettingsButton
    }
    ,
    UTAppSettingsView.prototype.setImpressumButtonDisplay = function(e) {
        this._impressumButton.setDisplay(e)
    }
    ,
    UTAppSettingsView.prototype.onButtonTap = function(e, t, i) {
        e === this._impressumButton && this._triggerActions(UTAppSettingsView.Event.SELECT_IMPRESSUM)
    }
    ,
    UTAppSettingsView.Event = Object.freeze({
        SELECT_IMPRESSUM: "UTAppSettingsView.SELECT_IMPRESSUM"
    }),
    UTAppSettingsView.PN_SLIDER = "pnEnabled",
    UTAppSettingsView.PLAYER_HEALTH_SLIDER = "playerHealthEnabled",
    UTAppSettingsView.USAGE_SHARING_SLIDER = "usageSharingEnabled",
    UTAppSettingsView
}(UTTargetActionView));
function UTAppSettingsViewController() {
    UTViewController.call(this),
    this._personaController = null,
    this._canOpenExternalLinks = !1,
    this._canOpenExternalLinks = !0
}
UTAppSettingsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-app-settings"),
        e.classList.add("ut-content-container");
        var t = document.createElement("div");
        t.classList.add("ut-content"),
        this.__personaSelectorContainer = document.createElement("div"),
        this.__personaSelectorContainer.classList.add("ut-app-settings-persona-selector"),
        t.appendChild(this.__personaSelectorContainer);
        var i = document.createElement("div");
        i.classList.add("ut-app-settings-actions"),
        this.__topGroup = document.createElement("div"),
        this.__topGroup.classList.add("ut-button-group"),
        this._languageSelectBtn = new UTGroupButtonControl,
        this._languageSelectBtn.getRootElement().classList.add("more"),
        this.__topGroup.appendChild(this._languageSelectBtn.getRootElement()),
        this._logoutButton = new UTGroupButtonControl,
        this.__topGroup.appendChild(this._logoutButton.getRootElement()),
        i.appendChild(this.__topGroup);
        var o = document.createElement("div");
        o.classList.add("ut-button-group"),
        this._optionsPN = new UTToggleControlGroupView,
        o.appendChild(this._optionsPN.getRootElement()),
        this._usageSharingToggle = new UTToggleControlGroupView,
        o.appendChild(this._usageSharingToggle.getRootElement()),
        this._openSettingsButton = new UTGroupButtonControl,
        this._openSettingsButton.getRootElement().classList.add("more"),
        o.appendChild(this._openSettingsButton.getRootElement()),
        this._playerHealthSharingButton = new UTToggleControlGroupView,
        o.appendChild(this._playerHealthSharingButton.getRootElement()),
        this._playerHealthButton = new UTGroupButtonControl,
        this._playerHealthButton.getRootElement().classList.add("more"),
        o.appendChild(this._playerHealthButton.getRootElement()),
        i.appendChild(o);
        var n = document.createElement("div");
        n.classList.add("ut-button-group"),
        this._aboutButton = new UTGroupButtonControl,
        this._aboutButton.getRootElement().classList.add("more"),
        n.appendChild(this._aboutButton.getRootElement()),
        this._rateThisAppButton = new UTGroupButtonControl,
        n.appendChild(this._rateThisAppButton.getRootElement()),
        this._impressumButton = new UTGroupButtonControl,
        n.appendChild(this._impressumButton.getRootElement()),
        this._licenseAgreementButton = new UTGroupButtonControl,
        n.appendChild(this._licenseAgreementButton.getRootElement()),
        this._privacyPolicyButton = new UTGroupButtonControl,
        n.appendChild(this._privacyPolicyButton.getRootElement()),
        i.appendChild(n),
        t.appendChild(i),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTAppSettingsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__personaSelectorContainer = null,
    this.__topGroup = null,
    this._languageSelectBtn.destroy(),
    this._logoutButton.destroy(),
    this._optionsPN.destroy(),
    this._usageSharingToggle.destroy(),
    this._openSettingsButton.destroy(),
    this._playerHealthSharingButton.destroy(),
    this._playerHealthButton.destroy(),
    this._aboutButton.destroy(),
    this._rateThisAppButton.destroy(),
    this._impressumButton.destroy(),
    this._licenseAgreementButton.destroy(),
    this._privacyPolicyButton.destroy()
}
,
UTAppSettingsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
JSUtils.inherits(UTAppSettingsViewController, UTViewController),
UTAppSettingsViewController.prototype.init = function init() {
    this.superclass();
    var e = this.getView()
      , t = services.Authentication.getUtasSession();
    (t.user ? t.user.getSelectedPersona() : null) && (this._personaController = new UTPersonaViewController,
    this._personaController.init(),
    this.addChildViewController(this._personaController),
    e.appendPersonaSelector(this._personaController.getView()))
}
,
UTAppSettingsViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._personaController && (this._personaController.dealloc(),
    this._personaController = null)
}
,
UTAppSettingsViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTAppSettingsView
}
,
UTAppSettingsViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "Settings"
}
,
UTAppSettingsViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("button.settings")
}
,
UTAppSettingsViewController.prototype.viewWillAppear = function viewWillAppear() {
    this.superclass();
    var e = this.getView()
      , t = services.PlayerHealth.isFeatureEnabled();
    e.getPlayerHealthButton().setDisplay(t),
    e.getPlayerHealthSharingToggle().setDisplay(t)
}
,
UTAppSettingsViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var e = this.getView()
      , t = services.Localization.locale;
    e.addTarget(this, this.onInteraction, UTAppSettingsView.Event.SELECT_IMPRESSUM),
    e.getPNToggle().addTarget(this, this._ePN, EventType.CHANGE),
    e.getLanguageSelectButton().addTarget(this, this._eLanguageSelect, EventType.TAP),
    e.getRateAppButton().addTarget(this, this._eRateApp, EventType.TAP),
    e.getOpenSettingsButton().addTarget(this, this._eOpenSettings, EventType.TAP),
    e.getLogoutButton().addTarget(this, this._eLogout, EventType.TAP),
    e.getAboutButton().addTarget(this, this._eAbout, EventType.TAP),
    e.getLicenseAgreementButton().addTarget(this, this._eLicense, EventType.TAP),
    e.getPrivacyPolicyButton().addTarget(this, this._ePrivacy, EventType.TAP),
    e.getUsageSharingToggle().addTarget(this, this._eUsagePopup, EventType.CHANGE),
    e.setImpressumButtonDisplay(t.language === LanguageEnum.GERMAN),
    services.PlayerHealth.isFeatureEnabled() && (e.getPlayerHealthButton().addTarget(this, this._ePlayerHealth, EventType.TAP),
    e.getPlayerHealthSharingToggle().addTarget(this, this._ePlayerHealthSharingPopup, EventType.CHANGE),
    this._requestPlayerHealth());
    var i = this.getNavigationController();
    i && i.setNavigationVisibility(!0, !0),
    this._personaController && this._personaController.viewDidAppear(),
    this.getView().getPlayerHealthSharingToggle().layoutSubviews(),
    this.getView().getUsageSharingToggle().layoutSubviews(),
    this.getView().layoutSubviews(),
    this.getView().getUsageSharingToggle().toggleSlider(UTAppSettingsView.USAGE_SHARING_SLIDER, services.UserSettings.getUsageSharingEnabled()),
    TelemetryManager.trackPage(TelemetryManager.Sections.HOME, "Settings")
}
,
UTAppSettingsViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    var e = this.getView();
    e.getPNToggle().removeTarget(this, this._ePN, EventType.CHANGE),
    e.getLanguageSelectButton().removeTarget(this, this._eLanguageSelect, EventType.TAP),
    e.getRateAppButton().removeTarget(this, this._eRateApp, EventType.TAP),
    e.getLogoutButton().removeTarget(this, this._eLogout, EventType.TAP),
    e.getAboutButton().removeTarget(this, this._eAbout, EventType.TAP),
    e.getLicenseAgreementButton().removeTarget(this, this._eLicense, EventType.TAP),
    e.getPrivacyPolicyButton().removeTarget(this, this._ePrivacy, EventType.TAP),
    e.getUsageSharingToggle().removeTarget(this, this._eUsagePopup, EventType.CHANGE),
    services.PlayerHealth.isFeatureEnabled() && (e.getPlayerHealthButton().removeTarget(this, this._ePlayerHealth, EventType.TAP),
    e.getPlayerHealthSharingToggle().removeTarget(this, this._ePlayerHealthSharing, EventType.CHANGE))
}
,
UTAppSettingsViewController.prototype._requestPlayerHealth = function _requestPlayerHealth() {
    services.PlayerHealth.isFeatureEnabled() && services.PlayerHealth.readPlayerHealth().observe(this, function _onReadPlayerHealthComplete(e, t) {
        e.unobserve(this);
        var i = this.getView().getPlayerHealthSharingToggle();
        t.success && t.data.playerHealth ? (this.playerHealthEntity = t.data.playerHealth,
        i.toggleSlider(UTAppSettingsView.PLAYER_HEALTH_SLIDER, this.playerHealthEntity.enabled),
        i.setInteractionState(!0)) : (services.Notification.queue([services.Localization.localize("notification.playerHealth.loadFailed"), UINotificationType.NEGATIVE]),
        i.toggleSlider(UTAppSettingsView.PLAYER_HEALTH_SLIDER, !1),
        i.setInteractionState(!1))
    })
}
,
UTAppSettingsViewController.prototype._ePN = function _ePN(e, t, i) {
    if (!isWeb() && !isChrome()) {
        var o = services.User.getUser();
        if (o) {
            window.plugins.cordovaNimble.registerPushNotifications(o.id.toString(), i.checked.toString(), function() {
                getStorage().setItem(STORAGE_PN_STATUS_KEY, i.checked);
                var e = i.checked ? services.Localization.localize("notification.pushNotifications.enabled") : services.Localization.localize("notification.pushNotifications.disabled");
                services.Notification.queue([e, UINotificationType.NEUTRAL])
            }
            .bind(this), function() {
                this.getView().getPNToggle().toggleSlider(UTAppSettingsView.PN_SLIDER, !i.checked),
                services.Notification.queue([services.Localization.localize("notification.pushNotifications.toggleFailed"), UINotificationType.NEGATIVE])
            }
            .bind(this))
        }
    }
}
,
UTAppSettingsViewController.prototype._eLanguageSelect = function _eLanguageSelect() {
    services.SBC.reset(),
    services.Messages.reset(),
    services.Objectives.reset();
    var e = this.getNavigationController();
    if (e) {
        var t = new UTLanguageSelectViewController;
        t.init(),
        t.setLanguageSelectCallback(function() {
            location.reload()
        }),
        e.pushViewController(t)
    }
}
,
UTAppSettingsViewController.prototype._eRateApp = function _eRateApp() {
    this._canOpenExternalLinks ? window.plugins.utilities.showStoreAppPage(getStoreId(), !0, function _onRateSuccess() {
        console.log("Rate this app success!")
    }
    .bind(this), function _onRateFail() {
        services.Notification.queue([services.Localization.localize("popup.error.rateapp.Unavailable"), UINotificationType.NEGATIVE])
    }
    .bind(this)) : console.log("Rate app not shown in Chrome")
}
,
UTAppSettingsViewController.prototype._eAbout = function _eAbout() {
    var e = this.getNavigationController();
    if (e) {
        var t = new UTAboutViewController;
        t.init(),
        e.pushViewController(t)
    }
}
,
UTAppSettingsViewController.prototype._eLicense = function _eLicense() {
    services.URL.process(services.Localization.localize("link.terms_of_service_base.url"))
}
,
UTAppSettingsViewController.prototype._ePrivacy = function _ePrivacy() {
    services.URL.process(services.Localization.localize("link.privacy_policy_base.url"))
}
,
UTAppSettingsViewController.prototype._eLogout = function _eLogout() {
    utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.SIGN_OUT, null, function onLogoutConfirmed() {
        getAppMain().getLoginController().logout()
    }
    .bind(this))
}
,
UTAppSettingsViewController.prototype._ePlayerHealth = function _ePlayerHealth() {
    var e = this.getNavigationController();
    if (e) {
        var t = new UTPlayerHealthViewController;
        t.init(),
        e.pushViewController(t)
    }
}
,
UTAppSettingsViewController.prototype._eUsagePopup = function _eUsagePopup(e, t, i) {
    var o = services.UserSettings.getUsageSharingEnabled()
      , n = new EADialogViewController({
        dialogOptions: [{
            labelEnum: enums.UIDialogOptions.CANCEL,
            negativeActionFlag: !0
        }, {
            labelEnum: o ? enums.UIDialogOptions.DISABLE : enums.UIDialogOptions.ENABLE
        }],
        message: o ? services.Localization.localize("more.usagesharing.disablebody") : services.Localization.localize("more.usagesharing.enablebody"),
        title: services.Localization.localize("more.usagesharing.title")
    });
    n.init(),
    n.onExit.observe(this, function(e, t) {
        e.unobserve(this),
        t === enums.UIDialogOptions.ENABLE || t === enums.UIDialogOptions.DISABLE ? this.onConfirmToggleUsageSharing() : this.getView().getUsageSharingToggle().toggleSlider(UTAppSettingsView.USAGE_SHARING_SLIDER, !i.checked)
    }),
    gPopupClickShield.setActivePopup(n)
}
,
UTAppSettingsViewController.prototype._eOpenSettings = function _eOpenSettings() {
    window.plugins.utilities.showAppSettings(function() {}, function() {})
}
,
UTAppSettingsViewController.prototype.onConfirmToggleUsageSharing = function onConfirmToggleUsageSharing() {
    var e = !services.UserSettings.getUsageSharingEnabled();
    services.UserSettings.setUsageSharingEnabled(e),
    e ? (services.PIN.sendData(PINEventType.BOOT_START, {
        status: "success",
        source: "opt_in_tel"
    }, !0),
    services.PIN.sendData(PINEventType.SETTINGS, {
        type: PINSettingsEventType.ENABLE_TELEMETRY,
        status: "accepted"
    }, !0)) : (services.PIN.sendData(PINEventType.BOOT_END, {
        custom: {
            utas_metrics: {
                endpoints: services.Metrics.getRequestData(),
                rpups: services.Metrics.getRequestsPerSecond(),
                sdur: services.Metrics.getSessionDuration()
            }
        },
        end_reason: "opt_out_tel"
    }, !0),
    services.PIN.sendData(PINEventType.SETTINGS, {
        type: PINSettingsEventType.ENABLE_TELEMETRY,
        status: "declined"
    }, !0))
}
,
UTAppSettingsViewController.prototype._ePlayerHealthSharingPopup = function _ePlayerHealthSharingPopup(e, t, i) {
    var o = i.checked
      , n = new EADialogViewController({
        dialogOptions: [{
            labelEnum: enums.UIDialogOptions.NO,
            negativeActionFlag: !0
        }, {
            labelEnum: enums.UIDialogOptions.YES
        }],
        message: o ? services.Localization.localize("playerHealth.sharingPopup.optin.description") : services.Localization.localize("playerHealth.sharingPopup.optout.description"),
        title: services.Localization.localize("playerHealth.sharingPopup.title")
    });
    n.init(),
    n.onExit.observe(this, function(e, t) {
        e.unobserve(this),
        t === enums.UIDialogOptions.YES ? this._updatePlayerHealthSharing(o) : this.getView().getPlayerHealthSharingToggle().toggleSlider(UTAppSettingsView.PLAYER_HEALTH_SLIDER, !o)
    }),
    gPopupClickShield.setActivePopup(n)
}
,
UTAppSettingsViewController.prototype._updatePlayerHealthSharing = function _updatePlayerHealthSharing(o) {
    var n = getAppMain().getPlayerHealthController();
    o || (n.stopTimeTracking(),
    services.PlayerHealth.persistTimeSpent()),
    services.PlayerHealth.updatePlayerHealthOptin(o).observe(this, function _updatePlayerHealthSharingComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = o ? services.Localization.localize("notification.playerHealth.enabled") : services.Localization.localize("notification.playerHealth.disabled");
            services.PIN.sendData(PINEventType.SETTINGS, {
                status: o ? "accepted" : "declined",
                type: PINSettingsEventType.ENABLE_PLAY_TIME
            }),
            o && n.startTimeTracking(),
            services.Notification.queue([i, UINotificationType.NEUTRAL])
        } else
            services.PIN.sendData(PINEventType.ERROR, {
                sid: services.Authentication.getUtasSession().id.toString(),
                errid: "server_error",
                type: services.PIN.getErrorType(t.status)
            }),
            this.getView().getPlayerHealthSharingToggle().toggleSlider(UTAppSettingsView.PLAYER_HEALTH_SLIDER, !o),
            services.Notification.queue([services.Localization.localize("notification.playerHealth.toggleFailed"), UINotificationType.NEGATIVE])
    })
}
,
UTAppSettingsViewController.prototype.onInteraction = function onInteraction(e, t) {
    t === UTAppSettingsView.Event.SELECT_IMPRESSUM && services.URL.process("https://www.ea.com/de-de/legal/impressum")
}
,
NamespaceManager.Register("interfaces"),
interfaces.SlotIterationDelegate = function() {}
,
interfaces.SlotIterationDelegate.prototype.setSlot = function(e, t) {}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTOnboardingLoanPlayerSelectionViewModel = function(t) {
    function UTOnboardingLoanPlayerSelectionViewModel() {
        var e = t.call(this) || this;
        return e.items = [],
        e.positionList = [PlayerPosition.ST, PlayerPosition.LM, PlayerPosition.CM, PlayerPosition.RM, PlayerPosition.LB, PlayerPosition.CB, PlayerPosition.RB, PlayerPosition.GK],
        e
    }
    return __extends(UTOnboardingLoanPlayerSelectionViewModel, t),
    UTOnboardingLoanPlayerSelectionViewModel.prototype.setItems = function(e) {
        this.items = e
    }
    ,
    UTOnboardingLoanPlayerSelectionViewModel.prototype.getPositionFromSlot = function(e) {
        var t = e.generalPosition
          , i = services.User.getUser()
          , o = null == i ? void 0 : i.getSelectedPersona();
        if (t < 0 && o) {
            var n = o.id;
            t = this.positionList[(n + e.index) % this.positionList.length]
        }
        return t
    }
    ,
    UTOnboardingLoanPlayerSelectionViewModel.prototype.getLoanerSample = function(e, t) {
        return 0 === this.items.length ? [] : (e = e < 1 ? 1 : e,
        this.items.filter(function(e) {
            return e.preferredPosition === t
        }).sort(function(e, t) {
            return JSUtils.sortCompare(e.rating, t.rating, !0)
        }).slice(0, e))
    }
    ,
    UTOnboardingLoanPlayerSelectionViewModel
}(EAObject)
  , UTItemInfoChangeButtonControl = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTItemInfoChangeButtonControl() {
        var e = t.call(this) || this;
        return e._currentState = enums.UIItemInfoState.MAIN,
        e
    }
    return __extends(UTItemInfoChangeButtonControl, t),
    UTItemInfoChangeButtonControl.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0),
        this._updateInfoStateAttribute()
    }
    ,
    UTItemInfoChangeButtonControl.prototype.setText = function(e) {
        this.__label.textContent = e
    }
    ,
    UTItemInfoChangeButtonControl.prototype.setCurrentState = function(e) {
        this._currentState !== e && (this._currentState = e,
        this._updateInfoStateAttribute())
    }
    ,
    UTItemInfoChangeButtonControl.prototype._updateInfoStateAttribute = function() {
        var e;
        switch (this._currentState) {
        case enums.UIItemInfoState.MAIN:
            e = "main";
            break;
        case enums.UIItemInfoState.BIO:
            e = "bio";
            break;
        case enums.UIItemInfoState.STATS:
            e = "stats";
            break;
        case enums.UIItemInfoState.STYLE:
            e = "style";
            break;
        case enums.UIItemInfoState.STRENGTH:
            e = "strength";
            break;
        default:
            e = "main"
        }
        this.getRootElement().setAttribute("data-info-state", e)
    }
    ,
    UTItemInfoChangeButtonControl
}(UTNavigationButtonControl));
UTItemInfoChangeButtonControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("button");
        e.classList.add("ut-iteminfochange-button-control"),
        this.__label = document.createElement("span"),
        e.appendChild(this.__label),
        this.__root = e,
        this._generated = !0
    }
}
,
UTItemInfoChangeButtonControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__label = null
}
,
UTItemInfoChangeButtonControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStarterSquadOverviewView = function(t) {
    function UTStarterSquadOverviewView() {
        var e = t.call(this) || this;
        return e._slotSelectHeight = 0,
        e
    }
    return __extends(UTStarterSquadOverviewView, t),
    UTStarterSquadOverviewView.prototype.init = function() {
        t.prototype.init.call(this),
        this._squadOverview.init(),
        this._btnSlotSelect.init(),
        this._squadOverview.renderManager = !1,
        this._btnSlotSelect.setInteractionState(!1),
        this._btnSlotSelect.setText(services.Localization.localize("common.dialog.continue"))
    }
    ,
    UTStarterSquadOverviewView.prototype.didAddToSuperview = function() {
        t.prototype.didAddToSuperview.call(this),
        this._slotSelectHeight = this.__slotSelectContainer.offsetHeight
    }
    ,
    UTStarterSquadOverviewView.prototype.getSquadOverview = function() {
        return this._squadOverview
    }
    ,
    UTStarterSquadOverviewView.prototype.getSlotSelectButton = function() {
        return this._btnSlotSelect
    }
    ,
    UTStarterSquadOverviewView.prototype.toggleSlotSelect = function(e) {
        var t = this._squadOverview.getRootElement();
        e ? (this.__slotSelectContainer.style.display = "",
        t.style.bottom = this._slotSelectHeight + "px") : (this.__slotSelectContainer.style.display = "none",
        t.style.bottom = "0px")
    }
    ,
    UTStarterSquadOverviewView
}(UTView);
UTStarterSquadOverviewView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("OnboardingSquad"),
        this._squadOverview = new UTSquadOverviewView,
        e.appendChild(this._squadOverview.getRootElement()),
        this.__slotSelectContainer = document.createElement("div"),
        this.__slotSelectContainer.classList.add("button-container"),
        this._btnSlotSelect = new UTStandardButtonControl,
        this._btnSlotSelect.getRootElement().classList.add("call-to-action"),
        this.__slotSelectContainer.appendChild(this._btnSlotSelect.getRootElement()),
        e.appendChild(this.__slotSelectContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStarterSquadOverviewView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._squadOverview.destroy(),
    this.__slotSelectContainer = null,
    this._btnSlotSelect.destroy()
}
,
UTStarterSquadOverviewView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
NamespaceManager.Register("controllers.onboarding"),
controllers.onboarding.StarterSquadOverview = function StarterSquadOverviewViewController() {
    UTViewController.call(this),
    this._squad = null,
    this._selectedIndex = -1,
    this._mobileInfoDisplayed = !1,
    this._itemInfoStateViewModel = new UTItemInfoStateViewModel(services.UserSettings),
    this._itemInfoSwitchButton = new UTItemInfoChangeButtonControl,
    this._introMessage = null
}
,
JSUtils.inherits(controllers.onboarding.StarterSquadOverview, UTViewController),
controllers.onboarding.StarterSquadOverview.prototype.init = function init() {
    this.initialized || (this.superclass(),
    this.getView().getSlotSelectButton().addTarget(this, this._eSlotSelected, EventType.TAP),
    this._itemInfoSwitchButton.init(),
    this._itemInfoSwitchButton.setInteractionState(!0),
    this._itemInfoSwitchButton.addTarget(this, this._eItemInfoSwitchButtonSelected, EventType.TAP))
}
,
controllers.onboarding.StarterSquadOverview.prototype.initWithSquad = function initWithSquad(e) {
    this.initialized || (DebugUtils.Assert(e instanceof UTSquadEntity, "Initialization expected a squad entity."),
    this._squad = e,
    this._squad.onDataUpdated.observe(this, this._eSquadUpdated),
    this.init())
}
,
controllers.onboarding.StarterSquadOverview.prototype.dealloc = function dealloc() {
    this._squad && this._squad.onDataUpdated.unobserve(this),
    this._itemInfoSwitchButton.dealloc(),
    this._squad = null,
    this.superclass()
}
,
controllers.onboarding.StarterSquadOverview.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTStarterSquadOverviewView
}
,
controllers.onboarding.StarterSquadOverview.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("onboarding.complete.teamtitle")
}
,
controllers.onboarding.StarterSquadOverview.prototype.getNavigationItem = function getNavigationItem() {
    return this._itemInfoSwitchButton
}
,
controllers.onboarding.StarterSquadOverview.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    DebugUtils.Assert(this._squad instanceof UTSquadEntity, "View appearing on screen without a squad to display."),
    this._itemInfoSwitchButton.setCurrentState(this._itemInfoStateViewModel.getState());
    var e = this.getNavigationController();
    if (e && e.conforms(controllers.navigation.Onboarding) && (e.setNavigationStyle(isPhone() ? UTNavigationBarView.Style.DEFAULT : UTNavigationBarView.Style.LANDSCAPE),
    e.setToolbarVisibility(!1),
    e.setCurrentStep(enums.UIOnboardingStep.LOANER)),
    this._squad) {
        var t = this.getView().getSquadOverview();
        t.setSquad(this._squad),
        t.setChemistryEntries(this._squad.getSortedParameterChemistry()),
        t.addTarget(this, this._eItemTap, enums.UISquadPitchEvent.SLOT_SELECT);
        var i = t.getShowChemistryButton();
        i && i.addTarget(this, this._eShowChemistry, EventType.TAP)
    }
    isPhone() && !this._mobileInfoDisplayed && (this._mobileInfoDisplayed = !0,
    setTimeout(function() {
        if (!this._introMessage) {
            var e = services.Localization
              , t = utils.PopupManager.Alerts.ONBOARDING_INTRO.title
              , i = utils.PopupManager.Alerts.ONBOARDING_INTRO.message;
            this._introMessage = new EADialogViewController({
                dialogOptions: [{
                    labelEnum: enums.UIDialogOptions.OK
                }],
                message: e.localize(i),
                title: e.localize(t)
            }),
            this._introMessage.init(),
            this._introMessage.viewWillAppear(),
            this._introMessage.modalDisplayDimensions.width = "380px",
            gPopupClickShield.setActivePopup(this._introMessage)
        }
    }, 1e3));
    var o = "Onboarding - Squad";
    services.PIN.sendData(PINEventType.PAGE_VIEW, {
        type: PIN_PAGEVIEW_EVT_TYPE,
        pgid: o
    }),
    TelemetryManager.trackPage(TelemetryManager.Sections.ONBOARDING, o)
}
,
controllers.onboarding.StarterSquadOverview.prototype.setSlot = function setSlot(e) {
    if (this._selectedIndex = e,
    this._squad) {
        var t = this.getView()
          , i = t.getSlotSelectButton()
          , o = "";
        e < UTSquadEntity.FIELD_PLAYERS ? o = UTLocalizationUtil.positionIdToName(this._squad.getSlot(e).getGeneralPosition(), services.Localization) : e < UTSquadEntity.FIELD_PLAYERS + UTSquadEntity.SUB_PLAYERS ? o = services.Localization.localize("dock.label.substitutes") : e < UTSquadEntity.MANAGER_SLOT_INDEX && (o = services.Localization.localize("dock.label.reserves")),
        i.setText(services.Localization.localize("swap.withposition", [o])),
        i.setInteractionState(!0),
        t.getSquadOverview().setSlotInteractionState(e, enums.UISlotInteractionState.SELECTED)
    }
}
,
controllers.onboarding.StarterSquadOverview.prototype._loadLoanPlayers = function _loadLoanPlayers() {
    var r = this.getView()
      , s = this._squad.getSlot(this._selectedIndex);
    r.setInteractionState(!1),
    gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Onboarding.getLoanPlayers().observe(this, function _gotoLoanSelector(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = new controllers.onboarding.LoanSelector
              , o = new UTOnboardingLoanPlayerSelectionViewModel;
            o.setItems(t.data.items),
            i.initWithItems(o.getLoanerSample(5, o.getPositionFromSlot(s)), s.getItem()),
            i.setSquadViewDelegate(r.getSquadOverview()),
            this._squad && i.setSquad(this._squad);
            var n = this.getNavigationController();
            n && (n.pushViewController(i),
            r.getSlotSelectButton().setInteractionState(!1))
        } else
            r.setInteractionState(!0);
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    })
}
,
controllers.onboarding.StarterSquadOverview.prototype._eSquadUpdated = function _eSquadUpdated() {
    var e = this.getView()
      , t = e.getSlotSelectButton();
    services.Squad.resetSquadsCache(),
    e.getSquadOverview().setSquad(this._squad),
    t.setText(services.Localization.localize("common.dialog.continue")),
    t.removeTarget(this, this._eSlotSelected, EventType.TAP),
    t.addTarget(this, this._eContinue, EventType.TAP),
    t.setInteractionState(!0)
}
,
controllers.onboarding.StarterSquadOverview.prototype._eItemTap = function _eItemTap(e, t, i) {
    var o = this.getParentViewController()
      , n = i && JSUtils.isNumber(i.slotIndex) ? i.slotIndex : 0;
    n >= UTSquadEntity.MANAGER_SLOT_INDEX - 2 || (this.setSlot(n),
    o && o.conforms(interfaces.SlotIterationDelegate) && o.setSlot(this, n))
}
,
controllers.onboarding.StarterSquadOverview.prototype._eSlotSelected = function _eSlotSelected() {
    this._loadLoanPlayers()
}
,
controllers.onboarding.StarterSquadOverview.prototype._eContinue = function _eContinue() {
    var e = this.getNavigationController();
    if (this.getView().getSquadOverview().getShowChemistryButton().removeTarget(this, this._eShowChemistry, EventType.TAP),
    e) {
        var t = new controllers.onboarding.KitSelect;
        t.init(),
        e.pushViewController(t, !0)
    }
}
,
controllers.onboarding.StarterSquadOverview.prototype._eShowChemistry = function _eShowChemistry() {
    var e = new UTSquadChemistryPopupViewController;
    e.modalDisplayDimensions.width = "360px",
    e.init(),
    e.setChemistry(this._squad),
    gPopupClickShield.setActivePopup(e)
}
,
controllers.onboarding.StarterSquadOverview.prototype._eItemInfoSwitchButtonSelected = function _eItemInfoSwitchButtonSelected() {
    this._itemInfoSwitchButton.setCurrentState(this._itemInfoStateViewModel.nextState())
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTItemSelectionRowView = function(t) {
    function UTItemSelectionRowView() {
        var e = t.call(this) || this;
        return e.itemView = null,
        e.statsView = null,
        e
    }
    return __extends(UTItemSelectionRowView, t),
    UTItemSelectionRowView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTItemSelectionRowView.prototype.dealloc = function() {
        this.itemView && (this.itemView.dealloc(),
        this.itemView = null),
        this.statsView && (this.statsView.dealloc(),
        this.statsView = null),
        t.prototype.dealloc.call(this)
    }
    ,
    UTItemSelectionRowView.prototype.select = function() {
        this.addClass(enums.UIState.SELECTED)
    }
    ,
    UTItemSelectionRowView.prototype.deselect = function() {
        this.removeClass(enums.UIState.SELECTED)
    }
    ,
    UTItemSelectionRowView.prototype.toggleSelection = function(e) {
        e ? this.select() : this.deselect()
    }
    ,
    UTItemSelectionRowView.prototype.setData = function(e) {
        DebugUtils.Assert(e.item instanceof UTItemEntity, "Expected property 'item' to be an instance of UTItemEntity"),
        this.renderName(e.item),
        this.renderItem(e.item),
        this.renderStats(e.item, e.comparison)
    }
    ,
    UTItemSelectionRowView.prototype.renderName = function(e) {
        this.__name.textContent = e.getStaticData().name
    }
    ,
    UTItemSelectionRowView.prototype.renderItem = function(e) {
        this.itemView ? this.itemView.canRender(e) || (this.itemView.dealloc(),
        this.itemView = factories.ItemView.createSmallItem(e),
        this.itemView.init(),
        this.__entityContainer.insertBefore(this.itemView.getRootElement(), this.__entityContainer.firstChild)) : (this.itemView = factories.ItemView.createSmallItem(e),
        this.itemView.init(),
        this.__entityContainer.insertBefore(this.itemView.getRootElement(), this.__entityContainer.firstChild)),
        this.itemView.render(e)
    }
    ,
    UTItemSelectionRowView.prototype.renderStats = function(e, t) {
        this.statsView || (this.statsView = new UTPlayerStatsListDataView({
            localization: services.Localization
        }),
        this.__entityContainer.appendChild(this.statsView.getRootElement())),
        this.statsView.render(e, t)
    }
    ,
    UTItemSelectionRowView.prototype._tapDetected = function(e) {
        this._triggerActions(EventType.TAP)
    }
    ,
    UTItemSelectionRowView
}(UTTargetActionView);
UTItemSelectionRowView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("li");
        e.classList.add("selectionRow"),
        e.classList.add("listFUTItem"),
        this.__selectIcon = document.createElement("div"),
        this.__selectIcon.classList.add("selectIcon"),
        e.appendChild(this.__selectIcon),
        this.__entityContainer = document.createElement("div"),
        this.__entityContainer.classList.add("entityContainer"),
        this.__name = document.createElement("div"),
        this.__name.classList.add("name"),
        this.__entityContainer.appendChild(this.__name),
        e.appendChild(this.__entityContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTItemSelectionRowView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__selectIcon = null,
    this.__entityContainer = null,
    this.__name = null
}
,
UTItemSelectionRowView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTLoanSelectorView = function(t) {
    function UTLoanSelectorView() {
        var e = t.call(this) || this;
        return e.pinnedRow = null,
        e.rows = [],
        e
    }
    return __extends(UTLoanSelectorView, t),
    UTLoanSelectorView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this.__header.textContent = e.localize("search.pagination.header"),
        DOMKit.toggleDisplayStyle(this.__header, !isPhone()),
        this._btnSelect.init(),
        this._btnSelect.setInteractionState(!1),
        this._btnSelect.setText(e.localize("common.dialog.continue"))
    }
    ,
    UTLoanSelectorView.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.pinnedRow && (this.pinnedRow.dealloc(),
        this.pinnedRow = null),
        this.clearRows()
    }
    ,
    UTLoanSelectorView.prototype.clearRows = function() {
        0 < this.rows.length && (this.rows.forEach(function(e) {
            return e.dealloc()
        }),
        this.rows = [])
    }
    ,
    UTLoanSelectorView.prototype.getContinueButton = function() {
        return this._btnSelect
    }
    ,
    UTLoanSelectorView.prototype.setItems = function(e, t) {
        var i = this;
        this.clearRows(),
        this.pinnedRow && this.pinnedRow.dealloc(),
        this.rows = e.map(function(e) {
            return i.generateUTItemSelectionRowView(e, t)
        }, this),
        t && (this.pinnedRow = this.generateComparisonItemView(t)),
        this.layoutSubviews()
    }
    ,
    UTLoanSelectorView.prototype.generateUTItemSelectionRowView = function(e, t) {
        var i = new UTItemSelectionRowView;
        return i.setData({
            item: e,
            comparison: t
        }),
        i.addTarget(this, this._eRowSelected, EventType.TAP),
        i.init(),
        this.addSubview(i, this.__itemList),
        i
    }
    ,
    UTLoanSelectorView.prototype.generateComparisonItemView = function(e) {
        var t = new UTItemTableCellView;
        t.setData(e),
        t.render(),
        this.__pinnedDiv.appendChild(t.getRootElement());
        var i = this.__pinnedDiv.clientHeight;
        return this.__itemList.style.top = i + "px",
        t
    }
    ,
    UTLoanSelectorView.prototype._eRowSelected = function(t, e, i) {
        this.rows.forEach(function(e) {
            return e.toggleSelection(t === e)
        }),
        this._triggerActions(EventType.TAP, {
            row: t,
            rowIndex: this.rows.indexOf(t)
        })
    }
    ,
    UTLoanSelectorView
}(UTTargetActionView);
UTLoanSelectorView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-pinned-list-container"),
        e.classList.add("OnboardingLoanSelector"),
        this.__pinnedDiv = document.createElement("div"),
        this.__pinnedDiv.classList.add("ut-pinned-item"),
        this.__header = document.createElement("div"),
        this.__header.classList.add("header"),
        this.__pinnedDiv.appendChild(this.__header),
        e.appendChild(this.__pinnedDiv),
        this.__itemList = document.createElement("div"),
        this.__itemList.classList.add("ut-pinned-list"),
        e.appendChild(this.__itemList);
        var t = document.createElement("div");
        t.classList.add("button-container"),
        this._btnSelect = new UTStandardButtonControl,
        this._btnSelect.getRootElement().classList.add("call-to-action"),
        t.appendChild(this._btnSelect.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTLoanSelectorView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__pinnedDiv = null,
    this.__header = null,
    this.__itemList = null,
    this._btnSelect.destroy()
}
,
UTLoanSelectorView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
NamespaceManager.Register("controllers.onboarding"),
controllers.onboarding.LoanSelector = function LoanSelectorOnboardingViewController() {
    UTViewController.call(this),
    this._items = [],
    this._comparison = null,
    this._selectedItem = null,
    this._squad = null,
    this._squadViewDelegate = null
}
,
JSUtils.inherits(controllers.onboarding.LoanSelector, UTViewController),
controllers.onboarding.LoanSelector.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass();
        var e = this.getView();
        e.addTarget(this, this._eRowSelected, EventType.TAP),
        e.getContinueButton().addTarget(this, this._eContinueButtonTapped, EventType.TAP);
        var t = "Onboarding - Loan Player";
        services.PIN.sendData(PINEventType.PAGE_VIEW, {
            type: PIN_PAGEVIEW_EVT_TYPE,
            pgid: t
        }),
        TelemetryManager.trackPage(TelemetryManager.Sections.ONBOARDING, t)
    }
}
,
controllers.onboarding.LoanSelector.prototype.initWithItems = function initWithItems(e, t) {
    this.initialized || (this._items = e,
    this._comparison = t || null,
    this.init())
}
,
controllers.onboarding.LoanSelector.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._items = [],
    this._comparison = null,
    this._selectedItem = null,
    this._squad = null,
    this._squadViewDelegate = null
}
,
controllers.onboarding.LoanSelector.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTLoanSelectorView
}
,
controllers.onboarding.LoanSelector.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("search.pagination.header")
}
,
controllers.onboarding.LoanSelector.prototype.viewWillAppear = function viewWillAppear() {
    if (this.superclass(),
    isPhone()) {
        var e = this.getNavigationController();
        e && e.showSettings(!1)
    }
}
,
controllers.onboarding.LoanSelector.prototype.viewWillDisappear = function viewWillDisappear() {
    if (this.superclass(),
    isPhone()) {
        var e = this.getNavigationController();
        e && e.showSettings(!0)
    }
}
,
controllers.onboarding.LoanSelector.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this.getView().setItems(this._items, this._comparison)
}
,
controllers.onboarding.LoanSelector.prototype.setSquad = function setSquad(e) {
    this._squad = e
}
,
controllers.onboarding.LoanSelector.prototype.setSquadViewDelegate = function setSquadViewDelegate(e) {
    e.conforms(interfaces.SquadViewDelegate) && (this._squadViewDelegate = e)
}
,
controllers.onboarding.LoanSelector.prototype._grantLoan = function _grantLoan() {
    if (DebugUtils.Assert(JSUtils.isValid(this._selectedItem), "Expected a loan player item to have been selected."),
    DebugUtils.Assert(JSUtils.isValid(this._squad), "Expected a squad entity reference."),
    DebugUtils.Assert(JSUtils.isValid(this._comparison), "Expected a valid item to swap with the new loan player."),
    this._selectedItem && this._squad && this._comparison) {
        var n = null;
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Onboarding.grantLoanPlayer(this._selectedItem).observe(this, function _onGrantLoanComplete(e, t) {
            if (e.unobserve(this),
            t.success) {
                services.PIN.sendData(PINEventType.MILESTONE, {
                    mode: PIN_MILESTONE_EVT_MODE,
                    moment: PINMileStoneEventMoment.COMPLETE,
                    mstid: PINMilestoneEventId.LOANSELECT,
                    type: PINMilestoneEventType.ONBOARDING
                }),
                n = t.data.item,
                services.Item.move(n, ItemPile.CLUB).observe(this, _onLoanMoveComplete);
                var i = this.getRootNavigationController();
                i && i.conforms(controllers.navigation.Onboarding) && i.getOnboardingState().setLoanerDefId(n.definitionId)
            } else
                TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to grant loaner"),
                gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    function _onLoanMoveComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = this._squad.getSlot(this._comparison);
            i && (this._squad.addItemToSlot(i.getIndex(), n),
            this._squad.addItemToSlot(UTSquadEntity.MANAGER_SLOT_INDEX - 1, this._comparison),
            this._squad.save())
        } else
            TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to move loaner to club"),
            NetworkErrorManager.handleStatus(t.status);
        this._squadViewDelegate && this._squadViewDelegate.setInteractionState(!1);
        var o = this.getNavigationController();
        o && o.popViewController(),
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
        services.PIN.sendData(PINEventType.MILESTONE, {
            mode: PIN_MILESTONE_EVT_MODE,
            moment: PINMileStoneEventMoment.COMPLETE,
            mstid: PINMilestoneEventId.LOANEXPLORE,
            type: PINMilestoneEventType.ONBOARDING
        })
    }
}
,
controllers.onboarding.LoanSelector.prototype._eRowSelected = function _eRowSelected(e, t, i) {
    this._selectedItem = this._items[i.rowIndex] || null,
    this.getView().getContinueButton().setInteractionState(!!this._selectedItem)
}
,
controllers.onboarding.LoanSelector.prototype._eContinueButtonTapped = function _eContinueButtonTapped() {
    TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.BUTTON_PRESS, "Loaner Selected"),
    this._grantLoan()
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTOnboardingSummaryView = function(t) {
    function UTOnboardingSummaryView() {
        var e = t.call(this) || this;
        return e.loanerView = null,
        e
    }
    return __extends(UTOnboardingSummaryView, t),
    UTOnboardingSummaryView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._btnContinue.init(),
        this._btnContinue.setText(e.localize("onboarding.complete.start")),
        this._btnContinueMobile.init(),
        this._btnContinueMobile.setText(e.localize("onboarding.complete.start")),
        this.__title.textContent = e.localize("onboarding.complete.title"),
        this.__info.textContent = e.localize("onboarding.complete.body"),
        this.__nationTitle.textContent = e.localize("onboarding.complete.teamtitle"),
        this.__loanTitle.textContent = e.localize("onboarding.complete.loantitle"),
        this.__kitsTitle.textContent = e.localize("onboarding.complete.kitstitle"),
        this.__badgeTitle.textContent = e.localize("onboarding.complete.badgetitle")
    }
    ,
    UTOnboardingSummaryView.prototype.dealloc = function() {
        this.loanerView && (this.loanerView.dealloc(),
        this.loanerView = null),
        t.prototype.dealloc.call(this)
    }
    ,
    UTOnboardingSummaryView.prototype.setNation = function(e) {
        this._nationImg.setResource(AssetLocationUtils.getFlagImageUri(e)),
        this.__nationValue.textContent = UTLocalizationUtil.nationIdToName(e, services.Localization)
    }
    ,
    UTOnboardingSummaryView.prototype.setLoaner = function(e) {
        this.loanerView && this.loanerView.dealloc(),
        this.loanerView = factories.ItemView.createSmallItem(e),
        this.loanerView.init(),
        this.loanerView.render(e),
        this.__loanerContainer.appendChild(this.loanerView.getRootElement()),
        this.__loanValue.textContent = e.getStaticData().name
    }
    ,
    UTOnboardingSummaryView.prototype.setKits = function(e, t) {
        var i = e.getStaticData()
          , o = t.getStaticData()
          , n = i instanceof UTStaticKitItemDataDTO ? i.kitType : KitType.HOME
          , r = o instanceof UTStaticKitItemDataDTO ? o.kitType : KitType.HOME
          , s = services.Localization;
        this._kitHomeImg.setResource(AssetLocationUtils.getKitImageUri(n, e.teamId, i.assetYear)),
        this._kitAwayImg.setResource(AssetLocationUtils.getKitImageUri(r, t.teamId, o.assetYear)),
        this.__kitsValue.textContent = UTLocalizationUtil.teamIdToAbbr15(e.teamId, s) + ", " + UTLocalizationUtil.teamIdToAbbr15(t.teamId, s)
    }
    ,
    UTOnboardingSummaryView.prototype.setBadge = function(e) {
        var t = AssetLocationUtils.getBadgeImageUri(e.teamId, enums.UIThemeVariation.DARK);
        this._badgeImg.setResource(t),
        this.__badgeValue.textContent = UTLocalizationUtil.teamIdToAbbr15(e.teamId, services.Localization)
    }
    ,
    UTOnboardingSummaryView.prototype.getContinueButton = function() {
        return this._btnContinue
    }
    ,
    UTOnboardingSummaryView.prototype.getContinueButtonMobile = function() {
        return this._btnContinueMobile
    }
    ,
    UTOnboardingSummaryView
}(UTView);
UTOnboardingSummaryView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-onboarding-summary-view");
        var t = document.createElement("div");
        t.classList.add("ut-onboarding-summary-view--body"),
        this.__summary = document.createElement("div"),
        this.__summary.classList.add("ut-onboarding-summary-view--details");
        var i = document.createElement("div");
        i.classList.add("nation"),
        i.classList.add("summary-detail");
        var o = document.createElement("div");
        o.classList.add("asset-container"),
        this._nationImg = new UTImageView,
        o.appendChild(this._nationImg.getRootElement()),
        i.appendChild(o),
        this.__nationTitle = document.createElement("h1"),
        i.appendChild(this.__nationTitle),
        this.__nationValue = document.createElement("span"),
        i.appendChild(this.__nationValue),
        this.__summary.appendChild(i);
        var n = document.createElement("div");
        n.classList.add("loan"),
        n.classList.add("summary-detail"),
        this.__loanerContainer = document.createElement("div"),
        this.__loanerContainer.classList.add("asset-container"),
        n.appendChild(this.__loanerContainer),
        this.__loanTitle = document.createElement("h1"),
        n.appendChild(this.__loanTitle),
        this.__loanValue = document.createElement("span"),
        n.appendChild(this.__loanValue),
        this.__summary.appendChild(n);
        var r = document.createElement("div");
        r.classList.add("kits"),
        r.classList.add("summary-detail");
        var s = document.createElement("div");
        s.classList.add("asset-container"),
        this._kitHomeImg = new UTImageView,
        s.appendChild(this._kitHomeImg.getRootElement()),
        this._kitAwayImg = new UTImageView,
        s.appendChild(this._kitAwayImg.getRootElement()),
        r.appendChild(s),
        this.__kitsTitle = document.createElement("h1"),
        r.appendChild(this.__kitsTitle),
        this.__kitsValue = document.createElement("span"),
        r.appendChild(this.__kitsValue),
        this.__summary.appendChild(r);
        var a = document.createElement("div");
        a.classList.add("badge"),
        a.classList.add("summary-detail");
        var l = document.createElement("div");
        l.classList.add("asset-container"),
        this._badgeImg = new UTImageView,
        l.appendChild(this._badgeImg.getRootElement()),
        a.appendChild(l),
        this.__badgeTitle = document.createElement("h1"),
        a.appendChild(this.__badgeTitle),
        this.__badgeValue = document.createElement("span"),
        a.appendChild(this.__badgeValue),
        this.__summary.appendChild(a),
        t.appendChild(this.__summary),
        this.__choiceInfo = document.createElement("div"),
        this.__choiceInfo.classList.add("ut-onboarding-summary-view--info"),
        this.__title = document.createElement("h2"),
        this.__title.classList.add("ut-onboarding-info--title"),
        this.__choiceInfo.appendChild(this.__title),
        this._btnContinue = new UTStandardButtonControl,
        this._btnContinue.getRootElement().classList.add("ut-onboarding-info--cta"),
        this._btnContinue.getRootElement().classList.add("call-to-action"),
        this.__choiceInfo.appendChild(this._btnContinue.getRootElement()),
        this.__info = document.createElement("p"),
        this.__info.classList.add("ut-onboarding-info--description"),
        this.__choiceInfo.appendChild(this.__info),
        t.appendChild(this.__choiceInfo);
        var c = document.createElement("div");
        c.classList.add("ut-button-container"),
        this._btnContinueMobile = new UTStandardButtonControl,
        this._btnContinueMobile.getRootElement().classList.add("call-to-action"),
        c.appendChild(this._btnContinueMobile.getRootElement()),
        t.appendChild(c),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTOnboardingSummaryView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__summary = null,
    this._nationImg.destroy(),
    this.__nationTitle = null,
    this.__nationValue = null,
    this.__loanerContainer = null,
    this.__loanTitle = null,
    this.__loanValue = null,
    this._kitHomeImg.destroy(),
    this._kitAwayImg.destroy(),
    this.__kitsTitle = null,
    this.__kitsValue = null,
    this._badgeImg.destroy(),
    this.__badgeTitle = null,
    this.__badgeValue = null,
    this.__choiceInfo = null,
    this.__title = null,
    this._btnContinue.destroy(),
    this.__info = null,
    this._btnContinueMobile.destroy()
}
,
UTOnboardingSummaryView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
NamespaceManager.Register("controllers.onboarding"),
controllers.onboarding.OnboardingSummary = function OnboardingSummaryViewController() {
    UTViewController.call(this)
}
,
JSUtils.inherits(controllers.onboarding.OnboardingSummary, UTViewController),
controllers.onboarding.OnboardingSummary.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass();
        var e = this.getView();
        e.getContinueButton().addTarget(this, this._eContinue, EventType.TAP),
        e.getContinueButtonMobile().addTarget(this, this._eContinue, EventType.TAP),
        TelemetryManager.trackPage(TelemetryManager.Sections.ONBOARDING, "Onboarding - Summary"),
        services.PIN.sendData(PINEventType.MILESTONE, {
            mode: PIN_MILESTONE_EVT_MODE,
            moment: PINMileStoneEventMoment.COMPLETE,
            mstid: PINMilestoneEventId.SUMMARY,
            type: PINMilestoneEventType.ONBOARDING
        })
    }
}
,
controllers.onboarding.OnboardingSummary.prototype.initWithViewmodel = function initWithViewmodel(e) {
    this.initialized || (DebugUtils.Assert(e instanceof UTOnboardingStateViewModel, "Expected a UTOnboardingStateViewModel viewmodel."),
    this._viewmodel = e,
    this.init())
}
,
controllers.onboarding.OnboardingSummary.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTOnboardingSummaryView
}
,
controllers.onboarding.OnboardingSummary.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var e = this.getNavigationController();
    e && e.conforms(controllers.navigation.Onboarding) && (isPhone() ? (e.setNavigationTitle(services.Localization.localize("onboarding.complete.title")),
    e.showStepChain(!0)) : (e.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
    e.setToolbarVisibility(!0),
    e.showStepChain(!1)),
    e.setCurrentStep(enums.UIOnboardingStep.SUMMARY)),
    this._loadItems()
}
,
controllers.onboarding.OnboardingSummary.prototype._loadItems = function _loadItems() {
    var n = this.getView();
    var e = this.getNavigationController();
    if (e && e.conforms(controllers.navigation.Onboarding)) {
        var t = e.getOnboardingState()
          , i = []
          , o = 0;
        if (n.setNation(FUTDataUtils.mapOnboardingCountryIdToNationId(t.getCountryId())),
        t.hasLoaner() && (o = t.getLoanerDefId()),
        t.hasHomeKit() && i.push(t.getHomeKitId()),
        t.hasAwayKit() && i.push(t.getAwayKitId()),
        t.hasBadge() && i.push(t.getBadgeId()),
        DebugUtils.Assert(0 < i.length, "Expected valid items."),
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Item.requestItemsById(i).observe(this, function _onGetClubItemsComplete(e, t) {
            if (e.unobserve(this),
            t.success) {
                var i = null
                  , o = null;
                t.response.items.forEach(function(e) {
                    e.isActiveHomeKit() ? i = e : e.isActiveAwayKit() ? o = e : e.isBadge() ? n.setBadge(e) : DebugUtils.Assert(!1, "Expected a valid onboarding selection item.")
                }, this),
                i && o && n.setKits(i, o)
            } else
                console.log("failed to load club items");
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }),
        0 < o) {
            gClickShield.showShield(EAClickShieldView.Shield.LOADING);
            var r = new UTSearchCriteriaDTO;
            r.type = SearchType.PLAYER,
            r.defId = [o],
            services.Club.search(r).observe(this, function _onGetLoanerComplete(e, t) {
                e.unobserve(this),
                t.success && JSUtils.isObject(t.response) ? n.setLoaner(t.response.items[0]) : console.log("failed to load loaner item"),
                gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
            })
        }
    }
}
,
controllers.onboarding.OnboardingSummary.prototype._eContinue = function _eContinue() {
    getAppMain().getLoginController().login(!0)
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTCustomSelectionTileView = function(e) {
    function UTCustomSelectionTileView() {
        return e.call(this) || this
    }
    return __extends(UTCustomSelectionTileView, e),
    UTCustomSelectionTileView.prototype.init = function() {
        this.setInteractionState(!0)
    }
    ,
    UTCustomSelectionTileView.prototype.setText = function(e) {
        this.__title.textContent = e
    }
    ,
    UTCustomSelectionTileView.prototype.getImageSource = function() {
        var e;
        return null !== (e = this._imgLoader.getRootElement().getAttribute("src")) && void 0 !== e ? e : ""
    }
    ,
    UTCustomSelectionTileView.prototype.setImagePath = function(e, i) {
        var o = this;
        this._imgLoader.setResource(e, !0).observe(this, function(e, t) {
            e.unobserve(o),
            t || o._imgLoader.setResource(i)
        })
    }
    ,
    UTCustomSelectionTileView.prototype.toggleTallState = function(e) {
        this.toggleClass("tall", e)
    }
    ,
    UTCustomSelectionTileView.prototype.setSelected = function(e) {
        this.toggleClass(enums.UIState.SELECTED, e)
    }
    ,
    UTCustomSelectionTileView
}(UTButtonControl);
UTCustomSelectionTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-custom-selection-tile-view");
        var t = document.createElement("div");
        t.classList.add("content-container"),
        this._imgLoader = new UTImageView,
        t.appendChild(this._imgLoader.getRootElement()),
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTCustomSelectionTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._imgLoader.destroy(),
    this.__title = null
}
,
UTCustomSelectionTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTOnboardingSelectView = function(t) {
    function UTOnboardingSelectView() {
        var e = t.call(this) || this;
        return e.currentTile = null,
        e.ids = [],
        e.selectionTiles = [],
        e.type = enums.UIOnboardingSelectionType.BADGE,
        e
    }
    return __extends(UTOnboardingSelectView, t),
    UTOnboardingSelectView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._continueBtn.init(),
        this._continueBtn.setInteractionState(!1),
        this._continueBtn.setText(e.localize("common.dialog.continue")),
        this._continueBtnMobile.init(),
        this._continueBtnMobile.setInteractionState(!1),
        this._continueBtnMobile.setText(e.localize("common.dialog.continue"))
    }
    ,
    UTOnboardingSelectView.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.clearTiles(),
        this.ids = []
    }
    ,
    UTOnboardingSelectView.prototype.clearTiles = function() {
        this.selectionTiles.forEach(function(e) {
            e.dealloc()
        }),
        this.selectionTiles = [],
        this.currentTile = null
    }
    ,
    UTOnboardingSelectView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTOnboardingSelectView.prototype.setDescription = function(e) {
        this.__info.textContent = e
    }
    ,
    UTOnboardingSelectView.prototype.setType = function(e) {
        this.type = e,
        this.removeClass(enums.UIOnboardingSelectionType.BADGE),
        this.removeClass(enums.UIOnboardingSelectionType.HOME_KIT),
        this.removeClass(enums.UIOnboardingSelectionType.AWAY_KIT),
        this.removeClass(enums.UIOnboardingSelectionType.NATION),
        this.addClass(this.type)
    }
    ,
    UTOnboardingSelectView.prototype.generateTile = function(e) {
        var t = ""
          , i = ""
          , o = new UTCustomSelectionTileView;
        switch (e.assetType) {
        case AssetLocationUtils.IMAGE_TYPE_BADGE:
            t = AssetLocationUtils.getBadgeImageUri(e.id, enums.UIThemeVariation.DARK),
            i = AssetLocationUtils.getBadgeImageUri(UTItemEntity.DEFAULT_ASSET_ID, enums.UIThemeVariation.DARK);
            break;
        case AssetLocationUtils.IMAGE_TYPE_FLAG:
            t = AssetLocationUtils.getFlagImageUri(e.id),
            i = AssetLocationUtils.getFlagImageUri(UTItemEntity.DEFAULT_ASSET_ID);
            break;
        case AssetLocationUtils.IMAGE_TYPE_KIT_AWAY:
            t = AssetLocationUtils.getKitImageUri(KitType.AWAY, e.id),
            i = AssetLocationUtils.getKitImageUri(KitType.AWAY, UTItemEntity.DEFAULT_ASSET_ID);
            break;
        case AssetLocationUtils.IMAGE_TYPE_KIT_HOME:
            t = AssetLocationUtils.getKitImageUri(KitType.HOME, e.id),
            i = AssetLocationUtils.getKitImageUri(KitType.HOME, UTItemEntity.DEFAULT_ASSET_ID);
            break;
        case AssetLocationUtils.IMAGE_TYPE_KIT_THIRD:
            t = AssetLocationUtils.getKitImageUri(KitType.THIRD, e.id),
            i = AssetLocationUtils.getKitImageUri(KitType.THIRD, UTItemEntity.DEFAULT_ASSET_ID)
        }
        o.init(),
        o.toggleTallState(this.type !== enums.UIOnboardingSelectionType.NATION),
        o.setText(e.name),
        o.setImagePath(t, i),
        o.addTarget(this, this.eTileSelected, EventType.TAP),
        this.addSubview(o, this.__selectGrid),
        this.selectionTiles.push(o)
    }
    ,
    UTOnboardingSelectView.prototype.setData = function(e) {
        var t = this;
        this.clearTiles(),
        this.ids = [],
        e.forEach(function(e) {
            t.ids.push(e.id),
            t.generateTile(e)
        }),
        this.layoutSubviews()
    }
    ,
    UTOnboardingSelectView.prototype.selectTile = function(e) {
        var t = this.selectionTiles[e];
        this.currentTile && this.currentTile.setSelected(!1),
        this.currentTile = t || null,
        this.currentTile && this.currentTile.setSelected(!0)
    }
    ,
    UTOnboardingSelectView.prototype.getContinueButton = function() {
        return this._continueBtn
    }
    ,
    UTOnboardingSelectView.prototype.getContinueButtonMobile = function() {
        return this._continueBtnMobile
    }
    ,
    UTOnboardingSelectView.prototype.getSelectedId = function() {
        return this.currentTile && 0 < this.selectionTiles.length ? this.ids[this.selectionTiles.indexOf(this.currentTile)] : -1
    }
    ,
    UTOnboardingSelectView.prototype.getSelectedIndex = function() {
        return this.currentTile ? this.selectionTiles.indexOf(this.currentTile) : -1
    }
    ,
    UTOnboardingSelectView.prototype.setFirstImageLocalPath = function(e) {
        this._selectedImage.setLocalResource(e)
    }
    ,
    UTOnboardingSelectView.prototype.setSecondImageLocalPath = function(e) {
        this._otherSelectedImage.setLocalResource(e)
    }
    ,
    UTOnboardingSelectView.prototype.setBackground = function(e) {
        var t = this;
        this.ids.forEach(function(e) {
            return t.removeClass("ui-selected-" + e)
        }),
        this.addClass("ui-selected-" + e)
    }
    ,
    UTOnboardingSelectView.prototype.eTileSelected = function(e, t, i) {
        if (e !== this.currentTile) {
            var o = this.selectionTiles.indexOf(e);
            this.selectTile(o),
            this.type === enums.UIOnboardingSelectionType.NATION && this.setBackground(this.ids[o]);
            var n = e.getImageSource();
            this.type === enums.UIOnboardingSelectionType.AWAY_KIT ? this._otherSelectedImage.setLocalResource(n) : this._selectedImage.setLocalResource(n),
            this._continueBtn.setInteractionState(!0),
            this._continueBtnMobile.setInteractionState(!0)
        }
    }
    ,
    UTOnboardingSelectView
}(UTView);
UTOnboardingSelectView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-onboarding-select-view");
        var t = document.createElement("div");
        t.classList.add("ut-onboarding-select-view--body"),
        this.__selectGrid = document.createElement("div"),
        this.__selectGrid.classList.add("ut-onboarding-select-view--grid"),
        t.appendChild(this.__selectGrid),
        this.__choiceInfo = document.createElement("div"),
        this.__choiceInfo.classList.add("ut-onboarding-select-view--info");
        var i = document.createElement("div");
        i.classList.add("ut-onboarding-info-content"),
        this.__title = document.createElement("h2"),
        this.__title.classList.add("ut-onboarding-info--title"),
        i.appendChild(this.__title),
        this._continueBtn = new UTStandardButtonControl,
        this._continueBtn.getRootElement().classList.add("ut-onboarding-info--cta"),
        this._continueBtn.getRootElement().classList.add("call-to-action"),
        i.appendChild(this._continueBtn.getRootElement()),
        this.__info = document.createElement("p"),
        this.__info.classList.add("ut-onboarding-info--description"),
        i.appendChild(this.__info);
        var o = document.createElement("div");
        o.classList.add("selected-images"),
        this._selectedImage = new UTImageView,
        this._selectedImage.getRootElement().classList.add("selected-image-a"),
        o.appendChild(this._selectedImage.getRootElement()),
        this._otherSelectedImage = new UTImageView,
        this._otherSelectedImage.getRootElement().classList.add("selected-image-b"),
        o.appendChild(this._otherSelectedImage.getRootElement()),
        i.appendChild(o),
        this.__choiceInfo.appendChild(i),
        t.appendChild(this.__choiceInfo);
        var n = document.createElement("div");
        n.classList.add("ut-button-container"),
        this._continueBtnMobile = new UTStandardButtonControl,
        this._continueBtnMobile.getRootElement().classList.add("call-to-action"),
        n.appendChild(this._continueBtnMobile.getRootElement()),
        t.appendChild(n),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTOnboardingSelectView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__selectGrid = null,
    this.__choiceInfo = null,
    this.__title = null,
    this._continueBtn.destroy(),
    this.__info = null,
    this._selectedImage.destroy(),
    this._otherSelectedImage.destroy(),
    this._continueBtnMobile.destroy()
}
,
UTOnboardingSelectView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
NamespaceManager.Register("controllers.onboarding"),
controllers.onboarding.BadgeSelect = function BadgeSelectOnboardingViewController() {
    UTViewController.call(this),
    this._badges = []
}
,
JSUtils.inherits(controllers.onboarding.BadgeSelect, UTViewController),
controllers.onboarding.BadgeSelect.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass();
        var e = this.getView();
        e.setType(enums.UIOnboardingSelectionType.BADGE),
        e.setTitle(services.Localization.localize("onboarding.badge.title")),
        e.setDescription(services.Localization.localize("onboarding.badge.body")),
        e.setFirstImageLocalPath("images/badge.png"),
        e.getContinueButton().addTarget(this, this._eContinue, EventType.TAP),
        e.getContinueButtonMobile().addTarget(this, this._eContinue, EventType.TAP);
        var t = "Onboarding - Badge";
        services.PIN.sendData(PINEventType.PAGE_VIEW, {
            type: PIN_PAGEVIEW_EVT_TYPE,
            pgid: t
        }),
        TelemetryManager.trackPage(TelemetryManager.Sections.ONBOARDING, t)
    }
}
,
controllers.onboarding.BadgeSelect.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._badges = []
}
,
controllers.onboarding.BadgeSelect.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTOnboardingSelectView
}
,
controllers.onboarding.BadgeSelect.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("onboarding.badge.title")
}
,
controllers.onboarding.BadgeSelect.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    0 === this._badges.length && this._getBadges();
    var e = this.getNavigationController();
    e && e.conforms(controllers.navigation.Onboarding) && (this.getNavigationController().addNavBarClass("onboarding-select"),
    isPhone() || (e.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
    e.setToolbarVisibility(!0)),
    e.setCurrentStep(enums.UIOnboardingStep.BADGE))
}
,
controllers.onboarding.BadgeSelect.prototype._mapBadgesToData = function _mapBadgesToData(e) {
    return e.map(function(e) {
        return {
            id: e.teamId,
            name: UTLocalizationUtil.teamIdToAbbr15(e.teamId, services.Localization),
            assetType: AssetLocationUtils.IMAGE_TYPE_BADGE
        }
    })
}
,
controllers.onboarding.BadgeSelect.prototype._getBadges = function _getBadges() {
    services.Onboarding.getBadges().observe(this, function _onGetBadgesComplete(e, t) {
        e.unobserve(this),
        t.success ? (this._badges = t.data.badges,
        this.getView().setData(this._mapBadgesToData(this._badges))) : (NetworkErrorManager.handleStatus(UtasErrorCode.UNRECOVERABLE),
        TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to retrieve badges"))
    })
}
,
controllers.onboarding.BadgeSelect.prototype._selectBadge = function _selectBadge() {
    var s = this._badges[this.getView().getSelectedIndex()];
    DebugUtils.Assert(JSUtils.isValid(s), "Expected badge reference to point to item entity."),
    s && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Onboarding.selectBadge(s).observe(this, function _onSelectBadgeComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            services.PIN.sendData(PINEventType.MILESTONE, {
                mode: PIN_MILESTONE_EVT_MODE,
                moment: PINMileStoneEventMoment.COMPLETE,
                mstid: PINMilestoneEventId.BADGE,
                type: PINMilestoneEventType.ONBOARDING
            });
            var i = this.getNavigationController();
            if (i) {
                i.conforms(controllers.navigation.Onboarding) && i.getOnboardingState().setBadgeId(t.data.badgeId);
                var o = services.User.getUser().getSelectedPersona()
                  , n = o ? o.getCurrentClub() : null;
                n && n.setAssetId(s.getStaticData().assetId);
                var r = new controllers.onboarding.OnboardingSummary;
                r.init(),
                i.pushViewController(r, !0)
            }
        } else
            services.Notification.queue([services.Localization.localize("onboarding.error.badgeselectfailure"), UINotificationType.NEGATIVE]),
            TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to select badge");
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }))
}
,
controllers.onboarding.BadgeSelect.prototype._eContinue = function _eContinue() {
    this._selectBadge()
}
,
NamespaceManager.Register("controllers.onboarding"),
controllers.onboarding.KitSelect = function KitSelectOnboardingViewController() {
    UTViewController.call(this),
    this._homeKits = [],
    this._awayKits = [],
    this._selectedHomeKit = null,
    this._selectedAwayKit = null
}
,
JSUtils.inherits(controllers.onboarding.KitSelect, UTViewController),
controllers.onboarding.KitSelect.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass();
        var e = this.getView();
        e.setType(enums.UIOnboardingSelectionType.HOME_KIT),
        e.setTitle(services.Localization.localize("onboarding.kits.titlehome")),
        e.setDescription(services.Localization.localize("onboarding.kits.bodyhome")),
        e.setFirstImageLocalPath("images/onboarding/kit.png"),
        e.setSecondImageLocalPath("images/onboarding/kit.png"),
        e.getContinueButton().addTarget(this, this._eContinue, EventType.TAP),
        e.getContinueButtonMobile().addTarget(this, this._eContinue, EventType.TAP);
        var t = "Onboarding - Kits";
        services.PIN.sendData(PINEventType.PAGE_VIEW, {
            type: PIN_PAGEVIEW_EVT_TYPE,
            pgid: t
        }),
        TelemetryManager.trackPage(TelemetryManager.Sections.ONBOARDING, t)
    }
}
,
controllers.onboarding.KitSelect.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._homeKits = [],
    this._awayKits = [],
    this._selectedAwayKit = null,
    this._selectedHomeKit = null
}
,
controllers.onboarding.KitSelect.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTOnboardingSelectView
}
,
controllers.onboarding.KitSelect.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("onboarding.kits.titlehome")
}
,
controllers.onboarding.KitSelect.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    0 !== this._homeKits.length && 0 !== this._awayKits.length || this._getKits();
    var e = this.getNavigationController();
    e && e.conforms(controllers.navigation.Onboarding) && (this.getNavigationController().addNavBarClass("onboarding-select"),
    isPhone() || (e.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
    e.setToolbarVisibility(!0)),
    e.setCurrentStep(enums.UIOnboardingStep.KITS))
}
,
controllers.onboarding.KitSelect.prototype._mapKitsToData = function _mapKitsToData(e) {
    return e.map(function(e) {
        return {
            id: e.teamId,
            name: UTLocalizationUtil.teamIdToAbbr15(e.teamId, services.Localization),
            assetType: e.getStaticData().assetType
        }
    })
}
,
controllers.onboarding.KitSelect.prototype._getKits = function _getKits() {
    services.Onboarding.getKits().observe(this, function _onGetKitsComplete(e, t) {
        e.unobserve(this),
        t.success ? (this._homeKits = t.data.homeKits,
        this._awayKits = t.data.awayKits,
        this.getView().setData(this._mapKitsToData(this._homeKits))) : (NetworkErrorManager.handleStatus(UtasErrorCode.UNRECOVERABLE),
        TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to retrieve kits"))
    })
}
,
controllers.onboarding.KitSelect.prototype._selectHomeKit = function _selectHomeKit() {
    var e = this.getView();
    this._selectedHomeKit = this._homeKits[e.getSelectedIndex()],
    e.getContinueButton().setInteractionState(!1),
    e.getContinueButtonMobile().setInteractionState(!1),
    services.PIN.sendData(PINEventType.MILESTONE, {
        mode: PIN_MILESTONE_EVT_MODE,
        moment: PINMileStoneEventMoment.COMPLETE,
        mstid: PINMilestoneEventId.HOMEKIT,
        type: PINMilestoneEventType.ONBOARDING
    }),
    e.setType(enums.UIOnboardingSelectionType.AWAY_KIT),
    e.setData(this._mapKitsToData(this._awayKits)),
    e.setTitle(services.Localization.localize("onboarding.kits.titleaway")),
    e.setDescription(services.Localization.localize("onboarding.kits.bodyaway"));
    var t = this.getNavigationController();
    t && t.setNavigationTitle(services.Localization.localize("onboarding.kits.titleaway"))
}
,
controllers.onboarding.KitSelect.prototype._selectAwayKit = function _selectAwayKit() {
    this._selectedAwayKit = this._awayKits[this.getView().getSelectedIndex()],
    DebugUtils.Assert(JSUtils.isValid(this._selectedHomeKit) && JSUtils.isValid(this._selectedAwayKit), "Expected both home and away kit references to point to item entities."),
    this._selectedHomeKit && this._selectedAwayKit && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Onboarding.selectKits(this._selectedHomeKit, this._selectedAwayKit).observe(this, function _onSelectKitsComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            services.PIN.sendData(PINEventType.MILESTONE, {
                mode: PIN_MILESTONE_EVT_MODE,
                moment: PINMileStoneEventMoment.COMPLETE,
                mstid: PINMilestoneEventId.AWAYKIT,
                type: PINMilestoneEventType.ONBOARDING
            });
            var i = this.getNavigationController();
            if (i) {
                if (i.conforms(controllers.navigation.Onboarding)) {
                    var o = i.getOnboardingState();
                    o.setHomeKitId(t.data.homeKitId),
                    o.setAwayKitId(t.data.awayKitId)
                }
                var n = new controllers.onboarding.BadgeSelect;
                n.init(),
                i.pushViewController(n, !0)
            }
        } else
            services.Notification.queue([services.Localization.localize("onboarding.error.kitselectfailure"), UINotificationType.NEGATIVE]),
            TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to select kits");
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }))
}
,
controllers.onboarding.KitSelect.prototype._eContinue = function _eContinue() {
    this._selectedHomeKit ? this._selectAwayKit() : this._selectHomeKit()
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSlotSelectPanelView = function(e) {
    function UTSlotSelectPanelView() {
        return e.call(this) || this
    }
    return __extends(UTSlotSelectPanelView, e),
    UTSlotSelectPanelView.prototype.init = function() {
        e.prototype.init.call(this),
        this._btnSlotSelect.init(),
        this._btnSlotSelect.setInteractionState(!1),
        this._btnSlotSelect.setText(services.Localization.localize("common.dialog.continue"))
    }
    ,
    UTSlotSelectPanelView.prototype.getSlotSelectButton = function() {
        return this._btnSlotSelect
    }
    ,
    UTSlotSelectPanelView.prototype.setSlotSelectButtonState = function(e, t) {
        this._btnSlotSelect.setText(e),
        this._btnSlotSelect.setInteractionState(t)
    }
    ,
    UTSlotSelectPanelView.prototype.renderSwapDescription = function() {
        this.__descTitle.textContent = services.Localization.localize("onboarding.swapdescription.title"),
        this.__descBody1.textContent = services.Localization.localize("onboarding.swapdescription.body1"),
        this.__descBody2.textContent = services.Localization.localize("onboarding.swapdescription.body2"),
        DOMKit.toggleDisplayStyle(this.__descBody2, !0),
        DOMKit.toggleClass(this.__root, "swap-description", !0)
    }
    ,
    UTSlotSelectPanelView.prototype.renderLoanDescription = function() {
        this.__descTitle.textContent = services.Localization.localize("onboarding.loandescription.title"),
        this.__descBody1.textContent = services.Localization.localize("onboarding.loandescription.body"),
        DOMKit.toggleDisplayStyle(this.__descBody2, !1),
        DOMKit.toggleClass(this.__root, "swap-description", !1)
    }
    ,
    UTSlotSelectPanelView
}(UTView);
UTSlotSelectPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-item-detail-view-panel"),
        this._btnSlotSelect = new UTStandardButtonControl,
        this._btnSlotSelect.getRootElement().classList.add("call-to-action"),
        e.appendChild(this._btnSlotSelect.getRootElement()),
        this.__description = document.createElement("div"),
        this.__description.classList.add("slotSelectDescription"),
        this.__descTitle = document.createElement("h2"),
        this.__description.appendChild(this.__descTitle),
        this.__descBody1 = document.createElement("p"),
        this.__description.appendChild(this.__descBody1),
        this.__descBody2 = document.createElement("p"),
        this.__description.appendChild(this.__descBody2),
        e.appendChild(this.__description),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSlotSelectPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._btnSlotSelect.destroy(),
    this.__description = null,
    this.__descTitle = null,
    this.__descBody1 = null,
    this.__descBody2 = null
}
,
UTSlotSelectPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
NamespaceManager.Register("controllers.onboarding"),
controllers.onboarding.StarterSquadSlotSelection = function StarterSquadSlotSelectionViewController() {
    UTViewController.call(this),
    this._squad = null,
    this._panelView = null,
    this._itemIterator = null,
    this._squadViewDelegate = null,
    this._slotIterationDelegate = null,
    this._slotSelected = !1
}
,
JSUtils.inherits(controllers.onboarding.StarterSquadSlotSelection, UTViewController),
controllers.onboarding.StarterSquadSlotSelection.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass(),
        this._panelView = new UTSlotSelectPanelView,
        this._panelView.init(),
        this._panelView.getSlotSelectButton().addTarget(this, this._eSlotSelected, EventType.TAP),
        this._panelView.renderSwapDescription();
        var e = this.getView();
        e.appendPanel(this._panelView),
        e.addClass("onboarding-detail-view"),
        this._itemIterator && e.addTarget(this, this._eIndexChange, UTItemDetailsView.Event.INDEX_CHANGE)
    }
}
,
controllers.onboarding.StarterSquadSlotSelection.prototype.initWithSquad = function initWithSquad(e, t) {
    if (!this.initialized) {
        DebugUtils.Assert(e instanceof UTSquadEntity, "Initialization expected a squad entity"),
        DebugUtils.Assert(JSUtils.isNumber(t), "Initialization expected a numeric slot index");
        var i = (this._squad = e).getPlayers();
        this._itemIterator = new EAIterator(i.slice(0, i.length - 2)),
        this._squad.onDataUpdated.observe(this, this._eSquadUpdated),
        this.init()
    }
}
,
controllers.onboarding.StarterSquadSlotSelection.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._panelView && this._panelView.dealloc(),
    this._squad && this._squad.onDataUpdated.unobserve(this),
    this._panelView = null,
    this._squad = null,
    this._itemIterator = null,
    this._squadViewDelegate = null,
    this._slotIterationDelegate = null
}
,
controllers.onboarding.StarterSquadSlotSelection.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTItemDetailsView
}
,
controllers.onboarding.StarterSquadSlotSelection.prototype._getSlotName = function _getSlotName(e) {
    var t = e.getIndex();
    return 0 <= t && t < UTSquadEntity.FIELD_PLAYERS ? UTLocalizationUtil.positionIdToName(e.getGeneralPosition(), services.Localization) : 0 <= t && t < UTSquadEntity.FIELD_PLAYERS + UTSquadEntity.SUB_PLAYERS ? services.Localization.localize("dock.label.substitutes") : 0 <= t && t < UTSquadEntity.MANAGER_SLOT_INDEX ? services.Localization.localize("dock.label.reserves") : BLANK_STR
}
,
controllers.onboarding.StarterSquadSlotSelection.prototype._renderView = function _renderView() {
    this._slotSelected ? this.getView().render(this._itemIterator.values().map(function(e) {
        return e.getItem()
    }, this), this._itemIterator.getIndex()) : this.getView().render(JSUtils.valToArray(this._squad.getSlot(-1).getItem()), 0)
}
,
controllers.onboarding.StarterSquadSlotSelection.prototype.setSlot = function setSlot(t) {
    DebugUtils.Assert(this._itemIterator instanceof EAIterator, "Attempted to update iterator index when iterator doesn't exist."),
    this._itemIterator && this._itemIterator.current().getIndex() !== t && (this._slotSelected = !0,
    this._itemIterator.setIndex(this._itemIterator.indexOf(function(e) {
        return e.getIndex() === t
    })),
    this._renderView(),
    this._panelView.setSlotSelectButtonState(services.Localization.localize("swap.withposition", [this._getSlotName(this._itemIterator.current())]), !0))
}
,
controllers.onboarding.StarterSquadSlotSelection.prototype.setSquadViewDelegate = function setSquadViewDelegate(e) {
    e.conforms(interfaces.SquadViewDelegate) && (this._squadViewDelegate = e)
}
,
controllers.onboarding.StarterSquadSlotSelection.prototype.setSlotIterationDelegate = function setSlotIterationDelegate(e) {
    e.conforms(interfaces.SlotIterationDelegate) && (this._slotIterationDelegate = e)
}
,
controllers.onboarding.StarterSquadSlotSelection.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this.getNavigationController().setNavigationVisibility(!1, !1),
    this._renderView()
}
,
controllers.onboarding.StarterSquadSlotSelection.prototype._loadLoanPlayers = function _loadLoanPlayers() {
    var n = this.getView()
      , r = this._panelView
      , s = this._itemIterator.current();
    n.setInteractionState(!1),
    r.setInteractionState(!1),
    gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Onboarding.getLoanPlayers().observe(this, function _gotoLoanSelector(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = new controllers.onboarding.LoanSelector
              , o = new UTOnboardingLoanPlayerSelectionViewModel;
            o.setItems(t.data.items),
            i.initWithItems(o.getLoanerSample(5, o.getPositionFromSlot(s)), s.getItem()),
            this._squad && i.setSquad(this._squad),
            this._squadViewDelegate && i.setSquadViewDelegate(this._squadViewDelegate),
            this.getNavigationController().pushViewController(i)
        } else
            n.setInteractionState(!0),
            r.setInteractionState(!0),
            TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to retrieve loaner list");
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    })
}
,
controllers.onboarding.StarterSquadSlotSelection.prototype._eIndexChange = function _eIndexChange(e, t, i) {
    this._slotIterationDelegate && this._slotIterationDelegate.setSlot(this, i.index)
}
,
controllers.onboarding.StarterSquadSlotSelection.prototype._eSlotSelected = function _eSlotSelected() {
    this._loadLoanPlayers()
}
,
controllers.onboarding.StarterSquadSlotSelection.prototype._eContinue = function _eContinue() {
    var e = this.getRootNavigationController();
    if (e) {
        var t = new controllers.onboarding.KitSelect;
        t.init(),
        e.pushViewController(t, !0)
    }
}
,
controllers.onboarding.StarterSquadSlotSelection.prototype._eSquadUpdated = function _eSquadUpdated() {
    this.getView().toggleCarouselSwiping(!1);
    var e = this._panelView.getSlotSelectButton();
    e.removeTarget(this, this._eSlotSelected, EventType.TAP),
    e.addTarget(this, this._eContinue, EventType.TAP),
    this._panelView.setSlotSelectButtonState(services.Localization.localize("common.dialog.continue"), !0),
    this._panelView.renderLoanDescription()
}
,
NamespaceManager.Register("controllers.navigation"),
controllers.navigation.LoanPlayerSelection = function LoanPlayerSelectionNavigationController(e, t) {
    UTNavigationController.call(this, e, t),
    this._squad = null,
    this._squadViewDelegate = null
}
,
JSUtils.inherits(controllers.navigation.LoanPlayerSelection, UTNavigationController),
controllers.navigation.LoanPlayerSelection.prototype.initWithSquad = function initWithSquad(e, t) {
    DebugUtils.Assert(e instanceof UTSquadEntity, "Initialization expected a squad entity."),
    DebugUtils.Assert(JSUtils.isNumber(t), "Initialization expected a number for current squad slot."),
    this._squad = e;
    var i = this._getRootControllerInstance();
    i.initWithSquad(this._squad, t),
    this.initWithRootController(i)
}
,
controllers.navigation.LoanPlayerSelection.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._squad = null,
    this._squadViewDelegate = null
}
,
controllers.navigation.LoanPlayerSelection.prototype._getRootControllerInstance = function _getRootControllerInstance() {
    return new controllers.onboarding.StarterSquadSlotSelection
}
,
controllers.navigation.LoanPlayerSelection.prototype.didMove = function didMove() {
    this.superclass();
    var e = this.getRootController()
      , t = this.getParentViewController();
    e && t && t.conforms(interfaces.SlotIterationDelegate) && e.setSlotIterationDelegate(t)
}
,
controllers.navigation.LoanPlayerSelection.prototype.setSlot = function setSlot(e) {
    this.popToRootViewController(),
    this.getRootController().setSlot(e)
}
,
controllers.navigation.LoanPlayerSelection.prototype.setSquadViewDelegate = function setSquadViewDelegate(e) {
    e.conforms(interfaces.SquadViewDelegate) && (this._squadViewDelegate = e,
    this.getRootController().setSquadViewDelegate(e))
}
,
NamespaceManager.Register("controllers.onboarding"),
controllers.onboarding.StarterSquadLandscape = function StarterSquadLandscapeViewController() {
    UTSplitViewController.call(this),
    this._overviewController = null,
    this._panelController = null,
    this._squad = null
}
,
JSUtils.inherits(controllers.onboarding.StarterSquadLandscape, UTSplitViewController),
controllers.onboarding.StarterSquadLandscape.prototype.init = function init() {
    this.initialized || (this.superclass(),
    this._overviewController = this._generateSquadOverview(),
    this.addChildViewController(this._overviewController),
    this._panelController = this._generateLoanSelectNavController(),
    this.addChildViewController(this._panelController),
    this._panelController.setSquadViewDelegate(this._overviewController.getView().getSquadOverview()))
}
,
controllers.onboarding.StarterSquadLandscape.prototype.initWithSquad = function initWithSquad(e) {
    this.initialized || (DebugUtils.Assert(e instanceof UTSquadEntity, "Initialization expected to receive a squad entity."),
    this._squad = e,
    this.init())
}
,
controllers.onboarding.StarterSquadLandscape.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._overviewController && this._overviewController.dealloc(),
    this._panelController && this._panelController.dealloc(),
    this._overviewController = null,
    this._panelController = null,
    this._squad = null
}
,
controllers.onboarding.StarterSquadLandscape.prototype._generateSquadOverview = function _generateSquadOverview() {
    var e = new controllers.onboarding.StarterSquadOverview;
    return this._squad ? e.initWithSquad(this._squad) : e.init(),
    e
}
,
controllers.onboarding.StarterSquadLandscape.prototype._generateLoanSelectNavController = function _generateLoanSelectNavController() {
    var e = new controllers.navigation.LoanPlayerSelection;
    return this._squad ? e.initWithSquad(this._squad, 0) : (DebugUtils.Assert(!1, "Expected to instantiate navigation controller with a squad"),
    e.init()),
    e
}
,
controllers.onboarding.StarterSquadLandscape.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("onboarding.complete.teamtitle")
}
,
controllers.onboarding.StarterSquadLandscape.prototype.getNavigationItem = function getNavigationItem() {
    return this._overviewController.getNavigationItem()
}
,
controllers.onboarding.StarterSquadLandscape.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this._setLeftController(this._overviewController),
    this._setRightController(this._panelController),
    this._overviewController.getView().toggleSlotSelect(!1)
}
,
controllers.onboarding.StarterSquadLandscape.prototype.setSlot = function setSlot(e, t) {
    e !== this._panelController && this._panelController.setSlot(t),
    e !== this._overviewController && this._overviewController.setSlot(t)
}
,
NamespaceManager.Register("controllers.onboarding"),
controllers.onboarding.CountrySelect = function CountrySelectOnboardingViewController() {
    UTViewController.call(this),
    this._countries = []
}
,
JSUtils.inherits(controllers.onboarding.CountrySelect, UTViewController),
controllers.onboarding.CountrySelect.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass();
        var e = this.getView();
        e.setType(enums.UIOnboardingSelectionType.NATION),
        e.setTitle(services.Localization.localize("onboarding.nation.title")),
        e.setDescription(services.Localization.localize("onboarding.nation.body")),
        e.setFirstImageLocalPath("images/onboarding/nation_flag.png"),
        e.getContinueButton().addTarget(this, this._eContinue, EventType.TAP),
        e.getContinueButtonMobile().addTarget(this, this._eContinue, EventType.TAP);
        var t = "Onboarding - Country";
        services.PIN.sendData(PINEventType.PAGE_VIEW, {
            type: PIN_PAGEVIEW_EVT_TYPE,
            pgid: t
        }),
        TelemetryManager.trackPage(TelemetryManager.Sections.ONBOARDING, t)
    }
}
,
controllers.onboarding.CountrySelect.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTOnboardingSelectView
}
,
controllers.onboarding.CountrySelect.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("onboarding.nation.title")
}
,
controllers.onboarding.CountrySelect.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    0 === this._countries.length && this._getCountries();
    var e = this.getNavigationController();
    e && e.conforms(controllers.navigation.Onboarding) && (this.getNavigationController().addNavBarClass("onboarding-select"),
    isPhone() || (e.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
    e.setToolbarVisibility(!0)),
    e.setCurrentStep(enums.UIOnboardingStep.NATION))
}
,
controllers.onboarding.CountrySelect.prototype._getCountries = function _getCountries() {
    services.Onboarding.getCountries().observe(this, function _onGetCountriesComplete(e, t) {
        e.unobserve(this),
        t.success ? (this._countries = t.data.countries,
        this.getView().setData(this._mapCountryObjects(this._countries))) : TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Country Select load failure")
    })
}
,
controllers.onboarding.CountrySelect.prototype._generateCountryDataObject = function _generateCountryDataObject(e) {
    return {
        id: e,
        name: UTLocalizationUtil.nationIdToName(e, services.Localization),
        assetType: AssetLocationUtils.IMAGE_TYPE_FLAG
    }
}
,
controllers.onboarding.CountrySelect.prototype._mapCountryObjects = function _mapCountryObjects(e) {
    return e.map(function(e) {
        return this._generateCountryDataObject(e)
    }, this)
}
,
controllers.onboarding.CountrySelect.prototype._selectCountry = function _selectCountry() {
    var n = this.getView()
      , r = n.getSelectedId();
    function _onGetSquadComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i;
            services.PIN.sendData(PINEventType.MILESTONE, {
                mode: PIN_MILESTONE_EVT_MODE,
                moment: PINMileStoneEventMoment.COMPLETE,
                mstid: PINMilestoneEventId.EXPLORESQUAD,
                type: PINMilestoneEventType.ONBOARDING
            }),
            isPhone() ? (i = new controllers.onboarding.StarterSquadOverview).initWithSquad(t.data.squad) : (i = new controllers.onboarding.StarterSquadLandscape).initWithSquad(t.data.squad);
            var o = this.getNavigationController();
            o && (o.conforms(controllers.navigation.Onboarding) && o.getOnboardingState().setCountryId(FUTDataUtils.mapNationIdToOnboardingCountryId(r)),
            o.pushViewController(i, !0))
        } else
            n.setInteractionState(!0),
            TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "Failed to load starter squad");
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }
    function _onCreateClubComplete(e, t) {
        e.unobserve(this),
        t.success ? services.Squad.requestSquadById(0).observe(this, _onGetSquadComplete) : (n.setInteractionState(!0),
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
        services.Notification.queue([services.Localization.localize("onboarding.error.clubcreation"), UINotificationType.NEGATIVE]),
        TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to create club"))
    }
    var e = JSUtils.isNumber(r) && 0 < r;
    DebugUtils.Assert(e, "Invalid country ID"),
    e && (n.setInteractionState(!1),
    gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Onboarding.selectCountry(r).observe(this, function _onCountrySelectComplete(e, t) {
        e.unobserve(this),
        t.success ? (services.PIN.sendData(PINEventType.MILESTONE, {
            mode: PIN_MILESTONE_EVT_MODE,
            moment: PINMileStoneEventMoment.COMPLETE,
            mstid: PINMilestoneEventId.COUNTRY,
            type: PINMilestoneEventType.ONBOARDING
        }),
        services.Onboarding.createClub().observe(this, _onCreateClubComplete)) : (n.setInteractionState(!0),
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
        services.Notification.queue([services.Localization.localize("onboarding.error.clubcreation"), UINotificationType.NEGATIVE]),
        TelemetryManager.trackEvent(TelemetryManager.Sections.ONBOARDING, TelemetryManager.Categories.ERROR, "(" + t.status + ") Failed to save country selection"))
    }))
}
,
controllers.onboarding.CountrySelect.prototype._eContinue = function _eContinue() {
    this._selectCountry()
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWelcomeBackView = function(e) {
    function UTWelcomeBackView() {
        return e.call(this) || this
    }
    return __extends(UTWelcomeBackView, e),
    UTWelcomeBackView.prototype.init = function() {
        e.prototype.init.call(this),
        this._btnSubmit.init(),
        this._btnSubmit.setText(services.Localization.localize("mobilestart.label.getStarted"))
    }
    ,
    UTWelcomeBackView.prototype.appendPersonaSelector = function(e) {
        this.addClass("has-persona-selector"),
        this.addSubview(e, this.__personaSelectorContainer)
    }
    ,
    UTWelcomeBackView.prototype.setTitle = function(e) {
        this.__welcomeText.innerHTML = e
    }
    ,
    UTWelcomeBackView.prototype.setDescription = function(e) {
        this.__welcomeDesc.textContent = e
    }
    ,
    UTWelcomeBackView.prototype.getSubmitButton = function() {
        return this._btnSubmit
    }
    ,
    UTWelcomeBackView
}(UTView);
UTWelcomeBackView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("sm-ut-content-container"),
        e.classList.add("ut-content-container");
        var t = document.createElement("div");
        t.classList.add("ut-content"),
        this.__personaSelectorContainer = document.createElement("div"),
        this.__personaSelectorContainer.classList.add("onboarding"),
        this.__personaSelectorContainer.classList.add("ut-app-settings-persona-selector"),
        t.appendChild(this.__personaSelectorContainer);
        var i = document.createElement("div");
        i.classList.add("ut-welcome-back"),
        i.classList.add("ut-login-generic");
        var o = document.createElement("div");
        o.classList.add("ut-login-generic-content");
        var n = document.createElement("div");
        this.__welcomeText = document.createElement("h2"),
        this.__welcomeText.classList.add("title"),
        n.appendChild(this.__welcomeText),
        this.__welcomeDesc = document.createElement("p"),
        n.appendChild(this.__welcomeDesc),
        o.appendChild(n);
        var r = document.createElement("div");
        r.classList.add("ut-button-container"),
        this._btnSubmit = new UTStandardButtonControl,
        this._btnSubmit.getRootElement().classList.add("call-to-action"),
        r.appendChild(this._btnSubmit.getRootElement()),
        o.appendChild(r),
        i.appendChild(o),
        t.appendChild(i),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTWelcomeBackView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__personaSelectorContainer = null,
    this.__welcomeText = null,
    this.__welcomeDesc = null,
    this._btnSubmit.destroy()
}
,
UTWelcomeBackView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWelcomeBackViewController = function(a) {
    function UTWelcomeBackViewController() {
        var e = a.call(this) || this;
        return e.personaController = new UTPersonaViewController,
        e
    }
    return __extends(UTWelcomeBackViewController, a),
    UTWelcomeBackViewController.prototype.init = function() {
        this.initialized || (a.prototype.init.call(this),
        this.personaController.init(),
        this.personaController.showPersonaChanger = !1,
        this.addChildViewController(this.personaController))
    }
    ,
    UTWelcomeBackViewController.prototype.dealloc = function() {
        this.personaController.dealloc(),
        a.prototype.dealloc.call(this)
    }
    ,
    UTWelcomeBackViewController.prototype._getTelemetryId = function() {
        return "Onboarding - Welcome Screen"
    }
    ,
    UTWelcomeBackViewController.prototype.viewDidAppear = function() {
        var e, t;
        a.prototype.viewDidAppear.call(this);
        var i = services.Localization
          , o = null === (e = services.User.getUser()) || void 0 === e ? void 0 : e.getSelectedPersona()
          , n = this.getNavigationController()
          , r = this.getView()
          , s = null !== (t = null == o ? void 0 : o.name) && void 0 !== t ? t : BLANK_STR;
        this.personaController && (r.appendPersonaSelector(this.personaController.getView()),
        r.layoutSubviews(),
        this.personaController.viewDidAppear()),
        n && !isPhone() && (n.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
        n.setToolbarVisibility(!0)),
        r.setTitle(i.localize("mobilestart.text.welcomeBack", [s])),
        r.setDescription(i.localize("mobilestart.text.gettingStarted")),
        TelemetryManager.trackPage(TelemetryManager.Sections.ONBOARDING, "Onboarding - Welcome Screen"),
        this.getView().getSubmitButton().addTarget(this, this.onTapEvent, EventType.TAP)
    }
    ,
    UTWelcomeBackViewController.prototype.viewWillDisappear = function() {
        a.prototype.viewWillDisappear.call(this),
        this.getView().getSubmitButton().removeTarget(this, this.onTapEvent, EventType.TAP)
    }
    ,
    UTWelcomeBackViewController.prototype._getViewInstanceFromData = function() {
        return new UTWelcomeBackView
    }
    ,
    UTWelcomeBackViewController.prototype.onTapEvent = function(e, t, i) {
        var o = this.getNavigationController()
          , n = new controllers.onboarding.CountrySelect;
        n.init(),
        o instanceof controllers.navigation.Onboarding && o.showStepChain(!0),
        null == o || o.pushViewController(n, !0)
    }
    ,
    UTWelcomeBackViewController
}(UTViewController)
  , UTStepLinkView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTStepLinkView() {
        var e = t.call(this) || this;
        return e.state = enums.UICompletionState.INCOMPLETE,
        e
    }
    return __extends(UTStepLinkView, t),
    UTStepLinkView.prototype.setValue = function(e) {
        this.__value.textContent = e
    }
    ,
    UTStepLinkView.prototype.setState = function(e) {
        if (this.state !== e) {
            if (e === enums.UICompletionState.INCOMPLETE)
                this.removeClass(JSUtils.getObjectValues(UTStepLinkView.Style).join(" "));
            else if (e === enums.UICompletionState.IN_PROGRESS)
                this.addClass(UTStepLinkView.Style.IN_PROGRESS),
                this.removeClass(UTStepLinkView.Style.COMPLETE);
            else {
                if (e !== enums.UICompletionState.COMPLETE)
                    return void DebugUtils.Assert(!1, "Encountered an unknown completion state");
                this.addClass(UTStepLinkView.Style.COMPLETE),
                this.removeClass(UTStepLinkView.Style.IN_PROGRESS)
            }
            this.state = e
        }
    }
    ,
    UTStepLinkView.Style = Object.freeze({
        IN_PROGRESS: "in-progress",
        COMPLETE: "complete"
    }),
    UTStepLinkView
}(UTView));
UTStepLinkView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-step-link-view");
        var t = document.createElement("div");
        t.classList.add("ut-step-link-view--link-line"),
        e.appendChild(t),
        this.__value = document.createElement("span"),
        this.__value.classList.add("ut-step-link-view--link-value"),
        e.appendChild(this.__value),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStepLinkView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__value = null
}
,
UTStepLinkView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStepChainView = function(t) {
    function UTStepChainView() {
        var e = t.call(this) || this;
        return e.steps = [],
        e
    }
    return __extends(UTStepChainView, t),
    UTStepChainView.prototype.dealloc = function() {
        this._removeSteps(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTStepChainView.prototype._removeSteps = function() {
        this.steps.forEach(function(e) {
            e.dealloc()
        }),
        this.steps = []
    }
    ,
    UTStepChainView.prototype._generateStep = function(e) {
        var t = new UTStepLinkView;
        t.setValue(e),
        this.steps.push(t),
        this.addSubview(t)
    }
    ,
    UTStepChainView.prototype.setCurrentStep = function(o) {
        this.steps.forEach(function(e, t) {
            var i = t + 1;
            i < o ? e.setState(enums.UICompletionState.COMPLETE) : i === o ? e.setState(enums.UICompletionState.IN_PROGRESS) : e.setState(enums.UICompletionState.INCOMPLETE)
        })
    }
    ,
    UTStepChainView.prototype.setNumSteps = function(e) {
        this._removeSteps();
        for (var t = 0; t++ < e; )
            this._generateStep(t.toString());
        this.layoutSubviews()
    }
    ,
    UTStepChainView.prototype.setDarkStyle = function(e) {
        this.toggleClass(UTStepChainView.Style.DARK, e)
    }
    ,
    UTStepChainView.Style = Object.freeze({
        DARK: "dark"
    }),
    UTStepChainView
}(UTView);
UTStepChainView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-step-chain-view"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStepChainView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTStepChainView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTOnboardingNavbarView = function(t) {
    function UTOnboardingNavbarView() {
        return t.call(this) || this
    }
    return __extends(UTOnboardingNavbarView, t),
    UTOnboardingNavbarView.prototype.init = function() {
        t.prototype.init.call(this)
    }
    ,
    UTOnboardingNavbarView.prototype.layoutSubviews = function() {
        var t = this
          , e = this.getRootElement();
        this.primaryButton && DOMKit.insertBefore(this.primaryButton.getRootElement(), e.firstChild),
        this.secondaryButton && DOMKit.insertBefore(this.secondaryButton.getRootElement(), this.__onboardingSteps),
        this._subviews.forEach(function(e) {
            e.view !== t.primaryButton && e.view !== t.secondaryButton && e.container.appendChild(e.view.getRootElement())
        }, this)
    }
    ,
    UTOnboardingNavbarView.prototype.setHeader = function(e) {
        t.prototype.setHeader.call(this, e),
        this.toggleClass("empty-title", JSUtils.isEmpty(e))
    }
    ,
    UTOnboardingNavbarView.prototype.setCurrentStep = function(e) {
        this._steps.setCurrentStep(e)
    }
    ,
    UTOnboardingNavbarView.prototype.createSteps = function(e) {
        this._steps.setNumSteps(e)
    }
    ,
    UTOnboardingNavbarView.prototype.showStepChain = function(e) {
        this.toggleClass("no-step-chain", !e)
    }
    ,
    UTOnboardingNavbarView
}(UTNavigationBarView);
UTOnboardingNavbarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-navigation-bar-view"),
        e.classList.add("OnboardingNavbar"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("title"),
        e.appendChild(this.__title),
        this.__onboardingSteps = document.createElement("div"),
        this.__onboardingSteps.classList.add("stepsContainer"),
        this._steps = new UTStepChainView,
        this.__onboardingSteps.appendChild(this._steps.getRootElement()),
        e.appendChild(this.__onboardingSteps),
        this.__root = e,
        this._generated = !0
    }
}
,
UTOnboardingNavbarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__onboardingSteps = null,
    this._steps.destroy()
}
,
UTOnboardingNavbarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTOnboardingToolbarView = function(e) {
    function UTOnboardingToolbarView() {
        return e.call(this) || this
    }
    return __extends(UTOnboardingToolbarView, e),
    UTOnboardingToolbarView.prototype.init = function() {
        e.prototype.init.call(this),
        this._settingsBtn.init(),
        this._settingsBtn.setText(services.Localization.localize("button.settings"))
    }
    ,
    UTOnboardingToolbarView.prototype.getSettingsButton = function() {
        return this._settingsBtn
    }
    ,
    UTOnboardingToolbarView
}(UTToolbarView);
function UTBootFlowNavigationController(e, t) {
    UTNavigationController.call(this, e, t),
    this._settingsNavButton = new UTNavigationButtonControl,
    this._settingsToolbarButton = new UTToolbarButtonControl
}
UTOnboardingToolbarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("nav");
        e.classList.add("FUIToolbar"),
        e.classList.add("OnboardingToolbar"),
        this._settingsBtn = new UTToolbarButtonControl,
        this._settingsBtn.getRootElement().classList.add("settings-btn"),
        e.appendChild(this._settingsBtn.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTOnboardingToolbarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._settingsBtn.destroy()
}
,
UTOnboardingToolbarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
NamespaceManager.Register("controllers.navigation"),
controllers.navigation.Onboarding = function OnboardingNavigationController() {
    UTNavigationController.call(this, new UTOnboardingNavbarView, new UTOnboardingToolbarView),
    this._viewmodel = null,
    this._squad = null,
    this._settingsButton = new UTNavigationButtonControl,
    this._switchBackWithSettings = !1
}
,
JSUtils.inherits(controllers.navigation.Onboarding, UTNavigationController),
controllers.navigation.Onboarding.prototype.addNavBarClass = function addNavBarClass(e) {
    this._navigationBar.addClass(e)
}
,
controllers.navigation.Onboarding.prototype.init = function init() {
    if (!this.initialized) {
        var e = this.getRootController();
        this._viewmodel || (this._viewmodel = new UTOnboardingStateViewModel),
        this._squad && e.conforms(controllers.onboarding.StarterSquadOverview) ? e.initWithSquad(this._squad) : this._squad && e.conforms(controllers.onboarding.StarterSquadLandscape) ? e.initWithSquad(this._squad) : e.conforms(controllers.onboarding.OnboardingSummary) && e.initWithViewmodel(this._viewmodel),
        this.superclass(),
        this._toolbar.getSettingsButton().addTarget(this, this._eSettingsSelected, EventType.TAP),
        this._settingsButton.init(),
        this._settingsButton.addClass("settings-btn"),
        this._settingsButton.addTarget(this, this._eSettingsSelected, EventType.TAP),
        this.showSettings(!0),
        this._navigationBar.createSteps(4);
        var t = e.conforms(UTWelcomeBackViewController) || e.conforms(controllers.onboarding.OnboardingSummary);
        this.showStepChain(!t)
    }
}
,
controllers.navigation.Onboarding.prototype.initWithViewmodel = function initWithViewmodel(e) {
    this.initialized || (DebugUtils.Assert(e instanceof UTOnboardingStateViewModel, "Expected a UTOnboardingStateViewModel instance."),
    this._viewmodel = e,
    this.init())
}
,
controllers.navigation.Onboarding.prototype.dealloc = function dealloc() {
    this._settingsButton.dealloc(),
    this._viewmodel = null,
    this._squad = null,
    this.superclass()
}
,
controllers.navigation.Onboarding.prototype._getRootControllerInstance = function _getRootControllerInstance() {
    return this._viewmodel ? this._viewmodel.hasLoaner() ? this._viewmodel.hasHomeKit() && this._viewmodel.hasAwayKit() ? this._viewmodel.hasBadge() ? new controllers.onboarding.OnboardingSummary : new controllers.onboarding.BadgeSelect : new controllers.onboarding.KitSelect : isPhone() ? new controllers.onboarding.StarterSquadOverview : new controllers.onboarding.StarterSquadLandscape : new UTWelcomeBackViewController
}
,
controllers.navigation.Onboarding.prototype.getRootPrimaryNavigationItem = function getRootPrimaryNavigationItem() {
    return this._settingsButton
}
,
controllers.navigation.Onboarding.prototype.viewDidAppear = function viewDidAppear() {
    this.setNavigationVisibility(!0),
    this.setToolbarVisibility(!isPhone()),
    this.superclass()
}
,
controllers.navigation.Onboarding.prototype.setSquad = function setSquad(e) {
    this._squad = e
}
,
controllers.navigation.Onboarding.prototype.setCurrentStep = function setCurrentStep(e) {
    this._navigationBar.setCurrentStep(e)
}
,
controllers.navigation.Onboarding.prototype.showStepChain = function showStepChain(e) {
    this._navigationBar.showStepChain(e);
    var t = this._navigationBar.getRootElement().clientHeight + "px";
    this.getView().getContentContainer().style.top = t
}
,
controllers.navigation.Onboarding.prototype.showSettings = function showSettings(e) {
    this._switchBackWithSettings = !!e,
    this.getPrimaryNavigationItem().toggleClass("settings-btn", this._switchBackWithSettings)
}
,
controllers.navigation.Onboarding.prototype.getOnboardingState = function getOnboardingState() {
    return this._viewmodel
}
,
controllers.navigation.Onboarding.prototype._gotoSettingsView = function _gotoSettingsView() {
    var e = new UTAppSettingsViewController;
    e.init(),
    this.showSettings(!1),
    this.setNavigationStyle(isPhone() ? UTNavigationBarView.Style.DEFAULT : UTNavigationBarView.Style.LANDSCAPE),
    this.setToolbarVisibility(!1),
    this.pushViewController(e)
}
,
controllers.navigation.Onboarding.prototype._eSettingsSelected = function _eSettingsSelected() {
    this._gotoSettingsView()
}
,
controllers.navigation.Onboarding.prototype._eBackButtonTapped = function _eBackButtonTapped() {
    if (this._switchBackWithSettings)
        this._gotoSettingsView();
    else {
        var e = this._currentController instanceof UTAppSettingsViewController;
        this.superclass(),
        e && this.showSettings(!0)
    }
}
,
JSUtils.inherits(UTBootFlowNavigationController, UTNavigationController),
UTBootFlowNavigationController.prototype.init = function init() {
    this.initialized || (this.superclass(),
    this._settingsNavButton.init(),
    this._settingsNavButton.addClass("settings-btn"),
    this._settingsNavButton.setInteractionState(!0),
    this._settingsNavButton.addTarget(this, this._eSettingsButtonSelected, EventType.TAP),
    this._settingsToolbarButton.init(),
    this._settingsToolbarButton.setText(services.Localization.localize("button.settings")),
    this._settingsToolbarButton.addClass("settings-btn"),
    this._settingsToolbarButton.setInteractionState(!0),
    this._settingsToolbarButton.addTarget(this, this._eSettingsButtonSelected, EventType.TAP),
    this._toolbar.addClass("ut-bootflow-toolbar"))
}
,
UTBootFlowNavigationController.prototype.dealloc = function dealloc() {
    this._settingsNavButton.dealloc(),
    this._settingsToolbarButton.dealloc(),
    this.superclass()
}
,
UTBootFlowNavigationController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this.setNavigationVisibility(isPhone()),
    this.setToolbarVisibility(!isPhone()),
    this.setNavigationStyle(isPhone() ? UTNavigationBarView.Style.DEFAULT : UTNavigationBarView.Style.LANDSCAPE)
}
,
UTBootFlowNavigationController.prototype.getRootPrimaryNavigationItem = function getRootPrimaryNavigationItem() {
    return this._settingsNavButton
}
,
UTBootFlowNavigationController.prototype.getToolbarItems = function getToolbarItems() {
    return [this._settingsToolbarButton]
}
,
UTBootFlowNavigationController.prototype.didPush = function didPush(e) {
    this.superclass(),
    this.getRootController() === e && this.setToolbarVisibility(!isPhone(), !0)
}
,
UTBootFlowNavigationController.prototype._eSettingsButtonSelected = function _eSettingsButtonSelected() {
    var e = new UTAppSettingsViewController;
    e.init(),
    this.pushViewController(e),
    this.setToolbarVisibility(!1, !0)
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTShowOffSquadOverviewView = function(e) {
    function UTShowOffSquadOverviewView() {
        return e.call(this) || this
    }
    return __extends(UTShowOffSquadOverviewView, e),
    UTShowOffSquadOverviewView
}(UTSquadOverviewView);
function UTShowOffSquadOverviewViewController() {
    UTSquadOverviewViewController.call(this)
}
JSUtils.inherits(UTShowOffSquadOverviewViewController, UTSquadOverviewViewController),
UTShowOffSquadOverviewViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTShowOffSquadOverviewView
}
,
UTShowOffSquadOverviewViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "Show Off Squad"
}
,
UTShowOffSquadOverviewViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var e = this.getNavigationController();
    if (e && (e.setNavigationVisibility(!0, !0),
    e.conforms(UTGameFlowNavigationController))) {
        var t = services.User.getUser()
          , i = t ? t.getSelectedPersona() : null
          , o = !!i && i.hasFullAccess;
        e.toggleFUTLogo(!isPhone() && !o)
    }
    getDefaultDispatcher().addObserver(AppNotification.APP_RESUME, this, this._nAppResumed)
}
,
UTShowOffSquadOverviewViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass(),
    getDefaultDispatcher().removeObserver(AppNotification.APP_RESUME, this)
}
,
UTShowOffSquadOverviewViewController.prototype._pushSquadToView = function _pushSquadToView(e) {
    var t = this.getView();
    t.setType(e.isDream() ? "concept" : "standard"),
    t.setSquad(e)
}
,
UTShowOffSquadOverviewViewController.prototype._eItemTap = function _eItemTap(e, t, i) {
    this._squad.getSlot(i.slotIndex).isValid() && this.superclass(e, t, i)
}
,
UTShowOffSquadOverviewViewController.prototype._eDetailsButtonSelected = function _eDetailsButtonSelected() {
    var e = this.getNavigationController();
    if (e) {
        var t = new UTSquadShowOffActionsViewController;
        t.initWithSquad(this._squad),
        e.pushViewController(t, !0)
    }
}
,
UTShowOffSquadOverviewViewController.prototype._nAppResumed = function _nAppResumed() {
    services.Squad.hasExternalShowOffSquad() && services.Squad.loadShowOffSquad().observe(this, function(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = this.getNavigationController();
            i && i instanceof UTGameFlowNavigationController && i.setClubInfo(t.data.showOff.clubName, t.data.showOff.estDate),
            this.setSquad(t.data.showOff.squad)
        } else
            services.Notification.queue([services.Localization.localize("squads.showoff.error.load"), UINotificationType.NEGATIVE]),
            NetworkErrorManager.handleStatus(t.status)
    })
}
,
UTShowOffSquadOverviewViewController.prototype._nInfoStateChanged = function _nInfoStateChanged() {
    TelemetryManager.trackEvent(TelemetryManager.Sections.SQUADS, TelemetryManager.Categories.BUTTON_PRESS, "Item Info Switch Button - Show Off Squad")
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadShowOffActionsView = function(t) {
    function UTSquadShowOffActionsView() {
        return t.call(this) || this
    }
    return __extends(UTSquadShowOffActionsView, t),
    UTSquadShowOffActionsView.prototype.init = function() {
        var e = services.Localization;
        t.prototype.init.call(this),
        this._btnStarted.init(),
        this._btnStarted.setText(e.localize("infopanel.showOff.getStarted")),
        this.__showOffDesc.textContent = e.localize("infopanel.showOff.description")
    }
    ,
    UTSquadShowOffActionsView.prototype.setFormationName = function(e) {
        this.__formationTxt.textContent = e
    }
    ,
    UTSquadShowOffActionsView.prototype.setFormationImageById = function(e) {
        var t = AssetLocationUtils.getFormationImageUri(e);
        this._formationImg.setResource(t)
    }
    ,
    UTSquadShowOffActionsView.prototype.getStartedButton = function() {
        return this._btnStarted
    }
    ,
    UTSquadShowOffActionsView
}(UTView);
UTSquadShowOffActionsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("article");
        e.classList.add("SquadShowOffDetails");
        var t = document.createElement("section");
        t.classList.add("detail-carousel"),
        this._formationImg = new UTImageView,
        t.appendChild(this._formationImg.getRootElement()),
        this.__formationTxt = document.createElement("p"),
        this.__formationTxt.classList.add("formation-name"),
        t.appendChild(this.__formationTxt),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("desc"),
        this.__showOffDesc = document.createElement("p"),
        i.appendChild(this.__showOffDesc),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("button-container"),
        this._btnStarted = new UTStandardButtonControl,
        this._btnStarted.getRootElement().classList.add("call-to-action"),
        o.appendChild(this._btnStarted.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadShowOffActionsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._formationImg.destroy(),
    this.__formationTxt = null,
    this.__showOffDesc = null,
    this._btnStarted.destroy()
}
,
UTSquadShowOffActionsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadShowOffActionsViewController = function(e) {
    function UTSquadShowOffActionsViewController() {
        return e.call(this) || this
    }
    return __extends(UTSquadShowOffActionsViewController, e),
    UTSquadShowOffActionsViewController.prototype.initWithSquad = function(e) {
        var t, i;
        if (!this.initialized) {
            var o = e.getFormation()
              , n = this.getView();
            n.setFormationName(null !== (t = null == o ? void 0 : o.name) && void 0 !== t ? t : BLANK_STR),
            n.setFormationImageById(null !== (i = null == o ? void 0 : o.id) && void 0 !== i ? i : 0),
            this.init()
        }
    }
    ,
    UTSquadShowOffActionsViewController.prototype._getViewInstanceFromData = function() {
        return new UTSquadShowOffActionsView
    }
    ,
    UTSquadShowOffActionsViewController.prototype.viewDidAppear = function() {
        e.prototype.viewDidAppear.call(this),
        this.getView().getStartedButton().addTarget(this, this.onTapEvent, EventType.TAP)
    }
    ,
    UTSquadShowOffActionsViewController.prototype.viewWillDisappear = function() {
        e.prototype.viewWillDisappear,
        this.getView().getStartedButton().removeTarget(this, this.onTapEvent, EventType.TAP)
    }
    ,
    UTSquadShowOffActionsViewController.prototype.onTapEvent = function(e, t, i) {
        getAppMain().getLoginController().logout()
    }
    ,
    UTSquadShowOffActionsViewController
}(UTViewController);
function UTShowOffSquadSplitViewController() {
    UTBaseSquadSplitViewController.call(this),
    this._panelController = new UTSquadShowOffActionsViewController
}
JSUtils.inherits(UTShowOffSquadSplitViewController, UTBaseSquadSplitViewController),
UTShowOffSquadSplitViewController.prototype.init = function init() {
    this.superclass(),
    this._squad ? this._panelController.initWithSquad(this._squad) : this._panelController.init(),
    this.addChildViewController(this._panelController)
}
,
UTShowOffSquadSplitViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._panelController && this._panelController.dealloc(),
    this._panelController = null
}
,
UTShowOffSquadSplitViewController.prototype.getDefaultPanel = function getDefaultPanel() {
    return this._panelController
}
,
UTShowOffSquadSplitViewController.prototype._setupSquadOverview = function _setupSquadOverview() {
    this._squad && this._overviewController.getView().getPitch().addTarget(this, this._ePitchTapped, EventType.TAP)
}
,
UTShowOffSquadSplitViewController.prototype._generateSquadOverview = function _generateSquadOverview() {
    var e = new UTShowOffSquadOverviewViewController;
    return this._squad ? e.initWithSquad(this._squad) : e.init(),
    e
}
,
UTShowOffSquadSplitViewController.prototype.selectSlotIndexForSquad = function selectSlotIndexForSquad(e, t, i) {
    this._squad.getSlot(i).isValid() && (this._overviewController.selectSlot(i),
    e === this._overviewController && this._showSlotDetails(i))
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPlayerHealthLimitPopupView = function(t) {
    function UTPlayerHealthLimitPopupView() {
        return t.call(this) || this
    }
    return __extends(UTPlayerHealthLimitPopupView, t),
    UTPlayerHealthLimitPopupView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._dismissBtn.init(),
        this._dismissBtn.addTarget(this, this.onDismissTapped, EventType.TAP),
        this._ignoreBtn.init(),
        this._ignoreBtn.addTarget(this, this.onIgnoreTapped, EventType.TAP),
        this._reviewBtn.init(),
        this._reviewBtn.addTarget(this, this.onReviewTapped, EventType.TAP),
        this.setTitle(e.localize("playerHealth.limitPopup.title")),
        this.setDismissButtonText(e.localize("playerHealth.limitPopup.dismiss")),
        this.setIgnoreButtonText(e.localize("playerHealth.limitPopup.ignoreLimit")),
        this.setReviewButtonText(e.localize("playerHealth.limitPopup.reviewLimit"))
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.setContent = function(e) {
        this.__content.innerHTML = e
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.setContentByType = function(e, t) {
        var i = services.Localization
          , o = document.createElement("span");
        switch (DOMKit.addClass(o, "ut-player-health-limit-popup-view--highlight-text"),
        e) {
        case PlayerHealthStatId.PACKS_OPENED:
            o.textContent = i.localize("playerHealth.limitPopup.packs.value", [t.toString()]),
            this.setContent(i.localize("playerHealth.limitPopup.packs.content", [o.outerHTML]));
            break;
        case PlayerHealthStatId.POINTS_PURCHASED:
            o.textContent = i.localize("playerHealth.limitPopup.points.value", [t.toString()]),
            this.setContent(i.localize("playerHealth.limitPopup.points.content", [o.outerHTML]))
        }
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.setDismissButtonText = function(e) {
        this._dismissBtn.setText(e)
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.setIgnoreButtonText = function(e) {
        this._ignoreBtn.setText(e)
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.setReviewButtonText = function(e) {
        this._reviewBtn.setText(e)
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.onDismissTapped = function(e, t, i) {
        this._triggerActions(UTPlayerHealthLimitPopupView.Events.DISMISS_TAPPED)
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.onIgnoreTapped = function(e, t, i) {
        this._triggerActions(UTPlayerHealthLimitPopupView.Events.IGNORE_TAPPED)
    }
    ,
    UTPlayerHealthLimitPopupView.prototype.onReviewTapped = function(e, t, i) {
        this._triggerActions(UTPlayerHealthLimitPopupView.Events.REVIEW_TAPPED)
    }
    ,
    UTPlayerHealthLimitPopupView.Events = {
        DISMISS_TAPPED: "DISMISS_TAPPED",
        IGNORE_TAPPED: "IGNORE_TAPPED",
        REVIEW_TAPPED: "REVIEW_TAPPED"
    },
    UTPlayerHealthLimitPopupView
}(UTTargetActionView);
UTPlayerHealthLimitPopupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-player-health-limit-popup-view");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("bodySection"),
        this.__content = document.createElement("p"),
        i.appendChild(this.__content),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-button-group"),
        this._dismissBtn = new UTGroupButtonControl,
        this._dismissBtn.getRootElement().classList.add("negative"),
        o.appendChild(this._dismissBtn.getRootElement()),
        this._ignoreBtn = new UTGroupButtonControl,
        o.appendChild(this._ignoreBtn.getRootElement()),
        this._reviewBtn = new UTGroupButtonControl,
        o.appendChild(this._reviewBtn.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPlayerHealthLimitPopupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__content = null,
    this._dismissBtn.destroy(),
    this._ignoreBtn.destroy(),
    this._reviewBtn.destroy()
}
,
UTPlayerHealthLimitPopupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPlayerHealthLimitPopupViewController = function(t) {
    function UTPlayerHealthLimitPopupViewController() {
        return t.call(this) || this
    }
    return __extends(UTPlayerHealthLimitPopupViewController, t),
    UTPlayerHealthLimitPopupViewController.prototype._getViewInstanceFromData = function() {
        return new UTPlayerHealthLimitPopupView
    }
    ,
    UTPlayerHealthLimitPopupViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this);
        var e = this.getView();
        e.addTarget(this, this.eDismissTapped, UTPlayerHealthLimitPopupView.Events.DISMISS_TAPPED),
        e.addTarget(this, this.eIgnoreTapped, UTPlayerHealthLimitPopupView.Events.IGNORE_TAPPED),
        e.addTarget(this, this.eReviewTapped, UTPlayerHealthLimitPopupView.Events.REVIEW_TAPPED)
    }
    ,
    UTPlayerHealthLimitPopupViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        e.removeTarget(this, this.eDismissTapped, UTPlayerHealthLimitPopupView.Events.DISMISS_TAPPED),
        e.removeTarget(this, this.eIgnoreTapped, UTPlayerHealthLimitPopupView.Events.IGNORE_TAPPED),
        e.removeTarget(this, this.eReviewTapped, UTPlayerHealthLimitPopupView.Events.REVIEW_TAPPED)
    }
    ,
    UTPlayerHealthLimitPopupViewController.prototype.eDismissTapped = function(e, t, i) {
        this.onExit.notify(t)
    }
    ,
    UTPlayerHealthLimitPopupViewController.prototype.eIgnoreTapped = function(e, t, i) {
        this.onExit.notify(t)
    }
    ,
    UTPlayerHealthLimitPopupViewController.prototype.eReviewTapped = function(e, t, i) {
        this.onExit.notify(t)
    }
    ,
    UTPlayerHealthLimitPopupViewController.prototype.handleKeyUpEvent = function(e) {
        e.key !== KeyboardKey.ESCAPE && e.key !== KeyboardKey.MS_ESCAPE && e.key !== KeyboardKey.ENTER || this.onExit.notify(enums.UIDialogOptions.OK)
    }
    ,
    UTPlayerHealthLimitPopupViewController
}(BasePopupViewController)
  , UTCurrencyNavigationBarView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTCurrencyNavigationBarView() {
        return t.call(this) || this
    }
    return __extends(UTCurrencyNavigationBarView, t),
    UTCurrencyNavigationBarView.prototype.setCurrency = function(e) {
        switch (e.type) {
        case GameCurrency.COINS:
            this.__currencyCoins.textContent = services.Localization.localizeNumber(e.amount);
            break;
        case GameCurrency.POINTS:
            this.__currencyPoints.textContent = services.Localization.localizeNumber(e.amount)
        }
    }
    ,
    UTCurrencyNavigationBarView.prototype.setCurrencies = function(e) {
        JSUtils.valToArray(e).forEach(this.setCurrency, this)
    }
    ,
    UTCurrencyNavigationBarView.prototype.displayCurrencies = function(e) {
        DOMKit.toggleDisplayStyle(this.__currencies, e)
    }
    ,
    UTCurrencyNavigationBarView.prototype.displayClubInfo = function(e) {
        DOMKit.toggleDisplayStyle(this.__clubInfo, e)
    }
    ,
    UTCurrencyNavigationBarView.prototype.setClubInfo = function(e, t) {
        this.__clubInfoName.textContent = e,
        this.__clubInfoEst.textContent = services.Localization.localizeEstablishedDate(new Date(t * MS_PER_SECOND))
    }
    ,
    UTCurrencyNavigationBarView.prototype.setClubBadge = function(e) {
        var o = this
          , t = AssetLocationUtils.getBadgeImageUri(e, enums.UIThemeVariation.DARK);
        this._clubInfoBadge.setResource(t, !0).observe(this, function(e, t) {
            if (e.unobserve(o),
            !t) {
                var i = AssetLocationUtils.getBadgeImageUri(UTItemEntity.DEFAULT_ASSET_ID, enums.UIThemeVariation.DARK);
                o._clubInfoBadge.setResource(i)
            }
        })
    }
    ,
    UTCurrencyNavigationBarView.prototype._tapDetected = function(e) {
        t.prototype._tapDetected.call(this, e),
        e.target instanceof HTMLElement && this.__currencyPoints.contains(e.target) && this._triggerActions(EventType.TAP)
    }
    ,
    UTCurrencyNavigationBarView
}(UTNavigationBarView));
UTCurrencyNavigationBarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-navigation-bar-view"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("title"),
        e.appendChild(this.__title),
        this.__currencies = document.createElement("div"),
        this.__currencies.classList.add("view-navbar-currency"),
        this.__currencyCoins = document.createElement("div"),
        this.__currencyCoins.classList.add("view-navbar-currency-coins"),
        this.__currencies.appendChild(this.__currencyCoins),
        this.__currencyPoints = document.createElement("div"),
        this.__currencyPoints.classList.add("view-navbar-currency-points"),
        this.__currencies.appendChild(this.__currencyPoints),
        e.appendChild(this.__currencies),
        this.__clubInfo = document.createElement("div"),
        this.__clubInfo.classList.add("view-navbar-clubinfo");
        var t = document.createElement("div");
        t.classList.add("view-navbar-clubinfo-data"),
        this.__clubInfoEst = document.createElement("span"),
        this.__clubInfoEst.classList.add("view-navbar-clubinfo-est"),
        t.appendChild(this.__clubInfoEst),
        this.__clubInfoName = document.createElement("span"),
        this.__clubInfoName.classList.add("view-navbar-clubinfo-name"),
        t.appendChild(this.__clubInfoName),
        this.__clubInfo.appendChild(t),
        this._clubInfoBadge = new UTImageView,
        this._clubInfoBadge.getRootElement().classList.add("view-navbar-clubinfo-badge"),
        this.__clubInfo.appendChild(this._clubInfoBadge.getRootElement()),
        e.appendChild(this.__clubInfo),
        this.__root = e,
        this._generated = !0
    }
}
,
UTCurrencyNavigationBarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__currencies = null,
    this.__currencyCoins = null,
    this.__currencyPoints = null,
    this.__clubInfo = null,
    this.__clubInfoEst = null,
    this.__clubInfoName = null,
    this._clubInfoBadge.destroy()
}
,
UTCurrencyNavigationBarView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var PointsPurchaseViewState, EAFirstPartyStoreController = function(i) {
    function EAFirstPartyStoreController(e) {
        var t = i.call(this) || this;
        return t.authCode = "",
        t.clientId = e.clientId,
        t.consumeEntitlementsRequest = null,
        t.handleMessageEventCallback = t.handleMessageEvent.bind(t),
        t.hostname = e.hostname,
        t.redirectUri = e.redirectUri,
        t.storeUri = e.storeUri,
        t.storeWindow = null,
        t.storeWindowCloseInterval = new EAIntervalController(5 * MS_PER_SECOND,t.onCheckHeartbeat.bind(t)),
        t.userSentToStore = !1,
        t
    }
    return __extends(EAFirstPartyStoreController, i),
    EAFirstPartyStoreController.prototype.dealloc = function() {
        this.storeWindow && this.closeStoreWindow(),
        this.consumeEntitlementsRequest && (this.consumeEntitlementsRequest.dealloc(),
        this.consumeEntitlementsRequest = null),
        this.delegate = null,
        this.storeWindowCloseInterval.dealloc(),
        i.prototype.dealloc.call(this)
    }
    ,
    Object.defineProperty(EAFirstPartyStoreController.prototype, "authenticationCode", {
        get: function() {
            return this.authCode
        },
        enumerable: !1,
        configurable: !0
    }),
    EAFirstPartyStoreController.prototype.startHeartbeatChecks = function() {
        this.storeWindow && !this.storeWindow.closed && this.storeWindowCloseInterval.start()
    }
    ,
    EAFirstPartyStoreController.prototype.stopHeartbeatChecks = function() {
        this.storeWindowCloseInterval.stop()
    }
    ,
    EAFirstPartyStoreController.prototype.closeStoreWindow = function() {
        var e;
        this.stopHeartbeatChecks(),
        null === (e = this.storeWindow) || void 0 === e || e.close(),
        this.storeWindow = null,
        window.removeEventListener("message", this.handleMessageEventCallback)
    }
    ,
    EAFirstPartyStoreController.prototype.updateUserWallet = function() {
        var i = this;
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.User.requestCurrencies().observe(this, function(e, t) {
            e.unobserve(i),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
            t.error && NetworkErrorManager.checkCriticalStatus(t.error.code) && NetworkErrorManager.handleStatus(t.error.code)
        })
    }
    ,
    EAFirstPartyStoreController.prototype.performEntitlementCheck = function(e, t) {
        var a = this;
        void 0 === t && (t = !1),
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.didEntitlementCheck = !0,
        this.consumeEntitlements(e, void 0).observe(this, function(e, t) {
            var i, o, n, r;
            if (e.unobserve(a),
            a.consumeEntitlementsRequest = null,
            t.success) {
                var s = null !== (o = null === (i = t.data) || void 0 === i ? void 0 : i.entitlementAwarded) && void 0 !== o && o;
                s && a.updateUserWallet(),
                null === (n = a.delegate) || void 0 === n || n.onEntitlementConsume(s)
            } else
                t.status !== HttpStatusCode.SERVER_ERROR && t.error && NetworkErrorManager.checkCriticalStatus(t.error.code) ? NetworkErrorManager.handleStatus(t.error.code) : null === (r = a.delegate) || void 0 === r || r.handleStoreClientError({
                    id: "entitlement_fail"
                });
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    EAFirstPartyStoreController.prototype.performEntitlementPreCheck = function(e) {
        var l = this;
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.consumeEntitlements(e, void 0).observe(this, function(e, t) {
            var i, o, n, r, s;
            if (e.unobserve(l),
            l.consumeEntitlementsRequest = null,
            t.success) {
                var a = null !== (o = null === (i = t.data) || void 0 === i ? void 0 : i.entitlementAwarded) && void 0 !== o && o;
                a && l.updateUserWallet(),
                null === (n = l.delegate) || void 0 === n || n.onEntitlementPreCheck(a)
            } else
                services.MTX.setMTXEnabled(!1),
                t.status !== HttpStatusCode.SERVER_ERROR && t.error && NetworkErrorManager.checkCriticalStatus(t.error.code) ? NetworkErrorManager.handleStatus(t.error.code) : t.error ? null === (r = l.delegate) || void 0 === r || r.handleStoreClientError({
                    code: t.error.code,
                    id: "precheck_fail"
                }) : null === (s = l.delegate) || void 0 === s || s.handleStoreClientError({
                    id: "precheck_fail"
                });
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    EAFirstPartyStoreController.prototype.consumeEntitlements = function(e, t) {
        return DebugUtils.Assert(!JSUtils.isValid(this.consumeEntitlementsRequest), "Entitlement consumption requested while already in progress."),
        this.consumeEntitlementsRequest || (this.consumeEntitlementsRequest = services.MTX.consumeEntitlements(e, t)),
        this.consumeEntitlementsRequest
    }
    ,
    EAFirstPartyStoreController.prototype.isAuthenticated = function() {
        return 0 < this.authCode.length
    }
    ,
    EAFirstPartyStoreController.prototype.needsTransactionCheck = function() {
        return this.isAuthenticated() && this.userSentToStore && !this.didEntitlementCheck
    }
    ,
    EAFirstPartyStoreController.prototype.handleAuthSuccess = function(e) {
        this.authCode = e,
        window.focus(),
        this.closeStoreWindow(),
        this.performEntitlementPreCheck(e)
    }
    ,
    EAFirstPartyStoreController.prototype.handleAuthFailure = function(e) {
        var t;
        null === (t = this.delegate) || void 0 === t || t.handleStoreAuthError(e.id)
    }
    ,
    EAFirstPartyStoreController.prototype.handleUnknownError = function() {
        var e;
        null === (e = this.delegate) || void 0 === e || e.handleStoreClientError({
            id: "unknown"
        })
    }
    ,
    EAFirstPartyStoreController.prototype.handleMessageEvent = function(e) {
        var t = e.data.state;
        "auth_success" === t ? e.data.code ? this.handleAuthSuccess(e.data.code) : this.handleUnknownError() : "auth_fail" === t ? (DebugUtils.Assert(JSUtils.isValid(e.data.error), "Encountered an authentication error. Missing error object."),
        e.data.error ? this.handleAuthFailure(e.data.error) : this.handleUnknownError()) : "unknown" === t && this.handleUnknownError()
    }
    ,
    EAFirstPartyStoreController.prototype.onCheckHeartbeat = function() {
        var e, t;
        this.storeWindow ? this.storeWindow.closed && (null === (t = this.delegate) || void 0 === t || t.onStoreWindowClose(),
        this.stopHeartbeatChecks()) : (null === (e = this.delegate) || void 0 === e || e.handleStoreClientError({
            id: "window_desync"
        }),
        this.stopHeartbeatChecks())
    }
    ,
    EAFirstPartyStoreController
}(EAObject), MSStoreController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function MSStoreController(e) {
        return t.call(this, e) || this
    }
    return __extends(MSStoreController, t),
    MSStoreController.prototype.getAuthUri = function() {
        var e = HttpUtils.generateUrlParams({
            client_id: this.clientId,
            redirect_uri: encodeURIComponent(this.redirectUri),
            response_mode: "query",
            response_type: "code",
            scope: "Xboxlive.Signin"
        });
        return encodeURIComponent(this.hostname + "/consumers/oauth2/v2.0/authorize" + e)
    }
    ,
    MSStoreController.prototype.openStoreWindow = function() {
        if (this.storeWindow && this.closeStoreWindow(),
        this.isAuthenticated())
            this.userSentToStore = !0,
            this.storeWindow = window.open(this.storeUri, "_blank");
        else {
            var e = HttpUtils.generateUrlParams({
                auth_uri: this.getAuthUri()
            });
            this.storeWindow = window.open("msauth.html" + e, "_blank"),
            window.addEventListener("message", this.handleMessageEventCallback)
        }
        return this.storeWindow
    }
    ,
    MSStoreController
}(EAFirstPartyStoreController)), PSNStoreController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function PSNStoreController(e, t) {
        var i = o.call(this, e) || this;
        return i.authPath = e.authPath,
        i.loc = t,
        i
    }
    return __extends(PSNStoreController, o),
    PSNStoreController.prototype.getAuthUri = function() {
        var e = HttpUtils.generateUrlParams({
            service_entity: "urn:service-entity:psn",
            redirect_uri: encodeURIComponent(this.redirectUri),
            response_type: "code",
            client_id: this.clientId,
            scope: "psn:s2s openid"
        });
        return encodeURIComponent("" + this.hostname + this.authPath + e)
    }
    ,
    PSNStoreController.prototype.openStoreWindow = function() {
        if (this.storeWindow && this.closeStoreWindow(),
        this.isAuthenticated())
            this.userSentToStore = !0,
            this.storeWindow = window.open(this.storeUri, "_blank");
        else {
            var e = HttpUtils.generateUrlParams({
                auth_uri: this.getAuthUri()
            });
            this.storeWindow = window.open("psnauth.html" + e, "_blank"),
            window.addEventListener("message", this.handleMessageEventCallback)
        }
        return this.storeWindow
    }
    ,
    PSNStoreController
}(EAFirstPartyStoreController));
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
!function(e) {
    e.CONNECT_TO_CONSOLE = "connect_to_console",
    e.ACCOUNT_MISMATCH = "account_mismatch",
    e.AUTH_NEEDED = "auth_needed",
    e.AUTH_IN_PROGRESS = "auth_in_progress",
    e.AUTH_FAIL = "auth_fail",
    e.PRECHECK_WALLET_UPDATE = "precheck_wallet_update",
    e.PRECHECK_FAIL = "precheck_fail",
    e.PROCEED_TO_STORE = "proceed_to_store",
    e.REGION_MISMATCH = "region_mismatch",
    e.STORE_IN_PROGRESS = "store_in_progress",
    e.STORE_CLOSED = "store_closed",
    e.WINDOW_CLOSED = "window_closed",
    e.UNKNOWN_ERROR = "unknown_error"
}(PointsPurchaseViewState = PointsPurchaseViewState || {});
var UTFifaPointsPurchaseView = function(i) {
    function UTFifaPointsPurchaseView(e) {
        var t = i.call(this) || this;
        return t.loc = e.localization,
        t.platform = e.platform,
        t
    }
    return __extends(UTFifaPointsPurchaseView, i),
    UTFifaPointsPurchaseView.prototype.init = function() {
        i.prototype.init.call(this),
        this.__titleText.textContent = this.loc.localize("fpp.title"),
        this._btnFinish.init(),
        this._btnFinish.setText(this.loc.localize("fpp.button.finish")),
        this._btnFinish.addTarget(this, this.onFinishButtonSelected, EventType.TAP),
        this._btnCancel.init(),
        this._btnCancel.setText(this.loc.localize("fpp.button.cancel")),
        this._btnCancel.addTarget(this, this.onCancelButtonSelected, EventType.TAP),
        this._btnFirstPartyStore.init(),
        this._btnFirstPartyStore.setText(this.loc.localize(this.platform === GamePlatform.PSN ? "fpp.button.sonystore" : "fpp.button.msstore")),
        this._btnFirstPartyStore.addTarget(this, this.onStoreButtonSelected, EventType.TAP),
        this.setInteractionState(!0)
    }
    ,
    UTFifaPointsPurchaseView.prototype.setInteractionState = function(e) {
        i.prototype.setInteractionState.call(this, e),
        this._btnCancel.setInteractionState(e),
        this._btnFinish.setInteractionState(e),
        this._btnFirstPartyStore.setInteractionState(e)
    }
    ,
    UTFifaPointsPurchaseView.prototype.setPlatform = function(e) {
        e === GamePlatform.PSN ? this._firstPartyImage.setLocalResource("images/commerce/ea-to-psn.png") : e === GamePlatform.XBL && this._firstPartyImage.setLocalResource("images/commerce/ea-to-xbl.png")
    }
    ,
    UTFifaPointsPurchaseView.prototype.setPersonaName = function(e) {
        this.__personaText.textContent = e
    }
    ,
    UTFifaPointsPurchaseView.prototype.setMessage = function(e) {
        this.__infoText.innerHTML = e
    }
    ,
    UTFifaPointsPurchaseView.prototype.setWarning = function(e) {
        this.__warningText.textContent = e,
        this.__warningText.style.display = 0 < e.length ? "block" : "none"
    }
    ,
    UTFifaPointsPurchaseView.prototype.setStoreButtonDisplay = function(e) {
        this._btnFirstPartyStore.setDisplay(e)
    }
    ,
    UTFifaPointsPurchaseView.prototype.setFinishButtonDisplay = function(e) {
        this._btnFinish.setDisplay(e)
    }
    ,
    UTFifaPointsPurchaseView.prototype.setCancelButtonDisplay = function(e) {
        this._btnCancel.setDisplay(e)
    }
    ,
    UTFifaPointsPurchaseView.prototype.setFlowState = function(e) {
        var t = this.platform === GamePlatform.PSN ? "psn" : "xbl";
        this.setMessage(""),
        this.setWarning(""),
        this.setStoreButtonDisplay(!1),
        this.setFinishButtonDisplay(!1),
        this.setCancelButtonDisplay(!1),
        e === PointsPurchaseViewState.CONNECT_TO_CONSOLE ? (this.setMessage(this.loc.localize("fpp.message.psn.connecttoconsole")),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.ACCOUNT_MISMATCH ? (this.setMessage(this.loc.localize("fpp.message." + t + ".accountmismatch")),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.AUTH_NEEDED ? (this.setMessage(this.loc.localize("fpp.message." + t + ".authneeded")),
        this.setStoreButtonDisplay(!0),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.AUTH_IN_PROGRESS ? (this.setMessage(this.loc.localize("fpp.message." + t + ".authinprogress")),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.AUTH_FAIL ? (this.setMessage(this.loc.localize("fpp.message." + t + ".authneeded")),
        this.setWarning(this.loc.localize("fpp.warning.authfailure")),
        this.setStoreButtonDisplay(!0),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.PRECHECK_WALLET_UPDATE ? (this.setMessage(this.loc.localize("fpp.message." + t + ".precheckclaimed")),
        this.setStoreButtonDisplay(!0),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.PRECHECK_FAIL ? (this.setMessage(this.loc.localize("fpp.message." + t + ".precheckfailed")),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.PROCEED_TO_STORE ? (this.setMessage(this.loc.localize("fpp.message." + t + ".proceedtostore")),
        this.setStoreButtonDisplay(!0),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.REGION_MISMATCH ? (this.setMessage(this.loc.localize("fpp.message.psn.regionmismatch")),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.STORE_IN_PROGRESS ? (this.setMessage(this.loc.localize("fpp.message." + t + ".storeinprogress")),
        this.setFinishButtonDisplay(!0)) : e === PointsPurchaseViewState.STORE_CLOSED ? (this.setMessage(this.loc.localize("fpp.message." + t + ".storeclosed")),
        this.setFinishButtonDisplay(!0)) : e === PointsPurchaseViewState.WINDOW_CLOSED ? (this.setMessage(this.loc.localize("fpp.message.windowdesync")),
        this.setCancelButtonDisplay(!0)) : e === PointsPurchaseViewState.UNKNOWN_ERROR && (this.setMessage(this.loc.localize("fpp.message.unknownerror")),
        this.setCancelButtonDisplay(!0))
    }
    ,
    UTFifaPointsPurchaseView.prototype.onFinishButtonSelected = function(e, t, i) {
        this._triggerActions(UTFifaPointsPurchaseView.Event.FINISH)
    }
    ,
    UTFifaPointsPurchaseView.prototype.onCancelButtonSelected = function(e, t, i) {
        this._triggerActions(UTFifaPointsPurchaseView.Event.CANCEL)
    }
    ,
    UTFifaPointsPurchaseView.prototype.onStoreButtonSelected = function(e, t, i) {
        this._triggerActions(UTFifaPointsPurchaseView.Event.STORE_OPEN)
    }
    ,
    UTFifaPointsPurchaseView.Event = Object.freeze({
        STORE_OPEN: "UTFifaPointsPurchaseView.STORE_OPEN",
        CANCEL: "UTFifaPointsPurchaseView.CANCEL",
        FINISH: "UTFifaPointsPurchaseView.FINISH"
    }),
    UTFifaPointsPurchaseView
}(UTTargetActionView);
UTFifaPointsPurchaseView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-fifa-points-purchase-view");
        var t = document.createElement("header");
        this.__titleText = document.createElement("h1"),
        t.appendChild(this.__titleText),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("bodySection"),
        this.__personaText = document.createElement("p"),
        i.appendChild(this.__personaText),
        this.__infoText = document.createElement("p"),
        i.appendChild(this.__infoText),
        this.__warningText = document.createElement("p"),
        this.__warningText.classList.add("warning-text"),
        i.appendChild(this.__warningText),
        this._firstPartyImage = new UTImageView,
        this._firstPartyImage.getRootElement().classList.add("ut-fifa-points-purchase-view--image"),
        i.appendChild(this._firstPartyImage.getRootElement()),
        this._btnFirstPartyStore = new UTStandardButtonControl,
        this._btnFirstPartyStore.getRootElement().classList.add("call-to-action"),
        i.appendChild(this._btnFirstPartyStore.getRootElement()),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-button-group"),
        this._btnFinish = new UTGroupButtonControl,
        o.appendChild(this._btnFinish.getRootElement()),
        this._btnCancel = new UTGroupButtonControl,
        this._btnCancel.getRootElement().classList.add("negative"),
        o.appendChild(this._btnCancel.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTFifaPointsPurchaseView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__titleText = null,
    this.__personaText = null,
    this.__infoText = null,
    this.__warningText = null,
    this._firstPartyImage.destroy(),
    this._btnFirstPartyStore.destroy(),
    this._btnFinish.destroy(),
    this._btnCancel.destroy()
}
,
UTFifaPointsPurchaseView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTFifaPointsPurchaseViewController = function(r) {
    function UTFifaPointsPurchaseViewController() {
        var e, t = r.call(this) || this, i = getAppMain().getConfigRepository(), o = services.Localization.locale, n = null === (e = services.User.getUser()) || void 0 === e ? void 0 : e.getSelectedPersona();
        return t.triggeredRecoveryAttempt = !1,
        t.storeWindowBroker = n ? t.generateFirstPartyStoreController(i, o, n) : null,
        t
    }
    return __extends(UTFifaPointsPurchaseViewController, r),
    UTFifaPointsPurchaseViewController.prototype.dealloc = function() {
        this.storeWindowBroker && (this.storeWindowBroker.dealloc(),
        this.storeWindowBroker = null),
        r.prototype.dealloc.call(this)
    }
    ,
    UTFifaPointsPurchaseViewController.prototype._getViewInstanceFromData = function() {
        var e, t, i = null === (e = services.User.getUser()) || void 0 === e ? void 0 : e.getSelectedPersona(), o = null !== (t = null == i ? void 0 : i.platform) && void 0 !== t ? t : GamePlatform.NONE;
        return new UTFifaPointsPurchaseView({
            localization: services.Localization,
            platform: o
        })
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.viewDidAppear = function() {
        var e, t;
        r.prototype.viewDidAppear.call(this);
        services.Localization;
        var i = null === (e = services.User.getUser()) || void 0 === e ? void 0 : e.getSelectedPersona()
          , o = this.getView();
        i ? (o.setPersonaName(i.name),
        o.setPlatform(i.platform),
        o.setFlowState(PointsPurchaseViewState.AUTH_NEEDED)) : o.setFlowState(PointsPurchaseViewState.UNKNOWN_ERROR),
        o.addTarget(this, this.onFinish, UTFifaPointsPurchaseView.Event.FINISH),
        o.addTarget(this, this.onCancel, UTFifaPointsPurchaseView.Event.CANCEL),
        o.addTarget(this, this.onStoreOpen, UTFifaPointsPurchaseView.Event.STORE_OPEN),
        null === (t = this.storeWindowBroker) || void 0 === t || t.startHeartbeatChecks()
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.viewWillDisappear = function() {
        var e, t;
        r.prototype.viewWillDisappear.call(this);
        var i = this.getView();
        if (i.removeTarget(this, this.onFinish, UTFifaPointsPurchaseView.Event.FINISH),
        i.removeTarget(this, this.onCancel, UTFifaPointsPurchaseView.Event.CANCEL),
        i.removeTarget(this, this.onStoreOpen, UTFifaPointsPurchaseView.Event.STORE_OPEN),
        null === (e = this.storeWindowBroker) || void 0 === e || e.stopHeartbeatChecks(),
        null === (t = this.storeWindowBroker) || void 0 === t ? void 0 : t.needsTransactionCheck()) {
            var o = this.storeWindowBroker.authenticationCode;
            this.storeWindowBroker.performEntitlementCheck(o)
        }
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.generateSonyStoreController = function(e, t, i) {
        void 0 === i && (i = !1);
        var o = t.toBCPString().toLowerCase()
          , n = e.getConfigString(EAConfigurationRepository.KEY_PSN_OAUTH_HOST)
          , r = e.getConfigString(EAConfigurationRepository.KEY_PSN_OAUTH_PATH)
          , s = e.getConfigString(i ? EAConfigurationRepository.KEY_PSN_G5_CLIENTID : EAConfigurationRepository.KEY_PSN_G4_CLIENTID)
          , a = e.getConfigString(EAConfigurationRepository.KEY_PSN_REDIRECT_URI)
          , l = e.getConfigString(EAConfigurationRepository.KEY_PSN_STORE_HOST)
          , c = e.getConfigString(i ? EAConfigurationRepository.KEY_PSN_G5_PRODUCTID : EAConfigurationRepository.KEY_PSN_G4_PRODUCTID)
          , d = new PSNStoreController({
            authPath: r,
            clientId: s,
            hostname: n,
            redirectUri: a,
            storeUri: l + "/" + o + "/category/" + c
        },services.Localization);
        return d.delegate = this,
        d
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.generateMicrosoftStoreController = function(e, t) {
        var i, o = e.getConfigString(EAConfigurationRepository.KEY_MS_CLIENTID), n = e.getConfigString(EAConfigurationRepository.KEY_MS_OAUTH_HOST), r = e.getConfigString(EAConfigurationRepository.KEY_MS_REDIRECT_URI), s = e.getConfigString(EAConfigurationRepository.KEY_MS_STORE_HOST), a = e.getConfigObject(EAConfigurationRepository.KEY_MS_STORE_ENDPOINTS), l = a && null !== (i = a[t]) && void 0 !== i ? i : "", c = new MSStoreController({
            clientId: o,
            hostname: n,
            redirectUri: r,
            storeUri: "" + s + l
        });
        return c.delegate = this,
        c
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.generateFirstPartyStoreController = function(e, t, i) {
        return i.isPlaystation ? this.generateSonyStoreController(e, t, i.isG5) : i.isXbox ? this.generateMicrosoftStoreController(e, i.sku) : null
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.onFinish = function(e, t, i) {
        var o, n, r;
        if (null === (o = this.storeWindowBroker) || void 0 === o || o.closeStoreWindow(),
        null === (n = this.storeWindowBroker) || void 0 === n ? void 0 : n.needsTransactionCheck()) {
            var s = this.storeWindowBroker.authenticationCode;
            this.storeWindowBroker.performEntitlementCheck(s)
        } else {
            var a = this.getParentViewController();
            this === (null == a ? void 0 : a.getPresentedViewController()) && (null === (r = this.getParentViewController()) || void 0 === r || r.dismissViewController())
        }
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.onCancel = function(e, t, i) {
        var o, n, r = this.getParentViewController();
        null === (o = this.storeWindowBroker) || void 0 === o || o.closeStoreWindow(),
        this === (null == r ? void 0 : r.getPresentedViewController()) && (null === (n = this.getParentViewController()) || void 0 === n || n.dismissViewController())
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.onStoreOpen = function(e, t, i) {
        var o, n, r;
        this.getView().setFlowState((null === (o = this.storeWindowBroker) || void 0 === o ? void 0 : o.isAuthenticated()) ? PointsPurchaseViewState.STORE_IN_PROGRESS : PointsPurchaseViewState.AUTH_IN_PROGRESS),
        null === (n = this.storeWindowBroker) || void 0 === n || n.openStoreWindow(),
        null === (r = this.storeWindowBroker) || void 0 === r || r.startHeartbeatChecks()
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.handleStoreAuthError = function(e) {
        this.getView().setFlowState(PointsPurchaseViewState.AUTH_FAIL)
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.handleStoreClientError = function(e) {
        var t, i, o, n = this, r = this.getView();
        if ("entitlement_fail" === e.id)
            if (this.storeWindowBroker && !this.triggeredRecoveryAttempt && services.MTX.isEntitlementRecoveryEnabled()) {
                var s = this.storeWindowBroker.authenticationCode;
                this.triggeredRecoveryAttempt = !0,
                window.setTimeout(function() {
                    var e;
                    return null === (e = n.storeWindowBroker) || void 0 === e ? void 0 : e.performEntitlementCheck(s, !0)
                }, services.MTX.getEntitlementRecoveryDelay())
            } else {
                var a = this.getParentViewController();
                this === (null == a ? void 0 : a.getPresentedViewController()) && a.dismissViewController(),
                services.Notification.queue([services.Localization.localize("fpp.notification.cannotgetpoints"), UINotificationType.NEGATIVE])
            }
        else
            "precheck_fail" === e.id ? (null === (t = this.storeWindowBroker) || void 0 === t || t.closeStoreWindow(),
            e.code === UtasErrorCode.NO_TITLE_ID ? r.setFlowState(PointsPurchaseViewState.CONNECT_TO_CONSOLE) : e.code === UtasErrorCode.ACCOUNT_MISMATCH ? r.setFlowState(PointsPurchaseViewState.ACCOUNT_MISMATCH) : e.code === UtasErrorCode.REGION_MISMATCH ? r.setFlowState(PointsPurchaseViewState.REGION_MISMATCH) : r.setFlowState(PointsPurchaseViewState.PRECHECK_FAIL)) : "unknown" === e.id ? (null === (i = this.storeWindowBroker) || void 0 === i || i.closeStoreWindow(),
            r.setFlowState(PointsPurchaseViewState.UNKNOWN_ERROR)) : "window_desync" === e.id && (null === (o = this.storeWindowBroker) || void 0 === o || o.closeStoreWindow(),
            r.setFlowState(PointsPurchaseViewState.WINDOW_CLOSED))
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.onEntitlementPreCheck = function(e) {
        this.getView().setFlowState(e ? PointsPurchaseViewState.PRECHECK_WALLET_UPDATE : PointsPurchaseViewState.PROCEED_TO_STORE)
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.onEntitlementConsume = function(e) {
        var t = this.getParentViewController();
        this === (null == t ? void 0 : t.getPresentedViewController()) && t.dismissViewController(),
        e && services.Notification.queue([services.Localization.localize("fpp.notification.pointsadded"), UINotificationType.POSITIVE])
    }
    ,
    UTFifaPointsPurchaseViewController.prototype.onStoreWindowClose = function() {
        var e;
        this.getView().setFlowState((null === (e = this.storeWindowBroker) || void 0 === e ? void 0 : e.needsTransactionCheck()) ? PointsPurchaseViewState.STORE_CLOSED : PointsPurchaseViewState.WINDOW_CLOSED)
    }
    ,
    UTFifaPointsPurchaseViewController
}(UTViewController)
  , UTGameFlowNavigationController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(r) {
    function UTGameFlowNavigationController(e, t) {
        var i = r.call(this, e || new UTCurrencyNavigationBarView, t) || this;
        return i._itemInfoStateViewModel = new UTItemInfoStateViewModel(services.UserSettings),
        i._itemInfoSwitchButton = new UTItemInfoChangeButtonControl,
        i._settingsNavButton = new UTNavigationButtonControl,
        i
    }
    return __extends(UTGameFlowNavigationController, r),
    UTGameFlowNavigationController.prototype.init = function() {
        this.initialized || (r.prototype.init.call(this),
        this._itemInfoSwitchButton.init(),
        this._itemInfoSwitchButton.setInteractionState(!0),
        this._itemInfoSwitchButton.addTarget(this, this._eItemInfoSwitchButtonSelected, EventType.TAP),
        this._settingsNavButton.init(),
        this._settingsNavButton.addClass("settings-btn"),
        this._settingsNavButton.setInteractionState(!0),
        this._settingsNavButton.addTarget(this, this._eSettingsButtonSelected, EventType.TAP),
        this._navigationBar instanceof UTCurrencyNavigationBarView && (this._navigationBar.displayCurrencies(!1),
        this._navigationBar.displayClubInfo(!1)))
    }
    ,
    UTGameFlowNavigationController.prototype.dealloc = function() {
        this._settingsNavButton.dealloc(),
        r.prototype.dealloc.call(this)
    }
    ,
    UTGameFlowNavigationController.prototype.getRootPrimaryNavigationItem = function() {
        return this._settingsNavButton
    }
    ,
    UTGameFlowNavigationController.prototype.getSecondaryNavigationItem = function() {
        if (this._currentController) {
            var e = this._currentController.getNavigationItem();
            if (JSUtils.isValid(e))
                return e
        }
        return this._itemInfoSwitchButton
    }
    ,
    UTGameFlowNavigationController.prototype.viewDidAppear = function() {
        r.prototype.viewDidAppear.call(this),
        this.setNavigationStyle(isPhone() ? UTNavigationBarView.Style.DEFAULT : UTNavigationBarView.Style.LANDSCAPE),
        this._itemInfoSwitchButton.setCurrentState(this._itemInfoStateViewModel.getState());
        var e = getDefaultDispatcher()
          , t = services.User.getUser();
        if (e.addObserver(AppNotification.APP_RESUME, this, this._nAppResumed),
        e.addObserver(AppNotification.UI_ITEM_STATE_CHANGE, this, this._nItemStateChanged),
        t && this._navigationBar instanceof UTCurrencyNavigationBarView) {
            var i = t.getSelectedPersona()
              , o = null == i ? void 0 : i.getCurrentClub();
            this._navigationBar.setCurrencies(t.getCurrencies()),
            this._navigationBar.displayCurrencies(!0),
            o && this.setClubInfo(o.name, o.established, o.assetId);
            var n = this._hasCommerceAccess();
            this._navigationBar.toggleClass("currency-purchase", n),
            n && (this._navigationBar.addTarget(this, this._eNavigationBarTapped, EventType.TAP),
            (null == i ? void 0 : i.isPC) && utils.OriginStore.onCheckout.observe(this, this._eOriginCheckout)),
            e.addObserver(AppNotification.ITEM_ACTIVATE, this, this._nItemActivated),
            e.addObserver(AppNotification.USER_CURRENCY_UPDATE, this, this._nCurrencyUpdated)
        }
    }
    ,
    UTGameFlowNavigationController.prototype.viewWillDisappear = function() {
        r.prototype.viewWillDisappear.call(this),
        utils.OriginStore.onCheckout.unobserve(this),
        this._navigationBar.removeTarget(this, this._eNavigationBarTapped, EventType.TAP);
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.APP_RESUME, this),
        e.removeObserver(AppNotification.ITEM_ACTIVATE, this),
        e.removeObserver(AppNotification.UI_ITEM_STATE_CHANGE, this),
        e.removeObserver(AppNotification.USER_CURRENCY_UPDATE, this)
    }
    ,
    UTGameFlowNavigationController.prototype.didPush = function(e) {
        this.tabBarItem && this.tabBarItem.togglePopToRootDisplayStyle(1 <= this._childViewControllers.length && this._currentController !== this._rootController),
        r.prototype.didPush.call(this, e)
    }
    ,
    UTGameFlowNavigationController.prototype.toggleFUTLogo = function(e) {
        this._navigationBar.toggleClass("has-fut-logo", e)
    }
    ,
    UTGameFlowNavigationController.prototype.setClubInfo = function(e, t, i) {
        this._navigationBar instanceof UTCurrencyNavigationBarView && (this._navigationBar.setClubInfo(e, t),
        this._navigationBar.setClubBadge(null != i ? i : 0),
        this._navigationBar.displayClubInfo(!0))
    }
    ,
    UTGameFlowNavigationController.prototype._hasCommerceAccess = function() {
        var e = services.User.getUser()
          , t = null == e ? void 0 : e.getSelectedPersona();
        return !!t && (t.isPC || t.isPlaystation || t.isXbox) && getAppMain().getConfigRepository().getConfigArray(EAConfigurationRepository.KEY_BANNED_COUNTRIES).indexOf(null == e ? void 0 : e.country) < 0 && !!t && services.MTX.isMTXEnabled() && (t.isPlaystation || t.isXbox || t.isPC && utils.OriginStore.storeLoaded)
    }
    ,
    UTGameFlowNavigationController.prototype._eSettingsButtonSelected = function(e, t, i) {
        var o = new UTAppSettingsViewController;
        o.init(),
        this.pushViewController(o)
    }
    ,
    UTGameFlowNavigationController.prototype._eItemInfoSwitchButtonSelected = function(e, t, i) {
        this._itemInfoSwitchButton.setCurrentState(this._itemInfoStateViewModel.nextState())
    }
    ,
    UTGameFlowNavigationController.prototype._eNavigationBarTapped = function(e, t, i) {
        function yQb() {
            var e, t = services.User.getUser(), i = null !== (e = null == t ? void 0 : t.getSelectedPersona()) && void 0 !== e ? e : null, o = services.Localization;
            if (DebugUtils.Assert(JSUtils.isValid(t), "Missing user entity when launching FIFA points purchase flow"),
            t && t.hasTradeAccess()) {
                if (null == i ? void 0 : i.isPC)
                    utils.OriginStore.openStore();
                else if ((null == i ? void 0 : i.isPlaystation) || (null == i ? void 0 : i.isXbox)) {
                    var n = new UTFifaPointsPurchaseViewController;
                    n.modalDisplayStyle = "form",
                    n.modalCanDismissFromShield = !1,
                    s.presentViewController(n)
                }
            } else {
                var r = new EADialogViewController({
                    dialogOptions: [{
                        labelEnum: enums.UIDialogOptions.OK
                    }],
                    message: o.localize("popup.error.body.needtradeaccesstobuypoints"),
                    title: o.localize("popup.error.title.needtradeaccesstobuypoints")
                });
                r.init(),
                r.modalDisplayDimensions.width = "380px",
                r.modalCanDismissFromShield = !1,
                gPopupClickShield.setActivePopup(r)
            }
        }
        function zQb(e, t) {
            if (e.unobserve(s),
            t === UTPlayerHealthLimitPopupView.Events.IGNORE_TAPPED)
                yQb(),
                services.PlayerHealth.storeLimitIgnoredTimestamp(PlayerHealthStatId.POINTS_PURCHASED);
            else if (t === UTPlayerHealthLimitPopupView.Events.REVIEW_TAPPED) {
                var i = new UTPlayerHealthViewController;
                i.init(),
                s.pushViewController(i, !0)
            }
        }
        function AQb(e, t) {
            if (e.unobserve(s),
            t.success && JSUtils.isObject(t.data) && t.data.playerHealth) {
                var i = t.data.playerHealth
                  , o = i.getStatById(PlayerHealthStatId.POINTS_PURCHASED);
                if (i.enabled && o && o.isLimitReached()) {
                    var n = new UTPlayerHealthLimitPopupViewController
                      , r = n.getView();
                    n.init(),
                    n.onExit.observe(s, zQb),
                    r.setContentByType(o.id, o.limit),
                    gPopupClickShield.setActivePopup(n)
                } else
                    yQb()
            } else
                yQb()
        }
        var s = this;
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Configuration.requestSettingsData().observe(this, function(e, t) {
            e.unobserve(s);
            var i = s._hasCommerceAccess();
            s._navigationBar.toggleClass("currency-purchase", i),
            i && (services.PlayerHealth.isIgnoreLimitPeriodExpired(PlayerHealthStatId.POINTS_PURCHASED) ? services.PlayerHealth.readPlayerHealth().observe(s, AQb) : yQb()),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    UTGameFlowNavigationController.prototype._eOriginCheckout = function(e, t) {
        var i, o, n = services.User.getUser();
        (null === (o = null === (i = services.User.getUser()) || void 0 === i ? void 0 : i.getSelectedPersona()) || void 0 === o ? void 0 : o.isPC) ? services.MTX.consumeEntitlements().observe(this, function _onMTXCheck(e, t) {
            e.unobserve(this);
            var i = t.success;
            n && (n.hasUnrecoveredFIFAPointsTransaction = !i),
            i ? services.User.requestCurrencies() : services.Notification.queue([services.Localization.localize("popup.error.mobile.invalidTransactionState"), UINotificationType.NEGATIVE])
        }) : services.User.requestCurrencies()
    }
    ,
    UTGameFlowNavigationController.prototype._nItemActivated = function(e, t, i) {
        var o, n = services.User.getUser();
        if (n && this._navigationBar instanceof UTCurrencyNavigationBarView) {
            var r = null === (o = null == n ? void 0 : n.getSelectedPersona()) || void 0 === o ? void 0 : o.getCurrentClub();
            r && this._navigationBar.setClubBadge(r.assetId)
        }
    }
    ,
    UTGameFlowNavigationController.prototype._nCurrencyUpdated = function(e, t, i) {
        this._navigationBar instanceof UTCurrencyNavigationBarView && (this._navigationBar.setCurrency(i.currency),
        this._navigationBar.displayCurrencies(!0))
    }
    ,
    UTGameFlowNavigationController.prototype._nAppResumed = function(e, t, i) {
        var o = this;
        this.getCurrentController()instanceof UTShowOffSquadOverviewViewController || !services.Squad.hasExternalShowOffSquad() || (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Squad.loadShowOffSquad().observe(this, function(e, t) {
            if (e.unobserve(o),
            t.success && t.data && t.data.showOff) {
                var i = isPhone() ? new UTShowOffSquadOverviewViewController : new UTShowOffSquadSplitViewController;
                i.initWithSquad(t.data.showOff.squad),
                o.pushViewController(i)
            } else
                services.Notification.queue([services.Localization.localize("squads.showoff.error.load"), UINotificationType.NEGATIVE]),
                NetworkErrorManager.handleStatus(t.status);
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }))
    }
    ,
    UTGameFlowNavigationController.prototype._nItemStateChanged = function(e, t, i) {
        t !== this._itemInfoStateViewModel && this._itemInfoSwitchButton.setCurrentState(i.state)
    }
    ,
    UTGameFlowNavigationController
}(UTNavigationController))
  , UTWorldCupIntroView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTWorldCupIntroView() {
        return e.call(this) || this
    }
    return __extends(UTWorldCupIntroView, e),
    UTWorldCupIntroView.prototype.init = function() {
        e.prototype.init.call(this),
        this._btnContinue.init(),
        this._landscapeImage.init(),
        this._mobileImage.init()
    }
    ,
    UTWorldCupIntroView.prototype.setTitle = function(e) {
        this.__title.innerHTML = e
    }
    ,
    UTWorldCupIntroView.prototype.setTopDescription = function(e) {
        this.__topDescription.textContent = e
    }
    ,
    UTWorldCupIntroView.prototype.setBottomDescription = function(e) {
        this.__bottomDescription.textContent = e
    }
    ,
    UTWorldCupIntroView.prototype.setStepImage = function(e) {
        var t = "images/worldcup/intro/"
          , i = "intro_" + e + ".png";
        isPhone() ? this._mobileImage.setLocalResource(t + i) : this._landscapeImage.setLocalResource(t + i)
    }
    ,
    UTWorldCupIntroView.prototype.getContinueButton = function() {
        return this._btnContinue
    }
    ,
    UTWorldCupIntroView
}(UTView));
UTWorldCupIntroView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("sm-ut-content-container"),
        e.classList.add("ut-content-container"),
        e.classList.add("ut-world-cup-intro-view");
        var t = document.createElement("div");
        t.classList.add("ut-content");
        var i = document.createElement("div");
        i.classList.add("ut-world-cup-intro-view--landscape-image-container"),
        this._landscapeImage = new UTImageView,
        i.appendChild(this._landscapeImage.getRootElement()),
        t.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-world-cup-intro-view--content");
        var n = document.createElement("div");
        n.classList.add("ut-world-cup-intro-view--body"),
        this.__title = document.createElement("h2"),
        this.__title.classList.add("title"),
        n.appendChild(this.__title),
        this.__topDescription = document.createElement("p"),
        n.appendChild(this.__topDescription),
        this._mobileImage = new UTImageView,
        this._mobileImage.getRootElement().classList.add("ut-world-cup-intro-view--mobile-image"),
        n.appendChild(this._mobileImage.getRootElement()),
        this.__bottomDescription = document.createElement("p"),
        this.__bottomDescription.appendChild(document.createTextNode("This is description two.")),
        n.appendChild(this.__bottomDescription),
        o.appendChild(n);
        var r = document.createElement("div");
        r.classList.add("ut-button-container"),
        this._btnContinue = new UTStandardButtonControl,
        this._btnContinue.getRootElement().classList.add("call-to-action"),
        r.appendChild(this._btnContinue.getRootElement()),
        o.appendChild(r),
        t.appendChild(o),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTWorldCupIntroView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._landscapeImage.destroy(),
    this.__title = null,
    this.__topDescription = null,
    this._mobileImage.destroy(),
    this.__bottomDescription = null,
    this._btnContinue.destroy()
}
,
UTWorldCupIntroView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWorldCupTableCellView = function(i) {
    function UTWorldCupTableCellView() {
        return i.call(this) || this
    }
    return __extends(UTWorldCupTableCellView, i),
    UTWorldCupTableCellView.prototype.init = function() {
        i.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTWorldCupTableCellView.prototype.setInteractionState = function(e) {
        var t = this._interactionState;
        i.prototype.setInteractionState.call(this, e),
        this._interactionState !== t && this.toggleClass(enums.UIState.DISABLED, !this._interactionState)
    }
    ,
    UTWorldCupTableCellView.prototype.toggleSelected = function(e) {
        this.toggleClass(enums.UIState.SELECTED, e)
    }
    ,
    UTWorldCupTableCellView.prototype.setFlagImage = function(e) {
        var t = "images/worldcup/flags/f_" + e + ".png";
        this._flagImage.setLocalResource(t)
    }
    ,
    UTWorldCupTableCellView.prototype.setName = function(e) {
        this.__name.textContent = e
    }
    ,
    UTWorldCupTableCellView.prototype._mouseEnter = function(e) {
        this.addClass(enums.UIState.HOVER)
    }
    ,
    UTWorldCupTableCellView.prototype._mouseLeave = function(e) {
        this.removeClass(enums.UIState.HOVER)
    }
    ,
    UTWorldCupTableCellView.prototype._touchStarted = function(e) {
        i.prototype._touchStarted.call(this, e),
        this.addClass(enums.UIState.ACTIVE)
    }
    ,
    UTWorldCupTableCellView.prototype._touchMoved = function(e) {
        i.prototype._touchMoved.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTWorldCupTableCellView.prototype._touchEnded = function(e) {
        i.prototype._touchEnded.call(this, e),
        this.removeClass(enums.UIState.ACTIVE)
    }
    ,
    UTWorldCupTableCellView.prototype._tapDetected = function(e) {
        i.prototype._tapDetected.call(this, e),
        this._triggerActions(EventType.TAP)
    }
    ,
    UTWorldCupTableCellView.Event = {
        TAB_SELECTED: "UTWorldCupTableCellView.Event.TAB_SELECTED"
    },
    UTWorldCupTableCellView
}(UTTargetActionView);
UTWorldCupTableCellView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-world-cup-table-cell-view"),
        this._flagImage = new UTImageView,
        this._flagImage.getRootElement().classList.add("ut-world-cup-table-cell-view--image"),
        e.appendChild(this._flagImage.getRootElement()),
        this.__name = document.createElement("span"),
        this.__name.classList.add("ut-world-cup-table-cell-view--name"),
        e.appendChild(this.__name),
        this.__root = e,
        this._generated = !0
    }
}
,
UTWorldCupTableCellView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._flagImage.destroy(),
    this.__name = null
}
,
UTWorldCupTableCellView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWorldCupTableHeaderView = function(e) {
    function UTWorldCupTableHeaderView() {
        return e.call(this) || this
    }
    return __extends(UTWorldCupTableHeaderView, e),
    UTWorldCupTableHeaderView.prototype.init = function() {
        e.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTWorldCupTableHeaderView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTWorldCupTableHeaderView
}(UTTargetActionView);
UTWorldCupTableHeaderView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("header");
        e.classList.add("ut-world-cup-table-header-view"),
        this.__title = document.createElement("p"),
        this.__title.classList.add("ut-world-cup-table-header-view--title"),
        e.appendChild(this.__title),
        this.__root = e,
        this._generated = !0
    }
}
,
UTWorldCupTableHeaderView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null
}
,
UTWorldCupTableHeaderView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWorldCupSelectionView = function(t) {
    function UTWorldCupSelectionView() {
        var e = t.call(this) || this;
        return e.processedGroups = [],
        e.cells = [],
        e
    }
    return __extends(UTWorldCupSelectionView, t),
    UTWorldCupSelectionView.prototype.init = function() {
        t.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTWorldCupSelectionView.prototype.setTitle = function(e) {
        this.__title.innerHTML = e
    }
    ,
    UTWorldCupSelectionView.prototype.setDescription = function(e) {
        this.__description.textContent = e
    }
    ,
    UTWorldCupSelectionView.prototype.getCells = function() {
        return this.cells
    }
    ,
    UTWorldCupSelectionView.prototype.onPackSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTWorldCupTableCellView.Event.TAB_SELECTED, {
            nationId: i.nationId,
            packId: i.packId
        })
    }
    ,
    UTWorldCupSelectionView.prototype.generatePackOptions = function(e) {
        var i = this
          , o = services.Localization;
        e.forEach(function(e) {
            i.processedGroups.includes(e.group) || function(e) {
                var t = new UTWorldCupTableHeaderView;
                t.setTitle(o.localize("worldcup.group" + e)),
                i.processedGroups.push(e),
                i.addSubview(t, i.__optionsTable)
            }(e.group),
            function(e) {
                var t = new UTWorldCupTableCellView;
                t.init(),
                t.setName(o.localize("search.nationName.nation" + e.nationId)),
                t.setFlagImage(e.nationId),
                t.addTarget(i, function() {
                    return i.onPackSelected(t, EventType.TAP, {
                        nationId: e.nationId,
                        packId: e.packId
                    })
                }, EventType.TAP),
                i.cells.push(t),
                i.addSubview(t, i.__optionsTable)
            }(e)
        }),
        this.layoutSubviews()
    }
    ,
    UTWorldCupSelectionView
}(UTTargetActionView);
UTWorldCupSelectionView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("sm-ut-content-container"),
        e.classList.add("ut-content-container"),
        e.classList.add("ut-world-cup-selection-view");
        var t = document.createElement("div");
        t.classList.add("ut-content");
        var i = document.createElement("div");
        i.classList.add("ut-world-cup-selection-view--content");
        var o = document.createElement("div");
        o.classList.add("ut-world-cup-selection-view--header"),
        this.__title = document.createElement("h2"),
        this.__title.classList.add("ut-world-cup-selection-view--title"),
        o.appendChild(this.__title),
        this.__description = document.createElement("p"),
        this.__description.classList.add("ut-world-cup-selection-view--description"),
        o.appendChild(this.__description),
        i.appendChild(o),
        this.__optionsTable = document.createElement("div"),
        this.__optionsTable.classList.add("ut-world-cup-selection-view--table"),
        i.appendChild(this.__optionsTable),
        t.appendChild(i),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTWorldCupSelectionView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this.__description = null,
    this.__optionsTable = null
}
,
UTWorldCupSelectionView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWorldCupSelectionViewController = function(o) {
    function UTWorldCupSelectionViewController() {
        var e = o.call(this) || this;
        return e.vm = new UTWorldCupStateViewModel(accessobjects.WorldCup),
        e
    }
    return __extends(UTWorldCupSelectionViewController, o),
    UTWorldCupSelectionViewController.prototype._getTelemetryId = function() {
        return "World Cup - Starter Pack Selection Screen"
    }
    ,
    UTWorldCupSelectionViewController.prototype._getViewInstanceFromData = function() {
        return new UTWorldCupSelectionView
    }
    ,
    UTWorldCupSelectionViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("worldcup.select.nav-title")
    }
    ,
    UTWorldCupSelectionViewController.prototype.viewDidAppear = function() {
        o.prototype.viewDidAppear.call(this),
        TelemetryManager.trackPage(TelemetryManager.Sections.WORLD_CUP, this._getTelemetryId());
        var e = services.Localization
          , t = this.getNavigationController()
          , i = this.getView();
        t instanceof UTWorldCupNavigationController && t.setCurrentStep(2),
        i.init(),
        i.setTitle(e.localize("worldcup.select.title")),
        i.setDescription(e.localize("worldcup.select.description")),
        this.requestData(),
        i.addTarget(this, this.eWorldCupPackConfirmPopup, UTWorldCupTableCellView.Event.TAB_SELECTED)
    }
    ,
    UTWorldCupSelectionViewController.prototype.viewDidDisappear = function() {
        this.getView().removeTarget(this, this.eWorldCupPackConfirmPopup, UTWorldCupTableCellView.Event.TAB_SELECTED)
    }
    ,
    UTWorldCupSelectionViewController.prototype.eWorldCupPackConfirmPopup = function(i, e, o) {
        var n = this
          , t = services.Localization
          , r = new EADialogViewController({
            dialogOptions: [{
                labelEnum: enums.UIDialogOptions.OK
            }, {
                labelEnum: enums.UIDialogOptions.CANCEL,
                negativeActionFlag: !0
            }],
            message: t.localize("worldcup.starterpack.popup.description", [t.localize("search.nationName.nation" + o.nationId)]),
            title: t.localize("worldcup.starterpack.popup.title")
        });
        r.init(),
        r.modalDisplayDimensions.width = "380px",
        gPopupClickShield.setActivePopup(r),
        r.onExit.observe(this, function(e, t) {
            hasConnection() && (t === enums.UIDialogOptions.CANCEL ? i.getCells().forEach(function(e) {
                return e.toggleSelected(!1)
            }) : (n.vm.countryId = o.nationId,
            n.vm.selectStarterPack(o.packId).observe(n, function(e, t) {
                e.unobserve(n),
                t.success && t.response && JSUtils.isObject(t.response) ? getAppMain().getLoginController().login(!0) : NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : services.Notification.queue([services.Localization.localize("worldcup.select.loaderror"), UINotificationType.NEGATIVE])
            })))
        })
    }
    ,
    UTWorldCupSelectionViewController.prototype.requestData = function() {
        var n = this;
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.vm.requestPacks().observe(this, function(e, t) {
            var i;
            e.unobserve(n);
            var o = n.getView();
            t.success && t.response && !JSUtils.isString(t.response) ? (o.init(),
            o.generatePackOptions(n.vm.nationPacks)) : (services.Notification.queue([services.Localization.localize("worldcup.select.loaderror"), UINotificationType.NEGATIVE]),
            NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : null === (i = n.getNavigationController()) || void 0 === i || i.popViewController()),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    UTWorldCupSelectionViewController
}(UTViewController)
  , UTWorldCupIntroViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTWorldCupIntroViewController() {
        var e = o.call(this) || this;
        return e.step = 1,
        e
    }
    return __extends(UTWorldCupIntroViewController, o),
    UTWorldCupIntroViewController.prototype._getTelemetryId = function() {
        return "World Cup - Intro Screen"
    }
    ,
    UTWorldCupIntroViewController.prototype.viewDidAppear = function() {
        o.prototype.viewDidAppear.call(this);
        var e = services.Localization
          , t = this.getNavigationController()
          , i = this.getView();
        t instanceof UTWorldCupNavigationController && (t.setCurrentStep(1),
        t.addNavBarClass("onboarding-select"),
        isPhone() || (t.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
        t.setToolbarVisibility(!0))),
        i.setTitle(e.localize("worldcup.intro.title" + this.step)),
        i.setTopDescription(e.localize("worldcup.intro.topdescription" + this.step)),
        i.setBottomDescription(e.localize("worldcup.intro.bottomdescription" + this.step)),
        i.setStepImage(this.step),
        i.getContinueButton().setText(e.localize("worldcup.button.continue")),
        TelemetryManager.trackPage(TelemetryManager.Sections.WORLD_CUP, this._getTelemetryId()),
        i.getContinueButton().addTarget(this, this.onTapEvent, EventType.TAP)
    }
    ,
    UTWorldCupIntroViewController.prototype.viewWillDisappear = function() {
        o.prototype.viewWillDisappear.call(this),
        this.getView().getContinueButton().removeTarget(this, this.onTapEvent, EventType.TAP)
    }
    ,
    UTWorldCupIntroViewController.prototype._getViewInstanceFromData = function() {
        return new UTWorldCupIntroView
    }
    ,
    UTWorldCupIntroViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("worldcup.intro.nav-title")
    }
    ,
    UTWorldCupIntroViewController.prototype.onTapEvent = function(e, t, i) {
        var o = this.getView()
          , n = services.Localization;
        if (this.step++,
        this.step < 4)
            o.setTitle(n.localize("worldcup.intro.title" + this.step)),
            o.setTopDescription(n.localize("worldcup.intro.description" + this.step)),
            o.setStepImage(this.step);
        else {
            var r = this.getNavigationController()
              , s = new UTWorldCupSelectionViewController;
            s.init(),
            null == r || r.pushViewController(s, !0)
        }
    }
    ,
    UTWorldCupIntroViewController
}(UTViewController))
  , UTWorldCupNavigationController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(n) {
    function UTWorldCupNavigationController(e, t) {
        var i = n.call(this, new UTOnboardingNavbarView, new UTOnboardingToolbarView) || this;
        return i.settingsButton = new UTNavigationButtonControl,
        i.switchBackWithSettings = !1,
        i
    }
    return __extends(UTWorldCupNavigationController, n),
    UTWorldCupNavigationController.prototype.addNavBarClass = function(e) {
        this._navigationBar.addClass(e)
    }
    ,
    UTWorldCupNavigationController.prototype.initWithViewmodel = function(e) {
        this.initialized || (DebugUtils.Assert(e instanceof UTWorldCupStateViewModel, "Expected a UTWorldCupStateViewModel instance."),
        this.viewmodel = e,
        this.init())
    }
    ,
    UTWorldCupNavigationController.prototype.dealloc = function() {
        this.settingsButton.dealloc(),
        this.viewmodel = null,
        n.prototype.dealloc.call(this)
    }
    ,
    UTWorldCupNavigationController.prototype._getRootControllerInstance = function() {
        return new UTWorldCupIntroViewController
    }
    ,
    UTWorldCupNavigationController.prototype.getRootPrimaryNavigationItem = function() {
        return this.settingsButton
    }
    ,
    UTWorldCupNavigationController.prototype.viewDidAppear = function() {
        this._toolbar instanceof UTOnboardingToolbarView && this._toolbar.getSettingsButton().addTarget(this, this._eSettingsSelected, EventType.TAP),
        this.settingsButton.init(),
        this.settingsButton.addClass("settings-btn"),
        this.settingsButton.addTarget(this, this._eSettingsSelected, EventType.TAP),
        this.showSettings(!0),
        this._navigationBar instanceof UTOnboardingNavbarView && (this._navigationBar.createSteps(2),
        this._navigationBar.setHeader("wc.starter-pack.title")),
        this.showStepChain(!0),
        this.setNavigationVisibility(!0),
        this.setToolbarVisibility(!isPhone()),
        n.prototype.viewDidAppear.call(this)
    }
    ,
    UTWorldCupNavigationController.prototype.setCurrentStep = function(e) {
        this._navigationBar instanceof UTOnboardingNavbarView && this._navigationBar.setCurrentStep(e)
    }
    ,
    UTWorldCupNavigationController.prototype.showStepChain = function(e) {
        this._navigationBar instanceof UTOnboardingNavbarView && this._navigationBar.showStepChain(e);
        var t = this._navigationBar.getRootElement().clientHeight + "px"
          , i = this.getView().getContentContainer();
        i && (i.style.top = t)
    }
    ,
    UTWorldCupNavigationController.prototype.showSettings = function(e) {
        this.switchBackWithSettings = !!e,
        this.getPrimaryNavigationItem().toggleClass("settings-btn", this.switchBackWithSettings)
    }
    ,
    UTWorldCupNavigationController.prototype.getOnboardingState = function() {
        return this.viewmodel
    }
    ,
    UTWorldCupNavigationController.prototype.gotoSettingsView = function() {
        var e = new UTAppSettingsViewController;
        e.init(),
        this.showSettings(!1),
        this.setNavigationStyle(isPhone() ? UTNavigationBarView.Style.DEFAULT : UTNavigationBarView.Style.LANDSCAPE),
        this.setToolbarVisibility(!1),
        this.pushViewController(e)
    }
    ,
    UTWorldCupNavigationController.prototype._eSettingsSelected = function(e, t, i) {
        this.gotoSettingsView()
    }
    ,
    UTWorldCupNavigationController.prototype._eBackButtonTapped = function(e, t, i) {
        if (this.switchBackWithSettings)
            this.gotoSettingsView();
        else {
            var o = this._currentController instanceof UTAppSettingsViewController;
            n.prototype._eBackButtonTapped.call(this, e, t, i),
            o && this.showSettings(!0)
        }
    }
    ,
    UTWorldCupNavigationController
}(UTNavigationController))
  , UTSBCChallengeRequirementsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTSBCChallengeRequirementsView() {
        return e.call(this) || this
    }
    return __extends(UTSBCChallengeRequirementsView, e),
    UTSBCChallengeRequirementsView.prototype.generateRequirementListRow = function(e, t, i) {
        var o = document.createElement("li");
        return o.textContent = e,
        t && o.classList.add("complete"),
        JSUtils.isNumber(i) && -1 < i && o.setAttribute("data-after", "(" + i + ")"),
        o
    }
    ,
    UTSBCChallengeRequirementsView.prototype.renderChallengeRequirements = function(n, r) {
        var s = this;
        requestAnimationFrame(function() {
            s.__requirementsTitle.textContent = services.Localization.localize("sbc.requirements.challenge"),
            DOMKit.empty(s.__requirements);
            var e = n.squad
              , t = n.eligibilityRequirements.map(function(e) {
                return s.generateRequirementListRow(e.buildString(), n.isRequirementMet(e), n.getRequirementCounter(e))
            });
            if (e && r) {
                var i = services.Localization.localize("sbc.requirements.numplayers") + " " + e.getNumOfRequiredPlayers()
                  , o = s.generateRequirementListRow(i, e.isSquadFull());
                t.push(o)
            }
            t.forEach(function(e) {
                return s.__requirements.appendChild(e)
            })
        })
    }
    ,
    UTSBCChallengeRequirementsView
}(UTView));
UTSBCChallengeRequirementsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("rewards-container"),
        this.__requirementsTitle = document.createElement("h3"),
        this.__requirementsTitle.classList.add("title"),
        e.appendChild(this.__requirementsTitle),
        this.__requirements = document.createElement("ul"),
        this.__requirements.classList.add("sbc-requirements-checklist"),
        e.appendChild(this.__requirements),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCChallengeRequirementsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__requirementsTitle = null,
    this.__requirements = null
}
,
UTSBCChallengeRequirementsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCChallengeDetailsView = function(e) {
    function UTSBCChallengeDetailsView() {
        return e.call(this) || this
    }
    return __extends(UTSBCChallengeDetailsView, e),
    UTSBCChallengeDetailsView.prototype.render = function(e, t, i, o) {
        void 0 === i && (i = !1),
        this.__description.textContent = e.description;
        var n = o ? t : e.awards
          , r = o ? "sbc.rewards.title" : "sbc.rewards.challenge";
        this.__rewardsTitle.textContent = services.Localization.localize(r),
        this.setAwards(n),
        this._requirements.renderChallengeRequirements(e, i)
    }
    ,
    UTSBCChallengeDetailsView.prototype.setAwards = function(e) {
        this._rewardsCarousel.isOn() || this._rewardsCarousel.setupRewards(e)
    }
    ,
    UTSBCChallengeDetailsView.prototype.setChallengeRequirements = function(e, t) {
        this._requirements.renderChallengeRequirements(e, t)
    }
    ,
    UTSBCChallengeDetailsView
}(UTView);
UTSBCChallengeDetailsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("challenge-details"),
        this.__description = document.createElement("div"),
        this.__description.classList.add("description"),
        e.appendChild(this.__description),
        this._requirements = new UTSBCChallengeRequirementsView,
        e.appendChild(this._requirements.getRootElement());
        var t = document.createElement("div");
        t.classList.add("ut-sbc-rewards-carousel"),
        t.classList.add("rewards-container"),
        this.__rewardsTitle = document.createElement("span"),
        this.__rewardsTitle.classList.add("title"),
        t.appendChild(this.__rewardsTitle),
        this._rewardsCarousel = new UTRewardsCarouselView,
        t.appendChild(this._rewardsCarousel.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCChallengeDetailsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__description = null,
    this._requirements.destroy(),
    this.__rewardsTitle = null,
    this._rewardsCarousel.destroy()
}
,
UTSBCChallengeDetailsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCRequirementsPopupView = function(e) {
    function UTSBCRequirementsPopupView() {
        return e.call(this) || this
    }
    return __extends(UTSBCRequirementsPopupView, e),
    UTSBCRequirementsPopupView.prototype.init = function() {
        e.prototype.init.call(this),
        this._btnConfirm.init(),
        this._btnConfirm.addTarget(this, this.bubbleEvent, EventType.TAP),
        this._exitBtn.init(),
        this._exitBtn.addTarget(this, this.bubbleEvent, EventType.TAP)
    }
    ,
    UTSBCRequirementsPopupView.prototype.render = function(e, t, i, o) {
        this.__title.textContent = e.name,
        this._challengeDetails.render(e, t, i, o);
        var n = "sbc.overlay.btn.startChallenge";
        e.isInProgress() && (n = "sbc.overlay.btn.submitChallenge",
        e.hasExpired(!0) ? (n = "sbc.sets.expired",
        this._btnConfirm.setInteractionState(!1)) : e.meetsRequirements() || this._btnConfirm.setInteractionState(!1)),
        this._btnConfirm.setText(services.Localization.localize(n))
    }
    ,
    UTSBCRequirementsPopupView.prototype.bubbleEvent = function(e, t, i) {
        e === this._btnConfirm ? this._triggerActions(UTSBCRequirementsPopupView.Event.CONFIRM) : e === this._exitBtn && this._triggerActions(UTSBCRequirementsPopupView.Event.EXIT)
    }
    ,
    UTSBCRequirementsPopupView.Event = Object.freeze({
        CONFIRM: "UTSBCRequirementsPopupView.Event.CONFIRM",
        EXIT: "UTSBCRequirementsPopupView.Event.EXIT"
    }),
    UTSBCRequirementsPopupView
}(UTTargetActionView);
UTSBCRequirementsPopupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-sbc-requirements-popup");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        this._exitBtn = new UTImageButtonControl,
        this._exitBtn.getRootElement().classList.add("exit-btn"),
        t.appendChild(this._exitBtn.getRootElement()),
        e.appendChild(t),
        this._challengeDetails = new UTSBCChallengeDetailsView,
        e.appendChild(this._challengeDetails.getRootElement());
        var i = document.createElement("footer");
        this._btnConfirm = new UTStandardButtonControl,
        this._btnConfirm.getRootElement().classList.add("call-to-action"),
        i.appendChild(this._btnConfirm.getRootElement()),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCRequirementsPopupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._exitBtn.destroy(),
    this._challengeDetails.destroy(),
    this._btnConfirm.destroy()
}
,
UTSBCRequirementsPopupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCRequirementsPopupViewController = function(n) {
    function UTSBCRequirementsPopupViewController(e, t, i) {
        var o = n.call(this) || this;
        return o.challengeId = t,
        o.onConfirm = new EAObservable,
        o.set = e,
        o.showCustomRequirements = i,
        o
    }
    return __extends(UTSBCRequirementsPopupViewController, n),
    UTSBCRequirementsPopupViewController.prototype.dealloc = function() {
        this.onConfirm.dealloc(),
        n.prototype.dealloc.call(this)
    }
    ,
    UTSBCRequirementsPopupViewController.prototype._getViewInstanceFromData = function() {
        return new UTSBCRequirementsPopupView
    }
    ,
    UTSBCRequirementsPopupViewController.prototype.viewDidAppear = function() {
        n.prototype.viewDidAppear.call(this);
        var e = this.getView()
          , t = this.set.getChallenge(this.challengeId);
        t && (e.render(t, this.set.awards, this.showCustomRequirements, this.set.isSingleChallenge),
        e.addTarget(this, this.closePopup, UTSBCRequirementsPopupView.Event.EXIT),
        e.addTarget(this, this.onConfirmChallenge, UTSBCRequirementsPopupView.Event.CONFIRM))
    }
    ,
    UTSBCRequirementsPopupViewController.prototype.viewWillDisappear = function() {
        var e = this.getView();
        n.prototype.viewWillDisappear.call(this),
        e.removeTarget(this, this.closePopup, UTSBCRequirementsPopupView.Event.EXIT),
        e.removeTarget(this, this.onConfirmChallenge, UTSBCRequirementsPopupView.Event.CONFIRM)
    }
    ,
    UTSBCRequirementsPopupViewController.prototype.onConfirmChallenge = function() {
        this.onConfirm.notify(),
        this.onExit.notify()
    }
    ,
    UTSBCRequirementsPopupViewController
}(BasePopupViewController)
  , UTSBCChallengeTileView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSBCChallengeTileView() {
        var e = t.call(this) || this;
        return e._data = null,
        e
    }
    return __extends(UTSBCChallengeTileView, t),
    UTSBCChallengeTileView.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this._data = null
    }
    ,
    UTSBCChallengeTileView.prototype.setData = function(e) {
        this._data = e,
        this.setInteractionState(!e.isCompleted())
    }
    ,
    UTSBCChallengeTileView.prototype.getData = function() {
        return this._data
    }
    ,
    UTSBCChallengeTileView.prototype.render = function() {
        var n = this
          , e = this._data;
        if (e) {
            var t = e.isInProgress()
              , i = e.isCompleted();
            this.toggleClass("complete", i),
            this.toggleClass("in-progress", t);
            this._challengeImage.setResource(AssetLocationUtils.getSquadBuildingChallengeImageUri(e.assetId), !0).observe(this, function(e, t, i, o) {
                e.unobserve(n),
                t || n._challengeImage.setLocalResource("images/sbc/sbcDefaultChallengeTile.png")
            }),
            e.hasNotStarted() ? this.__subTitle.textContent = services.Localization.localize("sbc.challenge.status.notStarted") : t ? this.__subTitle.textContent = services.Localization.localize("sbc.challenge.status.inProgress") : i && (this.__subTitle.textContent = services.Localization.localize("sbc.challenge.status.complete"))
        }
    }
    ,
    UTSBCChallengeTileView
}(UTTileView));
UTSBCChallengeTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("col-1-2"),
        e.classList.add("ut-sbc-challenge-tile-view");
        var t = document.createElement("header");
        this.__tileTitle = document.createElement("h1"),
        this.__tileTitle.classList.add("tileTitle"),
        t.appendChild(this.__tileTitle),
        this.__subTitle = document.createElement("h2"),
        this.__subTitle.classList.add("subTitle"),
        t.appendChild(this.__subTitle),
        e.appendChild(t),
        this.__tileContent = document.createElement("div"),
        this.__tileContent.classList.add("tileContent"),
        this._challengeImage = new UTImageView,
        this._challengeImage.getRootElement().classList.add("challengeImage"),
        this.__tileContent.appendChild(this._challengeImage.getRootElement()),
        e.appendChild(this.__tileContent),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCChallengeTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__tileTitle = null,
    this.__subTitle = null,
    this.__tileContent = null,
    this._challengeImage.destroy()
}
,
UTSBCChallengeTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCFavoriteButtonControl = function(n) {
    function UTSBCFavoriteButtonControl() {
        var e = n.call(this) || this;
        return e.isToggling = !1,
        e.sbcSet = null,
        e
    }
    return __extends(UTSBCFavoriteButtonControl, n),
    UTSBCFavoriteButtonControl.prototype.setData = function(e) {
        this.sbcSet = e,
        this.setChecked(this.sbcSet.isFavourite)
    }
    ,
    UTSBCFavoriteButtonControl.prototype.watchSBCSet = function() {
        var r = this
          , s = services.Localization;
        this.sbcSet && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.SBC.toggleFavouriteTag(this.sbcSet).observe(this, function(e, t) {
            var i;
            e.unobserve(r);
            var o = (null === (i = r.sbcSet) || void 0 === i ? void 0 : i.isFavourite) ? "2" : "0";
            if (t.success)
                services.Notification.queue([s.localize("notification.sbcSets.successfulTag" + o), UINotificationType.NEUTRAL]);
            else {
                var n = void 0;
                n = t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED ? "sbc.notification.disabled" : "notification.sbcSets.failedToTag" + o,
                services.Notification.queue([s.localize(n), UINotificationType.NEGATIVE])
            }
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }))
    }
    ,
    UTSBCFavoriteButtonControl.prototype._tapDetected = function(e) {
        var t, i, o = this;
        n.prototype._tapDetected.call(this, e),
        e.stopPropagation(),
        null !== (t = this.sbcSet) && void 0 !== t && t.isComplete() || this.isToggling || (this.isToggling = !0,
        this.setChecked(!(null === (i = this.sbcSet) || void 0 === i ? void 0 : i.isFavourite)),
        this.watchSBCSet(),
        setTimeout(function() {
            JSUtils.isBoolean(o.isToggling) && (o.isToggling = !1)
        }, 500))
    }
    ,
    UTSBCFavoriteButtonControl
}(UTToggleButtonControl);
UTSBCFavoriteButtonControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("button");
        e.classList.add("btn-favorite"),
        this.__text = document.createElement("span"),
        this.__text.classList.add("btn-text"),
        e.appendChild(this.__text),
        this.__subtext = document.createElement("span"),
        this.__subtext.classList.add("btn-subtext"),
        e.appendChild(this.__subtext),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCFavoriteButtonControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__text = null,
    this.__subtext = null
}
,
UTSBCFavoriteButtonControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadBuildingSetStatusLabelView = function(e) {
    function UTSquadBuildingSetStatusLabelView() {
        return e.call(this) || this
    }
    return __extends(UTSquadBuildingSetStatusLabelView, e),
    UTSquadBuildingSetStatusLabelView.prototype.setType = function(e) {
        var t = JSUtils.getObjectValues(UTSquadBuildingSetStatusLabelView.Type).join(" ");
        this.removeClass(t),
        this.addClass(e)
    }
    ,
    UTSquadBuildingSetStatusLabelView.prototype.setText = function(e) {
        this.__text.textContent = e
    }
    ,
    UTSquadBuildingSetStatusLabelView.prototype.setExpiryText = function(e, t) {
        var i = services.Localization;
        e ? 0 < t ? this.setText(i.localize("sbc.sets.expiresIn") + ": " + i.localizeAuctionTimeRemaining(t)) : this.setText(i.localize("sbc.sets.expired")) : this.setText(i.localize("sbc.status.noexpire"))
    }
    ,
    UTSquadBuildingSetStatusLabelView.Type = Object.freeze({
        EXPIRY: "expiry",
        NON_EXPIRY: "no-expiry",
        NON_REPEATABLE: "no-repeat",
        REFRESH: "refresh",
        REPEATABLE: "repeat"
    }),
    UTSquadBuildingSetStatusLabelView
}(UTView);
UTSquadBuildingSetStatusLabelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-building-set-status-label-view"),
        this.__text = document.createElement("span"),
        this.__text.classList.add("text"),
        e.appendChild(this.__text),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadBuildingSetStatusLabelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__text = null
}
,
UTSquadBuildingSetStatusLabelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCSetInfoView = function(t) {
    function UTSBCSetInfoView() {
        return t.call(this) || this
    }
    return __extends(UTSBCSetInfoView, t),
    UTSBCSetInfoView.prototype.init = function() {
        var e = services.Localization;
        t.prototype.init.call(this),
        this.setInteractionState(!0),
        this._watchBtn.init(),
        this.__status.textContent = e.localize("sbc.status.title"),
        this.__rewardsHeader.textContent = e.localize("sbc.rewards.title")
    }
    ,
    UTSBCSetInfoView.prototype.setProgress = function(e, t) {
        var i = services.Localization.localize("sbc.sets.challengesComplete", [e.toString(), t.toString()]);
        this._progressBar.setProgress(e / t * 100),
        this._progressBar.setProgressLabel(i)
    }
    ,
    UTSBCSetInfoView.prototype.setRewards = function(e) {
        this._rewards.setData(e),
        this._rewards.render()
    }
    ,
    UTSBCSetInfoView.prototype.setRepeatableState = function(e, t, i) {
        var o, n, r = services.Localization, s = e === SBCRepeatabilityMode.REFRESH, a = "";
        if (e === SBCRepeatabilityMode.NON_REPEATABLE)
            a = r.localize("tile.sbcSets.nonrepeatable"),
            n = UTSquadBuildingSetStatusLabelView.Type.NON_REPEATABLE;
        else if (e === SBCRepeatabilityMode.LIMITED || s) {
            if (a = r.localize("tile.sbcSets.repeatable") + " " + (null !== (o = null == t ? void 0 : t.toString()) && void 0 !== o ? o : "0"),
            n = UTSquadBuildingSetStatusLabelView.Type.REPEATABLE,
            s) {
                var l = r.localizeTimeRemaining(null != i ? i : 0);
                this._refreshStatus.setType(UTSquadBuildingSetStatusLabelView.Type.REFRESH),
                this._refreshStatus.setText(l)
            }
        } else
            a = r.localize("tile.sbcSets.repeatable"),
            n = UTSquadBuildingSetStatusLabelView.Type.REPEATABLE;
        this._refreshStatus.setDisplay(s),
        this._repeatableStatus.setType(n),
        this._repeatableStatus.setText(a)
    }
    ,
    UTSBCSetInfoView.prototype.setExpiryState = function(e, t) {
        var i = e ? UTSquadBuildingSetStatusLabelView.Type.EXPIRY : UTSquadBuildingSetStatusLabelView.Type.NON_EXPIRY;
        this._expireStatus.setType(i),
        this._expireStatus.setExpiryText(e, t)
    }
    ,
    UTSBCSetInfoView.prototype.setFavoriteState = function(e) {
        this._watchBtn.setData(e)
    }
    ,
    UTSBCSetInfoView
}(UTView);
UTSBCSetInfoView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-sbc-set-info-view"),
        this.__status = document.createElement("h1"),
        this.__status.classList.add("status-header"),
        e.appendChild(this.__status),
        this._progressBar = new UTProgressBarView,
        this._progressBar.getRootElement().classList.add("rounded"),
        this._progressBar.getRootElement().classList.add("large"),
        e.appendChild(this._progressBar.getRootElement()),
        this.__rewardsHeader = document.createElement("h1"),
        this.__rewardsHeader.classList.add("rewards-header"),
        e.appendChild(this.__rewardsHeader),
        this._rewards = new UTRewardsFooterView,
        e.appendChild(this._rewards.getRootElement());
        var t = document.createElement("div");
        t.classList.add("sbc-status-container"),
        this._repeatableStatus = new UTSquadBuildingSetStatusLabelView,
        t.appendChild(this._repeatableStatus.getRootElement()),
        this._refreshStatus = new UTSquadBuildingSetStatusLabelView,
        t.appendChild(this._refreshStatus.getRootElement()),
        this._expireStatus = new UTSquadBuildingSetStatusLabelView,
        t.appendChild(this._expireStatus.getRootElement()),
        this._watchBtn = new UTSBCFavoriteButtonControl,
        t.appendChild(this._watchBtn.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCSetInfoView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__status = null,
    this._progressBar.destroy(),
    this.__rewardsHeader = null,
    this._rewards.destroy(),
    this._repeatableStatus.destroy(),
    this._refreshStatus.destroy(),
    this._expireStatus.destroy(),
    this._watchBtn.destroy()
}
,
UTSBCSetInfoView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCChallengesView = function(t) {
    function UTSBCChallengesView() {
        var e = t.call(this) || this;
        return e._challengeTiles = [],
        e
    }
    return __extends(UTSBCChallengesView, t),
    UTSBCChallengesView.prototype.init = function() {
        t.prototype.init.call(this),
        this._setInfo.init()
    }
    ,
    UTSBCChallengesView.prototype.dealloc = function() {
        this.clearChallenges(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTSBCChallengesView.prototype.clearChallenges = function() {
        this._challengeTiles.forEach(function(e) {
            return e.dealloc()
        }),
        this._challengeTiles = []
    }
    ,
    UTSBCChallengesView.prototype.setSBCSet = function(e) {
        this._setInfo.setProgress(e.challengesCompletedCount, e.challengesCount),
        this._setInfo.setRewards(e.awards),
        this._setInfo.setRepeatableState(e.repeatabilityMode, e.getRepeatsRemaining(), e.getRefreshTimeRemaining()),
        this._setInfo.setExpiryState(!e.notExpirable, e.getTimeRemaining()),
        this._setInfo.setFavoriteState(e),
        this.clearChallenges(),
        e.getChallenges().sort(function(e, t) {
            return e.priority - t.priority
        }).forEach(this.generateChallengeTile, this),
        this.layoutSubviews()
    }
    ,
    UTSBCChallengesView.prototype.generateChallengeTile = function(e) {
        var t = new UTSBCChallengeTileView;
        t.init(),
        t.setData(e),
        t.title = e.name,
        t.render(),
        t.addTarget(this, this.eChallengeTileSelected, EventType.TAP),
        this.addSubview(t, this.__challenges),
        this._challengeTiles.push(t)
    }
    ,
    UTSBCChallengesView.prototype.onUpdate = function(e) {
        e.notExpirable || this._setInfo.setExpiryState(!e.notExpirable, e.getTimeRemaining()),
        e.repeatabilityMode === SBCRepeatabilityMode.REFRESH && this._setInfo.setRepeatableState(e.repeatabilityMode, e.getRepeatsRemaining(), e.getRefreshTimeRemaining())
    }
    ,
    UTSBCChallengesView.prototype.eChallengeTileSelected = function(e, t, i) {
        var o = e.getData();
        o && this._triggerActions(UTSBCChallengesView.Event.CHALLENGE_SELECTED, {
            challengeId: o.id
        })
    }
    ,
    UTSBCChallengesView.Event = Object.freeze({
        CHALLENGE_SELECTED: "UTSBCChallengesView.Event.CHALLENGE_SELECTED"
    }),
    UTSBCChallengesView
}(UTTargetActionView);
UTSBCChallengesView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("SBCChallenges"),
        this._setInfo = new UTSBCSetInfoView,
        e.appendChild(this._setInfo.getRootElement()),
        this.__challenges = document.createElement("div"),
        this.__challenges.classList.add("grid"),
        this.__challenges.classList.add("challenges"),
        e.appendChild(this.__challenges),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCChallengesView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._setInfo.destroy(),
    this.__challenges = null
}
,
UTSBCChallengesView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCChallengesViewController = function(o) {
    function UTSBCChallengesViewController() {
        var e = o.call(this) || this;
        return e.intervalController = new EAIntervalController(MS_PER_SECOND,e.handleViewUpdates.bind(e)),
        e.refreshEndTime = 0,
        e.requirementsModal = null,
        e.sbset = null,
        e
    }
    return __extends(UTSBCChallengesViewController, o),
    UTSBCChallengesViewController.prototype.init = function() {
        this.initialized || (o.prototype.init.call(this),
        this.getView().addTarget(this, this.onChallengeSelected, UTSBCChallengesView.Event.CHALLENGE_SELECTED))
    }
    ,
    UTSBCChallengesViewController.prototype.initWithSBCSet = function(e) {
        this.initialized || (this.sbset = e,
        this.init())
    }
    ,
    UTSBCChallengesViewController.prototype.dealloc = function() {
        this.sbset = null,
        this.requirementsModal && (this.requirementsModal.dealloc(),
        this.requirementsModal = null),
        o.prototype.dealloc.call(this)
    }
    ,
    UTSBCChallengesViewController.prototype._getViewInstanceFromData = function() {
        return new UTSBCChallengesView
    }
    ,
    UTSBCChallengesViewController.prototype._getTelemetryId = function() {
        return "SBC - Challenges"
    }
    ,
    UTSBCChallengesViewController.prototype.onPause = function() {
        o.prototype.onPause.call(this),
        this.intervalController.stop()
    }
    ,
    UTSBCChallengesViewController.prototype.onResume = function() {
        o.prototype.onResume.call(this),
        this.intervalController.start()
    }
    ,
    UTSBCChallengesViewController.prototype.viewDidAppear = function() {
        var e, t, i;
        o.prototype.viewDidAppear.call(this),
        this.sbset && (this.getView().setSBCSet(this.sbset),
        this.intervalController.start()),
        null === (e = this.getNavigationController()) || void 0 === e || e.setNavigationTitle(null !== (i = null === (t = this.sbset) || void 0 === t ? void 0 : t.name) && void 0 !== i ? i : BLANK_STR)
    }
    ,
    UTSBCChallengesViewController.prototype.viewWillDisappear = function() {
        this.intervalController.stop(),
        o.prototype.viewWillDisappear.call(this)
    }
    ,
    UTSBCChallengesViewController.prototype.handleViewUpdates = function() {
        if (this.sbset) {
            var e = Date.now() / MS_PER_SECOND;
            this.sbset.repeatabilityMode === SBCRepeatabilityMode.REFRESH && this.refreshEndTime < e && (0 < this.refreshEndTime && (this.sbset.timesCompleted = 0),
            this.refreshEndTime = e + this.sbset.getRefreshTimeRemaining()),
            this.getView().onUpdate(this.sbset)
        }
    }
    ,
    UTSBCChallengesViewController.prototype.goToChallengeScreen = function(e, t) {
        var i = this.getNavigationController();
        if (i) {
            var o = isPhone() ? new UTSBCSquadOverviewViewController : new UTSBCSquadSplitViewController;
            o.initWithSBCSet(e, t),
            i.pushViewController(o)
        }
    }
    ,
    UTSBCChallengesViewController.prototype.loadChallenge = function(n, r) {
        var s = this
          , a = n.getChallenge(r);
        a && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.SBC.loadChallenge(a).observe(this, function(e, t) {
            var i;
            if (e.unobserve(s),
            t.success)
                s.goToChallengeScreen(n, r);
            else {
                var o = void 0;
                o = a.hasExpired(!0) || a.hasNotStarted() && a.hasExpired(!1) ? "notification.sbcChallenges.expired" : (null === (i = t.error) || void 0 === i ? void 0 : i.code) === UtasErrorCode.SERVICE_IS_DISABLED ? "sbc.notification.disabled" : "notification.sbcChallenges.failedToStart",
                services.Notification.queue([services.Localization.localize(o), UINotificationType.NEGATIVE])
            }
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }))
    }
    ,
    UTSBCChallengesViewController.prototype.showRequirementsModal = function(t, i) {
        var o = this
          , n = new UTSBCRequirementsPopupViewController(t,i,!1);
        (this.requirementsModal = n).onExit.observe(this, function(e) {
            e.unobserve(o),
            o.requirementsModal = null
        }),
        n.onConfirm.observe(this, function(e) {
            e.unobserve(o),
            n.closePopup(),
            o.requirementsModal = null,
            o.loadChallenge(t, i),
            TelemetryManager.trackEvent(TelemetryManager.Sections.SBC, TelemetryManager.Categories.BUTTON_PRESS, "SBC - Start Challenge")
        }),
        isPhone() ? n.modalDisplayDimensions.width = "400px" : n.modalDisplayDimensions.minWidth = "400px",
        gPopupClickShield.setActivePopup(n)
    }
    ,
    UTSBCChallengesViewController.prototype.onChallengeSelected = function(e, t, i) {
        var o;
        if (DebugUtils.Assert(JSUtils.isValid(this.sbset), "Cannot find a reference to a squad building set."),
        this.sbset) {
            var n = null !== (o = this.sbset.getChallenge(i.challengeId)) && void 0 !== o ? o : null;
            DebugUtils.Assert(JSUtils.isValid(n), "Cannot find a challenge entity with ID: " + i.challengeId),
            n ? n.hasNotStarted() ? this.showRequirementsModal(this.sbset, i.challengeId) : this.loadChallenge(this.sbset, i.challengeId) : services.Notification.queue([services.Localization.localize("popup.body.genericError"), UINotificationType.NEGATIVE])
        } else
            services.Notification.queue([services.Localization.localize("popup.body.genericError"), UINotificationType.NEGATIVE])
    }
    ,
    UTSBCChallengesViewController
}(UTViewController)
  , UTSBCRewardPreviewView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTSBCRewardPreviewView() {
        return e.call(this) || this
    }
    return __extends(UTSBCRewardPreviewView, e),
    UTSBCRewardPreviewView.prototype.init = function() {
        e.prototype.init.call(this),
        this._exitBtn.init()
    }
    ,
    UTSBCRewardPreviewView.prototype.getExitBtn = function() {
        return this._exitBtn
    }
    ,
    UTSBCRewardPreviewView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTSBCRewardPreviewView.prototype.setErrorMessage = function(e) {
        this.__errorMessage.textContent = e
    }
    ,
    UTSBCRewardPreviewView.prototype.setImage = function(e) {
        this._previewImage.setResource(AssetLocationUtils.getSquadBuildingRewardImageUri(e), !0).observe(this, function onResourceLoaded(e, t) {
            e.unobserve(this),
            DOMKit.toggleDisplayStyle(this.__errorMessage, !t),
            DOMKit.toggleDisplayStyle(this._previewImage.getRootElement(), t)
        })
    }
    ,
    UTSBCRewardPreviewView
}(UTView));
UTSBCRewardPreviewView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-sbc-reward-preview-modal");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        this._exitBtn = new UTImageButtonControl,
        this._exitBtn.getRootElement().classList.add("exit-btn"),
        t.appendChild(this._exitBtn.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("content-container"),
        this._previewImage = new UTImageView,
        this._previewImage.getRootElement().classList.add("preview-image"),
        i.appendChild(this._previewImage.getRootElement()),
        this.__errorMessage = document.createElement("div"),
        this.__errorMessage.classList.add("error-message"),
        i.appendChild(this.__errorMessage),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCRewardPreviewView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._exitBtn.destroy(),
    this._previewImage.destroy(),
    this.__errorMessage = null
}
,
UTSBCRewardPreviewView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCRewardPreviewViewController = function(i) {
    function UTSBCRewardPreviewViewController() {
        var e = i.call(this) || this;
        return e.previewImageId = "",
        e
    }
    return __extends(UTSBCRewardPreviewViewController, i),
    UTSBCRewardPreviewViewController.prototype.init = function() {
        this.initialized || (i.prototype.init.call(this),
        DebugUtils.Assert(0 < this.previewImageId.length, "UTSBCRewardPreviewViewController expects an image URL."),
        this.getView().getExitBtn().addTarget(this, this.eOnExitBtn, EventType.TAP))
    }
    ,
    UTSBCRewardPreviewViewController.prototype.initWithImage = function(e) {
        this.initialized || (this.previewImageId = e,
        this.init())
    }
    ,
    UTSBCRewardPreviewViewController.prototype.dealloc = function() {
        this.previewImageId = "",
        i.prototype.dealloc.call(this)
    }
    ,
    UTSBCRewardPreviewViewController.prototype._getViewInstanceFromData = function() {
        return new UTSBCRewardPreviewView
    }
    ,
    UTSBCRewardPreviewViewController.prototype.viewDidAppear = function() {
        var e = services.Localization
          , t = this.getView();
        t.setTitle(e.localize("sbc.sets.preview.title")),
        t.setErrorMessage(e.localize("sbc.sets.preview.errormessage")),
        t.setImage(this.previewImageId),
        i.prototype.viewDidAppear.call(this)
    }
    ,
    UTSBCRewardPreviewViewController.prototype.eOnExitBtn = function(e, t, i) {
        var o;
        null === (o = this.getParentViewController()) || void 0 === o || o.dismissViewController()
    }
    ,
    UTSBCRewardPreviewViewController
}(UTViewController)
  , UTSBCConfirmSubmissionPopupView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTSBCConfirmSubmissionPopupView(e) {
        var t = i.call(this) || this;
        return t._players = e,
        t
    }
    return __extends(UTSBCConfirmSubmissionPopupView, i),
    UTSBCConfirmSubmissionPopupView.prototype.init = function() {
        i.prototype.init.call(this),
        this._btnSubmit.init(),
        this._btnSubmitIgnore.init(),
        this._btnCancel.init(),
        this.render()
    }
    ,
    UTSBCConfirmSubmissionPopupView.prototype.dealloc = function() {
        this._players = [],
        i.prototype.dealloc.call(this)
    }
    ,
    UTSBCConfirmSubmissionPopupView.prototype.setPlayers = function(e) {
        this._players = e
    }
    ,
    UTSBCConfirmSubmissionPopupView.prototype.render = function() {
        var t = this
          , e = services.Localization;
        this.__titleText.textContent = e.localize("sbc.popup.submitchallenge.title"),
        this.__warningText.textContent = e.localize("sbc.popup.submitChallenge.message"),
        this._btnSubmit.setText(e.localize("sbc.popup.submitchallenge.submit")),
        this._btnSubmitIgnore.setText(e.localize("sbc.popup.submitchallenge.submitignore")),
        this._btnCancel.setText(e.localize("common.dialog.cancel")),
        this._players.forEach(function(e) {
            return t.addPlayer(e)
        })
    }
    ,
    UTSBCConfirmSubmissionPopupView.prototype.getSubmitBtn = function() {
        return this._btnSubmit
    }
    ,
    UTSBCConfirmSubmissionPopupView.prototype.getSubmitIgnoreBtn = function() {
        return this._btnSubmitIgnore
    }
    ,
    UTSBCConfirmSubmissionPopupView.prototype.getCancelBtn = function() {
        return this._btnCancel
    }
    ,
    UTSBCConfirmSubmissionPopupView.prototype.addPlayer = function(e) {
        var t = document.createElement("li");
        t.textContent = e,
        this.__playerList.appendChild(t)
    }
    ,
    UTSBCConfirmSubmissionPopupView
}(UTView));
UTSBCConfirmSubmissionPopupView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-sbc-submit");
        var t = document.createElement("header");
        this.__titleText = document.createElement("h1"),
        t.appendChild(this.__titleText),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("bodySection"),
        this.__warningText = document.createElement("p"),
        i.appendChild(this.__warningText),
        this.__playerList = document.createElement("ul"),
        i.appendChild(this.__playerList),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("ut-button-group"),
        this._btnSubmit = new UTGroupButtonControl,
        o.appendChild(this._btnSubmit.getRootElement()),
        this._btnSubmitIgnore = new UTGroupButtonControl,
        o.appendChild(this._btnSubmitIgnore.getRootElement()),
        this._btnCancel = new UTGroupButtonControl,
        this._btnCancel.getRootElement().classList.add("negative"),
        o.appendChild(this._btnCancel.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCConfirmSubmissionPopupView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__titleText = null,
    this.__warningText = null,
    this.__playerList = null,
    this._btnSubmit.destroy(),
    this._btnSubmitIgnore.destroy(),
    this._btnCancel.destroy()
}
,
UTSBCConfirmSubmissionPopupView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCConfirmSubmissionPopupViewController = function(i) {
    function UTSBCConfirmSubmissionPopupViewController(e) {
        var t = i.call(this) || this;
        return t.playerNames = e || [],
        t
    }
    return __extends(UTSBCConfirmSubmissionPopupViewController, i),
    UTSBCConfirmSubmissionPopupViewController.prototype.init = function() {
        i.prototype.init.call(this);
        var e = this.getView();
        e.getSubmitBtn().addTarget(this, this.eSubmitBtnTapped, EventType.TAP),
        e.getSubmitIgnoreBtn().addTarget(this, this.eSubmitIgnoreBtnTapped, EventType.TAP),
        e.getCancelBtn().addTarget(this, this.eCancelBtnTapped, EventType.TAP)
    }
    ,
    UTSBCConfirmSubmissionPopupViewController.prototype.reset = function() {
        this.playerNames = []
    }
    ,
    UTSBCConfirmSubmissionPopupViewController.prototype._getViewInstanceFromData = function() {
        return new UTSBCConfirmSubmissionPopupView(this.playerNames)
    }
    ,
    UTSBCConfirmSubmissionPopupViewController.prototype.eSubmitBtnTapped = function(e, t, i) {
        this.onExit.notify(UTSBCConfirmSubmissionPopupViewController.SUBMIT_EVENTS.SUBMIT)
    }
    ,
    UTSBCConfirmSubmissionPopupViewController.prototype.eSubmitIgnoreBtnTapped = function(e, t, i) {
        this.onExit.notify(UTSBCConfirmSubmissionPopupViewController.SUBMIT_EVENTS.SUBMIT_IGNORE)
    }
    ,
    UTSBCConfirmSubmissionPopupViewController.prototype.eCancelBtnTapped = function(e, t, i) {
        this.closePopup()
    }
    ,
    UTSBCConfirmSubmissionPopupViewController.SUBMIT_EVENTS = Object.freeze({
        SUBMIT: "submit",
        SUBMIT_IGNORE: "submit-ignore"
    }),
    UTSBCConfirmSubmissionPopupViewController
}(BasePopupViewController)
  , UTSBCItemWarningViewModel = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSBCItemWarningViewModel() {
        var e = t.call(this) || this;
        return e.requests = [],
        e
    }
    return __extends(UTSBCItemWarningViewModel, t),
    UTSBCItemWarningViewModel.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.cancelRequests()
    }
    ,
    UTSBCItemWarningViewModel.prototype.cancelRequests = function() {
        0 < this.requests.length && (this.requests.forEach(function(e) {
            return e.clearObservers()
        }),
        this.requests = [])
    }
    ,
    UTSBCItemWarningViewModel.prototype.completeRequest = function(e, t) {
        e.unobserve(this);
        var i = this.requests.indexOf(e);
        0 <= i && this.requests.splice(i, 1)
    }
    ,
    UTSBCItemWarningViewModel.prototype.generateViolationStrings = function(e, n) {
        return e.reduce(function(e, o) {
            var t = o.itemIds.reduce(function(e, t) {
                var i = n.find(function(e) {
                    return e.id === t
                });
                return i ? e.concat(i.getStaticData().name + " - [" + o.name + "]") : e
            }, []);
            return e.concat(t)
        }, [])
    }
    ,
    UTSBCItemWarningViewModel.prototype.requestViolationPlayers = function(e) {
        var t = e.reduce(function(e, t) {
            return e.concat(t.itemIds)
        }, [])
          , i = services.Item.requestItemsById(t);
        return this.requests.push(i.observe(this, this.completeRequest)),
        i
    }
    ,
    UTSBCItemWarningViewModel
}(EAObject))
  , UTSBCSummaryProgressView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSBCSummaryProgressView() {
        return t.call(this) || this
    }
    return __extends(UTSBCSummaryProgressView, t),
    UTSBCSummaryProgressView.prototype.init = function() {
        var e = services.Localization;
        t.prototype.init.call(this),
        this.setAllText(e.localize("sbc.requirements.challenge.condensed")),
        this.__progressCount.textContent = e.localize("sbc.requirements.fraction", ["0", "0"]),
        this.setInteractionState(!0)
    }
    ,
    UTSBCSummaryProgressView.prototype.setProgress = function(e, t) {
        this.__progressCount.textContent = services.Localization.localize("sbc.requirements.fraction", [e.toString(), t.toString()]),
        this._progressBar.setProgress(e / t * 100)
    }
    ,
    UTSBCSummaryProgressView.prototype.setText = function(e) {
        this.__requirementsLabel.textContent = e
    }
    ,
    UTSBCSummaryProgressView
}(UTToggleButtonControl));
UTSBCSummaryProgressView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("interactive"),
        e.classList.add("ut-squad-summary-info"),
        this.__requirementsLabel = document.createElement("span"),
        this.__requirementsLabel.classList.add("ut-squad-summary-label"),
        e.appendChild(this.__requirementsLabel);
        var t = document.createElement("div");
        t.classList.add("progress-bar-container"),
        this._progressBar = new UTProgressBarView,
        this._progressBar.getRootElement().classList.add("rounded"),
        t.appendChild(this._progressBar.getRootElement()),
        this.__progressCount = document.createElement("span"),
        this.__progressCount.classList.add("ut-squad-summary-value--action"),
        this.__progressCount.classList.add("ut-squad-summary-value"),
        t.appendChild(this.__progressCount),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCSummaryProgressView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__requirementsLabel = null,
    this._progressBar.destroy(),
    this.__progressCount = null
}
,
UTSBCSummaryProgressView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCSquadSummaryBannerView = function(t) {
    function UTSBCSquadSummaryBannerView() {
        var e = t.call(this) || this;
        return e.onRequirementsSelect = new EAObservable,
        e
    }
    return __extends(UTSBCSquadSummaryBannerView, t),
    UTSBCSquadSummaryBannerView.prototype.init = function() {
        var e = this;
        this._squadStats.init(),
        this._reqProgress.init(),
        this._reqProgress.addTarget(this, function() {
            return e.onRequirementsSelect.notify()
        }, EventType.TAP)
    }
    ,
    UTSBCSquadSummaryBannerView.prototype.setRating = function(e, t) {
        this._squadStats.setRating(e, t)
    }
    ,
    UTSBCSquadSummaryBannerView.prototype.dealloc = function() {
        this.onRequirementsSelect.dealloc(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTSBCSquadSummaryBannerView.prototype.setChallengeProgress = function(e, t) {
        this._reqProgress.setProgress(e, t)
    }
    ,
    UTSBCSquadSummaryBannerView.prototype.getRequirementsButton = function() {
        return this._reqProgress
    }
    ,
    UTSBCSquadSummaryBannerView
}(UTSquadSummaryBannerView);
UTSBCSquadSummaryBannerView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("sbc-summary"),
        e.classList.add("ut-squad-summary"),
        this._reqProgress = new UTSBCSummaryProgressView,
        e.appendChild(this._reqProgress.getRootElement()),
        this._squadStats = new UTSBCSquadStatsView,
        e.appendChild(this._squadStats.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCSquadSummaryBannerView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._reqProgress.destroy(),
    this._squadStats.destroy()
}
,
UTSBCSquadSummaryBannerView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCSquadOverviewView = function(e) {
    function UTSBCSquadOverviewView() {
        return e.call(this) || this
    }
    return __extends(UTSBCSquadOverviewView, e),
    UTSBCSquadOverviewView.prototype.init = function() {
        e.prototype.init.call(this),
        this.renderManager = !1
    }
    ,
    UTSBCSquadOverviewView.prototype.getSummaryPanel = function() {
        return this._summaryPanel || (this._summaryPanel = new UTSBCSquadSummaryBannerView,
        this._summaryPanel.onRequirementsSelect.observe(this, this._eRequirementsSelected)),
        this._summaryPanel
    }
    ,
    UTSBCSquadOverviewView.prototype.setSquad = function(e) {
        var t = this;
        this._summaryPanel && this._summaryPanel.setChemistryAndRating(e.getChemistry(), e.getRating());
        var i = this.getSelectedSlot()
          , o = i ? i.getIndex() : -1
          , n = this.renderManager ? e.getFieldPlayers().concat(e.getManager()) : e.getFieldPlayers();
        this._pitch.setSlots(n, this.renderConcepts, this.renderChemistry),
        this._pitch.setLockedSlots(e.getAllBrickIndices()),
        this.leftDock && this.leftDock.setSlots(e.getSubPlayers().concat(e.getReservePlayers()), this.renderConcepts),
        this.slotViews = this.getDropSlotViews(),
        this.slotViews.forEach(function(e) {
            e.addTarget(t, t.onSlotTapped, EventType.TAP),
            e.addTarget(t, t.onSlotMouseEnter, EventType.MOUSEENTER),
            e.addTarget(t, t.onSlotMouseLeave, EventType.MOUSELEAVE)
        }),
        0 <= o && this.selectSlot(o);
        var r = e.getFormation();
        r instanceof UTSquadFormationDTO && this.setFormation(r)
    }
    ,
    UTSBCSquadOverviewView.prototype.setChemistryEntries = function(e) {}
    ,
    UTSBCSquadOverviewView.prototype.setDockLocalization = function() {
        var e;
        null === (e = this.leftDock) || void 0 === e || e.setInstructions(services.Localization.localize("dock.label.workAreaInstructions"))
    }
    ,
    UTSBCSquadOverviewView.prototype._initTabViews = function() {
        this.rightTab = new UTSquadTabButtonControl,
        this.leftDock = new UTSquadSlotDockView,
        this.leftTab = new UTSquadTabButtonControl,
        this.leftTab.init(),
        this.rightTab.init(),
        this.leftDock.init(),
        this.leftTab.addTarget(this, this.onDockBtnPressed.bind(this, this.leftDock, this.leftTab, UTSquadOverviewView.DropAreas.LEFT_DOCK, this.rightDock), EventType.TAP),
        this.leftTab.setText(services.Localization.localize("dock.label.workArea")),
        this.leftTab.assignLeft(),
        this.rightTab.setText(services.Localization.localize("sbc.squad.button.submit")),
        this.rightTab.setType(enums.UISquadTabTypes.ACTION_TAB),
        this.rightTab.assignRight(),
        this.rightTab.addClass("call-to-action"),
        this.leftTab.setType(enums.UISquadTabTypes.WORK_AREA),
        this.leftDock.setIsSBC(!0),
        this.setDockLocalization(),
        this.addSubview(this.leftTab, this.__draggableArea),
        this.addSubview(this.rightTab, this.__draggableArea),
        this.addSubview(this.leftDock, this.__draggableArea),
        this.layoutSubviews()
    }
    ,
    UTSBCSquadOverviewView.prototype.updateChallenge = function(e) {
        this.getSummaryPanel().setChallengeProgress(e.getNumberOfRequirementsMet(), e.eligibilityRequirements.length + 1),
        this.rightTab && (this.rightTab.setText(services.Localization.localize(e.hasExpired(!0) ? "sbc.sets.expired" : "sbc.squad.button.submit")),
        this.rightTab.setInteractionState(e.canSubmit()))
    }
    ,
    UTSBCSquadOverviewView.prototype._eRequirementsSelected = function(e) {
        this._triggerActions("sbcRequirementSelect")
    }
    ,
    UTSBCSquadOverviewView.prototype.getRequirementsButton = function() {
        return this._summaryPanel.getRequirementsButton()
    }
    ,
    UTSBCSquadOverviewView
}(UTSquadOverviewView);
function UTSBCSquadOverviewViewController() {
    UTSquadOverviewViewController.call(this),
    this._set = null,
    this._challenge = null,
    this._viewmodel = new UTSBCItemWarningViewModel
}
NamespaceManager.Register("controllers.squads"),
JSUtils.inherits(UTSBCSquadOverviewViewController, UTSquadOverviewViewController),
UTSBCSquadOverviewViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass();
        var e = this.getView();
        isPhone() && e.addTarget(this, this._eRequirementsSelected, "sbcRequirementSelect"),
        e.getRightTab().addTarget(this, this._eSubmitSelected, EventType.TAP)
    }
}
,
UTSBCSquadOverviewViewController.prototype.initWithSBCSet = function initWithSBCSet(e, t) {
    this.initialized || (DebugUtils.Assert(e instanceof UTSBCSetEntity, "Initialization expected an SBC Set entity."),
    DebugUtils.Assert(JSUtils.isNumber(t) && 0 <= t, "Initialization expected a valid SBC Challenge ID."),
    this._set = e,
    this._challenge = e.getChallenge(t),
    DebugUtils.Assert(this._challenge instanceof UTSBCChallengeEntity, "Initialization expected a valid SBC Challenge."),
    this.initWithSquad(this._challenge.squad))
}
,
UTSBCSquadOverviewViewController.prototype.dealloc = function dealloc() {
    this._challenge.onSave.unobserve(this),
    this._viewmodel.dealloc(),
    this.superclass(),
    this._set = null,
    this._challenge = null,
    this._viewmodel = null
}
,
UTSBCSquadOverviewViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTSBCSquadOverviewView
}
,
UTSBCSquadOverviewViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "SBC - Squad"
}
,
UTSBCSquadOverviewViewController.prototype._trackPageView = function _trackPageView() {
    TelemetryManager.trackPage(TelemetryManager.Sections.SBC, this._getTelemetryId())
}
,
UTSBCSquadOverviewViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return this._challenge ? this._challenge.name : ""
}
,
UTSBCSquadOverviewViewController.prototype._pushSquadToView = function _pushSquadToView(e) {
    this.superclass(e);
    var t = this.getView();
    t.setMode("sbc");
    var i = this._set ? this._set.getChallenge(this._challenge.id) : null;
    i && t.updateChallenge(i)
}
,
UTSBCSquadOverviewViewController.prototype._submitChallenge = function _submitChallenge(e) {
    if (this._challenge.canSubmit())
        if (!services.Configuration.getFeatureSetting(UTServerSettingsRepository.KEY.SBC_ALLOW_UNTRADEABLE) && this._challenge.hasUntradeableItems())
            utils.PopupManager.showAlert(utils.PopupManager.Alerts.SBC_UNTRADEABLE_NOT_ALLOWED);
        else if (JSUtils.isValid(this._set)) {
            TelemetryManager.trackEvent(TelemetryManager.Sections.SBC, TelemetryManager.Categories.BUTTON_PRESS, "SBC - Submit Challenge");
            var t = JSUtils.isBoolean(e) ? e : services.UserSettings.getSBCValidationSkip();
            services.SBC.submitChallenge(this._challenge, this._set, t).observe(this, this._onChallengeSubmitted)
        } else
            services.Notification.queue([services.Localization.localize("notification.sbcChallenges.failedToSubmit"), UINotificationType.NEGATIVE]);
    else
        utils.PopupManager.showAlert(utils.PopupManager.Alerts.SBC_INELIGIBLE_SQUAD)
}
,
UTSBCSquadOverviewViewController.prototype._onPopupClosed = function _onPopupClosed(e, t) {
    e.unobserve(this),
    t && t !== enums.UIDialogOptions.CANCEL && (t === UTSBCConfirmSubmissionPopupViewController.SUBMIT_EVENTS.SUBMIT_IGNORE && services.UserSettings.setSBCValidationSkip(!0),
    this._submitChallenge(!0))
}
,
UTSBCSquadOverviewViewController.prototype._onChallengeSubmitted = function _onChallengeSubmitted(e, t) {
    if (e.unobserve(this),
    t.success) {
        var i = new UTGameRewardsViewController(this._challenge.awards);
        i.init(),
        i.modalDisplayDimensions.width = "24em";
        var o = i.getView();
        if (o.setTitle(this._challenge.name),
        o.setDescription(this._challenge.description),
        o.setButtonText(services.Localization.localize("sbc.rewards.claim")),
        gPopupClickShield.setActivePopup(i),
        t.data.setCompleted) {
            var n = new UTGameRewardsViewController(this._set.awards);
            n.init(),
            n.modalDisplayDimensions.width = "24em";
            var r = n.getView();
            r.setTitle(this._set.name),
            r.setDescription(this._set.description),
            r.setButtonText(services.Localization.localize("sbc.rewards.claim")),
            gPopupClickShield.setActivePopup(n)
        }
        services.PIN.sendData(PINEventType.PAGE_VIEW, {
            type: PIN_PAGEVIEW_EVT_TYPE,
            pgid: "SBC - Rewards Overlay"
        }),
        this.getNavigationController().popViewController()
    } else if (t.data && 0 < t.data.itemViolations.length) {
        var s = t.data.itemViolations;
        this._viewmodel.requestViolationPlayers(s).observe(this, function(e, t) {
            e.unobserve(this);
            var i = JSUtils.isObject(t.response) ? this._viewmodel.generateViolationStrings(s, t.response.items) : []
              , o = new UTSBCConfirmSubmissionPopupViewController(i);
            o.onExit.observe(this, this._onPopupClosed),
            o.modalDisplayDimensions.width = "400px",
            gPopupClickShield.setActivePopup(o)
        })
    } else
        t.error && t.error.code === UtasErrorCode.SOME_ITEMS_NOT_FREE ? NetworkErrorManager.handleStatus(t.error.code) : t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED ? (services.Notification.queue([services.Localization.localize("sbc.notification.disabled"), UINotificationType.NEGATIVE]),
        getAppMain().getRootViewController().showGameView()) : this._challenge.hasExpired(!0) ? (services.Notification.queue([services.Localization.localize("notification.sbcChallenges.expired"), UINotificationType.NEGATIVE]),
        this.getNavigationController().popToRootViewController()) : services.Notification.queue([services.Localization.localize("notification.sbcChallenges.failedToSubmit"), UINotificationType.NEGATIVE])
}
,
UTSBCSquadOverviewViewController.prototype._gotoDetailsView = function _gotoDetailsView(e) {
    var t = this.getNavigationController();
    if (t) {
        var i = new UTSquadItemDetailsNavigationController;
        this._challenge ? i.initWithSBCChallenge(this._challenge, e) : i.init(),
        i.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
        t.pushViewController(i)
    }
}
,
UTSBCSquadOverviewViewController.prototype._eItemSwap = function _eItemSwap(e, t, i) {
    var o = JSUtils.isNumber(i.swapFrom) ? i.swapFrom : -1
      , n = JSUtils.isNumber(i.swapTo) ? i.swapTo : -1;
    this._squad.swapPlayersByIndex(o, n),
    this._set && services.SBC.saveChallenge(this._challenge).observe(this, this._onSBCSaveComplete),
    this.onItemSwap.notify(o, n),
    this.getView().updatePitchChemistry(this._squad.getFieldPlayers())
}
,
UTSBCSquadOverviewViewController.prototype._onSBCSaveComplete = function _onSBCSaveComplete(e, t) {
    if (e.unobserve(this),
    t.success)
        this.getView().updateChallenge(this._challenge);
    else {
        if (t.error && t.error.code === UtasErrorCode.SOME_ITEMS_NOT_FREE)
            return void NetworkErrorManager.handleStatus(t.error.code);
        var i = "notification.sbcChallenges.failedToSave";
        this._challenge.hasExpired(!0) ? i = "notification.sbcChallenges.expired" : t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED && (i = "sbc.notification.disabled"),
        services.Notification.queue([services.Localization.localize(i), UINotificationType.NEGATIVE])
    }
}
,
UTSBCSquadOverviewViewController.prototype._eRequirementsSelected = function _eRequirementsSelected() {
    var e = new UTSBCRequirementsPopupViewController(this._set,this._challenge.id,!0);
    e.onExit.observe(this, this._ePopupClosed),
    e.onConfirm.observe(this, this._ePopupSubmitSelected),
    isPhone() ? e.modalDisplayDimensions.width = "400px" : e.modalDisplayDimensions.minWidth = "400px",
    gPopupClickShield.setActivePopup(e)
}
,
UTSBCSquadOverviewViewController.prototype._ePopupSubmitSelected = function _ePopupSubmitSelected() {
    this._submitChallenge()
}
,
UTSBCSquadOverviewViewController.prototype._ePopupClosed = function _ePopupClosed() {
    this.getView().getRequirementsButton().setChecked(!1)
}
,
UTSBCSquadOverviewViewController.prototype._eSubmitSelected = function _eSubmitSelected() {
    this._submitChallenge()
}
,
UTSBCSquadOverviewViewController.prototype._eSquadDataChange = function _eSquadDataChange() {
    this._squad && this._pushSquadToView(this._squad)
}
,
UTSBCSquadOverviewViewController.prototype._eDetailsButtonSelected = function _eDetailsButtonSelected() {
    var e = this.getNavigationController();
    if (e) {
        var t = new UTSBCSquadDetailPanelViewController;
        t.initWithSBCSet(this._set, this._challenge.id),
        e.pushViewController(t, !0)
    }
}
,
UTSBCSquadOverviewViewController.prototype._nInfoStateChanged = function _nInfoStateChanged() {
    TelemetryManager.trackEvent(TelemetryManager.Sections.SBC, TelemetryManager.Categories.BUTTON_PRESS, "Item Info Switch Button - SBC Squad")
}
,
NamespaceManager.Register("interfaces"),
interfaces.SquadBuildingChallengeActionDelegate = function() {}
,
interfaces.SquadBuildingChallengeActionDelegate.prototype.conforms = function conforms() {}
,
interfaces.SquadBuildingChallengeActionDelegate.prototype.submitChallenge = function submitChallenge() {}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCSquadDetailPanelView = function(t) {
    function UTSBCSquadDetailPanelView() {
        return t.call(this) || this
    }
    return __extends(UTSBCSquadDetailPanelView, t),
    UTSBCSquadDetailPanelView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._btnSquadBuilder.init(),
        this._btnClearSquad.init(),
        this._btnExchange.init(),
        this._btnSquadBuilder.setText(e.localize("infopanel.button.squadbuilder")),
        this._btnClearSquad.setText(e.localize("infopanel.button.clear")),
        this._btnExchange.setText(e.localize("sbc.overlay.btn.submitChallenge")),
        isPhone() && this._btnExchange.hide()
    }
    ,
    UTSBCSquadDetailPanelView.prototype.setAwards = function(e) {
        this._challengeDetails.setAwards(e)
    }
    ,
    UTSBCSquadDetailPanelView.prototype.setRequirements = function(e, t) {
        this._challengeDetails.setChallengeRequirements(e, t)
    }
    ,
    UTSBCSquadDetailPanelView.prototype.render = function(e, t, i, o) {
        this._challengeDetails.render(e, t, i, o),
        this._expiresLabel.setEndTime(e.endTime || 0),
        this._expiresLabel.setExpiryState(!e.notExpirable),
        this._expiresLabel.start();
        var n = services.Localization;
        e.repeatable ? this.__repeatableLabel.textContent = n.localize("tile.sbcSets.repeatable") : (DOMKit.addClass(this.__repeatableStatus, "no-repeat"),
        this.__repeatableLabel.textContent = n.localize("sbc.status.notrepeatable")),
        DOMKit.toggleClass(this.__expireStatus, "no-expire", e.notExpirable)
    }
    ,
    UTSBCSquadDetailPanelView.prototype.toggleExchangeState = function(e) {
        this._btnExchange.setInteractionState(e)
    }
    ,
    UTSBCSquadDetailPanelView.prototype.toggleClearState = function(e) {
        this._btnClearSquad.setInteractionState(e)
    }
    ,
    UTSBCSquadDetailPanelView.prototype.getSquadBuilderButton = function() {
        return this._btnSquadBuilder
    }
    ,
    UTSBCSquadDetailPanelView.prototype.getClearSquadButton = function() {
        return this._btnClearSquad
    }
    ,
    UTSBCSquadDetailPanelView.prototype.getExchangeButton = function() {
        return this._btnExchange
    }
    ,
    UTSBCSquadDetailPanelView
}(UTView);
function UTSBCSquadDetailPanelViewController() {
    UTViewController.call(this),
    this._set = null,
    this._challenge = null,
    this._challengeActionDelegate = null,
    this._viewmodel = new UTSBCItemWarningViewModel
}
UTSBCSquadDetailPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("section");
        e.classList.add("SquadPanel"),
        e.classList.add("SBCSquadPanel"),
        this.__content = document.createElement("div"),
        this.__content.classList.add("challenge-content"),
        this._challengeDetails = new UTSBCChallengeDetailsView,
        this.__content.appendChild(this._challengeDetails.getRootElement()),
        this._btnExchange = new UTStandardButtonControl,
        this._btnExchange.getRootElement().classList.add("call-to-action"),
        this.__content.appendChild(this._btnExchange.getRootElement()),
        this._btnSquadBuilder = new UTStandardButtonControl,
        this.__content.appendChild(this._btnSquadBuilder.getRootElement()),
        this._btnClearSquad = new UTStandardButtonControl,
        this.__content.appendChild(this._btnClearSquad.getRootElement()),
        e.appendChild(this.__content),
        this.__statusContainer = document.createElement("footer"),
        this.__statusContainer.classList.add("sbc-status-container"),
        this.__repeatableStatus = document.createElement("div"),
        this.__repeatableStatus.classList.add("repeat"),
        this.__repeatableStatus.classList.add("status"),
        this.__repeatableLabel = document.createElement("span"),
        this.__repeatableLabel.classList.add("label"),
        this.__repeatableLabel.appendChild(document.createTextNode("Repeatable")),
        this.__repeatableStatus.appendChild(this.__repeatableLabel),
        this.__statusContainer.appendChild(this.__repeatableStatus),
        this.__expireStatus = document.createElement("div"),
        this.__expireStatus.classList.add("expires"),
        this.__expireStatus.classList.add("status"),
        this._expiresLabel = new UTSBCTimerLabelView,
        this.__expireStatus.appendChild(this._expiresLabel.getRootElement()),
        this.__statusContainer.appendChild(this.__expireStatus),
        e.appendChild(this.__statusContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCSquadDetailPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__content = null,
    this._challengeDetails.destroy(),
    this._btnExchange.destroy(),
    this._btnSquadBuilder.destroy(),
    this._btnClearSquad.destroy(),
    this.__statusContainer = null,
    this.__repeatableStatus = null,
    this.__repeatableLabel = null,
    this.__expireStatus = null,
    this._expiresLabel.destroy()
}
,
UTSBCSquadDetailPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
NamespaceManager.Register("controllers.squads"),
JSUtils.inherits(UTSBCSquadDetailPanelViewController, UTViewController),
UTSBCSquadDetailPanelViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass();
        var e = this.getView();
        e.getSquadBuilderButton().addTarget(this, this._eSquadBuilderSelected, EventType.TAP),
        e.getClearSquadButton().addTarget(this, this._eSquadClearSelected, EventType.TAP),
        e.getExchangeButton().addTarget(this, this._eSquadExchange, EventType.TAP)
    }
}
,
UTSBCSquadDetailPanelViewController.prototype.initWithSBCSet = function initWithChallenge(e, t) {
    this.initialized || (DebugUtils.Assert(e instanceof UTSBCSetEntity, "Initialization expected an SBC set entity."),
    DebugUtils.Assert(JSUtils.isNumber(t), "Initialization expected Challenge ID to be a number."),
    this._set = e,
    this._challenge = e.challenges.get(t),
    DebugUtils.Assert(this._challenge instanceof UTSBCChallengeEntity, "Initialization expected a valid SBC challenge."),
    this._challenge.onDataChange.observe(this, this._eChallengeUpdated),
    this._challenge.onSave.observe(this, this._eChallengeUpdated),
    this.getView().toggleExchangeState(this._challenge.canSubmit()),
    this.getView().toggleClearState(!this._challenge.squad.isSquadEmpty()),
    this.init())
}
,
UTSBCSquadDetailPanelViewController.prototype.dealloc = function dealloc() {
    this._challenge.onDataChange.unobserve(this),
    this._challenge.onSave.unobserve(this),
    this._viewmodel.dealloc(),
    this.superclass(),
    this._set = null,
    this._challenge = null,
    this._viewmodel = null
}
,
UTSBCSquadDetailPanelViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTSBCSquadDetailPanelView
}
,
UTSBCSquadDetailPanelViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "SBC Squad Details"
}
,
UTSBCSquadDetailPanelViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return this._challenge ? this._challenge.name : ""
}
,
UTSBCSquadDetailPanelViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this.getView().render(this._challenge, this._set.hidden ? this._set.awards : [], !0, this._set.isSingleChallenge)
}
,
UTSBCSquadDetailPanelViewController.prototype.setSquadBuildingChallengeActionDelegate = function setSquadBuildingChallengeActionDelegate(e) {
    e.conforms(interfaces.SquadBuildingChallengeActionDelegate) && (this._challengeActionDelegate = e)
}
,
UTSBCSquadDetailPanelViewController.prototype._eChallengeUpdated = function _eChallengeUpdated() {
    var e = this.getView();
    e.setRequirements(this._challenge, !0),
    e.toggleExchangeState(this._challenge.canSubmit()),
    e.toggleClearState(this._challenge.squad && !this._challenge.squad.isSquadEmpty())
}
,
UTSBCSquadDetailPanelViewController.prototype._eSquadBuilderSelected = function _eSquadBuilderSelected() {
    var e = new UTSquadBuilderViewController;
    this._challenge ? e.initWithChallenge(this._challenge) : e.init(),
    this.getNavigationController().pushViewController(e, !0)
}
,
UTSBCSquadDetailPanelViewController.prototype._eSquadClearSelected = function _eSquadClearSelected() {
    utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.CLEAR_SQUAD, null, function _onClearConfirm() {
        this._challenge.squad.removeAllItems() && services.SBC.saveChallenge(this._challenge).observe(this, this._onSBCSaveComplete)
    }
    .bind(this))
}
,
UTSBCSquadDetailPanelViewController.prototype._onSBCSaveComplete = function _onSBCSaveComplete(e, t) {
    if (e.unobserve(this),
    t.success)
        services.Notification.queue([services.Localization.localize("notification.squad.cleared"), UINotificationType.NEUTRAL]);
    else {
        var i = "notification.sbcChallenges.failedToSave";
        this._challenge.hasExpired(!0) ? i = "notification.sbcChallenges.expired" : t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED && (i = "sbc.notification.disabled"),
        services.Notification.queue([services.Localization.localize(i), UINotificationType.NEGATIVE])
    }
}
,
UTSBCSquadDetailPanelViewController.prototype._onPopupClosed = function _onPopupClosed(e, t) {
    e.unobserve(this),
    t && t !== enums.UIDialogOptions.CANCEL && (t === UTSBCConfirmSubmissionPopupViewController.SUBMIT_EVENTS.SUBMIT_IGNORE && services.UserSettings.setSBCValidationSkip(!0),
    this._submitChallenge(!0))
}
,
UTSBCSquadDetailPanelViewController.prototype._submitChallenge = function _submitChallenge(e) {
    if (this._challenge.canSubmit())
        if (!services.Configuration.getFeatureSetting(UTServerSettingsRepository.KEY.SBC_ALLOW_UNTRADEABLE) && this._challenge.hasUntradeableItems())
            utils.PopupManager.showAlert(utils.PopupManager.Alerts.SBC_UNTRADEABLE_NOT_ALLOWED);
        else if (JSUtils.isValid(this._set)) {
            TelemetryManager.trackEvent(TelemetryManager.Sections.SBC, TelemetryManager.Categories.BUTTON_PRESS, "SBC - Submit Challenge");
            var t = JSUtils.isBoolean(e) ? e : services.UserSettings.getSBCValidationSkip();
            services.SBC.submitChallenge(this._challenge, this._set, t).observe(this, this._onChallengeSubmitted)
        } else
            services.Notification.queue([services.Localization.localize("notification.sbcChallenges.failedToSubmit"), UINotificationType.NEGATIVE]);
    else
        utils.PopupManager.showAlert(utils.PopupManager.Alerts.SBC_INELIGIBLE_SQUAD)
}
,
UTSBCSquadDetailPanelViewController.prototype._onChallengeSubmitted = function _onChallengeSubmitted(e, t) {
    if (e.unobserve(this),
    t.success) {
        var i = new UTGameRewardsViewController(this._challenge.awards);
        i.init(),
        i.modalDisplayDimensions.width = "24em";
        var o = i.getView();
        if (o.setTitle(this._challenge.name),
        o.setDescription(this._challenge.description),
        o.setButtonText(services.Localization.localize("sbc.rewards.claim")),
        gPopupClickShield.setActivePopup(i),
        t.data.setCompleted) {
            var n = new UTGameRewardsViewController(this._set.awards);
            n.init(),
            n.modalDisplayDimensions.width = "24em";
            var r = n.getView();
            r.setTitle(this._set.name),
            r.setDescription(this._set.description),
            r.setButtonText(services.Localization.localize("sbc.rewards.claim")),
            gPopupClickShield.setActivePopup(n)
        }
        services.PIN.sendData(PINEventType.PAGE_VIEW, {
            type: PIN_PAGEVIEW_EVT_TYPE,
            pgid: "SBC - Rewards Overlay"
        }),
        this.getNavigationController().popViewController()
    } else if (t.data && 0 < t.data.itemViolations.length) {
        var s = t.data.itemViolations;
        this._viewmodel.requestViolationPlayers(s).observe(this, function(e, t) {
            e.unobserve(this);
            var i = JSUtils.isObject(t.response) ? this._viewmodel.generateViolationStrings(s, t.response.items) : []
              , o = new UTSBCConfirmSubmissionPopupViewController(i);
            o.onExit.observe(this, this._onPopupClosed),
            o.modalDisplayDimensions.width = "400px",
            gPopupClickShield.setActivePopup(o)
        })
    } else
        t.error && t.error.code === UtasErrorCode.SOME_ITEMS_NOT_FREE ? NetworkErrorManager.handleStatus(t.error.code) : t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED ? (services.Notification.queue([services.Localization.localize("sbc.notification.disabled"), UINotificationType.NEGATIVE]),
        getAppMain().getRootViewController().showGameView()) : this._challenge.hasExpired(!0) ? (services.Notification.queue([services.Localization.localize("notification.sbcChallenges.expired"), UINotificationType.NEGATIVE]),
        this.getNavigationController().popToRootViewController()) : services.Notification.queue([services.Localization.localize("notification.sbcChallenges.failedToSubmit"), UINotificationType.NEGATIVE])
}
,
UTSBCSquadDetailPanelViewController.prototype._eSquadExchange = function _eSquadExchange() {
    this._challengeActionDelegate ? this._challengeActionDelegate.submitChallenge(this, this._challenge, this._set) : this._submitChallenge()
}
,
NamespaceManager.Register("controllers.navigation"),
controllers.navigation.SBCSquadDetails = function SBCSquadDetailNavigationController(e, t) {
    UTNavigationController.call(this, e, t),
    this.onSearchStarted = new EAObservable,
    Object.defineProperty(this, "onSearchStarted", {
        writable: !1
    }),
    this.onSearchEnded = new EAObservable,
    Object.defineProperty(this, "onSearchEnded", {
        writable: !1
    })
}
,
JSUtils.inherits(controllers.navigation.SBCSquadDetails, UTNavigationController),
controllers.navigation.SBCSquadDetails.prototype.initWithSBCSet = function initWithSBCSet(e, t) {
    this.initialized || (DebugUtils.Assert(e instanceof UTSBCSetEntity, "Initialization expected an SBC set entity."),
    DebugUtils.Assert(JSUtils.isNumber(t), "Initialization expected Challenge ID to be a number."),
    this.getRootController().initWithSBCSet(e, t),
    this.init())
}
,
controllers.navigation.SBCSquadDetails.prototype.dealloc = function dealloc() {
    this.onSearchStarted.dealloc(),
    this.onSearchEnded.dealloc(),
    this.superclass(),
    this.onSearchStarted = null,
    this.onSearchEnded = null
}
,
controllers.navigation.SBCSquadDetails.prototype._getRootControllerInstance = function _getRootControllerInstance() {
    return new UTSBCSquadDetailPanelViewController
}
,
controllers.navigation.SBCSquadDetails.prototype.didPush = function didPush(e) {
    e === this.getRootController() && this.setNavigationVisibility(!1, !0)
}
,
controllers.navigation.SBCSquadDetails.prototype.setSquadBuildingChallengeActionDelegate = function setSquadBuildingChallengeActionDelegate(e) {
    this.getRootController().setSquadBuildingChallengeActionDelegate(e)
}
,
controllers.navigation.SBCSquadDetails.prototype._showController = function _showController(e, t) {
    this.superclass(e, t),
    e instanceof UTSquadBuilderViewController ? this.onSearchStarted.notify() : e instanceof UTSBCSquadDetailPanelViewController && this.onSearchEnded.notify()
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSlotActionPanelView = function(t) {
    function UTSlotActionPanelView() {
        return t.call(this) || this
    }
    return __extends(UTSlotActionPanelView, t),
    UTSlotActionPanelView.prototype.init = function() {
        var e = services.Localization;
        t.prototype.init.call(this),
        this._btnPlayerBio.init(),
        this._btnApplyConsumable.init(),
        this._btnAddSwap.init(),
        this._btnTransfer.init(),
        this._btnSearchMarket.init(),
        this._btnSearchSlot.init(),
        this._btnRemove.init(),
        this._btnDiscard.init(),
        this._btnPlayerBio.setText(e.localize("extendedPlayerInfo.general.playerBio")),
        this._btnApplyConsumable.setText(e.localize("panel.applyitem.button")),
        this._btnTransfer.setText(e.localize("infopanel.label.sendTradePile")),
        this._btnSearchMarket.setText(e.localize("infopanel.label.findallitems")),
        this._btnSearchSlot.setText(e.localize("infopanel.button.searchslot")),
        this._btnRemove.setText(e.localize("infopanel.button.removefromsquad")),
        this._btnDiscard.setText(e.localize("infopanel.label.quickSell")),
        this._btnPlayerBio.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnApplyConsumable.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnAddSwap.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnTransfer.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnSearchMarket.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnSearchSlot.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnRemove.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnDiscard.addTarget(this, this.eButtonSelected, EventType.TAP),
        this._btnDiscard.displayCurrencyIcon(!0),
        this.__positionLabel.textContent = e.localize("card.desc.training.gkattribabbr.Position") + " ",
        this.setInteractionState(!0)
    }
    ,
    UTSlotActionPanelView.prototype.setInteractionState = function(e) {
        t.prototype.setInteractionState.call(this, e),
        this._btnPlayerBio.setInteractionState(e),
        this._btnApplyConsumable.setInteractionState(e),
        this._btnAddSwap.setInteractionState(e),
        this._btnTransfer.setInteractionState(e),
        this._btnSearchMarket.setInteractionState(e),
        this._btnSearchSlot.setInteractionState(e),
        this._btnRemove.setInteractionState(e),
        this._btnDiscard.setInteractionState(e)
    }
    ,
    UTSlotActionPanelView.prototype.setItem = function(e, t) {
        var i, o, n, r = services.Localization;
        this._btnAddSwap.setText((o = (i = e).isValid() ? "swap" : "add",
        n = i.isManager() ? "manager" : "player",
        r.localize("infopanel.label." + o + n))),
        this._btnDiscard.setSubtext(r.localizeNumber(e.discardValue));
        var s = e.isValid()
          , a = e.concept
          , l = 0 < e.lastSalePrice
          , c = services.User.getUser();
        if (c) {
            var d = !getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_HIDE_TRANSFER_MARKET) && c.hasTradeAccess() && services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED);
            this._btnApplyConsumable.setDisplay(s && !a),
            this._btnDiscard.setDisplay(s && !a),
            this._btnRemove.setDisplay(s),
            this._btnPlayerBio.setDisplay(s && e.isPlayer()),
            this._btnTransfer.setDisplay(s),
            this._btnSearchMarket.setDisplay(s && d),
            this._btnSearchSlot.setDisplay(d),
            this._btnTransfer.setText(r.localize("infopanel.label.sendTradePile")),
            this._btnRemove.setText(r.localize(a ? "infopanel.button.removefromsquad" : "infopanel.label.storeInClub"))
        }
        e.untradeable || e.isLoaned() ? (this._btnTransfer.setText(r.localize("infopanel.label.untradeable")),
        this._btnTransfer.setInteractionState(!1)) : t && (this._btnTransfer.setText(r.localize("popup.error.tradetoken.SellItemTradePileFullTitle")),
        this._btnTransfer.setInteractionState(!1)),
        this.__textInfo.textContent = l ? r.localize("infopanel.label.prevBoughtPrice") : "",
        this.__valueInfo.textContent = l ? r.localizeNumber(e.lastSalePrice) : "",
        DOMKit.toggleDisplayStyle(this.__auctionInfo, l)
    }
    ,
    UTSlotActionPanelView.prototype.setShowOffItem = function(e) {
        this.setPreviewableOnlyItem(e, !1)
    }
    ,
    UTSlotActionPanelView.prototype.setTOTWItem = function(e, t) {
        this.setPreviewableOnlyItem(e, t)
    }
    ,
    UTSlotActionPanelView.prototype.setPreviewableOnlyItem = function(e, t) {
        this._btnPlayerBio.setDisplay(e.isValid() && e.isPlayer()),
        this._btnAddSwap.setDisplay(!1),
        this._btnApplyConsumable.setDisplay(!1),
        this._btnDiscard.setDisplay(!1),
        this._btnSearchMarket.setDisplay(e.isValid() && t),
        this._btnSearchSlot.setDisplay(!1),
        this._btnRemove.setDisplay(!1),
        this._btnTransfer.setDisplay(!1),
        DOMKit.toggleDisplayStyle(this.__auctionInfo, !1)
    }
    ,
    UTSlotActionPanelView.prototype.setSlotName = function(e) {
        var t = !JSUtils.isEmpty(e);
        DOMKit.toggleDisplayStyle(this.__positionContainer, t),
        this.__position.textContent = t ? e : ""
    }
    ,
    UTSlotActionPanelView.prototype.appendQuickList = function(e) {
        DOMKit.insertBefore(e.getRootElement(), this.__itemActions)
    }
    ,
    UTSlotActionPanelView.prototype.eButtonSelected = function(e, t, i) {
        var o = enums.UIItemActionEvent.BIO;
        e === this._btnPlayerBio ? o = enums.UIItemActionEvent.BIO : e === this._btnApplyConsumable ? o = enums.UIItemActionEvent.APPLY_CONSUMABLE : e === this._btnAddSwap ? o = enums.UIItemActionEvent.ADD_SWAP : e === this._btnTransfer ? o = enums.UIItemActionEvent.SEND_TO_TRANSFERS : e === this._btnSearchMarket ? o = enums.UIItemActionEvent.SEARCH_ON_MARKET : e === this._btnSearchSlot ? o = enums.UIItemActionEvent.SEARCH_SLOT_ON_MARKET : e === this._btnRemove ? o = enums.UIItemActionEvent.REMOVE_FROM_SQUAD : e === this._btnDiscard && (o = enums.UIItemActionEvent.DISCARD),
        this._triggerActions(o)
    }
    ,
    UTSlotActionPanelView
}(UTTargetActionView);
function UTSlotActionPanelViewController() {
    UTViewController.call(this),
    this._itemActionController = new UTItemActionController,
    this._quickListPanel = new UTQuickListPanelViewController,
    this._item = null,
    this._squad = null,
    this._challenge = null,
    this._slot = 0,
    this._iterator = null,
    this.onDiscard = new EAObservable,
    Object.defineProperty(this, "onDiscard", {
        writable: !1,
        enumerable: !0
    }),
    this.onMove = new EAObservable,
    Object.defineProperty(this, "onMove", {
        writable: !1,
        enumerable: !0
    }),
    this.onRemove = new EAObservable,
    Object.defineProperty(this, "onRemove", {
        writable: !1,
        enumerable: !0
    }),
    this.onPlayerBio = new EAObservable,
    Object.defineProperty(this, "onPlayerBio", {
        writable: !1,
        enumerable: !0
    }),
    this.onItemChange = new EAObservable,
    Object.defineProperty(this, "onItemChange", {
        writable: !1,
        enumerable: !0
    })
}
UTSlotActionPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("DetailPanel");
        var t = document.createElement("div");
        t.classList.add("ut-item-details--metadata"),
        this.__positionContainer = document.createElement("div"),
        this.__positionContainer.classList.add("position-container"),
        this.__positionLabel = document.createElement("span"),
        this.__positionContainer.appendChild(this.__positionLabel),
        this.__position = document.createElement("strong"),
        this.__positionContainer.appendChild(this.__position),
        t.appendChild(this.__positionContainer),
        this.__auctionInfo = document.createElement("div"),
        this.__auctionInfo.classList.add("auctionInfo");
        var i = document.createElement("div");
        i.classList.add("column"),
        this.__textInfo = document.createElement("span"),
        this.__textInfo.classList.add("subHeading"),
        i.appendChild(this.__textInfo),
        this.__valueInfo = document.createElement("span"),
        this.__valueInfo.classList.add("currency-coins"),
        this.__valueInfo.classList.add("subContent"),
        i.appendChild(this.__valueInfo),
        this.__auctionInfo.appendChild(i),
        t.appendChild(this.__auctionInfo),
        e.appendChild(t),
        this.__itemActions = document.createElement("div"),
        this.__itemActions.classList.add("ut-button-group"),
        this._btnPlayerBio = new UTGroupButtonControl,
        this._btnPlayerBio.getRootElement().classList.add("more"),
        this.__itemActions.appendChild(this._btnPlayerBio.getRootElement()),
        this._btnApplyConsumable = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnApplyConsumable.getRootElement()),
        this._btnAddSwap = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnAddSwap.getRootElement()),
        this._btnTransfer = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnTransfer.getRootElement()),
        this._btnSearchSlot = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnSearchSlot.getRootElement()),
        this._btnSearchMarket = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnSearchMarket.getRootElement()),
        this._btnRemove = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnRemove.getRootElement()),
        this._btnDiscard = new UTGroupButtonControl,
        this.__itemActions.appendChild(this._btnDiscard.getRootElement()),
        e.appendChild(this.__itemActions),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSlotActionPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__positionContainer = null,
    this.__positionLabel = null,
    this.__position = null,
    this.__auctionInfo = null,
    this.__textInfo = null,
    this.__valueInfo = null,
    this.__itemActions = null,
    this._btnPlayerBio.destroy(),
    this._btnApplyConsumable.destroy(),
    this._btnAddSwap.destroy(),
    this._btnTransfer.destroy(),
    this._btnSearchSlot.destroy(),
    this._btnSearchMarket.destroy(),
    this._btnRemove.destroy(),
    this._btnDiscard.destroy()
}
,
UTSlotActionPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
JSUtils.inherits(UTSlotActionPanelViewController, UTViewController),
UTSlotActionPanelViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass(),
        this._itemActionController.init(),
        this._quickListPanel.init(),
        this._quickListPanel.onList.observe(this, this._onRemove);
        var e = this.getView();
        e.addTarget(this, this._onDiscard, enums.UIItemActionEvent.DISCARD),
        e.addTarget(this, this._onMove, enums.UIItemActionEvent.SEND_TO_TRANSFERS),
        e.addTarget(this, this._onApply, enums.UIItemActionEvent.APPLY_CONSUMABLE),
        e.addTarget(this, this._onAddSwap, enums.UIItemActionEvent.ADD_SWAP),
        e.addTarget(this, this._ePrefillSearch, enums.UIItemActionEvent.SEARCH_SLOT_ON_MARKET),
        e.addTarget(this, this._eSearchMarket, enums.UIItemActionEvent.SEARCH_ON_MARKET),
        e.addTarget(this, this._onRemove, enums.UIItemActionEvent.REMOVE_FROM_SQUAD),
        e.addTarget(this, this._eBioSelected, enums.UIItemActionEvent.BIO)
    }
}
,
UTSlotActionPanelViewController.prototype.initWithItem = function initWithItem(e) {
    this.initialized || (this.setItem(e),
    this.init())
}
,
UTSlotActionPanelViewController.prototype.initWithSquad = function initWithSquad(e, t) {
    if (!this.initialized) {
        DebugUtils.Assert(e instanceof UTSquadEntity, "Initialization expected a squad entity"),
        DebugUtils.Assert(JSUtils.isNumber(t), "Initialization expected a number");
        var i = (this._squad = e).getSlot(t);
        0 <= i.getIndex() ? (this._slot = t,
        this.initWithItem(i.getItem())) : this.init()
    }
}
,
UTSlotActionPanelViewController.prototype.initWithSBCChallenge = function initWithSBCChallenge(e, t) {
    this.initialized || (DebugUtils.Assert(e instanceof UTSBCChallengeEntity, "Initialization expected a challenge entity"),
    this._challenge = e,
    this.initWithSquad(this._challenge.squad, t))
}
,
UTSlotActionPanelViewController.prototype.dealloc = function dealloc() {
    this.onDiscard.dealloc(),
    this.onMove.dealloc(),
    this.onRemove.dealloc(),
    this.onPlayerBio.dealloc(),
    this.onItemChange.dealloc(),
    this.onDiscard = null,
    this.onMove = null,
    this.onRemove = null,
    this.onPlayerBio = null,
    this.onItemChange = null,
    this.superclass(),
    this._itemActionController.dealloc(),
    this._quickListPanel.dealloc(),
    this._item = null,
    this._squad = null,
    this._challenge = null,
    this._slot = 0
}
,
UTSlotActionPanelViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTSlotActionPanelView
}
,
UTSlotActionPanelViewController.prototype.setSlotIndex = function setSlotIndex(e) {
    this._slot !== e && (this._slot = e,
    this._squad && this.setItem(this._squad.getSlot(e).getItem()))
}
,
UTSlotActionPanelViewController.prototype.setItem = function setItem(e) {
    if (this._item !== e) {
        this._item = e;
        var t = this.getView()
          , i = this._squad && this._squad.isShowOff()
          , o = repositories.Item.isPileFull(ItemPile.TRANSFER)
          , n = services.User.getUser()
          , r = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED) && !getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_HIDE_TRANSFER_MARKET) && n && n.hasTradeAccess();
        this._squad && this._squad.isTOTW() ? t.setTOTWItem(this._item, r) : i ? t.setShowOffItem(this._item) : t.setItem(this._item, o);
        var s = r && !o && this._item.isValid() && !this._item.untradeable && !i;
        this._quickListPanel.setItem(this._item);
        var a = this._quickListPanel.getView();
        s && (t.appendQuickList(a),
        a.setTitle(services.Localization.localize("infopanel.label.quickList"))),
        this._quickListPanel.getView().toggleDisplay(s)
    }
}
,
UTSlotActionPanelViewController.prototype.setIterator = function setIterator(e) {
    this._iterator = e
}
,
UTSlotActionPanelViewController.prototype._removeItemFromSquad = function _removeItemFromSquad() {
    var e = this._challenge ? this._challenge.squad : this._squad;
    e.removeItemFromSlot(this._squad.getSlot(this._item).getIndex()),
    this._challenge ? services.SBC.saveChallenge(this._challenge).observe(this, this._onSBCSaveComplete) : e.save()
}
,
UTSlotActionPanelViewController.prototype._onSBCSaveComplete = function _onSBCSaveComplete(e, t) {
    if (e.unobserve(this),
    !t.success) {
        var i = "notification.sbcChallenges.failedToSave";
        this._challenge.hasExpired(!0) ? i = "notification.sbcChallenges.expired" : t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED && (i = "sbc.notification.disabled"),
        services.Notification.queue([services.Localization.localize(i), UINotificationType.NEGATIVE])
    }
}
,
UTSlotActionPanelViewController.prototype._onDiscard = function _onDiscard() {
    var i = this.getView();
    i.setInteractionState(!1),
    utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.CONFIRM_DISCARD, [services.Localization.localizeNumber(this._item.discardValue)], function _onDiscardConfirm() {
        this._itemActionController.discard(this._item).observe(this, function(e, t) {
            e.unobserve(this),
            t.success && (this._removeItemFromSquad(),
            this.onDiscard.notify(this._item)),
            i.setInteractionState(!0)
        })
    }
    .bind(this), function() {
        i.setInteractionState(!0)
    }
    .bind(this))
}
,
UTSlotActionPanelViewController.prototype._onMove = function _onMove(e, t) {
    var i = t === enums.UIItemActionEvent.SEND_TO_TRANSFERS ? ItemPile.TRANSFER : ItemPile.CLUB;
    this._itemActionController.move(this._item, i).observe(this, function(e, t) {
        e.unobserve(this),
        t.success && (this._removeItemFromSquad(),
        this.onMove.notify(this._item))
    })
}
,
UTSlotActionPanelViewController.prototype._onRemove = function _onRemove() {
    this._removeItemFromSquad(),
    this.onRemove.notify(this._item)
}
,
UTSlotActionPanelViewController.prototype._onApply = function _onApply() {
    var e = new UTConsumableCategoriesViewController;
    this._challenge ? e.initWithSBCChallenge(this._challenge, this._slot) : this._squad ? e.initWithSquad(this._squad, this._slot) : this._item ? e.initWithItem(this._item) : e.init(),
    this.getNavigationController().pushViewController(e)
}
,
UTSlotActionPanelViewController.prototype._onAddSwap = function _onAddSwap() {
    var e = new UTClubSearchFiltersViewController
      , t = this.getNavigationController();
    if (t) {
        if (this._challenge ? e.initWithSBCChallenge(this._challenge, this._iterator) : this._squad ? e.initWithSquad(this._squad, this._iterator) : this._item ? e.initWithItem(this._item) : e.init(),
        this._squad) {
            var i = services.User.getUser().squadSearchCriteria
              , o = this._squad.getSlot(this._slot);
            if (i && 0 <= o.getIndex())
                o.getItem().isManager() ? (i.type = SearchType.STAFF,
                i.category = SearchCategory.MANAGER) : i.type = SearchType.PLAYER,
                i.position = o.getGeneralPositionName() || SearchType.ANY,
                e.setSearchCriteria(i)
        }
        e.onItemChange.observe(this, this._eOnItemChange),
        t.pushViewController(e)
    }
}
,
UTSlotActionPanelViewController.prototype._eSearchMarket = function _eSearchMarket() {
    var e = this.getNavigationController();
    if (e) {
        var t = new UTMarketSearchResultsViewController
          , i = new UTSearchCriteriaDTO;
        services.Item.clearTransferMarketCache(),
        this._item ? (i.defId = [this._item.definitionId],
        i.type = this._item.getSearchType(),
        t.initWithSearchCriteria(i),
        t.setPinnedItem(this._item)) : t.initWithSearchCriteria(i),
        e.pushViewController(t)
    }
}
,
UTSlotActionPanelViewController.prototype._ePrefillSearch = function _ePrefillSearch() {
    var e = this.getRootNavigationController();
    if (e) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.BUTTON_PRESS, "Squad Slot Detail View - Search On Transfer Market");
        var t = new UTMarketSearchFiltersViewController
          , i = new UTSquadMarketSearchViewModel;
        i.setSquad(this._squad),
        i.setCurrentSlotIndex(this._slot),
        t.initWithSquadContext(i),
        e.pushViewController(t)
    }
}
,
UTSlotActionPanelViewController.prototype._eBioSelected = function _eBioSelected() {
    this.onPlayerBio.notify()
}
,
UTSlotActionPanelViewController.prototype._eOnItemChange = function _eOnItemChange(e, t) {
    this.onItemChange.notify(t)
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var SBCBrickActionPanelView = function(e) {
    function SBCBrickActionPanelView() {
        return e.call(this) || this
    }
    return __extends(SBCBrickActionPanelView, e),
    SBCBrickActionPanelView.prototype.render = function(e) {
        this.__help.textContent = services.Localization.localize("sbc.custombrick.help");
        var t = e.getItem();
        this.generateRow(SBCEligibilityKey.LEAGUE_ID, t.leagueId, this.__list),
        this.generateRow(SBCEligibilityKey.CLUB_ID, t.teamId, this.__list),
        this.generateRow(SBCEligibilityKey.NATION_ID, t.nationId, this.__list)
    }
    ,
    SBCBrickActionPanelView.prototype.generateRow = function(e, t, i) {
        var o = " "
          , n = " ";
        switch (e) {
        case SBCEligibilityKey.NATION_ID:
            o = "controlbar.cardview.Nationality",
            n = 0 === t ? services.Localization.localize("roles.defaultRole") : UTLocalizationUtil.nationIdToName(t, services.Localization);
            break;
        case SBCEligibilityKey.LEAGUE_ID:
            o = "controlbar.cardview.League",
            n = 0 === t ? services.Localization.localize("roles.defaultRole") : UTLocalizationUtil.leagueIdToName(t, services.Localization);
            break;
        case SBCEligibilityKey.CLUB_ID:
            o = "controlbar.cardview.Club",
            n = 0 === t ? services.Localization.localize("roles.defaultRole") : UTLocalizationUtil.teamIdToAbbr15(t, services.Localization);
            break;
        default:
            DebugUtils.Assert(!1, "Reached default case: " + e)
        }
        var r = document.createElement("li")
          , s = document.createElement("h1")
          , a = document.createElement("h2");
        s.textContent = services.Localization.localize(o),
        a.textContent = n,
        r.appendChild(s),
        r.appendChild(a),
        i.appendChild(r)
    }
    ,
    SBCBrickActionPanelView
}(UTView);
function UTSlotDetailsViewController() {
    UTViewController.call(this),
    this._panel = null,
    this._panelView = null,
    this._viewmodel = null,
    this._squad = null,
    this._challenge = null,
    this.onSlotChange = new EAObservable,
    Object.defineProperty(this, "onSlotChange", {
        writable: !1
    })
}
SBCBrickActionPanelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("SBCBrickActionPanel"),
        this.__list = document.createElement("ul"),
        this.__list.classList.add("pseudo-table"),
        e.appendChild(this.__list),
        this.__help = document.createElement("p"),
        e.appendChild(this.__help),
        this.__root = e,
        this._generated = !0
    }
}
,
SBCBrickActionPanelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__list = null,
    this.__help = null
}
,
SBCBrickActionPanelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
JSUtils.inherits(UTSlotDetailsViewController, UTViewController),
UTSlotDetailsViewController.prototype.init = function init() {
    this.initialized || this.superclass()
}
,
UTSlotDetailsViewController.prototype.initWithItemIterator = function initWithItemIterator(e) {
    this.initialized || (DebugUtils.Assert(e instanceof EAIterator, "Initialization expected an instance of EAIterator"),
    this._viewmodel = e,
    this.init(),
    this.getView().addTarget(this, this._eIndexChange, UTItemDetailsView.Event.INDEX_CHANGE))
}
,
UTSlotDetailsViewController.prototype.initWithSquad = function initWithSquad(e, t) {
    if (!this.initialized) {
        DebugUtils.Assert(e instanceof UTSquadEntity, "Initialization expected a squad entity"),
        this._squad = e;
        var i = this._createIterator(t);
        this.initWithItemIterator(i)
    }
}
,
UTSlotDetailsViewController.prototype.initWithSBCChallenge = function initWithSBCChallenge(e, t) {
    if (!this.initialized) {
        DebugUtils.Assert(e instanceof UTSBCChallengeEntity, "Initialization expected a challenge entity"),
        DebugUtils.Assert(JSUtils.isNumber(t), "Initialization expected a numeric slot index"),
        this._challenge = e,
        this._squad = this._challenge.squad;
        var i = this._createIterator(t);
        this.initWithItemIterator(i),
        this.getView().addClass("sbc")
    }
}
,
UTSlotDetailsViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("extendedPlayerInfo.header")
}
,
UTSlotDetailsViewController.prototype._createIterator = function _createIterator(t) {
    var e = this._getSlots()
      , i = new EAIterator(e);
    return JSUtils.isNumber(t) && i.setIndex(i.indexOf(function(e) {
        return e.getIndex() === t
    })),
    i
}
,
UTSlotDetailsViewController.prototype._getSlots = function _getSlots() {
    function _generateSlotArray(t, e, i, o) {
        var n = t.getFieldPlayers().reverse().concat(t.getSubPlayers(), t.getReservePlayers());
        return e && n.unshift(t.getManager()),
        i && (n = n.filter(function(e) {
            return e.isValid()
        })),
        o && (n = n.filter(function(e) {
            return -1 === t.simpleBrickIndices.indexOf(e.getIndex())
        })),
        n
    }
    return this._squad.isTOTW() ? _generateSlotArray(this._squad, !1, !0, !1) : this._squad.isShowOff() ? _generateSlotArray(this._squad, !0, !0, !1) : this._squad.isSBC() ? _generateSlotArray(this._squad, !1, !1, !0) : _generateSlotArray(this._squad, !0, !1, !1)
}
,
UTSlotDetailsViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._panel ? (this._panel.dealloc(),
    this._panel = null,
    this._panelView = null) : this._panelView && (this._panelView.dealloc(),
    this._panelView = null),
    this.onSlotChange.dealloc(),
    this.onSlotChange = null,
    this._viewmodel = null,
    this._squad = null,
    this._challenge = null
}
,
UTSlotDetailsViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this._renderView(),
    this.getNavigationController().setNavigationVisibility(!isPhone())
}
,
UTSlotDetailsViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass();
    var e = this.getView();
    e.toggleCarouselDisplay(!1),
    e.resetItems()
}
,
UTSlotDetailsViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTItemDetailsView
}
,
UTSlotDetailsViewController.prototype._renderView = function _renderView(e) {
    if (this.isViewDisplayed()) {
        var t = this.getView()
          , i = this._viewmodel.values()
          , o = this._viewmodel.current()
          , n = this._viewmodel.getIndex()
          , r = !this._squad.isTOTW();
        if (this._renderPanel(),
        e) {
            var s = i.slice(n, n + 1);
            t.updateSlide(n, o.getItem(), r),
            this._squad.isTOTW() || t.setSlotChemistry(s)
        } else
            t.render(i.map(function(e) {
                return e.getItem()
            }, this), n, r),
            this._squad.isTOTW() || t.setSlotChemistry(i);
        this._panelView instanceof UTSlotActionPanelView && this._panelView.setSlotName(this._getSlotName(o))
    }
}
,
UTSlotDetailsViewController.prototype._renderPanel = function _renderPanel() {
    this._panel ? (this.removeChildViewController(this._panel),
    this._panel.dealloc(),
    this._panel = null,
    this._panelView = null) : this._panelView && (this._panelView.dealloc(),
    this._panelView = null);
    var e = this._viewmodel.current();
    if (JSUtils.isValid(e) && e.isCustomBrick())
        this._panelView = new SBCBrickActionPanelView,
        this._panelView.render(this._viewmodel.current());
    else {
        var t = JSUtils.isValid(e) ? e.getIndex() : 0;
        this._panel = new UTSlotActionPanelViewController,
        this._panelView = this._panel.getView(),
        this.addChildViewController(this._panel),
        this._challenge ? this._panel.initWithSBCChallenge(this._challenge, t) : this._squad ? this._panel.initWithSquad(this._squad, t) : this._panel.init(),
        this._panel.setIterator(this._viewmodel),
        this._panel.onDiscard.observe(this, this._eItemRemoved),
        this._panel.onMove.observe(this, this._eItemRemoved),
        this._panel.onRemove.observe(this, this._eItemRemoved),
        this._panel.onPlayerBio.observe(this, this._onPlayerBio),
        this._panel.onItemChange.observe(this, this._eSlotChange)
    }
    this.getView().appendPanel(this._panelView)
}
,
UTSlotDetailsViewController.prototype.setSquad = function setSquad(e) {
    this._challenge || (this._squad = e,
    this._viewmodel = this._createIterator(0))
}
,
UTSlotDetailsViewController.prototype.setSlot = function setSlot(t) {
    var e = this.isViewDisplayed();
    this._viewmodel && (this._viewmodel.current().getIndex() !== t && (this._viewmodel.setIndex(this._viewmodel.indexOf(function(e) {
        return e.getIndex() === t
    })),
    e && this._renderPanel()),
    this._renderView())
}
,
UTSlotDetailsViewController.prototype._getSlotName = function _getSlotName(e) {
    var t = e.getIndex();
    if (t < UTSquadEntity.FIELD_PLAYERS)
        return UTLocalizationUtil.positionIdToName(e.getGeneralPosition(), services.Localization);
    if (this._challenge)
        return t >= UTSquadEntity.FIELD_PLAYERS ? services.Localization.localize("dock.label.workArea") : "";
    if (this._squad) {
        if (t === UTSquadEntity.MANAGER_SLOT_INDEX)
            return services.Localization.localize("cards.cardfront.manager");
        if (t >= UTSquadEntity.FIELD_PLAYERS + UTSquadEntity.SUB_PLAYERS)
            return services.Localization.localize("dock.label.reserves");
        if (t >= UTSquadEntity.FIELD_PLAYERS)
            return services.Localization.localize("dock.label.substitutes")
    }
    return ""
}
,
UTSlotDetailsViewController.prototype._eItemRemoved = function _eItemRemoved() {
    var e = this._viewmodel.getIndex();
    this._squad ? (this._viewmodel.resetCollection(this._getSlots()),
    this._viewmodel.setIndex(e),
    this._renderView(!0)) : (this._viewmodel.remove(e),
    0 < this._viewmodel.length ? this._renderView(!0) : this.getNavigationController().popViewController(!0))
}
,
UTSlotDetailsViewController.prototype._eSlotChange = function _eSlotChange(e, t) {
    this._viewmodel.setIndex(this._viewmodel.indexOf(function(e) {
        return e.getIndex() === t.getIndex()
    })),
    this.onSlotChange.notify({
        slot: this._viewmodel.current()
    })
}
,
UTSlotDetailsViewController.prototype._eIndexChange = function _eIndexChange(e, t, i) {
    if (i.index !== this._viewmodel.getIndex()) {
        this._viewmodel.setIndex(i.index);
        var o = this._viewmodel.current();
        this._renderPanel(),
        this.onSlotChange.notify({
            slot: o
        }),
        this._panelView instanceof UTSlotActionPanelView && this._panelView.setSlotName(this._getSlotName(o))
    }
}
,
UTSlotDetailsViewController.prototype._onPlayerBio = function _onPlayerBio() {
    var e = this._viewmodel.current().getItem();
    if (e.isValid() && e.isPlayer() && JSUtils.isValid(e.getMetaData())) {
        var t = new UTPlayerBioViewController;
        t.initWithItem(e),
        this.getNavigationController().pushViewController(t)
    } else
        services.Notification.queue([services.Localization.localize("playerbio.unavailable"), UINotificationType.NEGATIVE])
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadItemDetailsNavigationController = function(o) {
    function UTSquadItemDetailsNavigationController(e, t) {
        var i = o.call(this, e, t) || this;
        return i._squad = null,
        i._challenge = null,
        i._dismissButton = null,
        i.onSlotChange = new EAObservable,
        i.onSearchStarted = new EAObservable,
        i.onSearchEnded = new EAObservable,
        i
    }
    return __extends(UTSquadItemDetailsNavigationController, o),
    UTSquadItemDetailsNavigationController.prototype.init = function() {
        this.initialized || (o.prototype.init.call(this),
        this._dismissButton = new UTNavigationButtonControl,
        this._dismissButton.init())
    }
    ,
    UTSquadItemDetailsNavigationController.prototype.initWithSquad = function(e, t) {
        var i = this;
        if (!this.initialized) {
            DebugUtils.Assert(e instanceof UTSquadEntity, "Initialization expected a squad entity."),
            this._squad = e;
            var o = this._getRootControllerInstance();
            o.initWithSquad(this._squad, t),
            o.onSlotChange.observe(this, function(e, t) {
                i.onSlotChange.notify(t)
            }),
            this.initWithRootController(o)
        }
    }
    ,
    UTSquadItemDetailsNavigationController.prototype.initWithSBCChallenge = function(e, t) {
        var i = this;
        if (!this.initialized) {
            DebugUtils.Assert(e instanceof UTSBCChallengeEntity, "Initialization expected a challenge entity."),
            DebugUtils.Assert(JSUtils.isNumber(t), "Initialization expected a number for current squad slot."),
            this._challenge = e,
            this._squad = this._challenge.squad;
            var o = this._getRootControllerInstance();
            o.initWithSBCChallenge(this._challenge, t),
            o.onSlotChange.observe(this, function(e, t) {
                i.onSlotChange.notify(t)
            }),
            this.initWithRootController(o)
        }
    }
    ,
    UTSquadItemDetailsNavigationController.prototype.dealloc = function() {
        o.prototype.dealloc.call(this),
        this._dismissButton && (this._dismissButton.dealloc(),
        this._dismissButton = null),
        this.onSlotChange && this.onSlotChange.dealloc(),
        this.onSearchStarted && this.onSearchStarted.dealloc(),
        this.onSearchEnded && this.onSearchEnded.dealloc(),
        this._squad = null,
        this._challenge = null
    }
    ,
    UTSquadItemDetailsNavigationController.prototype._getRootControllerInstance = function() {
        return new UTSlotDetailsViewController
    }
    ,
    UTSquadItemDetailsNavigationController.prototype._getRootController = function() {
        return this.getRootController()
    }
    ,
    UTSquadItemDetailsNavigationController.prototype.getRootPrimaryNavigationItem = function() {
        return this._dismissButton
    }
    ,
    UTSquadItemDetailsNavigationController.prototype.setSquad = function(e) {
        this._challenge || (this._squad = e,
        this._getRootController().setSquad(this._squad))
    }
    ,
    UTSquadItemDetailsNavigationController.prototype.setSlot = function(e) {
        this.popToRootViewController(),
        this._getRootController().setSlot(e)
    }
    ,
    UTSquadItemDetailsNavigationController.prototype._showController = function(e, t) {
        o.prototype._showController.call(this, e, t),
        e instanceof UTClubSearchFiltersViewController ? this.onSearchStarted.notify() : e instanceof UTSlotDetailsViewController && this.onSearchEnded.notify()
    }
    ,
    UTSquadItemDetailsNavigationController
}(UTNavigationController)
  , UTSBCRequirementsNotificationView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSBCRequirementsNotificationView() {
        return t.call(this) || this
    }
    return __extends(UTSBCRequirementsNotificationView, t),
    UTSBCRequirementsNotificationView.prototype.renderChallengeRequirements = function(e, t) {
        void 0 === t && (t = !1),
        this._requirements.renderChallengeRequirements(e, t)
    }
    ,
    UTSBCRequirementsNotificationView.prototype.setNotificationDisplay = function(e) {
        this.setInteractionState(e),
        this.toggleClass("show", e)
    }
    ,
    UTSBCRequirementsNotificationView.prototype._tapDetected = function(e) {
        t.prototype._tapDetected.call(this, e),
        this._triggerActions(EventType.TAP)
    }
    ,
    UTSBCRequirementsNotificationView
}(UTTargetActionView));
UTSBCRequirementsNotificationView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-popover--left"),
        e.classList.add("ut-popover--top"),
        e.classList.add("ut-popover"),
        this._requirements = new UTSBCChallengeRequirementsView,
        e.appendChild(this._requirements.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCRequirementsNotificationView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._requirements.destroy()
}
,
UTSBCRequirementsNotificationView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCRequirementsNotificationViewController = function(t) {
    function UTSBCRequirementsNotificationViewController() {
        var e = t.call(this) || this;
        return e._challenge = null,
        e
    }
    return __extends(UTSBCRequirementsNotificationViewController, t),
    UTSBCRequirementsNotificationViewController.prototype.initWithSBCChallenge = function(e) {
        this.initialized || (DebugUtils.Assert(e instanceof UTSBCChallengeEntity, "Initialization expected an Challenge entity."),
        this._challenge = e,
        this.init())
    }
    ,
    UTSBCRequirementsNotificationViewController.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this._challenge = null
    }
    ,
    UTSBCRequirementsNotificationViewController.prototype._getViewInstanceFromData = function() {
        return new UTSBCRequirementsNotificationView
    }
    ,
    UTSBCRequirementsNotificationViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this._challenge && (this.getView().renderChallengeRequirements(this._challenge, !0),
        this._challenge.onDataChange.observe(this, this._eChallengeUpdated),
        this._challenge.onSave.observe(this, this._eChallengeUpdated))
    }
    ,
    UTSBCRequirementsNotificationViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this),
        this._challenge && (this._challenge.onDataChange.unobserve(this),
        this._challenge.onSave.unobserve(this))
    }
    ,
    UTSBCRequirementsNotificationViewController.prototype._eChallengeUpdated = function(e, t) {
        this.isViewDisplayed() && this._challenge && this.getView().renderChallengeRequirements(this._challenge, !0)
    }
    ,
    UTSBCRequirementsNotificationViewController
}(UTViewController);
function UTSBCSquadSplitViewController() {
    UTBaseSquadSplitViewController.call(this),
    this._challengeDetailsController = null,
    this._set = null,
    this._challengeId = 0,
    this._requirementsNotification = new UTSBCRequirementsNotificationViewController,
    this._searchFlowActive = !1,
    this._viewmodel = new UTSBCItemWarningViewModel
}
JSUtils.inherits(UTSBCSquadSplitViewController, UTBaseSquadSplitViewController),
UTSBCSquadSplitViewController.REQUIREMENTS_AUTO_OPEN = !0,
UTSBCSquadSplitViewController.prototype.init = function init() {
    this.initialized || (this.superclass(),
    this._challengeDetailsController = new controllers.navigation.SBCSquadDetails,
    this._challengeDetailsController.setNavigationStyle(UTNavigationBarView.Style.SECONDARY),
    this._challengeDetailsController.setSquadBuildingChallengeActionDelegate(this),
    this._set ? this._challengeDetailsController.initWithSBCSet(this._set, this._challengeId) : this._challengeDetailsController.init(),
    this.addChildViewController(this._challengeDetailsController),
    this._challengeDetailsController.onSearchStarted.observe(this, this._eSearchStarted),
    this._challengeDetailsController.onSearchEnded.observe(this, this._eSearchEnded))
}
,
UTSBCSquadSplitViewController.prototype.initWithSBCSet = function initWithSBCSet(e, t) {
    if (!this.initialized) {
        DebugUtils.Assert(e instanceof UTSBCSetEntity, "Initialization expected an SBC Set entity."),
        DebugUtils.Assert(JSUtils.isNumber(t) && 0 <= t, "Initialization expected a valid SBC Challenge ID."),
        this._set = e,
        this._challengeId = t;
        var i = this._set.challenges.get(this._challengeId);
        this._requirementsNotification.initWithSBCChallenge(i),
        this._requirementsNotification.getView().addTarget(this, this._eRequirementsNotificationTap, EventType.TAP),
        this.initWithSquad(i.squad)
    }
}
,
UTSBCSquadSplitViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._challengeDetailsController.dealloc(),
    this._requirementsNotification.dealloc(),
    this._viewmodel.dealloc(),
    this._challengeDetailsController = null,
    this._requirementsNotification = null,
    this._set = null,
    this._challengeId = 0,
    this._viewmodel = null
}
,
UTSBCSquadSplitViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this._requirementsNotification.viewDidAppear()
}
,
UTSBCSquadSplitViewController.prototype._generateSquadOverview = function _generateSquadOverview() {
    var e = null;
    if (this._set) {
        (e = new UTSBCSquadOverviewViewController).initWithSBCSet(this._set, this._challengeId);
        var t = e.getView();
        t.getRequirementsButton().addTarget(this, this._eRequirementsTap, EventType.TAP),
        t.addSubview(this._requirementsNotification.getView()),
        t.layoutSubviews(),
        this._requirementsNotification.viewDidAppear()
    } else
        e = this.superclass();
    return e
}
,
UTSBCSquadSplitViewController.prototype._generateItemDetails = function _generateItemDetails(e) {
    var t = this._set.challenges.get(this._challengeId)
      , i = new UTSquadItemDetailsNavigationController;
    return i.onSearchStarted.observe(this, this._eSearchStarted),
    i.onSearchEnded.observe(this, this._eSearchEnded),
    t ? i.initWithSBCChallenge(t, e) : i.init(),
    i
}
,
UTSBCSquadSplitViewController.prototype.getDefaultPanel = function getDefaultPanel() {
    return this._challengeDetailsController
}
,
UTSBCSquadSplitViewController.prototype._onPopupClosed = function _onPopupClosed(e, t) {
    e.unobserve(this),
    t && t !== enums.UIDialogOptions.CANCEL && (t === UTSBCConfirmSubmissionPopupViewController.SUBMIT_EVENTS.SUBMIT_IGNORE && services.UserSettings.setSBCValidationSkip(!0),
    this._submitChallenge(!0))
}
,
UTSBCSquadSplitViewController.prototype._submitChallenge = function _submitChallenge(e) {
    var t = this._set.challenges.get(this._challengeId);
    if (t.canSubmit())
        if (!services.Configuration.getFeatureSetting(UTServerSettingsRepository.KEY.SBC_ALLOW_UNTRADEABLE) && t.hasUntradeableItems())
            utils.PopupManager.showAlert(utils.PopupManager.Alerts.SBC_UNTRADEABLE_NOT_ALLOWED);
        else if (JSUtils.isValid(this._set)) {
            TelemetryManager.trackEvent(TelemetryManager.Sections.SBC, TelemetryManager.Categories.BUTTON_PRESS, "SBC - Submit Challenge");
            var i = JSUtils.isBoolean(e) ? e : services.UserSettings.getSBCValidationSkip();
            services.SBC.submitChallenge(t, this._set, i).observe(this, this._onChallengeSubmitted)
        } else
            services.Notification.queue([services.Localization.localize("notification.sbcChallenges.failedToSubmit"), UINotificationType.NEGATIVE]);
    else
        utils.PopupManager.showAlert(utils.PopupManager.Alerts.SBC_INELIGIBLE_SQUAD)
}
,
UTSBCSquadSplitViewController.prototype._onChallengeSubmitted = function _onChallengeSubmitted(e, t) {
    e.unobserve(this);
    var i = this._set.getChallenge(this._challengeId);
    if (t.success && i) {
        var o = new UTGameRewardsViewController(i.awards);
        o.init(),
        o.modalDisplayDimensions.width = "24em";
        var n = o.getView();
        if (n.setTitle(i.name),
        n.setDescription(i.description),
        n.setButtonText(services.Localization.localize("sbc.rewards.claim")),
        gPopupClickShield.setActivePopup(o),
        t.data.setCompleted) {
            var r = new UTGameRewardsViewController(this._set.awards);
            r.init(),
            r.modalDisplayDimensions.width = "24em";
            var s = r.getView();
            s.setTitle(this._set.name),
            s.setDescription(this._set.description),
            s.setButtonText(services.Localization.localize("sbc.rewards.claim")),
            gPopupClickShield.setActivePopup(r)
        }
        services.PIN.sendData(PINEventType.PAGE_VIEW, {
            type: PIN_PAGEVIEW_EVT_TYPE,
            pgid: "SBC - Rewards Overlay"
        }),
        this.getNavigationController().popViewController()
    } else if (t.data && 0 < t.data.itemViolations.length) {
        var a = t.data.itemViolations;
        this._viewmodel.requestViolationPlayers(a).observe(this, function(e, t) {
            e.unobserve(this);
            var i = JSUtils.isObject(t.response) ? this._viewmodel.generateViolationStrings(a, t.response.items) : []
              , o = new UTSBCConfirmSubmissionPopupViewController(i);
            o.onExit.observe(this, this._onPopupClosed),
            o.modalDisplayDimensions.width = "400px",
            gPopupClickShield.setActivePopup(o)
        })
    } else
        t.error && t.error.code === UtasErrorCode.SOME_ITEMS_NOT_FREE ? NetworkErrorManager.handleStatus(t.error.code) : t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED ? (services.Notification.queue([services.Localization.localize("sbc.notification.disabled"), UINotificationType.NEGATIVE]),
        getAppMain().getRootViewController().showGameView()) : i.hasExpired(!0) ? (services.Notification.queue([services.Localization.localize("notification.sbcChallenges.expired"), UINotificationType.NEGATIVE]),
        this.getNavigationController().popToRootViewController()) : services.Notification.queue([services.Localization.localize("notification.sbcChallenges.failedToSubmit"), UINotificationType.NEGATIVE])
}
,
UTSBCSquadSplitViewController.prototype.submitChallenge = function submitChallenge() {
    this._submitChallenge()
}
,
UTSBCSquadSplitViewController.prototype._eSearchStarted = function _eSearchStarted() {
    this._searchFlowActive = !0,
    UTSBCSquadSplitViewController.REQUIREMENTS_AUTO_OPEN && (this._requirementsNotification.getView().setNotificationDisplay(!0),
    this._overviewController.getView().getRequirementsButton().setChecked(!0))
}
,
UTSBCSquadSplitViewController.prototype._eSearchEnded = function _eSearchEnded() {
    this._searchFlowActive = !1,
    this._requirementsNotification.getView().setNotificationDisplay(!1),
    this._overviewController.getView().getRequirementsButton().setChecked(!1)
}
,
UTSBCSquadSplitViewController.prototype._eRequirementsNotificationTap = function _eRequirementsNotificationTap(e) {
    e.setNotificationDisplay(!1),
    this._searchFlowActive && (UTSBCSquadSplitViewController.REQUIREMENTS_AUTO_OPEN = !1),
    this._overviewController.getView().getRequirementsButton().setChecked(!1)
}
,
UTSBCSquadSplitViewController.prototype._eRequirementsTap = function _eRequirementsTap(e) {
    var t = e.getChecked();
    this._searchFlowActive && (UTSBCSquadSplitViewController.REQUIREMENTS_AUTO_OPEN = t),
    this._requirementsNotification.getView().setNotificationDisplay(t)
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCSetsViewModel = function(o) {
    function UTSBCSetsViewModel(e, t) {
        var i = o.call(this) || this;
        return i.refreshTimestamps = new EAHashTable,
        i.requests = [],
        i.sets = new EAHashTable,
        e.forEach(function(e) {
            i.sets.set(e.id, e)
        }, i),
        i.categories = t,
        i.categoriesIterator = new EAIterator([]),
        i.areTutorialSetsComplete() && (i.categoriesIterator.resetCollection(i.categories),
        i.categories = []),
        i.setRefreshTimestamps(e),
        i
    }
    return __extends(UTSBCSetsViewModel, o),
    UTSBCSetsViewModel.prototype.dealloc = function() {
        this.cancelRequests(),
        this.resetCollections([], []),
        o.prototype.dealloc.call(this)
    }
    ,
    UTSBCSetsViewModel.prototype.cancelRequests = function() {
        0 < this.requests.length && (this.requests.forEach(function(e) {
            e.clearObservers(),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }, this),
        this.requests = [])
    }
    ,
    UTSBCSetsViewModel.prototype.completeRequest = function(e, t) {
        e.unobserve(this),
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING);
        var i = this.requests.indexOf(e);
        0 <= i && this.requests.splice(i, 1)
    }
    ,
    UTSBCSetsViewModel.prototype.getTutorialSets = function() {
        return this.sets.filter(function(e) {
            return e.tutorial
        })
    }
    ,
    UTSBCSetsViewModel.prototype.areTutorialSetsComplete = function() {
        var e = this.getTutorialSets();
        if (0 === e.length)
            return !0;
        var t = JSUtils.find(e, function(e) {
            return !e.isComplete()
        });
        return !JSUtils.isValid(t)
    }
    ,
    UTSBCSetsViewModel.prototype.resetCollections = function(e, t) {
        var i = this;
        this.sets.clear(),
        e.forEach(function(e) {
            i.sets.set(e.id, e)
        }, this),
        this.categories = t,
        this.areTutorialSetsComplete() ? (this.categoriesIterator.resetCollection(this.categories),
        this.categories = []) : this.categoriesIterator.resetCollection([]),
        this.setRefreshTimestamps(e)
    }
    ,
    UTSBCSetsViewModel.prototype.setCurrentCategoryIndex = function(e) {
        JSUtils.isValid(this.categoriesIterator.get(e)) && this.categoriesIterator.setIndex(e)
    }
    ,
    UTSBCSetsViewModel.prototype.getCurrentCategoryIndex = function() {
        return this.categoriesIterator.getIndex()
    }
    ,
    UTSBCSetsViewModel.prototype.getCurrentCategory = function() {
        return this.categoriesIterator.current()
    }
    ,
    UTSBCSetsViewModel.prototype.getSetsByCurrentCategory = function() {
        var e, i = this, o = [];
        function sortSets(e, t) {
            if (e.isComplete() !== t.isComplete()) {
                if (!e.isComplete() && t.isComplete())
                    return -1;
                if (!t.isComplete() && e.isComplete())
                    return 1
            }
            if (e.isFeatured !== t.isFeatured) {
                if (e.isFeatured && !t.isFeatured)
                    return -1;
                if (t.isFeatured && !e.isFeatured)
                    return 1
            }
            if (e.priority !== t.priority) {
                if (e.priority < t.priority)
                    return -1;
                if (t.priority < e.priority)
                    return 1
            }
            if (e.notExpirable !== t.notExpirable) {
                if (!e.notExpirable && t.notExpirable)
                    return -1;
                if (!t.notExpirable && e.notExpirable)
                    return 1
            }
            if (e.endTime !== t.endTime) {
                if (e.endTime < t.endTime)
                    return -1;
                if (t.endTime < e.endTime)
                    return 1
            }
            return 0
        }
        var t = this.getTutorialSets();
        return 0 < t.length && JSUtils.find(t, function(e) {
            return !e.isComplete()
        }) ? o = t.sort(sortSets) : (0 < this.categories.length && (this.categoriesIterator.resetCollection(this.categories),
        this.categories = []),
        null === (e = this.categoriesIterator.current()) || void 0 === e || e.setIds.forEach(function(e) {
            var t = i.sets.get(e);
            t && o.push(t)
        }, this),
        o.sort(sortSets)),
        o
    }
    ,
    UTSBCSetsViewModel.prototype.getCategoryByIndex = function(e) {
        return this.categoriesIterator.get(e)
    }
    ,
    UTSBCSetsViewModel.prototype.setCategoryById = function(e) {
        for (var t = this.getCategories(), i = 0; i < t.length; i++)
            if (t[i].id === e) {
                this.setCurrentCategoryIndex(i);
                break
            }
    }
    ,
    UTSBCSetsViewModel.prototype.getCategories = function() {
        return this.categoriesIterator.values()
    }
    ,
    UTSBCSetsViewModel.prototype.setRefreshTimestamps = function(e) {
        var t = this;
        e.filter(function(e) {
            return e.repeatabilityMode === SBCRepeatabilityMode.REFRESH
        }).forEach(function(e) {
            t.refreshTimestamps.set(e.id, e.getRefreshPeriodEndTime())
        })
    }
    ,
    UTSBCSetsViewModel.prototype.hasRefreshPeriodEnded = function(e) {
        var t = Math.floor(Date.now() / MS_PER_SECOND)
          , i = this.refreshTimestamps.get(e);
        return !!JSUtils.isNumber(i) && i < t
    }
    ,
    UTSBCSetsViewModel.prototype.updateSetRepeatability = function() {
        var t = this;
        this.sets.filter(function(e) {
            return t.hasRefreshPeriodEnded(e.id)
        }).forEach(function(e) {
            e.timesCompleted = 0,
            t.refreshTimestamps.set(e.id, e.getRefreshPeriodEndTime())
        })
    }
    ,
    UTSBCSetsViewModel.prototype.requestSets = function() {
        var i = this
          , e = services.SBC.requestSets();
        return gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        e.observe(this, function(e, t) {
            i.completeRequest(e, t),
            t.success && t.data && i.resetCollections(t.data.sets, t.data.categories)
        }),
        this.requests.push(e),
        e
    }
    ,
    UTSBCSetsViewModel
}(EAObject)
  , UTSBCTimerLabelView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTSBCTimerLabelView() {
        var e = t.call(this) || this;
        return e.endTime = 0,
        e.canExpire = !1,
        e.updateInterval = 0,
        e
    }
    return __extends(UTSBCTimerLabelView, t),
    UTSBCTimerLabelView.prototype.setEndTime = function(e) {
        this.endTime = e
    }
    ,
    UTSBCTimerLabelView.prototype.setExpiryState = function(e) {
        this.canExpire = e
    }
    ,
    UTSBCTimerLabelView.prototype.start = function(i) {
        void 0 === i && (i = 2e4);
        var o = this.getRootElement();
        function onUpdate() {
            var e = services.Localization
              , t = this.endTime - Math.floor(Date.now() / 1e3);
            this.toggleClass("no-expire", t <= 0),
            0 < t ? (t < 120 && 1e3 < i && setTimeout(function() {
                this.start(1e3)
            }
            .bind(this), 0),
            o.textContent = e.localize("sbc.sets.expiresIn") + ": " + e.localizeAuctionTimeRemaining(t)) : o.textContent = e.localize("sbc.sets.expired")
        }
        if (this.stop(),
        this.toggleClass("no-expire", !this.canExpire),
        this.canExpire) {
            var e = services.Configuration.getFeatureSetting(UTServerSettingsRepository.KEY.SBC_GRACE_PERIOD_MINUTES) * SECONDS_PER_MINUTE;
            this.endTime + e > Math.round(Date.now() / 1e3) ? (onUpdate.call(this),
            this.updateInterval = window.setInterval(onUpdate.bind(this), i)) : o.textContent = services.Localization.localize("sbc.sets.expired")
        } else
            o.textContent = services.Localization.localize("sbc.status.noexpire")
    }
    ,
    UTSBCTimerLabelView.prototype.stop = function() {
        clearInterval(this.updateInterval)
    }
    ,
    UTSBCTimerLabelView
}(UTView));
UTSBCTimerLabelView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("span");
        e.classList.add("label"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCTimerLabelView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTSBCTimerLabelView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCSetTileView = function(t) {
    function UTSBCSetTileView() {
        var e = t.call(this) || this;
        return e.oneSecond = 1e3,
        e.data = null,
        e
    }
    return __extends(UTSBCSetTileView, t),
    UTSBCSetTileView.prototype.init = function() {
        t.prototype.init.call(this),
        this._watchBtn.init(),
        this._infoBtn.init()
    }
    ,
    UTSBCSetTileView.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.data = null
    }
    ,
    UTSBCSetTileView.prototype.setData = function(e) {
        this._rewards.setData(e.awards),
        this.data = e,
        this.setInteractionState(!this.data.isComplete());
        var t = services.Localization.localize("sbc.sets.challengesComplete", [e.challengesCompletedCount.toString(), e.challengesCount.toString()]);
        this._progressBar.setProgress(e.challengesCompletedCount / e.challengesCount * 100),
        this._progressBar.setProgressLabel(t),
        this._watchBtn.setData(e),
        JSUtils.isEmpty(e.getPreviewImageId()) || this.data.isComplete() ? this._infoBtn.setDisplay(!1) : this._infoBtn.addTarget(this, this._eCheckMoreInfo, EventType.TAP),
        this.toggleClass("production-tagged", this.data.isFeatured)
    }
    ,
    UTSBCSetTileView.prototype.getData = function() {
        return this.data
    }
    ,
    UTSBCSetTileView.prototype.render = function() {
        var e = services.Localization;
        if (this._rewards.render(),
        this.data) {
            this.__tileContent.textContent = this.data.description,
            this.__rewardsHeader.textContent = e.localize("sbc.rewards.title");
            var t, i = "";
            t = this.data.repeatabilityMode === SBCRepeatabilityMode.NON_REPEATABLE ? (i = e.localize("tile.sbcSets.nonrepeatable"),
            UTSquadBuildingSetStatusLabelView.Type.NON_REPEATABLE) : (i = this.data.repeatabilityMode === SBCRepeatabilityMode.LIMITED || this.data.repeatabilityMode === SBCRepeatabilityMode.REFRESH ? e.localize("tile.sbcSets.repeatable") + " " + this.data.getRepeatsRemaining().toString() : e.localize("tile.sbcSets.repeatable"),
            UTSquadBuildingSetStatusLabelView.Type.REPEATABLE),
            this._repeatableStatus.setType(t),
            this._repeatableStatus.setText(i);
            var o = this.data.repeatabilityMode === SBCRepeatabilityMode.REFRESH;
            if (o) {
                var n = e.localizeTimeRemaining(this.data.getRefreshTimeRemaining());
                this._refreshStatus.setText(n)
            }
            this._refreshStatus.setType(UTSquadBuildingSetStatusLabelView.Type.REFRESH),
            this._refreshStatus.setDisplay(o),
            this.data.notExpirable ? this._expireStatus.setType(UTSquadBuildingSetStatusLabelView.Type.NON_EXPIRY) : this._expireStatus.setType(UTSquadBuildingSetStatusLabelView.Type.EXPIRY),
            this._expireStatus.setDisplay(!this.data.isComplete()),
            this._setImage.setResource(AssetLocationUtils.getSquadBuildingSetImageUri(this.data.assetId), !0).observe(this, function onResourceLoaded(e, t, i, o) {
                e.unobserve(this),
                t || this._setImage.setLocalResource("images/sbc/logo_SBC_home_tile.png")
            }),
            this.data.isComplete() ? this.addClass("complete") : this._expireStatus.setExpiryText(!this.data.notExpirable, this.data.getTimeRemaining())
        }
    }
    ,
    UTSBCSetTileView.prototype.onUpdate = function() {
        if (this.data && (this.data.notExpirable || this._expireStatus.setExpiryText(!this.data.notExpirable, this.data.getTimeRemaining()),
        this.data.repeatabilityMode === SBCRepeatabilityMode.REFRESH)) {
            var e = services.Localization.localizeTimeRemaining(this.data.getRefreshTimeRemaining());
            this._refreshStatus.setText(e)
        }
    }
    ,
    UTSBCSetTileView.prototype._eCheckMoreInfo = function(e, t, i) {
        var o;
        this._triggerActions(UTSBCSetTileView.Event.PREVIEW_SELECTED, {
            previewImageId: null === (o = this.data) || void 0 === o ? void 0 : o.getPreviewImageId()
        })
    }
    ,
    UTSBCSetTileView.Event = Object.freeze({
        PREVIEW_SELECTED: "UTSBCSetTileView.Event.PREVIEW_SELECTED"
    }),
    UTSBCSetTileView
}(UTTileView);
UTSBCSetTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("col-1-1"),
        e.classList.add("ut-sbc-set-tile-view");
        var t = document.createElement("div");
        t.classList.add("content-container"),
        this._setImage = new UTImageView,
        this._setImage.getRootElement().classList.add("set-image"),
        t.appendChild(this._setImage.getRootElement());
        var i = document.createElement("div");
        i.classList.add("text-content"),
        this.__tileTitle = document.createElement("h1"),
        this.__tileTitle.classList.add("tileHeader"),
        i.appendChild(this.__tileTitle);
        var o = document.createElement("div");
        o.classList.add("sbc-status-container"),
        this._repeatableStatus = new UTSquadBuildingSetStatusLabelView,
        o.appendChild(this._repeatableStatus.getRootElement()),
        this._refreshStatus = new UTSquadBuildingSetStatusLabelView,
        o.appendChild(this._refreshStatus.getRootElement()),
        this._expireStatus = new UTSquadBuildingSetStatusLabelView,
        o.appendChild(this._expireStatus.getRootElement()),
        i.appendChild(o),
        this.__tileContent = document.createElement("div"),
        this.__tileContent.classList.add("tileContent"),
        i.appendChild(this.__tileContent),
        this._progressBar = new UTProgressBarView,
        this._progressBar.getRootElement().classList.add("rounded"),
        this._progressBar.getRootElement().classList.add("sbc-set-progress"),
        this._progressBar.getRootElement().classList.add("large"),
        i.appendChild(this._progressBar.getRootElement()),
        t.appendChild(i);
        var n = document.createElement("div");
        n.classList.add("sbc-set--buttons"),
        this._watchBtn = new UTSBCFavoriteButtonControl,
        n.appendChild(this._watchBtn.getRootElement()),
        this._infoBtn = new UTImageButtonControl,
        this._infoBtn.getRootElement().classList.add("info-btn"),
        n.appendChild(this._infoBtn.getRootElement()),
        t.appendChild(n),
        e.appendChild(t);
        var r = document.createElement("div");
        r.classList.add("group-rewards"),
        this.__rewardsHeader = document.createElement("span"),
        this.__rewardsHeader.classList.add("rewards-header"),
        r.appendChild(this.__rewardsHeader),
        this._rewards = new UTRewardsFooterView,
        r.appendChild(this._rewards.getRootElement()),
        e.appendChild(r),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCSetTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._setImage.destroy(),
    this.__tileTitle = null,
    this._repeatableStatus.destroy(),
    this._refreshStatus.destroy(),
    this._expireStatus.destroy(),
    this.__tileContent = null,
    this._progressBar.destroy(),
    this._watchBtn.destroy(),
    this._infoBtn.destroy(),
    this.__rewardsHeader = null,
    this._rewards.destroy()
}
,
UTSBCSetTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSBCHubView = function(t) {
    function UTSBCHubView() {
        var e = t.call(this) || this;
        return e.sbcSetTiles = [],
        e
    }
    return __extends(UTSBCHubView, t),
    UTSBCHubView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._SBCCategoriesTM.setDisplay(!1),
        this._SBCCategoriesTM.addTarget(this, this.eTabSelected, EventType.TAP),
        DOMKit.toggleDisplayStyle(this.__favoritesTile, !1),
        this.__favoritesHeader.textContent = e.localize("sbc.favorites.title"),
        this.__favoritesInfo.textContent = e.localize("sbc.favorites.info"),
        this.setInteractionState(!0)
    }
    ,
    UTSBCHubView.prototype.dealloc = function() {
        this.clearTiles(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTSBCHubView.prototype.clearTiles = function() {
        this.sbcSetTiles.forEach(function(e) {
            e.dealloc()
        }),
        this.sbcSetTiles = []
    }
    ,
    UTSBCHubView.prototype.populateNavigation = function(e, t) {
        var i = this;
        0 < e.length && (this._SBCCategoriesTM.clearTabs(),
        this._SBCCategoriesTM.setDisplay(!0),
        e.forEach(function(e, t) {
            e.displayable && i._SBCCategoriesTM.addTab(t, e.name)
        }, this),
        this._SBCCategoriesTM.setActiveTab(t),
        this._SBCCategoriesTM.layoutSubviews())
    }
    ,
    UTSBCHubView.prototype.populateTiles = function(e, t) {
        var i = this;
        DOMKit.empty(this.__sbcSetTiles),
        this.clearTiles(),
        e = e.filter(function(e) {
            return e.isDisplayable()
        }),
        JSUtils.isValid(t) && DOMKit.toggleDisplayStyle(this.__favoritesTile, 0 === e.length && t.type === SBCCategoryType.CUSTOM_FAVOURITE),
        e.forEach(function(e) {
            var t = new UTSBCSetTileView;
            t.init(),
            t.title = e.name,
            t.setData(e),
            t.addTarget(i, i.eTileSelected, EventType.TAP),
            t.addTarget(i, i.eTilePreviewSelected, UTSBCSetTileView.Event.PREVIEW_SELECTED),
            i.sbcSetTiles.push(t),
            i.__sbcSetTiles.appendChild(t.getRootElement()),
            t.render()
        }, this),
        DOMKit.toggleClass(this.getRootElement(), "single-set", e.length <= 1)
    }
    ,
    UTSBCHubView.prototype.onUpdate = function() {
        this.sbcSetTiles.forEach(function(e) {
            return e.onUpdate()
        })
    }
    ,
    UTSBCHubView.prototype.eTabSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTSBCHubView.Event.CATEGORY_SELECTED, {
            index: i.index || 0
        })
    }
    ,
    UTSBCHubView.prototype.eTileSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTSBCHubView.Event.TILE_SELECTED, {
            set: e.getData()
        })
    }
    ,
    UTSBCHubView.prototype.eTilePreviewSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTSBCHubView.Event.PREVIEW_SELECTED, i)
    }
    ,
    UTSBCHubView.Event = Object.freeze({
        CATEGORY_SELECTED: "UTSBCHubView.Event.CATEGORY_SELECTED",
        TILE_SELECTED: "UTSBCHubView.Event.TILE_SELECTED",
        PREVIEW_SELECTED: "UTSBCHubView.Event.PREVIEW_SELECTED"
    }),
    UTSBCHubView
}(UTTargetActionView);
function UTSBCHubViewController() {
    UTViewController.call(this),
    this._viewmodel = null,
    this._previouslySelectedCategoryId = null,
    this._intervalController = new EAIntervalController(MS_PER_SECOND,this.handleViewUpdates.bind(this))
}
UTSBCHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("SBCHub"),
        this._SBCCategoriesTM = new EAFilterBarView,
        e.appendChild(this._SBCCategoriesTM.getRootElement());
        var t = document.createElement("div");
        t.classList.add("container"),
        this.__favoritesTile = document.createElement("div"),
        this.__favoritesTile.classList.add("no-favorites-tile"),
        this.__favoritesHeader = document.createElement("h1"),
        this.__favoritesTile.appendChild(this.__favoritesHeader),
        this.__favoritesInfo = document.createElement("p"),
        this.__favoritesTile.appendChild(this.__favoritesInfo),
        t.appendChild(this.__favoritesTile),
        this.__sbcSetTiles = document.createElement("div"),
        this.__sbcSetTiles.classList.add("layout-hub"),
        this.__sbcSetTiles.classList.add("grid"),
        t.appendChild(this.__sbcSetTiles),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSBCHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._SBCCategoriesTM.destroy(),
    this.__favoritesTile = null,
    this.__favoritesHeader = null,
    this.__favoritesInfo = null,
    this.__sbcSetTiles = null
}
,
UTSBCHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
JSUtils.inherits(UTSBCHubViewController, UTViewController),
UTSBCHubViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass(),
        this._intervalController.init(),
        TelemetryManager.trackPage(TelemetryManager.Sections.SBC, "SBC Hub"),
        this._viewmodel || (this._viewmodel = new UTSBCSetsViewModel([],[]));
        var e = this.getView();
        e.addTarget(this, this._eCategorySelected, UTSBCHubView.Event.CATEGORY_SELECTED),
        e.addTarget(this, this._eTileSelected, UTSBCHubView.Event.TILE_SELECTED),
        e.addTarget(this, this._eCheckMoreInfo, UTSBCHubView.Event.PREVIEW_SELECTED)
    }
}
,
UTSBCHubViewController.prototype.initWithSBCSetCategories = function initWithSBCSetCategories(e, t) {
    this.initialized || (this._viewmodel = new UTSBCSetsViewModel(e,t),
    this.init())
}
,
UTSBCHubViewController.prototype.dealloc = function dealloc() {
    this._viewmodel && (this._viewmodel.dealloc(),
    this._viewmodel = null),
    this._intervalController.dealloc(),
    this.superclass()
}
,
UTSBCHubViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTSBCHubView
}
,
UTSBCHubViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "Hub - SBC"
}
,
UTSBCHubViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.sbcHub")
}
,
UTSBCHubViewController.prototype.onPause = function onPause() {
    this.superclass(),
    this._intervalController.stop()
}
,
UTSBCHubViewController.prototype.onResume = function onResume() {
    this.superclass(),
    this._intervalController.start()
}
,
UTSBCHubViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this.getNavigationController().setNavigationVisibility(!0, !0),
    this._requestSBCData(),
    this._intervalController.start()
}
,
UTSBCHubViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass(),
    this._viewmodel.cancelRequests(),
    this._intervalController.stop()
}
,
UTSBCHubViewController.prototype.willDismiss = function willDismiss(e) {
    e && e instanceof UTSBCRewardPreviewViewController && e.dealloc()
}
,
UTSBCHubViewController.prototype._requestSBCData = function _requestSBCData() {
    this._viewmodel.requestSets().observe(this, function _onRetrieveSBCSetsComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = this.getView();
            JSUtils.isValid(this._previouslySelectedCategoryId) && this._viewmodel.setCategoryById(this._previouslySelectedCategoryId),
            i.populateNavigation(this._viewmodel.getCategories(), this._viewmodel.getCurrentCategoryIndex()),
            i.populateTiles(this._viewmodel.getSetsByCurrentCategory(), this._viewmodel.getCurrentCategory())
        } else if (NetworkErrorManager.checkCriticalStatus(t.status))
            NetworkErrorManager.handleStatus(t.status);
        else {
            var o = t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED ? "sbc.notification.disabled" : "notification.sbcSets.failedToLoad";
            services.Notification.queue([services.Localization.localize(o), UINotificationType.NEGATIVE]),
            this.getNavigationController().popViewController()
        }
    })
}
,
UTSBCHubViewController.prototype.handleViewUpdates = function handleViewUpdates() {
    this._viewmodel.updateSetRepeatability(),
    this.getView().onUpdate()
}
,
UTSBCHubViewController.prototype._eCategorySelected = function _eCategorySelected(e, t, i) {
    var o = i.index || 0;
    TelemetryManager.trackEvent(TelemetryManager.Sections.SBC, TelemetryManager.Categories.BUTTON_PRESS, "SBC - Select Filter"),
    o !== this._viewmodel.getCurrentCategoryIndex() && (this._previouslySelectedCategoryId = this._viewmodel.getCategoryByIndex(o).id,
    this._viewmodel.setCurrentCategoryIndex(o),
    this.getView().populateTiles(this._viewmodel.getSetsByCurrentCategory(), this._viewmodel.getCurrentCategory()),
    TelemetryManager.trackPage(TelemetryManager.Sections.SBC, "SBC Set List - " + this._viewmodel.getCategoryByIndex(o).name))
}
,
UTSBCHubViewController.prototype._eTileSelected = function _eTileSelected(e, t, i) {
    var r, s = this.getView(), a = i.set;
    function _onChallengeLoaded(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = this.getNavigationController();
            if (i) {
                var o = isPhone() ? new UTSBCSquadOverviewViewController : new UTSBCSquadSplitViewController;
                o.initWithSBCSet(a, r.id),
                i.pushViewController(o)
            }
        } else {
            var n = t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED ? "sbc.notification.disabled" : "notification.sbcChallenges.failedToLoad";
            services.Notification.queue([services.Localization.localize(n), UINotificationType.NEGATIVE])
        }
        s.setInteractionState(!0)
    }
    s.setInteractionState(!1),
    services.SBC.requestChallengesForSet(a).observe(this, function _onRequestChallengesComplete(e, t) {
        if (e.unobserve(this),
        t.success && 0 < t.data.challenges.length)
            if (a.hidden)
                r = t.data.challenges[0],
                services.SBC.loadChallenge(r).observe(this, _onChallengeLoaded);
            else {
                var i = this.getNavigationController();
                if (i) {
                    var o = new UTSBCChallengesViewController;
                    o.initWithSBCSet(a),
                    i.pushViewController(o, !0)
                }
                s.setInteractionState(!0)
            }
        else if (NetworkErrorManager.checkCriticalStatus(t.status))
            NetworkErrorManager.handleStatus(t.status);
        else {
            var n = t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED ? "sbc.notification.disabled" : "notification.sbcChallenges.failedToLoad";
            s.setInteractionState(!0),
            services.Notification.queue([services.Localization.localize(n), UINotificationType.NEGATIVE])
        }
    })
}
,
UTSBCHubViewController.prototype._eCheckMoreInfo = function _eCheckMoreInfo(e, t, i) {
    var o = i.previewImageId;
    if (!JSUtils.isEmpty(o)) {
        var n = new UTSBCRewardPreviewViewController;
        n.initWithImage(o),
        n.modalDisplayStyle = "form",
        this.presentViewController(n, !0)
    }
}
,
services.URL.registerDeepLinkID(DeepLinkSection.SBC, function(s) {
    var e = getAppMain().getRootViewController();
    if (services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.SBC_ENABLED)) {
        e.setGameViewTab(isPhone() ? UTGameTabBarController.TabTag.HOME : UTGameTabBarController.TabTag.SBC);
        var o = e.getPresentedViewController().getCurrentViewController()
          , n = null
          , a = null;
        0 === s.length ? _goToSBCHub() : (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.SBC.requestSets().observe(this, function _goToSet(e, t) {
            if (e.unobserve(this),
            t.success) {
                var i = t.data.sets.filter(function(e) {
                    return e.tutorial
                })
                  , o = JSUtils.find(i, function(e) {
                    return !e.isComplete()
                });
                if (!JSUtils.isValid(o)) {
                    var n = parseInt(s[0], 10);
                    if (a = JSUtils.find(t.data.sets, function(e) {
                        return e.id === n
                    }),
                    JSUtils.isValid(a) && !a.isComplete())
                        return void services.SBC.requestChallengesForSet(a).observe(this, _onRetrieveChallengesComplete)
                }
            } else {
                var r = t.error ? t.error.code : t.status;
                NetworkErrorManager.checkCriticalStatus(r) ? NetworkErrorManager.handleStatus(r) : r === UtasErrorCode.SERVICE_IS_DISABLED && services.Configuration.setFeatureEnabled(UTServerSettingsRepository.KEY.SBC_ENABLED, !1)
            }
            _goToSBCHub(),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        }
        .bind(this)))
    } else
        e.setGameViewTab(UTGameTabBarController.TabTag.HOME);
    function _goToSBCHub() {
        if (isPhone()) {
            var e = new UTSBCHubViewController;
            e.init(),
            o.pushViewController(e)
        }
    }
    function _goToChallenge(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = isPhone() ? new UTSBCSquadOverviewViewControllerw : new UTSBCSquadSplitViewController;
            i.initWithSBCSet(a, n.id),
            o.pushViewController(i)
        } else
            _goToSBCHub();
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }
    function _onRetrieveChallengesComplete(e, t) {
        if (e.unobserve(this),
        t.success && 0 < t.data.challenges.length)
            if (a.hidden)
                n = t.data.challenges[0],
                services.SBC.loadChallenge(n).observe(this, _goToChallenge);
            else {
                var i = new UTSBCChallengesViewController;
                i.initWithSBCSet(a),
                o.pushViewController(i),
                gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
            }
        else
            NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : (_goToSBCHub(),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
            t.error && t.error.code === UtasErrorCode.SERVICE_IS_DISABLED && services.Configuration.setFeatureEnabled(UTServerSettingsRepository.KEY.SBC_ENABLED, !1))
    }
}),
NamespaceManager.Register("interfaces"),
interfaces.SquadListViewDelegate = function ISquadListViewDelegate() {}
,
interfaces.SquadListViewDelegate.prototype.conforms = function conforms() {}
,
interfaces.SquadListViewDelegate.prototype.selectListRow = function selectListRow() {}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadListViewModel = function(t) {
    function UTSquadListViewModel(e) {
        return t.call(this, e) || this
    }
    return __extends(UTSquadListViewModel, t),
    UTSquadListViewModel.prototype.getSquads = function(t) {
        return t ? this._collection.filter(function(e) {
            return e.getType() === t
        }) : this._collection.slice()
    }
    ,
    UTSquadListViewModel.prototype.getSquadNames = function() {
        return this._collection.map(function(e) {
            return e.getName()
        })
    }
    ,
    UTSquadListViewModel.prototype.setIndexBySquadId = function(t) {
        this.setIndex(this.indexOf(function(e) {
            return e.getId() === t
        }))
    }
    ,
    UTSquadListViewModel
}(EAIterator)
  , UTSquadStatsListDataView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTSquadStatsListDataView(e) {
        var t = i.call(this) || this;
        return t.loc = e.localization,
        t
    }
    return __extends(UTSquadStatsListDataView, i),
    UTSquadStatsListDataView.prototype.init = function() {
        i.prototype.init.call(this),
        this.__labelChemistry.textContent = this.loc.localize("squad.chemistry.label"),
        this.__labelRating.textContent = this.loc.localize("squads.rating"),
        this._ratingStars.init()
    }
    ,
    UTSquadStatsListDataView.prototype.setChemistryDisplay = function(e) {
        DOMKit.toggleDisplayStyle(this.__chemistryContainer, e)
    }
    ,
    UTSquadStatsListDataView.prototype.setChemistry = function(e) {
        this.__valueChemistry.textContent = this.loc.localize("squad.chemistry.fraction", [e.toString(), UTSquadEntity.TOTAL_MAX_CHEM.toString()])
    }
    ,
    UTSquadStatsListDataView.prototype.setRating = function(e) {
        this._ratingStars.setRating(e)
    }
    ,
    UTSquadStatsListDataView
}(UTView));
UTSquadStatsListDataView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-summary-info");
        var t = document.createElement("div");
        t.classList.add("rating"),
        this.__labelRating = document.createElement("span"),
        this.__labelRating.classList.add("ut-squad-summary-label"),
        t.appendChild(this.__labelRating),
        this._ratingStars = new UTSquadStarRatingView,
        t.appendChild(this._ratingStars.getRootElement()),
        e.appendChild(t),
        this.__chemistryContainer = document.createElement("div"),
        this.__chemistryContainer.classList.add("chemistry"),
        this.__labelChemistry = document.createElement("span"),
        this.__labelChemistry.classList.add("ut-squad-summary-label"),
        this.__chemistryContainer.appendChild(this.__labelChemistry),
        this.__valueChemistry = document.createElement("span"),
        this.__valueChemistry.classList.add("ut-squad-summary-value"),
        this.__chemistryContainer.appendChild(this.__valueChemistry),
        e.appendChild(this.__chemistryContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadStatsListDataView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__labelRating = null,
    this._ratingStars.destroy(),
    this.__chemistryContainer = null,
    this.__labelChemistry = null,
    this.__valueChemistry = null
}
,
UTSquadStatsListDataView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadTableCellView = function(i) {
    function UTSquadTableCellView() {
        var e = i.call(this) || this;
        return e.dataComponent = null,
        e.squad = null,
        e
    }
    return __extends(UTSquadTableCellView, i),
    UTSquadTableCellView.prototype.init = function() {
        i.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTSquadTableCellView.prototype.dealloc = function() {
        this.squad && (this.squad.onDataUpdated.unobserve(this),
        this.squad = null),
        this.dataComponent && (this.dataComponent.dealloc(),
        this.dataComponent = null),
        i.prototype.dealloc.call(this)
    }
    ,
    UTSquadTableCellView.prototype.setInteractionState = function(e) {
        this.removeClass(enums.UIState.HOVER);
        var t = this._interactionState;
        i.prototype.setInteractionState.call(this, e),
        this._interactionState !== t && this.toggleClass(enums.UIState.DISABLED, !this._interactionState)
    }
    ,
    UTSquadTableCellView.prototype.setSquad = function(e) {
        this.squad && this.squad.onDataUpdated.unobserve(this),
        this.squad = e,
        this.squad.onDataUpdated.observe(this, this.squadDataUpdateHandler)
    }
    ,
    UTSquadTableCellView.prototype.getSquad = function() {
        return this.squad
    }
    ,
    UTSquadTableCellView.prototype.setSelected = function(e) {
        this.toggleClass(enums.UIState.SELECTED, e)
    }
    ,
    UTSquadTableCellView.prototype.render = function() {
        var e, t, i, o, n, r, s, a, l = services.Localization;
        this.__name.textContent = null !== (t = null === (e = this.squad) || void 0 === e ? void 0 : e.getName()) && void 0 !== t ? t : "",
        this.__formation.textContent = null !== (n = null === (o = null === (i = this.squad) || void 0 === i ? void 0 : i.getFormation()) || void 0 === o ? void 0 : o.displayName) && void 0 !== n ? n : "",
        this.__activeLabel.textContent = l.localize("navbar.label.activesquad"),
        this.__formationLabel.textContent = l.localize("squads.formation"),
        JSUtils.isValid(this.dataComponent) || (this.dataComponent = new UTSquadStatsListDataView({
            localization: services.Localization
        }),
        this.dataComponent.init(),
        this.__dataContainer.appendChild(this.dataComponent.getRootElement())),
        this.squad && this.dataComponent && (this.toggleClass("show-tag", !this.squad.isTOTW() && this.squad.isActive()),
        (null === (r = this.squad) || void 0 === r ? void 0 : r.isTOTW()) ? this.dataComponent.setChemistryDisplay(!1) : this.dataComponent.setChemistry(null === (s = this.squad) || void 0 === s ? void 0 : s.getChemistry()),
        this.dataComponent.setRating(null === (a = this.squad) || void 0 === a ? void 0 : a.getRating()))
    }
    ,
    UTSquadTableCellView.prototype._mouseEnter = function(e) {
        this.isInteractionEnabled() && (i.prototype._mouseEnter.call(this, e),
        this.addClass(enums.UIState.HOVER))
    }
    ,
    UTSquadTableCellView.prototype._mouseLeave = function(e) {
        this.isInteractionEnabled() && (i.prototype._mouseLeave.call(this, e),
        this.removeClass(enums.UIState.HOVER))
    }
    ,
    UTSquadTableCellView.prototype._touchStarted = function(e) {
        this.isInteractionEnabled() && (i.prototype._touchStarted.call(this, e),
        this.addClass(enums.UIState.ACTIVE))
    }
    ,
    UTSquadTableCellView.prototype._touchMoved = function(e) {
        this.isInteractionEnabled() && (i.prototype._touchMoved.call(this, e),
        this.removeClass(enums.UIState.ACTIVE))
    }
    ,
    UTSquadTableCellView.prototype._touchEnded = function(e) {
        this.isInteractionEnabled() && (i.prototype._touchEnded.call(this, e),
        this.removeClass(enums.UIState.ACTIVE))
    }
    ,
    UTSquadTableCellView.prototype._tapDetected = function(e) {
        this.isInteractionEnabled() && (i.prototype._tapDetected.call(this, e),
        this._triggerActions(EventType.TAP, {
            squad: this.squad
        }))
    }
    ,
    UTSquadTableCellView.prototype.squadDataUpdateHandler = function(e, t) {
        this.render()
    }
    ,
    UTSquadTableCellView
}(UTTargetActionView);
UTSquadTableCellView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squad-table-cell-view");
        var t = document.createElement("div");
        t.classList.add("ut-squad-table-cell-view--tag");
        var i = document.createElement("div");
        i.classList.add("label-container");
        var o = document.createElement("span");
        o.classList.add("icon_squad"),
        o.classList.add("fut_icon"),
        i.appendChild(o),
        this.__activeLabel = document.createElement("span"),
        this.__activeLabel.classList.add("label"),
        i.appendChild(this.__activeLabel),
        t.appendChild(i),
        e.appendChild(t),
        this.__name = document.createElement("h1"),
        this.__name.classList.add("ut-squad-table-cell-view--name"),
        e.appendChild(this.__name),
        this.__dataContainer = document.createElement("div"),
        this.__dataContainer.classList.add("ut-squad-table-cell-view--summary");
        var n = document.createElement("div");
        n.classList.add("summary-formation"),
        this.__formationLabel = document.createElement("span"),
        this.__formationLabel.classList.add("ut-squad-summary-label"),
        n.appendChild(this.__formationLabel),
        this.__formation = document.createElement("span"),
        this.__formation.classList.add("ut-squad-summary-value"),
        n.appendChild(this.__formation),
        this.__dataContainer.appendChild(n),
        e.appendChild(this.__dataContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadTableCellView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__activeLabel = null,
    this.__name = null,
    this.__dataContainer = null,
    this.__formationLabel = null,
    this.__formation = null
}
,
UTSquadTableCellView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSectionedSquadTableView = function(i) {
    function UTSectionedSquadTableView() {
        var e = i.call(this) || this;
        return e.cellViews = [],
        e.emptyMessage = null,
        e
    }
    return __extends(UTSectionedSquadTableView, i),
    UTSectionedSquadTableView.prototype.init = function() {
        i.prototype.init.call(this),
        this._header.init(),
        this._header.hideButton()
    }
    ,
    UTSectionedSquadTableView.prototype.dealloc = function() {
        this.removeEmptyMessage(),
        this.clearTable(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTSectionedSquadTableView.prototype.setInteractionState = function(t) {
        i.prototype.setInteractionState.call(this, t),
        this.cellViews.forEach(function(e) {
            return e.setInteractionState(t)
        })
    }
    ,
    UTSectionedSquadTableView.prototype.clearTable = function() {
        this.cellViews.forEach(function(e) {
            return e.dealloc()
        }),
        this.cellViews = []
    }
    ,
    UTSectionedSquadTableView.prototype.setHeaderTitle = function(e) {
        this._header.setText(e)
    }
    ,
    UTSectionedSquadTableView.prototype.setHeaderButtonLabel = function(e) {
        this._header.setButtonText(e)
    }
    ,
    UTSectionedSquadTableView.prototype.setHeaderButtonCallback = function(e) {
        var t = this;
        JSUtils.isFunction(e) && (this._header.getActions(this, EventType.TAP).forEach(function(e) {
            return t._header.removeTarget(t, e, EventType.TAP)
        }),
        this._header.addTarget(this, e, EventType.TAP))
    }
    ,
    UTSectionedSquadTableView.prototype.toggleHeaderButtonEnabled = function(e) {
        this._header.toggleButtonEnabled(e)
    }
    ,
    UTSectionedSquadTableView.prototype.toggleHeaderButton = function(e) {
        this._header.toggleButton(e)
    }
    ,
    UTSectionedSquadTableView.prototype.removeEmptyMessage = function() {
        var e;
        null === (e = this.emptyMessage) || void 0 === e || e.dealloc(),
        this.emptyMessage = null
    }
    ,
    UTSectionedSquadTableView.prototype.displayEmptyMessage = function(e, t) {
        this.clearTable(),
        this.emptyMessage || (this.emptyMessage = new UTEmptySectionMessageView,
        this.getRootElement().appendChild(this.emptyMessage.getRootElement())),
        this.emptyMessage.render(e, t)
    }
    ,
    UTSectionedSquadTableView.prototype.generateCellView = function(e) {
        var t = new UTSquadTableCellView;
        return t.init(),
        t.setSquad(e),
        t.render(),
        t.addClass("show-arrow scalable"),
        t.addTarget(this, this.eCellEventHandler, EventType.TAP),
        this.addSubview(t, this.__table),
        t
    }
    ,
    UTSectionedSquadTableView.prototype.setSquads = function(e) {
        return this.removeEmptyMessage(),
        this.clearTable(),
        this.cellViews = e.map(this.generateCellView, this),
        this.layoutSubviews(),
        this.cellViews
    }
    ,
    UTSectionedSquadTableView.prototype.selectCellByIndex = function(t) {
        var i = this;
        0 <= t && t < this.cellViews.length && this.cellViews.forEach(function(e) {
            return e.setSelected(e === i.cellViews[t])
        })
    }
    ,
    UTSectionedSquadTableView.prototype.selectCellBySquadId = function(i) {
        this.cellViews.forEach(function(e) {
            var t;
            return e.setSelected((null === (t = e.getSquad()) || void 0 === t ? void 0 : t.getId()) === i)
        })
    }
    ,
    UTSectionedSquadTableView.prototype.eCellEventHandler = function(e, t, i) {
        if (t === EventType.TAP) {
            var o = this.cellViews.indexOf(e);
            this._triggerActions(UTSectionedSquadTableView.Event.CELL_SELECTED, {
                squad: i.squad,
                cell: e,
                index: o
            })
        }
    }
    ,
    UTSectionedSquadTableView.Event = Object.freeze({
        CELL_SELECTED: "UTSectionedSquadTableView.Event.CELL_SELECTED"
    }),
    UTSectionedSquadTableView
}(UTTargetActionView);
UTSectionedSquadTableView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("section");
        e.classList.add("sectioned-item-list"),
        this._header = new UTSectionedTableHeaderView,
        e.appendChild(this._header.getRootElement()),
        this.__table = document.createElement("div"),
        e.appendChild(this.__table),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSectionedSquadTableView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._header.destroy(),
    this.__table = null
}
,
UTSectionedSquadTableView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadListView = function(e) {
    function UTSquadListView() {
        return e.call(this) || this
    }
    return __extends(UTSquadListView, e),
    UTSquadListView.prototype.init = function() {
        e.prototype.init.call(this),
        this._regularSquadSection.init(),
        this._regularSquadSection.addTarget(this, this.eCellSelected, UTSectionedSquadTableView.Event.CELL_SELECTED),
        this._conceptSquadSection.init(),
        this._conceptSquadSection.addTarget(this, this.eCellSelected, UTSectionedSquadTableView.Event.CELL_SELECTED)
    }
    ,
    UTSquadListView.prototype.render = function(e, t, i) {
        var o = services.Localization
          , n = e.length + t.length
          , r = i <= n;
        this.__totalLabel.textContent = o.localize("lineupList.squadSelector.total", [n.toString(), i.toString()]),
        this._regularSquadSection.setHeaderTitle(o.localize("squads.button.regularsquads", [e.length.toString()])),
        this._regularSquadSection.setHeaderButtonLabel(o.localize("infopanel.button.createnewsquad")),
        this._regularSquadSection.setHeaderButtonCallback(this.eHeaderButtonSelected.bind(this)),
        this._regularSquadSection.toggleHeaderButton(!0),
        this._regularSquadSection.toggleHeaderButtonEnabled(!r),
        this._conceptSquadSection.setHeaderTitle(o.localize("squads.button.conceptsquads", [t.length.toString()])),
        0 < e.length ? this._regularSquadSection.setSquads(e) : this._regularSquadSection.displayEmptyMessage(o.localize("squads.setEmptyMessage.regularHeader"), o.localize("squads.setEmptyMessage.regularMessage")),
        0 < t.length ? this._conceptSquadSection.setSquads(t) : this._conceptSquadSection.displayEmptyMessage(o.localize("squads.setEmptyMessage.conceptHeader"), o.localize("squads.setEmptyMessage.conceptMessage"))
    }
    ,
    UTSquadListView.prototype.selectListRow = function(e) {
        this._regularSquadSection.selectCellBySquadId(e),
        this._conceptSquadSection.selectCellBySquadId(e)
    }
    ,
    UTSquadListView.prototype.getRegularSquadSection = function() {
        return this._regularSquadSection
    }
    ,
    UTSquadListView.prototype.eHeaderButtonSelected = function(e) {
        this._triggerActions(UTSquadListView.Event.CREATE_SQUAD)
    }
    ,
    UTSquadListView.prototype.eCellSelected = function(e, t, i) {
        this._triggerActions(UTSquadListView.Event.SQUAD_SELECTED, {
            section: e,
            cell: i.cell,
            index: i.index,
            squad: i.squad
        })
    }
    ,
    UTSquadListView.Event = Object.freeze({
        CREATE_SQUAD: "UTSquadListView.Event.CREATE_SQUAD",
        SQUAD_SELECTED: "UTSquadListView.Event.SQUAD_SELECTED"
    }),
    UTSquadListView
}(UTTargetActionView);
function UTSquadListViewController() {
    UTViewController.call(this),
    this._squadListViewDelegate = null,
    Object.defineProperty(this, "_squadListViewDelegate", {
        writable: !0,
        enumerable: !1
    }),
    this._viewmodel = null
}
function UTSquadListSplitViewController() {
    UTSplitViewController.call(this),
    this._listViewController = new UTSquadListViewController,
    this._squadDetailsController = null
}
UTSquadListView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("section");
        e.classList.add("ut-squad-list-view"),
        this.__totalLabel = document.createElement("p"),
        this.__totalLabel.classList.add("total-label"),
        e.appendChild(this.__totalLabel),
        this._regularSquadSection = new UTSectionedSquadTableView,
        e.appendChild(this._regularSquadSection.getRootElement()),
        this._conceptSquadSection = new UTSectionedSquadTableView,
        e.appendChild(this._conceptSquadSection.getRootElement()),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadListView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__totalLabel = null,
    this._regularSquadSection.destroy(),
    this._conceptSquadSection.destroy()
}
,
UTSquadListView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
JSUtils.inherits(UTSquadListViewController, UTViewController),
UTSquadListViewController.prototype.initWithSquads = function initWithSquads(e) {
    this.initialized || (this._updateViewModel(e),
    this.init())
}
,
UTSquadListViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._squadListViewDelegate && (this._squadListViewDelegate = null),
    this._viewmodel = null
}
,
UTSquadListViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTSquadListView
}
,
UTSquadListViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "Squad List"
}
,
UTSquadListViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.squadlist")
}
,
UTSquadListViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var e = this.getView();
    e.addTarget(this, this._eCreateSquad, UTSquadListView.Event.CREATE_SQUAD),
    e.addTarget(this, this._eSquadSelected, UTSquadListView.Event.SQUAD_SELECTED),
    this._generateSquadsList()
}
,
UTSquadListViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass();
    var e = this.getView();
    e.removeTarget(this, this._eCreateSquad, UTSquadListView.Event.CREATE_SQUAD),
    e.removeTarget(this, this._eSquadSelected, UTSquadListView.Event.SQUAD_SELECTED)
}
,
UTSquadListViewController.prototype.setSquadListViewDelegate = function setSquadListViewDelegate(e) {
    this._squadListViewDelegate = e
}
,
UTSquadListViewController.prototype.getViewModel = function getViewModel() {
    return this._viewmodel
}
,
UTSquadListViewController.prototype._updateViewModel = function _updateViewModel(e) {
    this._viewmodel ? this._viewmodel.resetCollection(e) : this._viewmodel = new UTSquadListViewModel(e)
}
,
UTSquadListViewController.prototype.refreshData = function refreshData(e) {
    e ? (this._updateViewModel([]),
    this._generateSquadsList()) : this._generateSquadsList(this._viewmodel.getIndex())
}
,
UTSquadListViewController.prototype._generateSquadsList = function _generateSquadsList(o) {
    var n = this.getView();
    n.setInteractionState(!1),
    services.Squad.requestSquadList().observe(this, function _onGenerateSquadsList(e, t) {
        e.unobserve(this),
        this._updateViewModel(t.data.squads);
        var i = 0 <= o && o < this._viewmodel.length ? o : services.Squad.getActiveSquadId();
        this._viewmodel.setIndex(i),
        this.isViewDisplayed() && (n.render(this._viewmodel.getSquads(SquadType.REGULAR), this._viewmodel.getSquads(SquadType.CONCEPT), services.Squad.getMaxSquads()),
        JSUtils.isValid(this._squadListViewDelegate) ? this._squadListViewDelegate.selectListRow(this, i, this._viewmodel.current()) : n.selectListRow(i)),
        n.setInteractionState(!0)
    })
}
,
UTSquadListViewController.prototype._eSquadSelected = function _eSquadSelected(e, t, i) {
    var o = i.squad
      , n = this._viewmodel.indexOf(function(e) {
        return e.getId() === i.squad.getId()
    })
      , r = n !== this._viewmodel.getIndex();
    if (r && this._viewmodel.setIndex(n),
    JSUtils.isValid(this._squadListViewDelegate))
        r && this._squadListViewDelegate.selectListRow(this, n, o);
    else {
        var s = this.getNavigationController();
        if (s) {
            var a = new UTSquadActionsViewController;
            a.initWithSquad(o),
            s.pushViewController(a, !0)
        }
    }
}
,
UTSquadListViewController.prototype._eCreateSquad = function _eCreateSquad() {
    var e = new UTNameSquadViewController;
    e.init(),
    e.onConfirm.observe(this, function _onNewSquadConfirm(e, t) {
        e.unobserve(this),
        services.Squad.create(t, DEFAULT_FORMATION).observe(this, this._eSquadCreated)
    }
    .bind(this)),
    e.modalDisplayDimensions.width = "24em",
    gPopupClickShield.setActivePopup(e)
}
,
UTSquadListViewController.prototype._eSquadCreated = function _eSquadCreated(e, t) {
    if (e.unobserve(this),
    t.success) {
        var i = t.data.squad;
        if (i) {
            var o = i.getId();
            this._viewmodel.add(i),
            this._viewmodel.setIndexBySquadId(o);
            var n = this.getNavigationController();
            if (n) {
                var r = isPhone() ? new UTSquadOverviewViewController : new UTSquadSplitViewController;
                r.initWithSquad(i),
                n.pushViewController(r)
            }
        }
        services.Notification.queue([services.Localization.localize("notification.squad.created"), UINotificationType.NEUTRAL])
    } else {
        var s = t.error ? t.error.code : t.status;
        if (NetworkErrorManager.checkCriticalStatus(s))
            NetworkErrorManager.handleStatus(s);
        else {
            var a;
            switch (s) {
            case UtasErrorCode.NAME_EXISTS:
                a = "popup.error.duplicateSquadName";
                break;
            case UtasErrorCode.PERMISSION_DENIED:
                a = "popup.error.squadsFull";
                break;
            case UtasErrorCode.PROFANITY:
                a = "popup.error.profanity";
                break;
            default:
                a = "popup.body.genericError"
            }
            services.Notification.queue([services.Localization.localize(a), UINotificationType.NEGATIVE])
        }
    }
}
,
JSUtils.inherits(UTSquadListSplitViewController, UTSplitViewController),
UTSquadListSplitViewController.prototype.init = function init() {
    this.superclass(),
    this._listViewController.init(),
    this.addChildViewController(this._listViewController)
}
,
UTSquadListSplitViewController.prototype.initWithSquads = function initWithSquads(e) {
    if (!this.initialized) {
        if (this._listViewController.initWithSquads(e),
        this._listViewController.setSquadListViewDelegate(this),
        0 < e.length) {
            var t = services.Squad.getActiveSquadId()
              , i = JSUtils.find(e, function(e) {
                return e.getId() === t
            });
            this._squadDetailsController = new UTSquadActionsViewController,
            this._squadDetailsController.initWithSquad(i),
            this.addChildViewController(this._squadDetailsController)
        }
        this.init()
    }
}
,
UTSquadListSplitViewController.prototype.dealloc = function dealloc() {
    this._listViewController.dealloc(),
    this._squadDetailsController && (this._squadDetailsController.dealloc(),
    this._squadDetailsController = null),
    this.superclass()
}
,
UTSquadListSplitViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return this._listViewController.getNavigationTitle()
}
,
UTSquadListSplitViewController.prototype.viewDidAppear = function viewDidAppear() {
    var e = getDefaultDispatcher();
    e.addObserver(AppNotification.SQUAD_CREATE, this, this._nSquadCreated),
    e.addObserver(AppNotification.SQUAD_DELETE, this, this._nSquadDeleted),
    e.addObserver(AppNotification.SQUAD_SAVE, this, this._nSquadSaved),
    this.superclass(),
    this._setLeftController(this._listViewController),
    JSUtils.isValid(this._squadDetailsController) && this._setRightController(this._squadDetailsController)
}
,
UTSquadListSplitViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    var e = getDefaultDispatcher();
    e.removeObserver(AppNotification.SQUAD_CREATE, this),
    e.removeObserver(AppNotification.SQUAD_DELETE, this),
    e.removeObserver(AppNotification.SQUAD_SAVE, this),
    this.superclass()
}
,
UTSquadListSplitViewController.prototype.selectListRow = function selectListRow(e, t, i) {
    e === this._listViewController && (this._listViewController.getView().selectListRow(i.getId()),
    this._squadDetailsController.setSquad(i))
}
,
UTSquadListSplitViewController.prototype._nSquadCreated = function _nSquadCreated() {
    this._listViewController.refreshData(!1)
}
,
UTSquadListSplitViewController.prototype._nSquadDeleted = function _nSquadDeleted() {
    this._listViewController.refreshData(!0)
}
,
UTSquadListSplitViewController.prototype._nSquadSaved = function _nSquadSaved() {
    this._listViewController.refreshData(!1)
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTOTWHistoryViewModel = function(i) {
    function UTTOTWHistoryViewModel(e) {
        var t = i.call(this) || this;
        return t.squadCollection = new EAIterator([]),
        t.squadServiceObject = e,
        t
    }
    return __extends(UTTOTWHistoryViewModel, i),
    UTTOTWHistoryViewModel.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.squadCollection.dealloc()
    }
    ,
    UTTOTWHistoryViewModel.prototype.requestHistory = function() {
        var e = this.squadServiceObject.requestTOTWHistory();
        return e && this._trackRequest(e, !0, function _onRequestHistoryComplete(e) {
            e.success && e.data && (0 === this.squadCollection.length || e.status !== HttpStatusCode.NOT_MODIFIED) && 0 < e.data.squads.length && this.squadCollection.resetCollection(e.data.squads)
        }
        .bind(this)),
        e
    }
    ,
    UTTOTWHistoryViewModel.prototype.setCurrentSquad = function(t) {
        var e = this.squadCollection.indexOf(function(e) {
            return e.getId() === t.getId()
        });
        e && this.squadCollection.setIndex(e)
    }
    ,
    UTTOTWHistoryViewModel.prototype.writeSquad = function(e, t) {
        this.squadCollection.set(e, t)
    }
    ,
    UTTOTWHistoryViewModel.prototype.getSquads = function() {
        return this.squadCollection.values()
    }
    ,
    UTTOTWHistoryViewModel.prototype.getSquadByIndex = function(e) {
        return this.squadCollection.setIndex(e),
        this.squadCollection.current()
    }
    ,
    UTTOTWHistoryViewModel.prototype.getCurrentSquad = function() {
        return this.squadCollection.current()
    }
    ,
    UTTOTWHistoryViewModel.prototype.getIndex = function() {
        return this.squadCollection.getIndex()
    }
    ,
    UTTOTWHistoryViewModel
}(UTViewModel)
  , UTTOTWSquadListView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTTOTWSquadListView() {
        var e = i.call(this) || this;
        return e.cellViews = [],
        e.noResultsView = null,
        e
    }
    return __extends(UTTOTWSquadListView, i),
    UTTOTWSquadListView.prototype.init = function() {
        i.prototype.init.call(this),
        this.setInteractionState(!0)
    }
    ,
    UTTOTWSquadListView.prototype.dealloc = function() {
        this.clearTable(),
        this.noResultsView && (this.noResultsView.dealloc(),
        this.noResultsView = null),
        i.prototype.dealloc.call(this)
    }
    ,
    UTTOTWSquadListView.prototype.setInteractionState = function(t) {
        i.prototype.setInteractionState.call(this, t),
        this.cellViews.forEach(function(e) {
            e.setInteractionState(t)
        })
    }
    ,
    UTTOTWSquadListView.prototype.clearTable = function() {
        0 < this.cellViews.length && (this.cellViews.forEach(function(e) {
            e.dealloc()
        }),
        this.cellViews = [])
    }
    ,
    UTTOTWSquadListView.prototype.generateCellView = function(e) {
        DebugUtils.Assert(e instanceof UTSquadEntity, "Expected a squad entity");
        var t = new UTSquadTableCellView;
        return t.init(),
        t.setSquad(e),
        t.render(),
        t.addTarget(this, this.eCellEventHandler, EventType.TAP),
        this.addSubview(t),
        t
    }
    ,
    UTTOTWSquadListView.prototype.setSquads = function(e) {
        return this.clearTable(),
        this.cellViews = e.map(this.generateCellView, this),
        this.layoutSubviews(),
        this.cellViews
    }
    ,
    UTTOTWSquadListView.prototype.appendEmptyListMessage = function(e) {
        this.clearTable(),
        this.noResultsView || (this.noResultsView = new UTListNoResultsView,
        this.noResultsView.init(),
        this.getRootElement().appendChild(this.noResultsView.getRootElement())),
        this.noResultsView.setText(e)
    }
    ,
    UTTOTWSquadListView.prototype.selectCellBySquad = function(t) {
        this.cellViews.forEach(function(e) {
            e.setSelected(e.getSquad() === t)
        }, this)
    }
    ,
    UTTOTWSquadListView.prototype.eCellEventHandler = function(e, t, i) {
        if (t === EventType.TAP) {
            var o = this.cellViews.indexOf(e);
            this.selectCellBySquad(i.squad),
            this._triggerActions(UTTOTWSquadListView.Event.CELL_SELECTED, {
                squad: i.squad,
                cell: e,
                index: o
            })
        }
    }
    ,
    UTTOTWSquadListView.Event = Object.freeze({
        CELL_SELECTED: "UTTOTWSquadListView.Event.CELL_SELECTED"
    }),
    UTTOTWSquadListView
}(UTTargetActionView));
function UTTOTWSquadListViewController() {
    UTViewController.call(this),
    this._totwHistoryViewModel = null,
    this._squadSelectDelegate = null
}
UTTOTWSquadListView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-totw-squad-list-view"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTOTWSquadListView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTTOTWSquadListView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
JSUtils.inherits(UTTOTWSquadListViewController, UTViewController),
UTTOTWSquadListViewController.prototype.init = function init() {
    this.initialized || (this.superclass(),
    TelemetryManager.trackPage(TelemetryManager.Sections.TOTW, "TOTW List"),
    this.getView().addTarget(this, this._eRowSelected, UTTOTWSquadListView.Event.CELL_SELECTED))
}
,
UTTOTWSquadListViewController.prototype.initWithHistoryViewModel = function initWithHistoryViewModel(e) {
    this.initialized || (DebugUtils.Assert(e instanceof UTTOTWHistoryViewModel, "Expected an object of type UTTOTWHistoryViewModel."),
    e instanceof UTTOTWHistoryViewModel && (this._totwHistoryViewModel = e),
    this.init())
}
,
UTTOTWSquadListViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._totwHistoryViewModel && (this._totwHistoryViewModel = null)
}
,
UTTOTWSquadListViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTTOTWSquadListView
}
,
UTTOTWSquadListViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "TOTW List"
}
,
UTTOTWSquadListViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.TOTWHistory")
}
,
UTTOTWSquadListViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this._totwHistoryViewModel ? this._totwHistoryViewModel.requestHistory().observe(this, function _onRequestHistoryComplete(e, t) {
        e.unobserve(this),
        t.success && this._showSquads()
    }) : this._showSquads()
}
,
UTTOTWSquadListViewController.prototype.setSquadSelectDelegate = function setSquadSelectDelegate(e) {
    e.conforms(UTTOTWSquadSplitViewController) && (this._squadSelectDelegate = e)
}
,
UTTOTWSquadListViewController.prototype._showSquads = function _showSquads() {
    var e = this.getView()
      , t = this._totwHistoryViewModel ? this._totwHistoryViewModel.getSquads() : 0;
    if (0 === t.length) {
        var i = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TOTW_HISTORY_ENABLED) ? "totw.squadlist.empty" : "totw.squadlist.unavailable";
        e.appendEmptyListMessage(services.Localization.localize(i))
    } else
        e.setSquads(t),
        e.selectCellBySquad(this._totwHistoryViewModel.getCurrentSquad())
}
,
UTTOTWSquadListViewController.prototype._eRowSelected = function _eRowSelected(e, t, i) {
    if (this._totwHistoryViewModel) {
        var n = this._totwHistoryViewModel.getCurrentSquad()
          , r = i.index
          , o = this._totwHistoryViewModel.getSquadByIndex(r);
        i.squad !== n && (o.isValid() ? _onValidSquadLoaded.call(this, o) : services.Squad.requestTOTWSquad(o.getId()).observe(this, function _onRequestTOTWSquadComplete(e, t) {
            if (e.unobserve(this),
            t.success) {
                var i = t.data.squad;
                this._totwHistoryViewModel.writeSquad(i, r);
                var o = this.getView();
                return o.setSquads(this._totwHistoryViewModel.getSquads()),
                o.selectCellBySquad(this._totwHistoryViewModel.getCurrentSquad()),
                void _onValidSquadLoaded.call(this, i)
            }
            _onValidSquadLoaded.call(this, n)
        }))
    }
    function _onValidSquadLoaded(e) {
        if (this._totwHistoryViewModel.setCurrentSquad(e),
        this._squadSelectDelegate) {
            this._squadSelectDelegate.setSquad(e);
            var t = this.getView();
            t.setInteractionState(!1),
            setTimeout(function() {
                t && t.setInteractionState(!0)
            }
            .bind(this), 600)
        } else
            this.getNavigationController().popViewController()
    }
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTOTWSummaryBannerView = function(e) {
    function UTTOTWSummaryBannerView() {
        return null !== e && e.apply(this, arguments) || this
    }
    return __extends(UTTOTWSummaryBannerView, e),
    UTTOTWSummaryBannerView.prototype.init = function() {
        var e = services.Localization;
        this.__formationTitle.textContent = e.localize("squads.formation"),
        this.__labelRating.textContent = e.localize("squads.rating"),
        this._ratingStars.init(),
        this._historyBtn.init(),
        this._copySquadIcon.init()
    }
    ,
    UTTOTWSummaryBannerView.prototype.setChemistry = function(e) {}
    ,
    UTTOTWSummaryBannerView.prototype.setChemistryEntries = function(e) {}
    ,
    UTTOTWSummaryBannerView.prototype.setFormation = function(e) {
        this.__formationValue && (this.__formationValue.textContent = e)
    }
    ,
    UTTOTWSummaryBannerView.prototype.getShowChemistryButton = function() {
        return null
    }
    ,
    UTTOTWSummaryBannerView.prototype.setCanCopySquad = function(e) {
        this._copySquadIcon.setInteractionState(e)
    }
    ,
    UTTOTWSummaryBannerView.prototype.getHistoryButton = function() {
        return this._historyBtn
    }
    ,
    UTTOTWSummaryBannerView.prototype.getCopyButton = function() {
        return this._copySquadIcon
    }
    ,
    UTTOTWSummaryBannerView
}(UTSquadSummaryBannerView);
UTTOTWSummaryBannerView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("totw"),
        e.classList.add("ut-squad-summary");
        var t = document.createElement("div");
        t.classList.add("ut-squad-summary-info"),
        this.__formationTitle = document.createElement("span"),
        this.__formationTitle.classList.add("ut-squad-summary-label"),
        t.appendChild(this.__formationTitle),
        this.__formationValue = document.createElement("span"),
        this.__formationValue.classList.add("ut-squad-summary-value"),
        t.appendChild(this.__formationValue),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-squad-summary-info");
        var o = document.createElement("div");
        o.classList.add("rating"),
        this.__labelRating = document.createElement("span"),
        this.__labelRating.classList.add("ut-squad-summary-label"),
        o.appendChild(this.__labelRating),
        this._ratingStars = new UTSquadStarRatingView,
        o.appendChild(this._ratingStars.getRootElement()),
        i.appendChild(o),
        e.appendChild(i);
        var n = document.createElement("div");
        n.classList.add("totw-squad-buttons"),
        this._copySquadIcon = new UTImageButtonControl,
        this._copySquadIcon.getRootElement().classList.add("fut_icon"),
        this._copySquadIcon.getRootElement().classList.add("icon_copy"),
        this._copySquadIcon.getRootElement().classList.add("copy-squad-icon"),
        n.appendChild(this._copySquadIcon.getRootElement()),
        this._historyBtn = new UTImageButtonControl,
        this._historyBtn.getRootElement().classList.add("fut_icon"),
        this._historyBtn.getRootElement().classList.add("icon_list"),
        this._historyBtn.getRootElement().classList.add("totw-history-icon"),
        n.appendChild(this._historyBtn.getRootElement()),
        e.appendChild(n),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTOTWSummaryBannerView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__formationTitle = null,
    this.__formationValue = null,
    this.__labelRating = null,
    this._ratingStars.destroy(),
    this._copySquadIcon.destroy(),
    this._historyBtn.destroy()
}
,
UTTOTWSummaryBannerView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTOTWSquadOverviewView = function(e) {
    function UTTOTWSquadOverviewView() {
        return e.call(this) || this
    }
    return __extends(UTTOTWSquadOverviewView, e),
    UTTOTWSquadOverviewView.prototype.init = function() {
        e.prototype.init.call(this),
        this.renderManager = !1,
        this.renderChemistry = !1,
        this.renderConcepts = !1,
        this.renderRestrictions = !1
    }
    ,
    UTTOTWSquadOverviewView.prototype.getSummaryPanel = function() {
        return this._summaryPanel || (this._summaryPanel = new UTTOTWSummaryBannerView),
        this._summaryPanel
    }
    ,
    UTTOTWSquadOverviewView.prototype.getShowChemistryButton = function() {
        return null
    }
    ,
    UTTOTWSquadOverviewView
}(UTSquadOverviewView);
function UTTOTWSquadOverviewViewController() {
    UTSquadOverviewViewController.call(this),
    this._totwHistoryViewModel = null
}
function UTTOTWSquadSplitViewController() {
    UTBaseSquadSplitViewController.call(this),
    this._historyController = null
}
JSUtils.inherits(UTTOTWSquadOverviewViewController, UTSquadOverviewViewController),
UTTOTWSquadOverviewViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass(),
        this._totwHistoryViewModel = new UTTOTWHistoryViewModel(services.Squad),
        this._totwHistoryViewModel.init();
        var e = this.getView().getSummaryPanel();
        e.getHistoryButton().addTarget(this, this._eHistorySelected, EventType.TAP),
        e.getCopyButton().addTarget(this, this._eCopySquadSelected, EventType.TAP),
        e.setCanCopySquad(!1),
        this._checkSquadListFull()
    }
}
,
UTTOTWSquadOverviewViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._totwHistoryViewModel && (this._totwHistoryViewModel.dealloc(),
    this._totwHistoryViewModel = null)
}
,
UTTOTWSquadOverviewViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTTOTWSquadOverviewView
}
,
UTTOTWSquadOverviewViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "TOTW"
}
,
UTTOTWSquadOverviewViewController.prototype._trackPageView = function _trackPageView() {
    TelemetryManager.trackPage(TelemetryManager.Sections.TOTW, this._getTelemetryId())
}
,
UTTOTWSquadOverviewViewController.prototype.viewDidAppear = function viewDidAppear() {
    var e = JSUtils.isValid(this._totwHistoryViewModel) ? this._totwHistoryViewModel.getCurrentSquad() : null;
    e && this._setSquad(e),
    this.superclass()
}
,
UTTOTWSquadOverviewViewController.prototype._pushSquadToView = function _pushSquadToView(e) {
    var t = this.getView();
    t.setType(e.isDream() ? "concept" : "standard"),
    t.setSquad(e),
    this.getNavigationController().setNavigationTitle(e.getName())
}
,
UTTOTWSquadOverviewViewController.prototype._checkSquadListFull = function _checkSquadListFull() {
    services.Squad.requestSquadList().observe(this, function(e, t) {
        e.unobserve(this),
        t.success && this.getView().getSummaryPanel().setCanCopySquad(!t.listFull)
    })
}
,
UTTOTWSquadOverviewViewController.prototype.getTOTWHistoryViewModel = function getTOTWHistoryViewModel() {
    return this._totwHistoryViewModel
}
,
UTTOTWSquadOverviewViewController.prototype._eHistorySelected = function _eHistorySelected() {
    var e = this.getNavigationController()
      , t = this.getParentViewController();
    if (this.getView().clearSlotInteractionState(enums.UISlotInteractionState.SELECTED),
    t && t.conforms(UTTOTWSquadSplitViewController))
        t.showHistory();
    else if (e) {
        var i = new UTTOTWSquadListViewController;
        i.initWithHistoryViewModel(this._totwHistoryViewModel),
        this.getNavigationController().pushViewController(i, !0)
    }
}
,
UTTOTWSquadOverviewViewController.prototype._eCopySquadSelected = function _eCopySquadSelected() {
    function _duplicateSquadComplete(e, t) {
        e.unobserve(this),
        t.success ? services.Notification.queue([services.Localization.localize("notification.squad.created"), UINotificationType.POSITIVE]) : services.Notification.queue([services.Localization.localize("notification.squad.copyFailed"), UINotificationType.NEGATIVE]),
        this._checkSquadListFull()
    }
    DebugUtils.Assert(this._squad instanceof UTSquadEntity, "No squad present for copying."),
    TelemetryManager.trackEvent(TelemetryManager.Sections.SQUADS, TelemetryManager.Categories.BUTTON_PRESS, "TOTW - Copy Squad"),
    utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.CONFIRM_COPY_SQUAD, null, function _duplicateSquad() {
        this._squad ? services.Squad.duplicate(this._squad).observe(this, _duplicateSquadComplete) : services.Notification.queue([services.Localization.localize("notification.squad.copyFailed"), UINotificationType.NEGATIVE])
    }
    .bind(this), null)
}
,
UTTOTWSquadOverviewViewController.prototype._eItemTap = function _eItemTap(e, t, i) {
    var o = JSUtils.isNumber(i.slotIndex) ? i.slotIndex : -1;
    this._squad.getSlot(o).isValid() && this.superclass(e, t, i)
}
,
UTTOTWSquadOverviewViewController.prototype._nInfoStateChanged = function _nInfoStateChanged() {
    TelemetryManager.trackEvent(TelemetryManager.Sections.SQUADS, TelemetryManager.Categories.BUTTON_PRESS, "Item Info Switch Button - TOTW")
}
,
services.URL.registerDeepLinkID(DeepLinkSection.TOTW, function(e) {
    var r = getAppMain().getRootViewController();
    function _onRequestTOTWSquadComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = r.getPresentedViewController().getCurrentViewController()
              , o = isPhone() ? new UTTOTWSquadOverviewViewController : new UTTOTWSquadSplitViewController;
            o.initWithSquad(t.data.squad),
            i.pushViewController(o)
        } else
            services.Notification.queue([services.Localization.localize("notification.TOTW.loadfail"), UINotificationType.NEGATIVE])
    }
    r.setGameViewTab(UTGameTabBarController.TabTag.SQUADS),
    gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Squad.requestTOTWHistory().observe(this, function _onRequestHistoryComplete(e, t) {
        if (e.unobserve(this),
        t.success && 0 < t.data.squads.length) {
            var i = t.data.squads[0];
            if (i && i.isValid()) {
                var o = r.getPresentedViewController().getCurrentViewController()
                  , n = isPhone() ? new UTTOTWSquadOverviewViewController : new UTTOTWSquadSplitViewController;
                n.initWithSquad(i),
                o.pushViewController(n)
            } else
                services.Squad.requestTOTWSquad(i.getId()).observe(this, _onRequestTOTWSquadComplete)
        } else
            services.Notification.queue([services.Localization.localize("notification.TOTW.loadfail"), UINotificationType.NEGATIVE]);
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    })
}),
JSUtils.inherits(UTTOTWSquadSplitViewController, UTBaseSquadSplitViewController),
UTTOTWSquadSplitViewController.prototype.init = function init() {
    this.initialized || (this.superclass(),
    this._historyController = new UTTOTWSquadListViewController,
    this._historyController.initWithHistoryViewModel(this._overviewController.getTOTWHistoryViewModel()),
    this._historyController.setSquadSelectDelegate(this),
    this.addChildViewController(this._historyController))
}
,
UTTOTWSquadSplitViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._historyController.dealloc(),
    this._historyController = null
}
,
UTTOTWSquadSplitViewController.prototype._generateSquadOverview = function _generateSquadOverview() {
    var e = new UTTOTWSquadOverviewViewController;
    return this._squad ? e.initWithSquad(this._squad) : e.init(),
    e
}
,
UTTOTWSquadSplitViewController.prototype.getDefaultPanel = function getDefaultPanel() {
    return this._historyController
}
,
UTTOTWSquadSplitViewController.prototype.showHistory = function showHistory() {
    this._showDefaultPanel()
}
,
UTTOTWSquadSplitViewController.prototype.setSquad = function setSquad(e) {
    this._squad = e,
    this._squad && this._overviewController && this._overviewController.setSquad(e),
    this._squad && this._itemDetailController && this._itemDetailController.setSquad(this._squad)
}
,
UTTOTWSquadSplitViewController.prototype.selectSlotIndexForSquad = function selectSlotIndexForSquad(e, t, i) {
    this._squad.getSlot(i).isValid() && (this._overviewController.selectSlot(i),
    e === this._overviewController && this._showSlotDetails(i))
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTSquadsHubView = function(t) {
    function UTSquadsHubView() {
        return t.call(this) || this
    }
    return __extends(UTSquadsHubView, t),
    UTSquadsHubView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this._activeSquadTile.init(),
        this._squadSelectorTile.init(),
        this._totwTile.init(),
        this._activeSquadTile.title = e.localize("navbar.label.activesquad"),
        this._squadSelectorTile.title = e.localize("navbar.label.squadlist"),
        this._totwTile.title = e.localize("navbar.label.TOTW"),
        this._totwTile.setDimOverlayText(e.localize("tile.disabled.totw").toUpperCase()),
        this._totwTile.setDimOverlayType(TileDimOverlayType.LOCKED),
        this._activeSquadTile.addClass("col-1-1"),
        this._squadSelectorTile.addClass("col-1-2"),
        this._totwTile.addClass("col-1-2")
    }
    ,
    UTSquadsHubView.prototype.setActiveSquad = function(e) {
        e && this._activeSquadTile.setSquad(e),
        this._activeSquadTile.setInteractionState(JSUtils.isValid(e))
    }
    ,
    UTSquadsHubView.prototype.setTOTWEnabled = function(e) {
        this._totwTile.setInteractionState(e),
        this._totwTile.setDimmed(!e)
    }
    ,
    UTSquadsHubView.prototype.getActiveSquadTile = function() {
        return this._activeSquadTile
    }
    ,
    UTSquadsHubView.prototype.getSquadManagementTile = function() {
        return this._squadSelectorTile
    }
    ,
    UTSquadsHubView.prototype.getTOTWTile = function() {
        return this._totwTile
    }
    ,
    UTSquadsHubView
}(UTView);
function UTSquadsHubViewController() {
    UTViewController.call(this),
    this._totwHistoryViewModel = null
}
UTSquadsHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-squads-hub-view");
        var t = document.createElement("div");
        t.classList.add("grid"),
        t.classList.add("layout-hub"),
        this._activeSquadTile = new UTSquadTileView,
        t.appendChild(this._activeSquadTile.getRootElement()),
        this._squadSelectorTile = new UTTileView,
        this._squadSelectorTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._squadSelectorTile.getRootElement().classList.add("squad-management-tile"),
        t.appendChild(this._squadSelectorTile.getRootElement()),
        this._totwTile = new UTTileView,
        this._totwTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._totwTile.getRootElement().classList.add("totw-tile"),
        t.appendChild(this._totwTile.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTSquadsHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._activeSquadTile.destroy(),
    this._squadSelectorTile.destroy(),
    this._totwTile.destroy()
}
,
UTSquadsHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
JSUtils.inherits(UTSquadsHubViewController, UTViewController),
UTSquadsHubViewController.prototype.init = function init() {
    if (!this.initialized) {
        this.superclass(),
        this._totwHistoryViewModel = new UTTOTWHistoryViewModel(services.Squad),
        this._totwHistoryViewModel.init();
        var e = this.getView();
        e.getActiveSquadTile().addTarget(this, this._eActiveSquadTileSelected, EventType.TAP),
        e.getSquadManagementTile().addTarget(this, this._eSquadManagementTileSelected, EventType.TAP),
        e.getTOTWTile().addTarget(this, this._eTOTWTileSelected, EventType.TAP)
    }
}
,
UTSquadsHubViewController.prototype.dealloc = function dealloc() {
    this.superclass(),
    this._totwHistoryViewModel && (this._totwHistoryViewModel.dealloc(),
    this._totwHistoryViewModel = null)
}
,
UTSquadsHubViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTSquadsHubView
}
,
UTSquadsHubViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "Hub - Squads"
}
,
UTSquadsHubViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("infopanel.label.squads")
}
,
UTSquadsHubViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(),
    this.getNavigationController().setNavigationVisibility(!0, !0),
    this._loadActiveSquadData(),
    this._totwHistoryViewModel.requestHistory().observe(this, function _onRequestHistoryComplete(e, t) {
        e.unobserve(this),
        t.success ? this.getView().setTOTWEnabled(0 < this._totwHistoryViewModel.getSquads().length) : NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
    }),
    TelemetryManager.trackPage(TelemetryManager.Sections.SQUADS, "Squads Hub")
}
,
UTSquadsHubViewController.prototype._loadActiveSquadData = function _loadActiveSquadData() {
    services.Squad.requestSquadByType("active").observe(this, function _onGetActiveSquadComplete(e, t) {
        e.unobserve(this),
        t.success ? this.getView().setActiveSquad(t.data.squad) : NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status)
    })
}
,
UTSquadsHubViewController.prototype._gotoActiveSquadOverview = function _gotoActiveSquadOverview() {
    var o = this.getNavigationController();
    o && (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Squad.requestSquadByType("active").observe(this, function _onSquadLoadComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = isPhone() ? new UTSquadOverviewViewController : new UTSquadSplitViewController;
            i.initWithSquad(t.data.squad),
            o.pushViewController(i)
        } else
            NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : services.Notification.queue([services.Localization.localize("notification.squad.failedToLoad"), UINotificationType.NEGATIVE]);
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }))
}
,
UTSquadsHubViewController.prototype._gotoSquadManagement = function _gotoSquadManagement() {
    gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Squad.requestSquadList().observe(this, function _onRequestSquadsComplete(e, t) {
        e.unobserve(this);
        var i = this.getNavigationController();
        if (i) {
            var o = isPhone() ? new UTSquadListViewController : new UTSquadListSplitViewController;
            0 < t.data.squads.length ? o.initWithSquads(t.data.squads) : o.init(),
            i.pushViewController(o)
        }
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    })
}
,
UTSquadsHubViewController.prototype._gotoTOTWSquadOverview = function _gotoTOTWSquadOverview() {
    var o = this._totwHistoryViewModel.getCurrentSquad()
      , n = this._totwHistoryViewModel.getIndex();
    function _openTOTWSquadView(e) {
        var t = this.getNavigationController();
        if (t) {
            var i = isPhone() ? new UTTOTWSquadOverviewViewController : new UTTOTWSquadSplitViewController;
            i.initWithSquad(e),
            t.pushViewController(i)
        }
    }
    o.isValid() ? _openTOTWSquadView.call(this, o) : services.Squad.requestTOTWSquad(o.getId()).observe(this, function _onRequestTOTWSquadComplete(e, t) {
        if (e.unobserve(this),
        t.success) {
            var i = t.data.squad;
            return this._totwHistoryViewModel.writeSquad(i, n),
            void _openTOTWSquadView.call(this, i)
        }
        _openTOTWSquadView.call(this, o)
    })
}
,
UTSquadsHubViewController.prototype._eActiveSquadTileSelected = function _eActiveSquadTileSelected() {
    this._gotoActiveSquadOverview()
}
,
UTSquadsHubViewController.prototype._eSquadManagementTileSelected = function _eSquadManagementTileSelected() {
    this._gotoSquadManagement()
}
,
UTSquadsHubViewController.prototype._eTOTWTileSelected = function _eTOTWTileSelected() {
    this._gotoTOTWSquadOverview()
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreViewModel = function(t) {
    function UTStoreViewModel(e, i) {
        var o = t.call(this) || this
          , n = []
          , r = {}
          , s = {}
          , a = !1
          , l = !1
          , c = !1
          , d = !1;
        return e.forEach(function(t) {
            if (t instanceof UTStoreItemPackEntity)
                t.isMyPack ? (l = !0,
                n.push(t)) : (t instanceof UTStoreXrayItemPackEntity && t.isRefreshed() && (c = !0),
                r[t.id] = t);
            else if (t instanceof UTStorePointsPackEntity && 0 < i.length) {
                var e = JSUtils.find(i, function(e) {
                    return t.productId === e.sku && (e.points = t.points,
                    e.isBestValue = t.isBestValue,
                    e.isMostPopular = t.isMostPopular,
                    !0)
                });
                e && (a = !0,
                s[e.sku] = e)
            } else
                t instanceof UTStoreBundleEntity && !o.hasVanityPacks && (r[t.id] = t,
                d = !0)
        }),
        o.articles = new EAHashTable(r),
        o.categories = [],
        o.myPacks = new EAIterator(n),
        o.nimbleMtxItems = new EAHashTable(s),
        o.hasMtxItems = a,
        o.hasMyPacks = l,
        o.hasRefreshedContent = c,
        o.hasVanityPacks = d,
        o
    }
    return __extends(UTStoreViewModel, t),
    UTStoreViewModel.prototype.hasPacks = function() {
        return 0 < this.articles.filter(function(e) {
            return e instanceof UTStoreItemPackEntity
        }).length
    }
    ,
    UTStoreViewModel.prototype.hasPreviewedPacks = function() {
        return 0 < this.articles.filter(function(e) {
            return e instanceof UTStoreXrayItemPackEntity && e.isPreviewed()
        }).length
    }
    ,
    UTStoreViewModel.prototype.setStoreCategories = function(e) {
        this.categories = e
    }
    ,
    UTStoreViewModel.prototype.getNimbleMTXItems = function() {
        return this.nimbleMtxItems.values().sort(function(e, t) {
            return JSUtils.sortCompare(e.points, t.points)
        })
    }
    ,
    UTStoreViewModel.prototype.getPackById = function(t, e, i) {
        if (e || !JSUtils.isBoolean(e)) {
            var o = this.myPacks.get(this.myPacks.indexOf(function(e) {
                return t === e.id && i === e.tradable
            }));
            if (e || JSUtils.isValid(o))
                return o
        }
        var n = this.articles.get(t);
        return n instanceof UTStorePurchasableArticleEntity ? n : null
    }
    ,
    UTStoreViewModel.prototype.getPackCategoryIds = function() {
        return this.articles.values().reduce(function(e, t) {
            return t.packType === PurchasePackType.CARDPACK && e.indexOf(t.categoryId) < 0 && e.push(t.categoryId),
            e
        }, [])
    }
    ,
    UTStoreViewModel.prototype.getPackCategories = function() {
        var t = this;
        return this.categories.filter(function(e) {
            return t.getPackCategoryIds().includes(e.categoryId)
        }).sort(function(e, t) {
            return e.order - t.order
        })
    }
    ,
    UTStoreViewModel.prototype.getVanityCategoryIds = function() {
        return this.articles.values().reduce(function(e, t) {
            return t.packType === PurchasePackType.VANITYBUNDLE && t instanceof UTStoreBundleEntity && 1 === t.itemCollection.length && e.indexOf(t.categoryId) < 0 && e.push(t.categoryId),
            e
        }, [])
    }
    ,
    UTStoreViewModel.prototype.getVanityCategories = function() {
        var t = this;
        return this.categories.filter(function(e) {
            return t.getVanityCategoryIds().includes(e.categoryId)
        }).sort(function(e, t) {
            return e.order - t.order
        })
    }
    ,
    UTStoreViewModel.prototype.getBundleCategoryIds = function() {
        return this.articles.values().reduce(function(e, t) {
            return t.packType === PurchasePackType.VANITYBUNDLE && t instanceof UTStoreBundleEntity && 1 < t.itemCollection.length && e.indexOf(t.categoryId) < 0 && e.push(t.categoryId),
            e
        }, [])
    }
    ,
    UTStoreViewModel.prototype.getBundleCategories = function() {
        var t = this;
        return this.categories.filter(function(e) {
            return t.getBundleCategoryIds().includes(e.categoryId)
        }).sort(function(e, t) {
            return e.order - t.order
        })
    }
    ,
    UTStoreViewModel.prototype.getPointsCategoryIds = function() {
        return this.articles.values().reduce(function(e, t) {
            return t.packType === PurchasePackType.POINTSPACK && e.indexOf(t.categoryId) < 0 && e.push(t.categoryId),
            e
        }, [])
    }
    ,
    UTStoreViewModel.prototype.getPointsCategories = function() {
        var t = this;
        return this.categories.filter(function(e) {
            return t.getPointsCategoryIds().includes(e.categoryId)
        }).sort(function(e, t) {
            return e.order - t.order
        })
    }
    ,
    UTStoreViewModel.prototype.getCategoryArticles = function(t) {
        return this.articles.filter(function(e) {
            return e.categoryId === t
        })
    }
    ,
    UTStoreViewModel.prototype.getAllPurchaseablePacks = function() {
        return this.articles.values()
    }
    ,
    UTStoreViewModel.prototype.getPacks = function(t) {
        return t === PurchaseDisplayGroup.MYPACKS ? this.myPacks.values() : t !== PurchaseDisplayGroup.PREVIEWED ? t !== PurchaseDisplayGroup.VANITYBUNDLE ? this.articles.filter(function(e) {
            return e.categoryId === t
        }).sort(function(e, t) {
            return e.sortPriority === t.sortPriority ? JSUtils.sortCompare(e.getPrice(GameCurrency.COINS), t.getPrice(GameCurrency.COINS)) : JSUtils.sortCompare(e.sortPriority, t.sortPriority)
        }) : this.articles.filter(function(e) {
            return e instanceof UTStoreBundleEntity && e.displayGroup === PurchaseDisplayGroup.VANITYBUNDLE && 1 < e.itemCollection.length
        }).sort(function(e, t) {
            return e.sortPriority === t.sortPriority ? JSUtils.sortCompare(e.getPrice(GameCurrency.COINS), t.getPrice(GameCurrency.COINS)) : JSUtils.sortCompare(e.sortPriority, t.sortPriority)
        }) : this.articles.filter(function(e) {
            return e instanceof UTStoreXrayItemPackEntity && e.isPreviewed()
        }).sort(function(e, t) {
            return JSUtils.sortCompare(e.previewCreateTime, t.previewCreateTime)
        })
    }
    ,
    UTStoreViewModel.prototype.requestArticlePreviewDuplicates = function(e) {
        var t = e.getPreviewDuplicates();
        return this._trackRequest(t, !0),
        t
    }
    ,
    UTStoreViewModel.prototype.requestCategoryData = function() {
        var o = this
          , e = services.Store.getCategories();
        return e.observe(this, function(e, t) {
            if (e.unobserve(o),
            t.success && JSUtils.isObject(t.response)) {
                var i = t.response.categories;
                o.setStoreCategories(i)
            }
        }),
        this._trackRequest(e, !0),
        e
    }
    ,
    UTStoreViewModel
}(UTViewModel)
  , UTStoreHubView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTStoreHubView() {
        return null !== i && i.apply(this, arguments) || this
    }
    return __extends(UTStoreHubView, i),
    UTStoreHubView.prototype.init = function() {
        i.prototype.init.call(this);
        var e = services.Localization;
        this._featuredTile.init(),
        this._itemsTile.init(),
        this._packsTile.init(),
        this._pointsTile.init(),
        this._disabledTile.setDisplay(!1),
        this._disabledTile.setDimOverlayText(e.localize("store.disabled")),
        this._disabledTile.setDimmed(!0),
        this._disabledTile.setInteractionState(!1),
        this._packsTile.title = e.localize("storehub.label.packs"),
        this._itemsTile.title = e.localize("storehub.label.vanity"),
        this._pointsTile.title = e.localize("storehub.label.mtx");
        var t = this._featuredTile;
        this._packsTile.setDisplay(!1),
        this._itemsTile.setDisplay(!1),
        this._pointsTile.setDisplay(!1),
        this._packsTile.addTarget(this, this._ePacksTileSelected, EventType.TAP),
        t.addTarget(this, this._eFeaturedTileSelected, UTHubMessagesTileView.Event.GOTOLINK)
    }
    ,
    UTStoreHubView.prototype.dealloc = function() {
        var e = this._featuredTile;
        this._packsTile.removeTarget(this, this._ePacksTileSelected, EventType.TAP),
        this._itemsTile.removeTarget(this, this._eItemsTileSelected, EventType.TAP),
        this._pointsTile.removeTarget(this, this._ePointsTileSelected, EventType.TAP),
        e.removeTarget(this, this._eFeaturedTileSelected, UTHubMessagesTileView.Event.GOTOLINK),
        i.prototype.dealloc.call(this)
    }
    ,
    UTStoreHubView.prototype.togglePackTileDisplay = function(e) {
        this._packsTile.setDisplay(e),
        e ? this._packsTile.addTarget(this, this._ePacksTileSelected, EventType.TAP) : this._packsTile.removeTarget(this, this._ePacksTileSelected, EventType.TAP)
    }
    ,
    UTStoreHubView.prototype.toggleItemTileDisplay = function(e) {
        this._itemsTile.setDisplay(e),
        e ? this._itemsTile.addTarget(this, this._eItemsTileSelected, EventType.TAP) : this._itemsTile.removeTarget(this, this._eItemsTileSelected, EventType.TAP)
    }
    ,
    UTStoreHubView.prototype.renderFeaturedTile = function(e) {
        0 < e.length ? this._featuredTile.setData(e) : this.renderDefault()
    }
    ,
    UTStoreHubView.prototype.togglePointsTileDisplay = function(e) {
        this._pointsTile.setDisplay(e),
        e ? this._pointsTile.addTarget(this, this._ePointsTileSelected, EventType.TAP) : this._pointsTile.removeTarget(this, this._ePointsTileSelected, EventType.TAP)
    }
    ,
    UTStoreHubView.prototype.renderDefault = function() {
        this._featuredTile.setDisplay(!1)
    }
    ,
    UTStoreHubView.prototype.getFeaturedTile = function() {
        return this._featuredTile
    }
    ,
    UTStoreHubView.prototype.disableStore = function() {
        this._featuredTile.setDisplay(!1),
        this._itemsTile.setDisplay(!1),
        this._packsTile.setDisplay(!1),
        this._pointsTile.setDisplay(!1),
        this._disabledTile.setDisplay(!0)
    }
    ,
    UTStoreHubView.prototype._ePacksTileSelected = function(e, t, i) {
        t === EventType.TAP && this._triggerActions(UTStoreHubView.Event.PACKS_SELECTED)
    }
    ,
    UTStoreHubView.prototype._eItemsTileSelected = function(e, t, i) {
        t === EventType.TAP && this._triggerActions(UTStoreHubView.Event.ITEMS_SELECTED)
    }
    ,
    UTStoreHubView.prototype._ePointsTileSelected = function(e, t, i) {
        t === EventType.TAP && this._triggerActions(UTStoreHubView.Event.POINTS_SELECTED)
    }
    ,
    UTStoreHubView.prototype._eFeaturedTileSelected = function(e, t, i) {
        t === UTHubMessagesTileView.Event.GOTOLINK && this._triggerActions(UTStoreHubView.Event.FEATURED_SELECTED, i)
    }
    ,
    UTStoreHubView.Event = {
        FEATURED_SELECTED: "UTStoreHubView.FEATURED_SELECTED",
        PACKS_SELECTED: "UTStoreHubView.PACKS_SELECTED",
        ITEMS_SELECTED: "UTStoreHubView.ITEMS_SELECTED",
        POINTS_SELECTED: "UTStoreHubView.POINTS_SELECTED"
    },
    UTStoreHubView
}(UTTargetActionView));
UTStoreHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-hub-tile-view"),
        this.__hubGrid = document.createElement("div"),
        this.__hubGrid.classList.add("grid"),
        this.__hubGrid.classList.add("layout-hub"),
        this._featuredTile = new UTHubMessagesTileView,
        this._featuredTile.getRootElement().classList.add("col-1-1"),
        this._featuredTile.getRootElement().classList.add("featured-tile"),
        this.__hubGrid.appendChild(this._featuredTile.getRootElement()),
        this._packsTile = new UTTileView,
        this._packsTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._packsTile.getRootElement().classList.add("col-1-2"),
        this._packsTile.getRootElement().classList.add("packs-tile"),
        this._packsTile.getRootElement().classList.add("storehub-tile"),
        this.__hubGrid.appendChild(this._packsTile.getRootElement()),
        this._itemsTile = new UTTileView,
        this._itemsTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._itemsTile.getRootElement().classList.add("col-1-2"),
        this._itemsTile.getRootElement().classList.add("items-tile"),
        this._itemsTile.getRootElement().classList.add("storehub-tile"),
        this.__hubGrid.appendChild(this._itemsTile.getRootElement()),
        this._pointsTile = new UTTileView,
        this._pointsTile.getRootElement().classList.add("ut-tile-view--with-gfx"),
        this._pointsTile.getRootElement().classList.add("col-1-2"),
        this._pointsTile.getRootElement().classList.add("points-tile"),
        this._pointsTile.getRootElement().classList.add("storehub-tile"),
        this.__hubGrid.appendChild(this._pointsTile.getRootElement()),
        this._disabledTile = new UTTileView,
        this._disabledTile.getRootElement().classList.add("col-1-1"),
        this._disabledTile.getRootElement().classList.add("disabled-tile"),
        this._disabledTile.getRootElement().classList.add("storehub-tile"),
        this.__hubGrid.appendChild(this._disabledTile.getRootElement()),
        e.appendChild(this.__hubGrid),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStoreHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__hubGrid = null,
    this._featuredTile.destroy(),
    this._packsTile.destroy(),
    this._itemsTile.destroy(),
    this._pointsTile.destroy(),
    this._disabledTile.destroy()
}
,
UTStoreHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreHubViewController = function(i) {
    function UTStoreHubViewController() {
        var e = i.call(this) || this;
        return e.goToLinkController = new UTGoToLinkController,
        e.viewmodel = null,
        e
    }
    return __extends(UTStoreHubViewController, i),
    UTStoreHubViewController.prototype.init = function() {
        i.prototype.init.call(this),
        this.goToLinkController.init()
    }
    ,
    UTStoreHubViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreHubView
    }
    ,
    UTStoreHubViewController.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.viewmodel = null,
        this.goToLinkController.dealloc()
    }
    ,
    UTStoreHubViewController.prototype.viewDidAppear = function() {
        var e;
        repositories.Store.setDirty(),
        this.goToLinkController.setNavigationController(this.getNavigationController());
        var t = this.getView();
        null === (e = this.getNavigationController()) || void 0 === e || e.setNavigationVisibility(!0, !0),
        i.prototype.viewDidAppear.call(this),
        t.addTarget(this, this.onTileSelected, UTStoreHubView.Event.PACKS_SELECTED),
        t.addTarget(this, this.onTileSelected, UTStoreHubView.Event.ITEMS_SELECTED),
        t.addTarget(this, this.onTileSelected, UTStoreHubView.Event.POINTS_SELECTED),
        t.addTarget(this, this.eGoToLink, UTStoreHubView.Event.FEATURED_SELECTED),
        services.Messages.getStoreMessages().observe(this, this.onFeaturedMessagesRequested),
        services.Store.isStoreEnabled() ? (gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.Store.getPacks(PurchasePackType.ALL, !0, !0).observe(this, this.onPackLoadComplete),
        services.Messages.getStoreMessages().observe(this, this.onFeaturedMessagesRequested)) : t.disableStore()
    }
    ,
    UTStoreHubViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.store")
    }
    ,
    UTStoreHubViewController.prototype.onTileSelected = function(e, t, i) {
        var o = this.getNavigationController();
        if (o && this.viewmodel) {
            var n = void 0;
            switch (t) {
            case UTStoreHubView.Event.PACKS_SELECTED:
                (n = new UTStorePackViewController).init(),
                o.pushViewController(n);
                break;
            case UTStoreHubView.Event.ITEMS_SELECTED:
                (n = new UTStoreItemViewController).init(),
                o.pushViewController(n);
                break;
            case UTStoreHubView.Event.POINTS_SELECTED:
                (n = new UTStoreMTXViewController).init(),
                o.pushViewController(n);
                break;
            default:
                DebugUtils.Assert(!1, "Unknown tile selected in Store Hub")
            }
        }
    }
    ,
    UTStoreHubViewController.prototype.onPackLoadComplete = function(e, t) {
        var i, o;
        e.unobserve(this);
        var n = this.getView();
        if (t.success && JSUtils.isObject(t.response)) {
            var r = null !== (i = t.response.packs) && void 0 !== i ? i : [];
            this.viewmodel = new UTStoreViewModel(r,services.Store.isMobileMTXEnabled() ? services.MTX.getNimbleMTXItems() : []);
            var s = services.Store.isCoinsEnabled()
              , a = services.Store.hasPointsSpendingAccess();
            s || a ? s ? a || services.Notification.queue([services.Localization.localize("notification.store.fifapointsDisabled"), UINotificationType.NEGATIVE]) : services.Notification.queue([services.Localization.localize("notification.store.coinsDisabled"), UINotificationType.NEGATIVE]) : services.Notification.queue([services.Localization.localize("notification.store.allCurrenciesDisabled"), UINotificationType.NEGATIVE]),
            n.togglePackTileDisplay(this.viewmodel.hasPacks()),
            n.toggleItemTileDisplay(this.viewmodel.hasVanityPacks),
            n.togglePointsTileDisplay(this.viewmodel.hasMtxItems && services.MTX.isMTXEnabled()),
            (null === (o = this.viewmodel) || void 0 === o ? void 0 : o.hasRefreshedContent) && this.createCustomErrorPopup("fut.p.c.changed.title", "fut.p.c.changed")
        } else
            n.disableStore();
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    }
    ,
    UTStoreHubViewController.prototype.createCustomErrorPopup = function(e, t) {
        var i = services.Localization
          , o = new EADialogViewController({
            dialogOptions: [{
                labelEnum: enums.UIDialogOptions.OK
            }],
            message: i.localize(t),
            title: i.localize(e)
        });
        o.init(),
        o.viewWillAppear(),
        o.modalDisplayDimensions.width = "380px",
        gPopupClickShield.setActivePopup(o)
    }
    ,
    UTStoreHubViewController.prototype.onFeaturedMessagesRequested = function(e, t) {
        e.unobserve(this),
        t.success && t.data ? this.getView().renderFeaturedTile(t.data.messages) : this.getView().renderDefault()
    }
    ,
    UTStoreHubViewController.prototype.eGoToLink = function(e, t, n) {
        var i, r = this;
        if (n.goToLink) {
            var o = n.goToLink.split("|")
              , s = Number(o[0]);
            null === (i = this.viewmodel) || void 0 === i || i.requestCategoryData().observe(this, function() {
                var e, t, i, o;
                (null === (e = r.viewmodel) || void 0 === e ? void 0 : e.getPackCategoryIds().includes(s)) ? o = r.goToLinkController.attemptStoreNavigation("pack", s) : ((null === (t = r.viewmodel) || void 0 === t ? void 0 : t.getBundleCategoryIds().includes(s)) || (null === (i = r.viewmodel) || void 0 === i ? void 0 : i.getVanityCategoryIds().includes(s))) && (o = r.goToLinkController.attemptStoreNavigation("item", s)),
                o && services.PIN.sendData(PINEventType.MESSAGE, {
                    type: PINMessageEventType.FET,
                    service: "aruba",
                    count: "1",
                    track: {
                        trackingTag: n.trackingTag
                    },
                    status: PIN_MESSAGE_EVT_STATUS,
                    destination_id: n.goToLink,
                    msg_id: n.id.toString()
                })
            })
        }
    }
    ,
    UTStoreHubViewController
}(UTViewController)
  , UTCoordinateVO = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTCoordinateVO(e, t) {
        var i = o.call(this) || this;
        return i.x = e,
        i.y = t,
        i
    }
    return __extends(UTCoordinateVO, o),
    UTCoordinateVO.prototype.value = function() {
        return [this.x, this.y]
    }
    ,
    UTCoordinateVO.prototype.equals = function(e) {
        return e instanceof UTCoordinateVO && this.x === e.x && this.y === e.y
    }
    ,
    UTCoordinateVO
}(EAObject))
  , UTParticle = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTParticle(e) {
        var t = i.call(this) || this;
        return t.acceleration = 0,
        t.alpha = 1,
        t.angle = 0,
        t.color = "#000",
        t.decay = 0,
        t.gravity = 1,
        t.id = null != e ? e : 0,
        t.lifetime = 5e3,
        t.privCoordinateHistory = [],
        t.rotation = 0,
        t.rotationSpeed = 0,
        t.size = 1,
        t.speed = 1,
        t.timestamp = Date.now(),
        t.x = 0,
        t.y = 0,
        t
    }
    return __extends(UTParticle, i),
    Object.defineProperty(UTParticle.prototype, "coordinateHistory", {
        get: function() {
            return this.privCoordinateHistory.slice()
        },
        enumerable: !1,
        configurable: !0
    }),
    UTParticle.prototype.dealloc = function() {
        i.prototype.dealloc.call(this),
        this.lifetime = 0,
        this.alpha = 0,
        this.privCoordinateHistory = []
    }
    ,
    UTParticle.prototype.isDead = function() {
        return this.alpha <= 0 || this.lifetime <= Date.now() - this.timestamp
    }
    ,
    UTParticle.prototype.update = function() {
        this.privCoordinateHistory.push(new UTCoordinateVO(this.x,this.y)),
        this.speed += this.speed * this.acceleration,
        this.x += Math.cos(this.angle) * this.speed,
        this.y += Math.sin(this.angle) * this.speed + this.gravity,
        this.rotation += this.rotationSpeed,
        0 < this.alpha && (this.alpha = Math.max(this.alpha - this.decay, 0))
    }
    ,
    UTParticle.prototype.draw = function(e) {
        e.save(),
        e.fillStyle = this.color,
        e.globalAlpha = this.alpha,
        e.beginPath(),
        e.arc(this.x, this.y, this.size, 0, 2 * Math.PI, !1),
        e.closePath(),
        e.fill(),
        e.restore()
    }
    ,
    UTParticle.prototype.random = function(e, t) {
        return Math.random() * (t - e) + e
    }
    ,
    UTParticle
}(EAObject))
  , UTParticleSystem = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTParticleSystem(e) {
        var t = i.call(this) || this;
        return t.acceleration = 0,
        t.angle = 0,
        t.childParticleSystems = [],
        t.ctx = e.getContext("2d"),
        t.duration = 5e3,
        t.frameRequestId = null,
        t.gravity = 1,
        t.isRunning = !1,
        t.lastSpawnTime = 0,
        t.lifetime = 5,
        t.loop = !1,
        t.maxParticles = 100,
        t.parentParticleSystem = null,
        t.particles = [],
        t.rotation = 0,
        t.rotationSpeed = 0,
        t.runStart = 0,
        t.spawnDelay = 0,
        t.spawnInterval = 100,
        t.spawnRate = 10,
        t.speed = 1,
        t.x = 0,
        t.y = 0,
        t
    }
    return __extends(UTParticleSystem, i),
    Object.defineProperty(UTParticleSystem.prototype, "_ctx", {
        get: function() {
            return this.ctx
        },
        enumerable: !1,
        configurable: !0
    }),
    UTParticleSystem.prototype.dealloc = function() {
        this.isRunning = !1,
        JSUtils.isNumber(this.frameRequestId) && (cancelAnimationFrame(this.frameRequestId),
        this.frameRequestId = null),
        this.removeFromParentParticleSystem(),
        this.childParticleSystems.forEach(this.removeChildParticleSystem, this),
        this.particles.forEach(function(e) {
            return e.dealloc()
        }),
        this.particles = [],
        i.prototype.dealloc.call(this)
    }
    ,
    UTParticleSystem.prototype.run = function() {
        this.isRunning || (this.isRunning = !0,
        this.runStart = Date.now(),
        this.draw())
    }
    ,
    UTParticleSystem.prototype.draw = function() {
        var e;
        if (this.isRunning) {
            var t = Date.now();
            if (this.parentParticleSystem || null === (e = this.ctx) || void 0 === e || e.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height),
            this.runStart + this.duration < t) {
                if (!this.loop)
                    return;
                this.runStart = t
            }
            this.drawChildren(),
            this.runStart + this.spawnDelay < t && this.lastSpawnTime + this.spawnInterval < t && (this.lastSpawnTime = t,
            this.spawnParticles(this.spawnRate)),
            this.drawParticles(),
            this.parentParticleSystem || (this.frameRequestId = requestAnimationFrame(this.draw.bind(this)))
        }
    }
    ,
    UTParticleSystem.prototype.drawChildren = function() {
        this.childParticleSystems.forEach(function(e) {
            e.isRunning ? e.draw() : e.run()
        })
    }
    ,
    UTParticleSystem.prototype.drawParticles = function() {
        for (var e = 0; e < this.particles.length; e++) {
            var t = this.particles[e];
            this.updateParticle(t),
            t.isDead() && (this.particles.splice(e, 1),
            e--)
        }
    }
    ,
    UTParticleSystem.prototype.spawnParticles = function(e) {
        for (var t = this.particles.length; 0 < e-- && t < this.maxParticles; )
            this.particles.push(this.generateParticle()),
            t++
    }
    ,
    UTParticleSystem.prototype.generateParticle = function() {
        var e, t, i, o, n = new UTParticle;
        return n.x = this.x + Math.random() * (null !== (t = null === (e = this.ctx) || void 0 === e ? void 0 : e.canvas.width) && void 0 !== t ? t : 0),
        n.y = this.y + Math.random() * (null !== (o = null === (i = this.ctx) || void 0 === i ? void 0 : i.canvas.height) && void 0 !== o ? o : 0),
        n.acceleration = this.acceleration,
        n.angle = this.angle,
        n.gravity = this.gravity,
        n.rotation = this.rotation,
        n.rotationSpeed = this.rotationSpeed,
        n.speed = this.speed,
        n
    }
    ,
    UTParticleSystem.prototype.updateParticle = function(e) {
        this.ctx && (e.draw(this.ctx),
        e.update())
    }
    ,
    UTParticleSystem.prototype.addChildParticleSystem = function(e) {
        this.childParticleSystems.indexOf(e) < 0 && (e.parentParticleSystem = this).childParticleSystems.push(e)
    }
    ,
    UTParticleSystem.prototype.removeChildParticleSystem = function(e) {
        var t = this.childParticleSystems.indexOf(e);
        0 <= t && (e.parentParticleSystem = null,
        this.childParticleSystems.splice(t, 1))
    }
    ,
    UTParticleSystem.prototype.removeFromParentParticleSystem = function() {
        this.parentParticleSystem && this.parentParticleSystem.removeChildParticleSystem(this)
    }
    ,
    UTParticleSystem
}(EAObject))
  , UTConfettiParticle = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTConfettiParticle(e) {
        var t = i.call(this, e) || this;
        return t.tilt = 0,
        t
    }
    return __extends(UTConfettiParticle, i),
    UTConfettiParticle.prototype.update = function() {
        i.prototype.update.call(this),
        this.tilt = Math.sin(this.rotation) * (this.size / 3)
    }
    ,
    UTConfettiParticle.prototype.draw = function(e) {
        e.save(),
        e.beginPath(),
        e.lineWidth = this.size / 2,
        e.strokeStyle = this.color,
        e.globalAlpha = this.alpha,
        e.moveTo(this.x + this.tilt + this.size / 3, this.y),
        e.lineTo(this.x + this.tilt, this.y + this.tilt + this.size / 3),
        e.stroke(),
        e.restore()
    }
    ,
    UTConfettiParticle
}(UTParticle))
  , UTConfettiColourVO = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTConfettiColourVO(e, t) {
        var i = o.call(this) || this;
        return i.primaryColour = e,
        i.secondaryColour = t,
        i
    }
    return __extends(UTConfettiColourVO, o),
    UTConfettiColourVO.prototype.value = function() {
        return [this.primaryColour, this.secondaryColour]
    }
    ,
    UTConfettiColourVO.prototype.equals = function(e) {
        return e instanceof UTConfettiColourVO && this.primaryColour === e.primaryColour && this.secondaryColour === e.secondaryColour
    }
    ,
    UTConfettiColourVO.prototype.getRandom = function() {
        var e = .5 <= Math.random() ? this.primaryColour : this.secondaryColour;
        return "rgba(" + e.r + ", " + e.g + ", " + e.b + ", 1)"
    }
    ,
    UTConfettiColourVO
}(EAObject))
  , UTConfettiRainParticleSystem = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTConfettiRainParticleSystem(e) {
        var t = o.call(this, e) || this;
        return t.confettiColor = new UTConfettiColourVO({
            r: 0,
            g: 0,
            b: 0
        },{
            r: 0,
            g: 0,
            b: 0
        }),
        t
    }
    return __extends(UTConfettiRainParticleSystem, o),
    UTConfettiRainParticleSystem.prototype.generateParticle = function() {
        var e, t, i = new UTConfettiParticle;
        return i.size = i.random(30, 50),
        i.color = this.confettiColor.getRandom(),
        i.x = this.x + Math.random() * (null !== (t = null === (e = this.ctx) || void 0 === e ? void 0 : e.canvas.width) && void 0 !== t ? t : 0),
        i.y = -i.size,
        i.rotation = i.random(1, 2 * Math.PI),
        i.rotationSpeed = i.random(-.25, .25),
        i.speed = 0,
        i.acceleration = 0,
        i.gravity = this.gravity,
        i.tilt = Math.floor(Math.random() * i.size),
        i
    }
    ,
    UTConfettiRainParticleSystem.prototype.setConfettiColor = function(e) {
        this.confettiColor = e
    }
    ,
    UTConfettiRainParticleSystem.prototype.updateParticle = function(e) {
        var t, i;
        o.prototype.updateParticle.call(this, e),
        e.y > (null !== (i = null === (t = this.ctx) || void 0 === t ? void 0 : t.canvas.height) && void 0 !== i ? i : 0) && (e.lifetime = 0)
    }
    ,
    UTConfettiRainParticleSystem
}(UTParticleSystem))
  , UTConfettiCannonParticleSystem = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTConfettiCannonParticleSystem(e) {
        var t = i.call(this, e) || this;
        return t.confettiColor = new UTConfettiColourVO({
            r: 0,
            g: 0,
            b: 0
        },{
            r: 0,
            g: 0,
            b: 0
        }),
        t
    }
    return __extends(UTConfettiCannonParticleSystem, i),
    UTConfettiCannonParticleSystem.prototype.generateParticle = function() {
        var e = new UTConfettiParticle;
        return e.size = e.random(30, 50),
        e.color = this.confettiColor.getRandom(),
        e.x = this.x,
        e.y = this.y,
        e.angle = this.angle + .1 * (Math.random() - Math.random()),
        e.speed = Math.random() * this.speed,
        e.acceleration = -.03,
        e.rotation = e.random(1, 2 * Math.PI),
        e.rotationSpeed = e.random(-.25, .25),
        e.gravity = this.gravity,
        e
    }
    ,
    UTConfettiCannonParticleSystem.prototype.setConfettiColor = function(e) {
        this.confettiColor = e
    }
    ,
    UTConfettiCannonParticleSystem
}(UTParticleSystem))
  , UTParticleTrail = function() {
    function UTParticleTrail() {
        this.color = "#000",
        this.lineCap = "round",
        this.time = 1,
        this.width = 1
    }
    return UTParticleTrail.prototype.draw = function(i, e) {
        var t = e.coordinateHistory.length;
        if (0 < t) {
            var o = 60 * this.time
              , n = e.coordinateHistory.slice(Math.max(t - o, 0))
              , r = n.shift();
            i.save(),
            i.strokeStyle = this.color,
            i.lineWidth = this.width,
            i.lineCap = this.lineCap,
            i.beginPath(),
            r && i.moveTo(r.x, r.y),
            n.forEach(function(e, t) {
                i.globalAlpha = (o - t) / o,
                i.lineTo(e.x, e.y)
            }),
            i.stroke(),
            i.restore()
        }
    }
    ,
    UTParticleTrail
}()
  , UTFireworksParticleSystem = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTFireworksParticleSystem(e) {
        var t = i.call(this, e) || this;
        return t.particleTrail = new UTParticleTrail,
        t.particleTrail.width = 10,
        t.particleTrail.time = .1,
        t
    }
    return __extends(UTFireworksParticleSystem, i),
    UTFireworksParticleSystem.prototype.generateParticle = function() {
        var e = new UTParticle;
        return e.x = this.x,
        e.y = this.y,
        e.color = "rgba(255, 255, 255, 0.4)",
        e.speed = e.random(10, 20),
        e.angle = e.random(0, 2 * Math.PI),
        e.decay = .015,
        e.acceleration = -.05,
        e
    }
    ,
    UTFireworksParticleSystem.prototype.updateParticle = function(e) {
        this.ctx && (e.update(),
        e.draw(this.ctx),
        this.particleTrail.color = e.color,
        this.particleTrail.draw(this.ctx, e))
    }
    ,
    UTFireworksParticleSystem
}(UTParticleSystem))
  , UTSnowflakeParticle = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTSnowflakeParticle() {
        return e.call(this) || this
    }
    return __extends(UTSnowflakeParticle, e),
    UTSnowflakeParticle.prototype.draw = function(e) {
        e.save(),
        e.globalAlpha = this.alpha,
        e.beginPath(),
        e.arc(this.x, this.y, this.size, 0, 2 * Math.PI, !1),
        e.fillStyle = this.color,
        e.fill(),
        e.restore()
    }
    ,
    UTSnowflakeParticle
}(UTParticle))
  , UTSnowfallParticleSystem = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTSnowfallParticleSystem(e) {
        return o.call(this, e) || this
    }
    return __extends(UTSnowfallParticleSystem, o),
    UTSnowfallParticleSystem.prototype.generateParticle = function() {
        var e, t, i = new UTSnowflakeParticle, o = null !== (t = null === (e = this.ctx) || void 0 === e ? void 0 : e.canvas.width) && void 0 !== t ? t : 0, n = Math.abs(Math.cos(this.angle) * (o / 2)), r = 0 < Math.cos(this.angle) ? this.x - n : this.x;
        return i.color = "rgb(255, 255, 255)",
        i.size = i.random(2, 7),
        i.x = r + Math.random() * (o + n),
        i.y = -i.size,
        i.speed = Math.random() * this.speed,
        i.acceleration = 0,
        i.gravity = Math.ceil(Math.random() * this.gravity),
        i.angle = this.angle,
        i.decay = i.random(.001, .01),
        i
    }
    ,
    UTSnowfallParticleSystem.prototype.updateParticle = function(e) {
        var t, i;
        o.prototype.updateParticle.call(this, e),
        e.y > (null !== (i = null === (t = this.ctx) || void 0 === t ? void 0 : t.canvas.height) && void 0 !== i ? i : 0) && (e.lifetime = 0)
    }
    ,
    UTSnowfallParticleSystem
}(UTParticleSystem))
  , UTPackAnimationView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTPackAnimationView() {
        var e = t.call(this) || this;
        return e.cardComponent = null,
        e.particleSystem = null,
        e.confettiGenerator = null,
        e.confettiCannon1 = null,
        e.confettiCannon2 = null,
        e.fireworkGenerator = null,
        e.snowParticleSystem = null,
        e.windowResizeCallback = e.eWindowResize.bind(e),
        e
    }
    return __extends(UTPackAnimationView, t),
    UTPackAnimationView.prototype.init = function() {
        t.prototype.init.call(this),
        this.particleSystem = new UTParticleSystem(this.__canvas),
        this.confettiGenerator = new UTConfettiRainParticleSystem(this.__canvas),
        this.confettiCannon1 = new UTConfettiCannonParticleSystem(this.__canvas),
        this.confettiCannon2 = new UTConfettiCannonParticleSystem(this.__canvas),
        this.fireworkGenerator = new UTFireworksParticleSystem(this.__canvas),
        this.snowParticleSystem = new UTSnowfallParticleSystem(this.__canvas),
        this.particleSystem.spawnRate = 0,
        this.particleSystem.spawnInterval = 5e3,
        this.particleSystem.loop = !0,
        this.fireworkGenerator.gravity = .15,
        this.fireworkGenerator.spawnInterval = 1e3,
        this.fireworkGenerator.spawnRate = 50,
        this.fireworkGenerator.spawnDelay = 1e3,
        this.fireworkGenerator.duration = 4e3,
        this.particleSystem.addChildParticleSystem(this.fireworkGenerator),
        getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_WINTER_THEME) ? (this.snowParticleSystem.gravity = 5,
        this.snowParticleSystem.spawnInterval = 300,
        this.snowParticleSystem.spawnRate = 20,
        this.snowParticleSystem.loop = !0,
        this.snowParticleSystem.angle = Math.PI,
        this.snowParticleSystem.speed = 4,
        this.particleSystem.addChildParticleSystem(this.snowParticleSystem)) : (this.confettiGenerator.gravity = 5,
        this.confettiGenerator.spawnInterval = 300,
        this.confettiGenerator.spawnRate = 5,
        this.confettiGenerator.loop = !0,
        this.particleSystem.addChildParticleSystem(this.confettiGenerator)),
        this.confettiCannon1.speed = 55,
        this.confettiCannon1.gravity = 5,
        this.confettiCannon1.spawnInterval = 5e3,
        this.confettiCannon1.spawnRate = 25,
        this.confettiCannon2.speed = 55,
        this.confettiCannon2.gravity = 5,
        this.confettiCannon2.spawnInterval = 5e3,
        this.confettiCannon2.spawnRate = 25,
        this.particleSystem.addChildParticleSystem(this.confettiCannon1),
        this.particleSystem.addChildParticleSystem(this.confettiCannon2)
    }
    ,
    UTPackAnimationView.prototype.dealloc = function() {
        window.removeEventListener(EventType.RESIZE, this.windowResizeCallback, !1),
        this.cardComponent && (this.cardComponent.dealloc(),
        this.cardComponent = null),
        this.particleSystem && (this.particleSystem.dealloc(),
        this.particleSystem = null),
        this.confettiGenerator && (this.confettiGenerator.dealloc(),
        this.confettiGenerator = null),
        this.confettiCannon1 && (this.confettiCannon1.dealloc(),
        this.confettiCannon1 = null),
        this.confettiCannon2 && (this.confettiCannon2.dealloc(),
        this.confettiCannon2 = null),
        this.fireworkGenerator && (this.fireworkGenerator.dealloc(),
        this.fireworkGenerator = null),
        this.snowParticleSystem && (this.snowParticleSystem.dealloc(),
        this.snowParticleSystem = null),
        t.prototype.dealloc.call(this)
    }
    ,
    UTPackAnimationView.prototype.eWindowResize = function(e) {
        this.positionScene()
    }
    ,
    UTPackAnimationView.prototype.runAnimation = function(e, t) {
        var i;
        if (this.positionScene(),
        this.confettiGenerator && this.confettiCannon1 && this.confettiCannon2) {
            var o = null == t ? void 0 : t.getLargeColorMap(e.getTier());
            if (o) {
                var n = new UTConfettiColourVO(o.background,o.dividers);
                this.confettiGenerator.setConfettiColor(n),
                this.confettiCannon1.setConfettiColor(n),
                this.confettiCannon2.setConfettiColor(n)
            }
            setTimeout(function() {
                this.fireworkGenerator.x += 300,
                this.fireworkGenerator.y += 100
            }
            .bind(this), 1100),
            setTimeout(function() {
                this.fireworkGenerator.x -= 400,
                this.fireworkGenerator.y += 300
            }
            .bind(this), 2100),
            window.addEventListener(EventType.RESIZE, this.windowResizeCallback, !1),
            null === (i = this.particleSystem) || void 0 === i || i.run()
        } else
            DebugUtils.Assert(!1, "Attempted to trigger animations before confetti is initialised")
    }
    ,
    UTPackAnimationView.prototype.setPackTier = function(e) {
        var t = "";
        switch (e) {
        case PurchasePackTier.BRONZE:
            t = "bronze";
            break;
        case PurchasePackTier.SILVER:
            t = "silver";
            break;
        case PurchasePackTier.GOLD:
            t = "gold";
            break;
        case PurchasePackTier.SPECIAL:
            t = "special";
            break;
        case PurchasePackTier.LOAN:
            t = "loan";
            break;
        case PurchasePackTier.STARTER:
            t = "starter";
            break;
        case PurchasePackTier.LEGENDS:
            t = "legend";
            break;
        case PurchasePackTier.STORY:
            t = "story";
            break;
        case PurchasePackTier.SBC:
            t = "sbc";
            break;
        case PurchasePackTier.CHAMPION:
            t = "champion";
            break;
        default:
            t = "gold"
        }
        this.addClass(t)
    }
    ,
    UTPackAnimationView.prototype.generateItem = function(e) {
        JSUtils.isValid(this.cardComponent) || (this.cardComponent = factories.ItemView.createLargeItem(e),
        this.cardComponent.init(),
        this.cardComponent.supportSecondaryViews = !1,
        this.cardComponent.render(e),
        this.__itemShell.appendChild(this.cardComponent.getRootElement()))
    }
    ,
    UTPackAnimationView.prototype.positionScene = function() {
        var e = this.getRootElement();
        this.__canvas.width = e.offsetWidth,
        this.__canvas.height = e.offsetHeight;
        var t = this.__canvas.width
          , i = this.__canvas.height;
        this.positionConfettiCannons(t, i),
        this.positionFireworks(t)
    }
    ,
    UTPackAnimationView.prototype.positionConfettiCannons = function(e, t) {
        if (this.confettiCannon1 && this.confettiCannon2) {
            var i = e / 2
              , o = t / 2;
            e < 600 ? (this.confettiCannon1.x = 0,
            this.confettiCannon2.x = e) : (this.confettiCannon1.x = i - 300,
            this.confettiCannon2.x = 300 + i),
            this.confettiCannon1.y = t,
            this.confettiCannon2.y = t,
            this.confettiCannon1.angle = Math.atan2(o - this.confettiCannon1.y, i - this.confettiCannon1.x),
            this.confettiCannon2.angle = Math.atan2(o - this.confettiCannon2.y, i - this.confettiCannon2.x)
        } else
            DebugUtils.Assert(!1, "Attempted to position confetti classes before they are initialised")
    }
    ,
    UTPackAnimationView.prototype.positionFireworks = function(e) {
        this.fireworkGenerator ? (this.fireworkGenerator.x = e / 2 - 100,
        this.fireworkGenerator.y = 200) : DebugUtils.Assert(!1, "Attempted to position firework classes before they are initialised")
    }
    ,
    UTPackAnimationView
}(UTView));
UTPackAnimationView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-pack-animation-view");
        var t = document.createElement("div");
        t.classList.add("pack-animation-vignette"),
        e.appendChild(t),
        this.__canvas = document.createElement("canvas"),
        this.__canvas.classList.add("particle-animation"),
        e.appendChild(this.__canvas),
        this.__itemShell = document.createElement("div"),
        this.__itemShell.classList.add("animated-item-shell"),
        e.appendChild(this.__itemShell);
        var i = document.createElement("div");
        i.classList.add("animated-pack-shell"),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPackAnimationView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__canvas = null,
    this.__itemShell = null
}
,
UTPackAnimationView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPackAnimationViewController = function(t) {
    function UTPackAnimationViewController() {
        var e = t.call(this) || this;
        return e.animationTimeout = 0,
        e.running = !1,
        e.packTier = 0,
        e.callback = null,
        e
    }
    return __extends(UTPackAnimationViewController, t),
    UTPackAnimationViewController.prototype.initWithPackData = function(e, t) {
        this.initialized || (this.presentedItem = e,
        this.packTier = t,
        DebugUtils.Assert(JSUtils.isValid(this.presentedItem), "UTPackAnimationViewController expects pack to be a valid item"),
        this.init())
    }
    ,
    UTPackAnimationViewController.prototype.dealloc = function() {
        clearTimeout(this.animationTimeout),
        this.callback = null,
        t.prototype.dealloc.call(this)
    }
    ,
    UTPackAnimationViewController.prototype._getViewInstanceFromData = function() {
        return new UTPackAnimationView
    }
    ,
    UTPackAnimationViewController.prototype.viewDidAppear = function() {
        t.prototype.viewDidAppear.call(this),
        this.runAnimation();
        var e = getDefaultDispatcher();
        e.addObserver(AppNotification.APP_PAUSE, this, this._nAppPaused),
        e.addObserver(AppNotification.APP_RESUME, this, this._nAppResumed)
    }
    ,
    UTPackAnimationViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this);
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.APP_PAUSE, this),
        e.removeObserver(AppNotification.APP_RESUME, this)
    }
    ,
    UTPackAnimationViewController.prototype.setAnimationCallback = function(e) {
        JSUtils.isFunction(e) && (this.callback = e)
    }
    ,
    UTPackAnimationViewController.prototype.runAnimation = function() {
        if (!this.running) {
            this.running = !0;
            var e = this.getView()
              , t = services.Configuration.getItemRarity(this.presentedItem);
            e.setPackTier(this.packTier),
            e.generateItem(this.presentedItem),
            e.runAnimation(this.presentedItem, t),
            this.animationTimeout = window.setTimeout(this.runCallback.bind(this), 4500)
        }
    }
    ,
    UTPackAnimationViewController.prototype.runCallback = function() {
        var e = this.getNavigationController();
        this.callback && JSUtils.isFunction(this.callback) ? this.callback() : e && e.popViewController()
    }
    ,
    UTPackAnimationViewController.prototype._nAppPaused = function(e, t, i) {
        clearTimeout(this.animationTimeout)
    }
    ,
    UTPackAnimationViewController.prototype._nAppResumed = function(e, t, i) {
        this.runCallback()
    }
    ,
    UTPackAnimationViewController
}(UTViewController)
  , UTPackOddsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTPackOddsView() {
        return e.call(this) || this
    }
    return __extends(UTPackOddsView, e),
    UTPackOddsView.prototype.init = function() {
        e.prototype.init.call(this),
        this.__description.textContent = services.Localization.localize("packodds.modal.description"),
        this._table.init(),
        this._table.addClass(UTPseudoTableView.Style.ALTERNATING),
        this._exitBtn.init()
    }
    ,
    UTPackOddsView.prototype.getExitBtn = function() {
        return this._exitBtn
    }
    ,
    UTPackOddsView.prototype.getFooter = function() {
        return this.__timestamp
    }
    ,
    UTPackOddsView.prototype.setTitle = function(e) {
        this.__title.textContent = e
    }
    ,
    UTPackOddsView.prototype._generateDateTimeString = function(e) {
        var t, i, o = services.Localization, n = new Date(e), r = n.getUTCHours();
        return i = o.locale.language === LanguageEnum.ENGLISH ? (t = (r % 12 || 12).toString(),
        12 <= r ? "pm" : "am") : (t = r.toString(),
        ""),
        o.localize("date.ddmmmyyyyhhmm", [n.getUTCDate().toString(), o.localize(MONTH_NAMES[n.getUTCMonth()]), n.getUTCFullYear().toString(), t, TextUtils.formatToTwoDigits(n.getUTCMinutes()), i])
    }
    ,
    UTPackOddsView.prototype.setOdds = function(e) {
        var i = this;
        e.forEach(function(e) {
            var t = document.createElement("div");
            switch (DOMKit.addClass(t, "pack-odds-icon"),
            e.qualityId) {
            case PurchasePackTier.BRONZE:
                DOMKit.addClass(t, "bronze");
                break;
            case PurchasePackTier.SILVER:
                DOMKit.addClass(t, "silver");
                break;
            case PurchasePackTier.GOLD:
                DOMKit.addClass(t, "gold");
                break;
            case PurchasePackTier.SPECIAL:
                DOMKit.addClass(t, "special");
                break;
            default:
                DebugUtils.Assert(!1, "Unsupported pack tier.")
            }
            i._table.addRowData([t, e.description, e.odds])
        }, this);
        var t = this._generateDateTimeString(e[0].startTime)
          , o = services.Localization.localize("packodds.modal.timestamp", [t]);
        this.__timestamp.innerHTML = (new DOMParser).parseFromString(o, "text/html").body.innerHTML
    }
    ,
    UTPackOddsView
}(UTView));
UTPackOddsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-pack-odds-modal");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        this._exitBtn = new UTImageButtonControl,
        this._exitBtn.getRootElement().classList.add("exit-btn"),
        t.appendChild(this._exitBtn.getRootElement()),
        e.appendChild(t),
        this.__description = document.createElement("div"),
        this.__description.classList.add("description"),
        e.appendChild(this.__description),
        this._table = new UTPseudoTableView,
        e.appendChild(this._table.getRootElement());
        var i = document.createElement("footer");
        this.__timestamp = document.createElement("div"),
        this.__timestamp.classList.add("footer-info"),
        i.appendChild(this.__timestamp),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTPackOddsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._exitBtn.destroy(),
    this.__description = null,
    this._table.destroy(),
    this.__timestamp = null
}
,
UTPackOddsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTPackOddsViewController = function(t) {
    function UTPackOddsViewController() {
        var e = t.call(this) || this;
        return e.odds = [],
        e
    }
    return __extends(UTPackOddsViewController, t),
    UTPackOddsViewController.prototype.initWithPack = function(e) {
        this.initialized || (this.odds = e.odds,
        DebugUtils.Assert(0 < this.odds.length, "UTPackOddsViewController expects at least one UTPackOddsDTO."),
        this.getView().setTitle(services.Localization.localize(e.packName)),
        this.init())
    }
    ,
    UTPackOddsViewController.prototype.dealloc = function() {
        this.odds = [],
        t.prototype.dealloc.call(this)
    }
    ,
    UTPackOddsViewController.prototype._getViewInstanceFromData = function() {
        return new UTPackOddsView
    }
    ,
    UTPackOddsViewController.prototype.viewDidAppear = function() {
        var e = this.getView();
        e.setOdds(this.odds),
        this.decorateLinks(e.getFooter()),
        t.prototype.viewDidAppear.call(this),
        e.getExitBtn().addTarget(this, this._eOnExitBtn, EventType.TAP)
    }
    ,
    UTPackOddsViewController.prototype.viewWillDisappear = function() {
        t.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e && e.getExitBtn().removeTarget(this, this._eOnExitBtn, EventType.TAP)
    }
    ,
    UTPackOddsViewController.prototype._eOnExitBtn = function(e, t, i) {
        var o;
        null === (o = this.getParentViewController()) || void 0 === o || o.dismissViewController()
    }
    ,
    UTPackOddsViewController
}(UTViewController)
  , UTCurrencyButtonControl = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTCurrencyButtonControl() {
        return e.call(this) || this
    }
    return __extends(UTCurrencyButtonControl, e),
    UTCurrencyButtonControl.prototype.setText = function(e) {
        this.__currencyAmount.textContent = e
    }
    ,
    UTCurrencyButtonControl.prototype.setSubText = function(e) {
        this.__currencyLabel.textContent = e
    }
    ,
    UTCurrencyButtonControl.prototype.setCurrencyType = function(e) {
        this.toggleClass("coins", e === GameCurrency.COINS),
        this.toggleClass("points", e === GameCurrency.POINTS)
    }
    ,
    UTCurrencyButtonControl
}(UTButtonControl));
UTCurrencyButtonControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("button");
        e.classList.add("currency"),
        this.__currencyAmount = document.createElement("span"),
        this.__currencyAmount.classList.add("text"),
        e.appendChild(this.__currencyAmount),
        this.__currencyLabel = document.createElement("span"),
        this.__currencyLabel.classList.add("subtext"),
        e.appendChild(this.__currencyLabel),
        this.__root = e,
        this._generated = !0
    }
}
,
UTCurrencyButtonControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__currencyAmount = null,
    this.__currencyLabel = null
}
,
UTCurrencyButtonControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreArticleDetailsView = function(t) {
    function UTStoreArticleDetailsView() {
        var e = t.call(this) || this;
        return e.actionButtons = [],
        e.headerButtons = [],
        e
    }
    return __extends(UTStoreArticleDetailsView, t),
    UTStoreArticleDetailsView.prototype.init = function() {
        this.__articleTime.style.display = "none",
        this.__articleQuantity.style.display = "none",
        this.__articleGlobalQuantity.style.display = "none",
        t.prototype.init.call(this)
    }
    ,
    UTStoreArticleDetailsView.prototype.dealloc = function() {
        this.resetArticleView(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTStoreArticleDetailsView.prototype.resetArticleView = function() {
        var t = this;
        this.actionButtons.forEach(function(e) {
            return t.removeActionButton(e)
        }),
        this.__articleQuantity.style.display = "none",
        this.__articleTime.style.display = "none"
    }
    ,
    UTStoreArticleDetailsView.prototype.getArticleId = function() {
        return this.articleId
    }
    ,
    UTStoreArticleDetailsView.prototype.setArticleId = function(e) {
        this.articleId = e
    }
    ,
    UTStoreArticleDetailsView.prototype.setName = function(e) {
        this.__articleTitle.textContent = e
    }
    ,
    UTStoreArticleDetailsView.prototype.setDescription = function(e) {
        this.__articleDesc.innerHTML = TextUtils.nltobr(e)
    }
    ,
    UTStoreArticleDetailsView.prototype.disableButtons = function() {
        this.actionButtons.forEach(function(e) {
            return e.setInteractionState(!1)
        }),
        this.headerButtons.forEach(function(e) {
            return e.setInteractionState(!1)
        })
    }
    ,
    UTStoreArticleDetailsView.prototype.removeHeaderButton = function(e) {
        var t = this.headerButtons.indexOf(e);
        0 < t && (this.__articleHeader.removeChild(e.getRootElement()),
        this.headerButtons.splice(t, 1),
        e.dealloc())
    }
    ,
    UTStoreArticleDetailsView.prototype.appendHeaderButton = function(e) {
        this.__articleHeader.appendChild(e.getRootElement()),
        this.headerButtons.push(e)
    }
    ,
    UTStoreArticleDetailsView.prototype.removeActionButton = function(e) {
        var t = this.actionButtons.indexOf(e);
        0 < t && (this.__articleActionContainer.removeChild(e.getRootElement()),
        this.actionButtons.splice(t, 1),
        e.dealloc())
    }
    ,
    UTStoreArticleDetailsView.prototype.appendActionButton = function(e) {
        this.__articleActionContainer.appendChild(e.getRootElement()),
        this.actionButtons.push(e)
    }
    ,
    UTStoreArticleDetailsView.prototype.setPackQuantityLabel = function(e) {
        this.__articleQuantityLabel.textContent = e
    }
    ,
    UTStoreArticleDetailsView.prototype.setPackQuantity = function(e) {
        var t = services.Localization;
        this.setPackQuantityLabel(t.localize("store.saletype.userQuantity")),
        this.__articleQuantity.style.display = 0 < e ? "" : "none",
        this.__articleQuantityValue.textContent = 0 < e ? t.localizeNumber(e) : "0"
    }
    ,
    UTStoreArticleDetailsView.prototype.setGlobalPackQuantity = function(e) {
        var t = services.Localization;
        this.__articleGlobalQuantityLabel.textContent = t.localize("store.saletype.globalQuantity"),
        this.__articleGlobalQuantity.style.display = 0 < e ? "" : "none",
        this.__articleGlobalQuantityValue.textContent = 0 < e ? t.localizeNumber(e) : "0"
    }
    ,
    UTStoreArticleDetailsView.prototype.setTimeRemaining = function(e) {
        if (!(e <= 0)) {
            var t = services.Localization
              , i = Math.round(e - Date.now() / MS_PER_SECOND);
            this.__articleTimeLabel.textContent = t.localize("store.sale.endingTime"),
            this.__articleTimeValue.textContent = 0 < i ? t.localizePromoTimeRemaining(i) : "",
            this.__articleTime.style.display = 0 < i ? "" : "none",
            0 < i ? (this.__articleTimeValue.textContent = t.localizePromoTimeRemaining(i),
            this.__articleTime.style.display = "") : this.disableButtons()
        }
    }
    ,
    UTStoreArticleDetailsView.prototype.setTradableStyle = function(e) {
        this.toggleClass(UTStoreArticleDetailsView.Style.IS_TRADEABLE, e),
        this.toggleClass(UTStoreArticleDetailsView.Style.IS_UNTRADEABLE, !e)
    }
    ,
    UTStoreArticleDetailsView.Style = Object.freeze({
        IS_TRADEABLE: "is-tradeable",
        IS_UNTRADEABLE: "is-untradeable"
    }),
    UTStoreArticleDetailsView
}(UTTargetActionView)
  , UTStorePackDetailsView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTStorePackDetailsView() {
        return t.call(this) || this
    }
    return __extends(UTStorePackDetailsView, t),
    UTStorePackDetailsView.prototype.init = function() {
        t.prototype.init.call(this);
        var e = services.Localization;
        this.__rareQuantityLabel.textContent = e.localize("store.group.rarelabel")
    }
    ,
    UTStorePackDetailsView.prototype.removeOddsButton = function() {
        this._btnOdds && this.removeHeaderButton(this._btnOdds)
    }
    ,
    UTStorePackDetailsView.prototype.setupOddsButton = function() {
        this.removeOddsButton(),
        this._btnOdds = new UTImageButtonControl,
        this._btnOdds.init(),
        this._btnOdds.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this._btnOdds.addClass("info-btn"),
        this.appendHeaderButton(this._btnOdds)
    }
    ,
    UTStorePackDetailsView.prototype.removeOpenButton = function() {
        this._btnOpen && this.removeActionButton(this._btnOpen)
    }
    ,
    UTStorePackDetailsView.prototype.setupOpenButton = function() {
        this.removeOpenButton();
        var e = services.Localization;
        this._btnOpen = new UTCurrencyButtonControl,
        this._btnOpen.init(),
        this._btnOpen.setText(e.localize("store.mypack.open")),
        this._btnOpen.setSubText(e.localize("store.mypack.claimPack")),
        this._btnOpen.addClass("call-to-action"),
        this._btnOpen.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this.appendActionButton(this._btnOpen)
    }
    ,
    UTStorePackDetailsView.prototype.removeBuyCoinsButton = function() {
        this._btnBuyCoins && this.removeActionButton(this._btnBuyCoins)
    }
    ,
    UTStorePackDetailsView.prototype.setupBuyCoinsButton = function(e) {
        this.removeBuyCoinsButton();
        var t = services.Localization;
        this._btnBuyCoins = new UTCurrencyButtonControl,
        this._btnBuyCoins.init(),
        this._btnBuyCoins.setCurrencyType(GameCurrency.COINS),
        this._btnBuyCoins.setText(t.localizeNumber(e)),
        this._btnBuyCoins.setSubText(t.localize("currency.coins")),
        this._btnBuyCoins.addClass("call-to-action"),
        this._btnBuyCoins.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this.appendActionButton(this._btnBuyCoins)
    }
    ,
    UTStorePackDetailsView.prototype.removeBuyPointsButton = function() {
        this._btnBuyPoints && this.removeActionButton(this._btnBuyPoints)
    }
    ,
    UTStorePackDetailsView.prototype.setupBuyPointsButton = function(e) {
        this.removeBuyPointsButton();
        var t = services.Localization;
        this._btnBuyPoints = new UTCurrencyButtonControl,
        this._btnBuyPoints.init(),
        this._btnBuyPoints.setCurrencyType(GameCurrency.POINTS),
        this._btnBuyPoints.setText(t.localizeNumber(e)),
        this._btnBuyPoints.setSubText(t.localize("currency.points")),
        this._btnBuyPoints.addClass("call-to-action"),
        this._btnBuyPoints.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this.appendActionButton(this._btnBuyPoints)
    }
    ,
    UTStorePackDetailsView.prototype.enableBuyCoinButton = function(e) {
        var t;
        null === (t = this._btnBuyCoins) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTStorePackDetailsView.prototype.enableBuyPointsButton = function(e) {
        var t;
        null === (t = this._btnBuyPoints) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTStorePackDetailsView.prototype.renderDefault = function(e, t) {
        this.setPackBackground(t),
        this.setPackForeground(e)
    }
    ,
    UTStorePackDetailsView.prototype.setPackBackground = function(e) {
        this._pack.setPackBackground(e)
    }
    ,
    UTStorePackDetailsView.prototype.setPackForeground = function(e) {
        this._pack.setPackForeground(e)
    }
    ,
    UTStorePackDetailsView.prototype.setItemCounts = function(e, t, i) {
        function _toggleCountDisplay(e, t) {
            e.style.display = t ? "" : "none"
        }
        _toggleCountDisplay(this.__itemQuantity, 0 < e),
        _toggleCountDisplay(this.__rareQuantity, 0 < t),
        _toggleCountDisplay(this.__packContentType, i !== PurchaseArticleContentType.UNKNOWN);
        var o = ""
          , n = "";
        switch (i) {
        case PurchaseArticleContentType.MIXED:
            o = "store.packType.mixed",
            n = "mixed";
            break;
        case PurchaseArticleContentType.VANITY:
            o = "store.packType.vanity",
            n = "vanity";
            break;
        case PurchaseArticleContentType.PLAYERS:
            o = "store.packType.players",
            n = "players"
        }
        this.__itemQuantityLabel.textContent = services.Localization.localize(1 < e ? "dock.label.items" : "dock.label.item"),
        this.__packContentTypeLabel.textContent = services.Localization.localize(o),
        this.__itemQuantityValue.textContent = e.toString(),
        this.__rareQuantityValue.textContent = t.toString(),
        this.__packContentType.classList.remove("mixed"),
        this.__packContentType.classList.remove("vanity"),
        this.__packContentType.classList.remove("players"),
        i !== PurchaseArticleContentType.UNKNOWN && this.__packContentType.classList.add(n)
    }
    ,
    UTStorePackDetailsView.prototype.setMyPack = function(e) {
        e ? this.setupOpenButton() : this.removeOpenButton()
    }
    ,
    UTStorePackDetailsView.prototype.eBubbleEvent = function(e, t, i) {
        var o = this.getArticleId();
        if (e === this._btnBuyCoins)
            this._triggerActions(UTStorePackDetailsView.Event.BUY_COINS, {
                articleId: o
            });
        else if (e === this._btnBuyPoints)
            this._triggerActions(UTStorePackDetailsView.Event.BUY_POINTS, {
                articleId: o
            });
        else if (e === this._btnOpen)
            this._triggerActions(UTStorePackDetailsView.Event.OPEN, {
                articleId: o
            });
        else {
            if (e !== this._btnOdds)
                return;
            this._triggerActions(UTStorePackDetailsView.Event.CHECK_ODDS, {
                articleId: o
            })
        }
    }
    ,
    UTStorePackDetailsView.Event = Object.freeze({
        OPEN: "UTStorePackDetailsView.Event.OPEN",
        BUY_COINS: "UTStoreArticleDetailsView.Event.BUY_COINS",
        BUY_POINTS: "UTStoreArticleDetailsView.Event.BUY_POINTS",
        CHECK_ODDS: "UTStorePackDetailsView.Event.CHECK_ODDS"
    }),
    UTStorePackDetailsView
}(UTStoreArticleDetailsView));
UTStorePackDetailsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-pack-details-view"),
        this.__articleHeader = document.createElement("h1"),
        this.__articleHeader.classList.add("ut-store-pack-details-view--title"),
        this.__articleTitle = document.createElement("span"),
        this.__articleHeader.appendChild(this.__articleTitle),
        e.appendChild(this.__articleHeader),
        this._pack = new UTPackGraphicView,
        e.appendChild(this._pack.getRootElement());
        var t = document.createElement("div");
        t.classList.add("ut-store-pack-details-view--content");
        var i = document.createElement("div");
        i.classList.add("ut-store-pack-details-view--pack-counts"),
        this.__packContentType = document.createElement("div"),
        this.__packContentType.classList.add("pack-type"),
        this.__packContentType.classList.add("ut-store-pack-details-view--pack-counts-cell");
        var o = document.createElement("div");
        o.classList.add("icon"),
        this.__packContentType.appendChild(o),
        this.__packContentTypeLabel = document.createElement("span"),
        this.__packContentTypeLabel.classList.add("label"),
        this.__packContentType.appendChild(this.__packContentTypeLabel),
        i.appendChild(this.__packContentType),
        this.__itemQuantity = document.createElement("div"),
        this.__itemQuantity.classList.add("total"),
        this.__itemQuantity.classList.add("ut-store-pack-details-view--pack-counts-cell"),
        this.__itemQuantityValue = document.createElement("span"),
        this.__itemQuantityValue.classList.add("value"),
        this.__itemQuantity.appendChild(this.__itemQuantityValue),
        this.__itemQuantityLabel = document.createElement("span"),
        this.__itemQuantityLabel.classList.add("label"),
        this.__itemQuantity.appendChild(this.__itemQuantityLabel),
        i.appendChild(this.__itemQuantity),
        this.__rareQuantity = document.createElement("div"),
        this.__rareQuantity.classList.add("rare"),
        this.__rareQuantity.classList.add("ut-store-pack-details-view--pack-counts-cell"),
        this.__rareQuantityValue = document.createElement("span"),
        this.__rareQuantityValue.classList.add("value"),
        this.__rareQuantity.appendChild(this.__rareQuantityValue),
        this.__rareQuantityLabel = document.createElement("span"),
        this.__rareQuantityLabel.classList.add("label"),
        this.__rareQuantity.appendChild(this.__rareQuantityLabel),
        i.appendChild(this.__rareQuantity),
        t.appendChild(i),
        this.__articleDesc = document.createElement("p"),
        this.__articleDesc.classList.add("ut-store-pack-details-view--description"),
        t.appendChild(this.__articleDesc),
        this.__articleQuantity = document.createElement("p"),
        this.__articleQuantity.classList.add("ut-store-pack-details-view--user-quantity"),
        this.__articleQuantity.classList.add("ut-store-pack-details-view--quantity"),
        this.__articleQuantityLabel = document.createElement("span"),
        this.__articleQuantityLabel.classList.add("label"),
        this.__articleQuantity.appendChild(this.__articleQuantityLabel),
        this.__articleQuantityValue = document.createElement("span"),
        this.__articleQuantityValue.classList.add("value"),
        this.__articleQuantity.appendChild(this.__articleQuantityValue),
        t.appendChild(this.__articleQuantity),
        this.__articleGlobalQuantity = document.createElement("p"),
        this.__articleGlobalQuantity.classList.add("ut-store-pack-details-view--global-quantity"),
        this.__articleGlobalQuantity.classList.add("ut-store-pack-details-view--quantity"),
        this.__articleGlobalQuantityLabel = document.createElement("span"),
        this.__articleGlobalQuantityLabel.classList.add("label"),
        this.__articleGlobalQuantity.appendChild(this.__articleGlobalQuantityLabel),
        this.__articleGlobalQuantityValue = document.createElement("span"),
        this.__articleGlobalQuantityValue.classList.add("value"),
        this.__articleGlobalQuantity.appendChild(this.__articleGlobalQuantityValue),
        t.appendChild(this.__articleGlobalQuantity),
        this.__articleTime = document.createElement("p"),
        this.__articleTime.classList.add("ut-store-pack-details-view--expiry"),
        this.__articleTimeLabel = document.createElement("span"),
        this.__articleTimeLabel.classList.add("label"),
        this.__articleTime.appendChild(this.__articleTimeLabel),
        this.__articleTimeValue = document.createElement("span"),
        this.__articleTimeValue.classList.add("value"),
        this.__articleTime.appendChild(this.__articleTimeValue),
        t.appendChild(this.__articleTime),
        e.appendChild(t),
        this.__articleActionContainer = document.createElement("div"),
        this.__articleActionContainer.classList.add("ut-store-pack-details-view--footer"),
        e.appendChild(this.__articleActionContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStorePackDetailsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__articleHeader = null,
    this.__articleTitle = null,
    this._pack.destroy(),
    this.__packContentType = null,
    this.__packContentTypeLabel = null,
    this.__itemQuantity = null,
    this.__itemQuantityValue = null,
    this.__itemQuantityLabel = null,
    this.__rareQuantity = null,
    this.__rareQuantityValue = null,
    this.__rareQuantityLabel = null,
    this.__articleDesc = null,
    this.__articleQuantity = null,
    this.__articleQuantityLabel = null,
    this.__articleQuantityValue = null,
    this.__articleGlobalQuantity = null,
    this.__articleGlobalQuantityLabel = null,
    this.__articleGlobalQuantityValue = null,
    this.__articleTime = null,
    this.__articleTimeLabel = null,
    this.__articleTimeValue = null,
    this.__articleActionContainer = null
}
,
UTStorePackDetailsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTLabelButtonControl = function(e) {
    function UTLabelButtonControl() {
        return e.call(this) || this
    }
    return __extends(UTLabelButtonControl, e),
    UTLabelButtonControl.prototype.init = function() {
        e.prototype.init.call(this),
        this._label.init(),
        this._label.setAngle(UTLabelView.Angle.BOTTOM_LEFT)
    }
    ,
    UTLabelButtonControl.prototype.setText = function(e) {
        this.__text.textContent = e
    }
    ,
    UTLabelButtonControl.prototype.setLabel = function(e) {
        this._label.setLabel(e)
    }
    ,
    UTLabelButtonControl.prototype.toggleLabel = function(e) {
        this.toggleClass(UTLabelButtonControl.UI_STATE.HAS_LABEL, e),
        e || this.setLabel("")
    }
    ,
    UTLabelButtonControl.prototype.toggleCTA = function(e) {
        this.toggleClass(UTLabelButtonControl.STYLE.CALL_TO_ACTION, e)
    }
    ,
    UTLabelButtonControl.STYLE = Object.freeze({
        DEFAULT: "",
        CALL_TO_ACTION: "call-to-action"
    }),
    UTLabelButtonControl.UI_STATE = Object.freeze({
        DEFAULT: "",
        HAS_LABEL: "has-label"
    }),
    UTLabelButtonControl
}(UTStandardButtonControl);
UTLabelButtonControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("button");
        e.classList.add("btn-label"),
        this._label = new UTLabelView,
        e.appendChild(this._label.getRootElement()),
        this.__text = document.createElement("span"),
        this.__text.classList.add("btn-text"),
        e.appendChild(this.__text),
        this.__root = e,
        this._generated = !0
    }
}
,
UTLabelButtonControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._label.destroy(),
    this.__text = null
}
,
UTLabelButtonControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreArticlePackGraphicView = function(e) {
    function UTStoreArticlePackGraphicView() {
        return e.call(this) || this
    }
    return __extends(UTStoreArticlePackGraphicView, e),
    UTStoreArticlePackGraphicView.prototype.init = function() {
        this.setStyle(UTStoreArticlePackGraphicView.Styles.DEFAULT),
        e.prototype.init.call(this)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.setStyle = function(e) {
        this.removeClass(JSUtils.getObjectValues(UTStoreArticlePackGraphicView.Styles).join(" ")),
        this.addClass(e)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.renderBundle = function(e) {
        this.toggleClass(UTStoreArticlePackGraphicView.Styles.BUNDLE, !0),
        this._packGraphic.getBackgroundImageView().setResource(AssetLocationUtils.getBundleBackgroundImageUri(e))
    }
    ,
    UTStoreArticlePackGraphicView.prototype.setPackBackground = function(e) {
        this._packGraphic.setPackBackground(e)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.setPackForeground = function(e) {
        this._packGraphic.setPackForeground(e)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.renderSingle = function(e) {
        this.renderItem(e),
        this.toggleClass(UTStoreArticlePackGraphicView.Styles.SINGLE, !0)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.clearSingle = function() {
        this.clearItem(),
        this.toggleClass(UTStoreArticlePackGraphicView.Styles.SINGLE, !1)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.renderRevealed = function(e) {
        this.renderItem(e),
        this.toggleClass(UTStoreArticlePackGraphicView.Styles.REVEALED, !0)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.clearRevealed = function() {
        this.clearItem(),
        this.toggleClass(UTStoreArticlePackGraphicView.Styles.REVEALED, !1)
    }
    ,
    UTStoreArticlePackGraphicView.prototype.renderItem = function(e) {
        this._itemView && this.clearItem(),
        this._itemView = factories.ItemView.createLargeItem(e),
        this._itemView.init(),
        this._itemView.supportSecondaryViews = !1,
        this._itemView.render(e),
        this.addSubview(this._itemView, this.__itemContainer),
        this.layoutSubviews()
    }
    ,
    UTStoreArticlePackGraphicView.prototype.clearItem = function() {
        this._itemView && this._itemView.dealloc()
    }
    ,
    UTStoreArticlePackGraphicView.Styles = Object.freeze({
        DEFAULT: "ut-store-article-pack-graphic-view--default",
        BUNDLE: "ut-store-article-pack-graphic-view--bundle",
        REVEALED: "ut-store-article-pack-graphic-view--revealed",
        SINGLE: "ut-store-article-pack-graphic-view--single"
    }),
    UTStoreArticlePackGraphicView
}(UTView);
UTStoreArticlePackGraphicView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-article-pack-graphic-view"),
        this._packGraphic = new UTPackGraphicView,
        this._packGraphic.getRootElement().classList.add("ut-store-article-pack-graphic-view--pack"),
        e.appendChild(this._packGraphic.getRootElement()),
        this.__itemContainer = document.createElement("div"),
        this.__itemContainer.classList.add("ut-store-article-pack-graphic-view--option"),
        e.appendChild(this.__itemContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStoreArticlePackGraphicView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._packGraphic.destroy(),
    this.__itemContainer = null
}
,
UTStoreArticlePackGraphicView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreXrayPackDetailsView = function(o) {
    function UTStoreXrayPackDetailsView() {
        var e = o.call(this) || this;
        return e.isPreviewed = !1,
        e
    }
    return __extends(UTStoreXrayPackDetailsView, o),
    UTStoreXrayPackDetailsView.prototype.init = function() {
        o.prototype.init.call(this),
        this._xrayPack.init(),
        this.setupRevealButton()
    }
    ,
    UTStoreXrayPackDetailsView.prototype.dealloc = function() {
        this.resetPack(),
        o.prototype.dealloc.call(this)
    }
    ,
    UTStoreXrayPackDetailsView.prototype._getContentViewInstance = function() {
        return new UTStoreXrayPackDetailsView
    }
    ,
    UTStoreXrayPackDetailsView.prototype.removeRevealButton = function() {
        this._reviewBtn && this.removeActionButton(this._reviewBtn)
    }
    ,
    UTStoreXrayPackDetailsView.prototype.setupRevealButton = function() {
        this.removeRevealButton();
        var e = services.Localization;
        this._reviewBtn = new UTLabelButtonControl,
        this._reviewBtn.init(),
        this._reviewBtn.toggleCTA(!0),
        this._reviewBtn.setText(e.localize("store.x.p")),
        this._reviewBtn.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this._reviewBtn.setInteractionState(!0),
        this.appendActionButton(this._reviewBtn)
    }
    ,
    UTStoreXrayPackDetailsView.prototype.toggleReplacementWarning = function(e) {
        var t = services.Localization;
        this.__replacementWarning.textContent = e ? t.localize("store.x.p.m") : ""
    }
    ,
    UTStoreXrayPackDetailsView.prototype.setCoinsAmount = function(e) {
        if (0 < e) {
            var t = services.Localization;
            this.__coinPrice.textContent = t.localizeNumber(e)
        }
    }
    ,
    UTStoreXrayPackDetailsView.prototype.setPointsAmount = function(e) {
        if (0 < e) {
            var t = services.Localization;
            this.__pointsPrice.textContent = t.localizeNumber(e)
        }
    }
    ,
    UTStoreXrayPackDetailsView.prototype.resetPack = function() {
        if (this.isPreviewed) {
            var e = services.Localization;
            this._xrayPack.clearItem(),
            this.toggleReplacementWarning(!1),
            this._reviewBtn.setText(e.localize("store.x.p")),
            this._reviewBtn.toggleLabel(!1),
            this.isPreviewed = !1
        }
    }
    ,
    UTStoreXrayPackDetailsView.prototype.renderDefault = function(e, t) {
        this.resetPack(),
        this._xrayPack.setPackBackground(t),
        this._xrayPack.setPackForeground(e)
    }
    ,
    UTStoreXrayPackDetailsView.prototype.renderItem = function(e) {
        this._xrayPack.renderRevealed(e)
    }
    ,
    UTStoreXrayPackDetailsView.prototype.renderPreviewed = function(e, t, i) {
        this.isPreviewed = !0;
        var o = services.Localization;
        this.renderItem(e),
        this.setPreviewTimeRemainingLabel(t, i),
        this._reviewBtn.setText(o.localize("store.x.v"))
    }
    ,
    UTStoreXrayPackDetailsView.prototype.setTimeRemaining = function(e) {
        0 !== e && (Math.round(e - Date.now() / MS_PER_SECOND) <= 0 && this.resetPack(),
        o.prototype.setTimeRemaining.call(this, e))
    }
    ,
    UTStoreXrayPackDetailsView.prototype.setPreviewTimeRemainingLabel = function(e, t) {
        if (void 0 === t && (t = 0),
        !(e <= 0)) {
            var i = services.Localization;
            if (0 < t && t <= e)
                return this._reviewBtn.toggleLabel(!0),
                void this._reviewBtn.setLabel(i.localize("store.expiry.na"));
            var o = Math.round(e - Date.now() / MS_PER_SECOND)
              , n = 0 < o ? i.localize("store.x.ref.in", [i.localizePromoTimeRemaining(o)]) : "";
            this._reviewBtn.setLabel(n),
            this._reviewBtn.toggleLabel(0 < o),
            this._reviewBtn.setText(0 < o ? i.localize("store.x.v") : i.localize("store.x.p")),
            o <= 0 && (this.resetPack(),
            this._triggerActions(UTStoreXrayPackDetailsView.Event.REVEAL_EXPIRED, {
                articleId: this.getArticleId()
            }))
        }
    }
    ,
    UTStoreXrayPackDetailsView.prototype.eBubbleEvent = function(e, t, i) {
        e instanceof UTLabelButtonControl && this._triggerActions(UTStoreXrayPackDetailsView.Event.REVEAL, {
            articleId: this.getArticleId()
        }),
        o.prototype.eBubbleEvent.call(this, e, t, i)
    }
    ,
    UTStoreXrayPackDetailsView.Event = Object.freeze({
        OPEN: "UTStorePackDetailsView.Event.OPEN",
        BUY_COINS: "UTStorePackDetailsView.Event.BUY_COINS",
        BUY_POINTS: "UTStorePackDetailsView.Event.BUY_POINTS",
        CHECK_ODDS: "UTStorePackDetailsView.Event.CHECK_ODDS",
        REVEAL: "UTStoreXrayPackDetailsView.Event.REVEAL",
        REVEAL_EXPIRED: "UTStoreXrayPackDetailsView.Event.REVEAL_EXPIRED"
    }),
    UTStoreXrayPackDetailsView
}(UTStorePackDetailsView);
UTStoreXrayPackDetailsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-xray-pack-details-view"),
        this.__articleHeader = document.createElement("h1"),
        this.__articleHeader.classList.add("ut-store-xray-pack-details-view--heading"),
        this.__articleTitle = document.createElement("span"),
        this.__articleTitle.classList.add("ut-store-xray-pack-details-view--title"),
        this.__articleHeader.appendChild(this.__articleTitle),
        this.__replacementWarning = document.createElement("span"),
        this.__replacementWarning.classList.add("ut-store-xray-pack-details-view--warning"),
        this.__articleHeader.appendChild(this.__replacementWarning),
        e.appendChild(this.__articleHeader);
        var t = document.createElement("div");
        t.classList.add("ut-store-xray-pack-details-view--prices"),
        this.__coinPrice = document.createElement("span"),
        this.__coinPrice.classList.add("ut-store-xray-pack-details-view--prices-coins"),
        t.appendChild(this.__coinPrice),
        this.__pointsPrice = document.createElement("span"),
        this.__pointsPrice.classList.add("ut-store-xray-pack-details-view--prices-points"),
        t.appendChild(this.__pointsPrice),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-store-xray-pack-details-view--body"),
        this._xrayPack = new UTStoreArticlePackGraphicView,
        i.appendChild(this._xrayPack.getRootElement());
        var o = document.createElement("div");
        o.classList.add("ut-store-xray-pack-details-view--content");
        var n = document.createElement("div");
        n.classList.add("ut-store-pack-details-view--pack-counts"),
        this.__packContentType = document.createElement("div"),
        this.__packContentType.classList.add("pack-type"),
        this.__packContentType.classList.add("ut-store-pack-details-view--pack-counts-cell");
        var r = document.createElement("div");
        r.classList.add("icon"),
        this.__packContentType.appendChild(r),
        this.__packContentTypeLabel = document.createElement("span"),
        this.__packContentTypeLabel.classList.add("label"),
        this.__packContentType.appendChild(this.__packContentTypeLabel),
        n.appendChild(this.__packContentType),
        this.__itemQuantity = document.createElement("div"),
        this.__itemQuantity.classList.add("total"),
        this.__itemQuantity.classList.add("ut-store-pack-details-view--pack-counts-cell"),
        this.__itemQuantityValue = document.createElement("span"),
        this.__itemQuantityValue.classList.add("value"),
        this.__itemQuantity.appendChild(this.__itemQuantityValue),
        this.__itemQuantityLabel = document.createElement("span"),
        this.__itemQuantityLabel.classList.add("label"),
        this.__itemQuantity.appendChild(this.__itemQuantityLabel),
        n.appendChild(this.__itemQuantity),
        this.__rareQuantity = document.createElement("div"),
        this.__rareQuantity.classList.add("rare"),
        this.__rareQuantity.classList.add("ut-store-pack-details-view--pack-counts-cell"),
        this.__rareQuantityValue = document.createElement("span"),
        this.__rareQuantityValue.classList.add("value"),
        this.__rareQuantity.appendChild(this.__rareQuantityValue),
        this.__rareQuantityLabel = document.createElement("span"),
        this.__rareQuantityLabel.classList.add("label"),
        this.__rareQuantity.appendChild(this.__rareQuantityLabel),
        n.appendChild(this.__rareQuantity),
        o.appendChild(n),
        this.__articleDesc = document.createElement("p"),
        this.__articleDesc.classList.add("ut-store-xray-pack-details-view--description"),
        o.appendChild(this.__articleDesc),
        this.__articleQuantity = document.createElement("p"),
        this.__articleQuantity.classList.add("ut-store-xray-pack-details-view--user-quantity"),
        this.__articleQuantity.classList.add("ut-store-xray-pack-details-view--quantity"),
        this.__articleQuantityLabel = document.createElement("span"),
        this.__articleQuantityLabel.classList.add("label"),
        this.__articleQuantity.appendChild(this.__articleQuantityLabel),
        this.__articleQuantityValue = document.createElement("span"),
        this.__articleQuantityValue.classList.add("value"),
        this.__articleQuantity.appendChild(this.__articleQuantityValue),
        o.appendChild(this.__articleQuantity),
        this.__articleGlobalQuantity = document.createElement("p"),
        this.__articleGlobalQuantity.classList.add("ut-store-xray-pack-details-view--global-quantity"),
        this.__articleGlobalQuantity.classList.add("ut-store-xray-pack-details-view--quantity"),
        this.__articleGlobalQuantityLabel = document.createElement("span"),
        this.__articleGlobalQuantityLabel.classList.add("label"),
        this.__articleGlobalQuantity.appendChild(this.__articleGlobalQuantityLabel),
        this.__articleGlobalQuantityValue = document.createElement("span"),
        this.__articleGlobalQuantityValue.classList.add("value"),
        this.__articleGlobalQuantity.appendChild(this.__articleGlobalQuantityValue),
        o.appendChild(this.__articleGlobalQuantity),
        this.__articleTime = document.createElement("p"),
        this.__articleTime.classList.add("ut-store-xray-pack-details-view--expiry"),
        this.__articleTimeLabel = document.createElement("span"),
        this.__articleTimeLabel.classList.add("label"),
        this.__articleTime.appendChild(this.__articleTimeLabel),
        this.__articleTimeValue = document.createElement("span"),
        this.__articleTimeValue.classList.add("value"),
        this.__articleTime.appendChild(this.__articleTimeValue),
        o.appendChild(this.__articleTime),
        i.appendChild(o),
        e.appendChild(i),
        this.__articleActionContainer = document.createElement("div"),
        this.__articleActionContainer.classList.add("ut-store-xray-pack-details-view--footer"),
        e.appendChild(this.__articleActionContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStoreXrayPackDetailsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__articleHeader = null,
    this.__articleTitle = null,
    this.__replacementWarning = null,
    this.__coinPrice = null,
    this.__pointsPrice = null,
    this._xrayPack.destroy(),
    this.__packContentType = null,
    this.__packContentTypeLabel = null,
    this.__itemQuantity = null,
    this.__itemQuantityValue = null,
    this.__itemQuantityLabel = null,
    this.__rareQuantity = null,
    this.__rareQuantityValue = null,
    this.__rareQuantityLabel = null,
    this.__articleDesc = null,
    this.__articleQuantity = null,
    this.__articleQuantityLabel = null,
    this.__articleQuantityValue = null,
    this.__articleGlobalQuantity = null,
    this.__articleGlobalQuantityLabel = null,
    this.__articleGlobalQuantityValue = null,
    this.__articleTime = null,
    this.__articleTimeLabel = null,
    this.__articleTimeValue = null,
    this.__articleActionContainer = null
}
,
UTStoreXrayPackDetailsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreBundleDetailsView = function(e) {
    function UTStoreBundleDetailsView() {
        return e.call(this) || this
    }
    return __extends(UTStoreBundleDetailsView, e),
    UTStoreBundleDetailsView.prototype.removeRevealButton = function() {
        this._btnReveal && (this.removeActionButton(this._btnReveal),
        this._btnReveal.dealloc())
    }
    ,
    UTStoreBundleDetailsView.prototype.setupRevealButton = function() {
        this.removeRevealButton(),
        this._btnReveal = new UTImageButtonControl,
        this._btnReveal.init(),
        this._btnReveal.addClass("call-to-action reveal-btn"),
        this._btnReveal.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this.appendActionButton(this._btnReveal)
    }
    ,
    UTStoreBundleDetailsView.prototype.enableRevealButton = function(e) {
        var t;
        null === (t = this._btnReveal) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTStoreBundleDetailsView.prototype.removeStoryButton = function() {
        this._btnStory && this.removeHeaderButton(this._btnStory)
    }
    ,
    UTStoreBundleDetailsView.prototype.setupStoryButton = function() {
        this.removeStoryButton(),
        this._btnStory = new UTImageButtonControl,
        this._btnStory.init(),
        this._btnStory.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this._btnStory.addClass("story-btn"),
        this.appendHeaderButton(this._btnStory)
    }
    ,
    UTStoreBundleDetailsView.prototype.enableStoryButton = function(e) {
        var t;
        null === (t = this._btnBuyCoins) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTStoreBundleDetailsView.prototype.removeBuyCoinsButton = function() {
        this._btnBuyCoins && this.removeActionButton(this._btnBuyCoins)
    }
    ,
    UTStoreBundleDetailsView.prototype.setupBuyCoinsButton = function(e) {
        this.removeBuyCoinsButton();
        var t = services.Localization;
        this._btnBuyCoins = new UTCurrencyButtonControl,
        this._btnBuyCoins.init(),
        this._btnBuyCoins.setCurrencyType(GameCurrency.COINS),
        this._btnBuyCoins.setText(t.localizeNumber(e)),
        this._btnBuyCoins.setSubText(t.localize("currency.coins")),
        this._btnBuyCoins.addClass("call-to-action"),
        this._btnBuyCoins.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this.appendActionButton(this._btnBuyCoins)
    }
    ,
    UTStoreBundleDetailsView.prototype.removeBuyPointsButton = function() {
        this._btnBuyPoints && this.removeActionButton(this._btnBuyPoints)
    }
    ,
    UTStoreBundleDetailsView.prototype.setupBuyPointsButton = function(e) {
        this.removeBuyPointsButton();
        var t = services.Localization;
        this._btnBuyPoints = new UTCurrencyButtonControl,
        this._btnBuyPoints.init(),
        this._btnBuyPoints.setCurrencyType(GameCurrency.POINTS),
        this._btnBuyPoints.setText(t.localizeNumber(e)),
        this._btnBuyPoints.setSubText(t.localize("currency.points")),
        this._btnBuyPoints.addClass("call-to-action"),
        this._btnBuyPoints.addTarget(this, this.eBubbleEvent, EventType.TAP),
        this.appendActionButton(this._btnBuyPoints)
    }
    ,
    UTStoreBundleDetailsView.prototype.enableBuyCoinButton = function(e) {
        var t;
        null === (t = this._btnBuyCoins) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTStoreBundleDetailsView.prototype.enableBuyPointsButton = function(e) {
        var t;
        null === (t = this._btnBuyPoints) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTStoreBundleDetailsView.prototype.setStyle = function(e) {
        this.removeClass(JSUtils.getObjectValues(UTStoreBundleDetailsView.Styles).join(" ")),
        this.addClass(e)
    }
    ,
    UTStoreBundleDetailsView.prototype.renderBundle = function(e) {
        this.setStyle(UTStoreBundleDetailsView.Styles.BUNDLE),
        this._articleGraphic.renderBundle(e)
    }
    ,
    UTStoreBundleDetailsView.prototype.renderDirectPurchase = function(e) {
        this.setStyle(UTStoreBundleDetailsView.Styles.SINGLE),
        this._articleGraphic.renderSingle(e)
    }
    ,
    UTStoreBundleDetailsView.prototype.eBubbleEvent = function(e, t, i) {
        var o = this.articleId;
        e === this._btnReveal ? this._triggerActions(UTStoreBundleDetailsView.Event.VIEW_REVEAL, {
            articleId: o
        }) : e === this._btnStory ? this._triggerActions(UTStoreBundleDetailsView.Event.VIEW_STORY, {
            articleId: o
        }) : e === this._btnBuyCoins ? this._triggerActions(UTStoreBundleDetailsView.Event.BUY_COINS, {
            articleId: o
        }) : e === this._btnBuyPoints && this._triggerActions(UTStoreBundleDetailsView.Event.BUY_POINTS, {
            articleId: o
        })
    }
    ,
    UTStoreBundleDetailsView.Styles = Object.freeze({
        BUNDLE: "ut-store-bundle-details-view--bundle",
        SINGLE: "ut-store-bundle-details-view--single"
    }),
    UTStoreBundleDetailsView.Event = Object.freeze({
        BUY_COINS: "UTStoreBundleDetailsView.Event.BUY_COINS",
        BUY_POINTS: "UTStoreBundleDetailsView.Event.BUY_POINTS",
        VIEW_REVEAL: "UTStoreBundleDetailsView.Event.VIEW_REVEAL",
        VIEW_STORY: "UTStoreBundleDetailsView.Event.VIEW_STORY"
    }),
    UTStoreBundleDetailsView
}(UTStoreArticleDetailsView);
UTStoreBundleDetailsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-bundle-details-view"),
        this.__articleHeader = document.createElement("h1"),
        this.__articleHeader.classList.add("ut-store-bundle-details-view--title"),
        this.__articleTitle = document.createElement("span"),
        this.__articleHeader.appendChild(this.__articleTitle),
        e.appendChild(this.__articleHeader);
        var t = document.createElement("div");
        t.classList.add("ut-store-bundle-details-view--body"),
        this._articleGraphic = new UTStoreArticlePackGraphicView,
        t.appendChild(this._articleGraphic.getRootElement());
        var i = document.createElement("div");
        i.classList.add("ut-store-bundle-details-view--content"),
        this.__articleDesc = document.createElement("p"),
        this.__articleDesc.classList.add("ut-store-bundle-details-view--description"),
        i.appendChild(this.__articleDesc),
        this.__articleQuantity = document.createElement("p"),
        this.__articleQuantity.classList.add("ut-store-bundle-details-view--user-quantity"),
        this.__articleQuantity.classList.add("ut-store-bundle-details-view--quantity"),
        this.__articleQuantityLabel = document.createElement("span"),
        this.__articleQuantityLabel.classList.add("label"),
        this.__articleQuantity.appendChild(this.__articleQuantityLabel),
        this.__articleQuantityValue = document.createElement("span"),
        this.__articleQuantityValue.classList.add("value"),
        this.__articleQuantity.appendChild(this.__articleQuantityValue),
        i.appendChild(this.__articleQuantity),
        this.__articleGlobalQuantity = document.createElement("p"),
        this.__articleGlobalQuantity.classList.add("ut-store-bundle-details-view--global-quantity"),
        this.__articleGlobalQuantity.classList.add("ut-store-bundle-details-view--quantity"),
        this.__articleGlobalQuantityLabel = document.createElement("span"),
        this.__articleGlobalQuantityLabel.classList.add("label"),
        this.__articleGlobalQuantity.appendChild(this.__articleGlobalQuantityLabel),
        this.__articleGlobalQuantityValue = document.createElement("span"),
        this.__articleGlobalQuantityValue.classList.add("value"),
        this.__articleGlobalQuantity.appendChild(this.__articleGlobalQuantityValue),
        i.appendChild(this.__articleGlobalQuantity),
        this.__articleTime = document.createElement("p"),
        this.__articleTime.classList.add("ut-store-bundle-details-view--expiry"),
        this.__articleTimeLabel = document.createElement("span"),
        this.__articleTimeLabel.classList.add("label"),
        this.__articleTime.appendChild(this.__articleTimeLabel),
        this.__articleTimeValue = document.createElement("span"),
        this.__articleTimeValue.classList.add("value"),
        this.__articleTime.appendChild(this.__articleTimeValue),
        i.appendChild(this.__articleTime),
        t.appendChild(i),
        e.appendChild(t),
        this.__articleActionContainer = document.createElement("div"),
        this.__articleActionContainer.classList.add("ut-store-bundle-details-view--footer"),
        e.appendChild(this.__articleActionContainer),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStoreBundleDetailsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__articleHeader = null,
    this.__articleTitle = null,
    this._articleGraphic.destroy(),
    this.__articleDesc = null,
    this.__articleQuantity = null,
    this.__articleQuantityLabel = null,
    this.__articleQuantityValue = null,
    this.__articleGlobalQuantity = null,
    this.__articleGlobalQuantityLabel = null,
    this.__articleGlobalQuantityValue = null,
    this.__articleTime = null,
    this.__articleTimeLabel = null,
    this.__articleTimeValue = null,
    this.__articleActionContainer = null
}
,
UTStoreBundleDetailsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTNimbleMTXDetailsView = function(t) {
    function UTNimbleMTXDetailsView() {
        var e = t.call(this) || this;
        return e.nimbleMTXsku = "",
        e
    }
    return __extends(UTNimbleMTXDetailsView, t),
    UTNimbleMTXDetailsView.prototype.init = function() {
        t.prototype.init.call(this),
        this._actionBtn.addTarget(this, this.onStartNimbleTransaction, EventType.TAP),
        this._actionBtn.init(),
        this.toggleOriginAccessLogo(!1),
        this.toggleTag(!1)
    }
    ,
    UTNimbleMTXDetailsView.prototype.setHeader = function(e) {
        this.__title.textContent = e
    }
    ,
    UTNimbleMTXDetailsView.prototype.setDescription = function(e) {
        this.__description.textContent = e
    }
    ,
    UTNimbleMTXDetailsView.prototype.setButtonText = function(e) {
        this._actionBtn.setText(e)
    }
    ,
    UTNimbleMTXDetailsView.prototype.setLocalImageFPUrl = function(e) {
        this._imageLoaderFP.setLocalResource("images/store/IconFIFAPoint_pack" + e + ".png")
    }
    ,
    UTNimbleMTXDetailsView.prototype.setMTXsku = function(e) {
        this.nimbleMTXsku = e
    }
    ,
    UTNimbleMTXDetailsView.prototype.addOriginAccessLogo = function() {
        this._imageLoaderOA.setLocalResource("images/logo/oa_logo.png"),
        this.toggleOriginAccessLogo(!0)
    }
    ,
    UTNimbleMTXDetailsView.prototype.toggleOriginAccessLogo = function(e) {
        this._imageLoaderOA.setDisplay(e)
    }
    ,
    UTNimbleMTXDetailsView.prototype.addTag = function(e) {
        var t = services.Localization.localize("popular" === e ? "store.mtx.most-popular" : "store.mtx.best-value");
        this._tag.setLabel(t),
        this._tag.setAngle(UTLabelView.Angle.BOTTOM_RIGHT),
        this._tag.setStyle("popular" === e ? UTLabelView.Style.ACTIVE : UTLabelView.Style.HIGHLIGHT),
        this.toggleTag(!0)
    }
    ,
    UTNimbleMTXDetailsView.prototype.toggleTag = function(e) {
        this._tag.setDisplay(e)
    }
    ,
    UTNimbleMTXDetailsView.prototype.onStartNimbleTransaction = function(e, t, i) {
        this._triggerActions(UTNimbleMTXDetailsView.START_TRANSACTION, {
            nimbleMTXsku: this.nimbleMTXsku
        })
    }
    ,
    UTNimbleMTXDetailsView.START_TRANSACTION = "startTransaction",
    UTNimbleMTXDetailsView
}(UTTargetActionView);
UTNimbleMTXDetailsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("col-1-1"),
        e.classList.add("ut-nimble-mtx-details"),
        this.__title = document.createElement("h1"),
        this.__title.classList.add("title"),
        e.appendChild(this.__title);
        var t = document.createElement("div");
        t.classList.add("image"),
        this._imageLoaderFP = new UTImageView,
        t.appendChild(this._imageLoaderFP.getRootElement()),
        this._imageLoaderOA = new UTImageView,
        t.appendChild(this._imageLoaderOA.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("content"),
        this.__description = document.createElement("div"),
        this.__description.classList.add("description"),
        i.appendChild(this.__description),
        this._tag = new UTLabelView,
        i.appendChild(this._tag.getRootElement()),
        e.appendChild(i);
        var o = document.createElement("div");
        o.classList.add("purchasing"),
        this._actionBtn = new UTStandardButtonControl,
        this._actionBtn.getRootElement().classList.add("call-to-action"),
        o.appendChild(this._actionBtn.getRootElement()),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTNimbleMTXDetailsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._imageLoaderFP.destroy(),
    this._imageLoaderOA.destroy(),
    this.__description = null,
    this._tag.destroy(),
    this._actionBtn.destroy()
}
,
UTNimbleMTXDetailsView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreView = function(t) {
    function UTStoreView() {
        var e = t.call(this) || this;
        return e.storePacks = [],
        e.nimbleMTXItems = [],
        e
    }
    return __extends(UTStoreView, t),
    UTStoreView.prototype.init = function() {
        t.prototype.init.call(this),
        this._unassignedTile.init(),
        this._unassignedTile.addTarget(this, this._eUnassignedTileSelected, EventType.TAP),
        this._unassignedTile.setDisplay(!1),
        this._navigation.addTarget(this, this._handleTabSelect, EventType.TAP),
        this.setInteractionState(!0),
        this.toggleDescription(!1)
    }
    ,
    UTStoreView.prototype.dealloc = function() {
        this.clearPacks(),
        this.clearNimbleMTXItems(),
        this._navigation.removeTarget(this, this._handleTabSelect, EventType.TAP),
        t.prototype.dealloc.call(this)
    }
    ,
    UTStoreView.prototype.setInteractionState = function(t) {
        this._setInteractionStateFlag(t),
        this._navigation.setInteractionState(t),
        this.storePacks.forEach(function(e) {
            return e.setInteractionState(t)
        })
    }
    ,
    UTStoreView.prototype.clearPacks = function() {
        this.storePacks.forEach(function(e) {
            return e.dealloc()
        }),
        this.storePacks = []
    }
    ,
    UTStoreView.prototype.clearNimbleMTXItems = function() {
        this.nimbleMTXItems.forEach(function(e) {
            return e.dealloc()
        }),
        this.nimbleMTXItems = []
    }
    ,
    UTStoreView.prototype.setCategoryTabs = function(e, t, i) {
        var o = this;
        this._navigation.clearTabs(),
        e && this._navigation.addTab(PurchaseDisplayGroup.MYPACKS, services.Localization.localize("store.group.mypacks")),
        i.forEach(function(e) {
            o._navigation.addTab(e.categoryId, services.Localization.localize(e.localizedName))
        }),
        t && this._navigation.addTab(PurchaseDisplayGroup.PREVIEWED, services.Localization.localize("store.group.previewed")),
        this._navigation.layoutSubviews()
    }
    ,
    UTStoreView.prototype.setStoreCategory = function(e) {
        this._navigation.setActiveTab(e)
    }
    ,
    UTStoreView.prototype.getStoreCategory = function() {
        return this._navigation.getActiveTab()
    }
    ,
    UTStoreView.prototype.setNumUnassignedItems = function(e) {
        this._unassignedTile.setNumberOfItems(e),
        this._unassignedTile.setDisplay(0 < e)
    }
    ,
    UTStoreView.prototype.setDescriptionString = function(e) {
        this.__description.textContent = e
    }
    ,
    UTStoreView.prototype.toggleDescription = function(e) {
        this.__description.style.display = e ? "block" : "none"
    }
    ,
    UTStoreView.prototype.setNimbleMTXItems = function(e, t) {
        var i = this;
        this.clearPacks(),
        this.clearNimbleMTXItems(),
        this.setDescriptionString(services.Localization.localize("store.mtx.labelDescription")),
        this.toggleDescription(!0),
        e.forEach(function(e) {
            return i.generateNimbleMTXView(e, t)
        }),
        this.layoutSubviews()
    }
    ,
    UTStoreView.prototype.generateNimbleMTXView = function(e, t) {
        var i = new UTNimbleMTXDetailsView
          , o = services.Localization;
        i.init(),
        i.setHeader(e.title),
        i.setDescription(o.localize("store.mtxitem.descriptionText", [o.localizeNumber(e.points)])),
        i.setButtonText(o.localize("store.mtxitem.buttonText", [e.priceFormatted])),
        i.setLocalImageFPUrl(e.getLocalImageAssetId()),
        i.setMTXsku(e.sku),
        t && i.addOriginAccessLogo(),
        e.isMostPopular && i.addTag("popular"),
        e.isBestValue && i.addTag("value"),
        i.addTarget(this, this._eNimbleMTXItemEventHandler, UTNimbleMTXDetailsView.START_TRANSACTION),
        this.addSubview(i, this.__itemList),
        this.nimbleMTXItems.push(i)
    }
    ,
    UTStoreView.prototype.setPacks = function(e, t, i, o) {
        var n = this;
        this.clearPacks(),
        this.clearNimbleMTXItems(),
        this.setDescriptionString(""),
        this.toggleDescription(!1),
        e.forEach(function(e) {
            e instanceof UTStoreXrayItemPackEntity ? n.generateXrayPack(e, o) : e instanceof UTStoreItemPackEntity ? n.generatePack(e, t, i, !e.isMyPack && o) : e instanceof UTStoreBundleEntity && n.generateBundle(e, t, i)
        }),
        this.layoutSubviews()
    }
    ,
    UTStoreView.prototype.setupArticleView = function(e) {
        var t;
        if (e instanceof UTStoreXrayItemPackEntity)
            t = new UTStoreXrayPackDetailsView;
        else if (e instanceof UTStoreItemPackEntity)
            t = new UTStorePackDetailsView;
        else {
            if (!(e instanceof UTStoreBundleEntity))
                return null;
            t = new UTStoreBundleDetailsView
        }
        if (t instanceof UTStoreArticleDetailsView) {
            var i = services.Localization;
            t.init(),
            t.setArticleId(e.id),
            t.setName(i.localize(e.packName)),
            t.setDescription(i.localize(e.packDesc)),
            (e instanceof UTStoreItemPackEntity && !e.isMyPack || e instanceof UTStoreBundleEntity) && (0 < e.userAvailableQuantity && t.setPackQuantity(e.quantity),
            0 < e.globalAvailableQuantity && t.setGlobalPackQuantity(e.globalAvailableQuantity),
            0 < e.end && t.setTimeRemaining(e.end)),
            (e instanceof UTStoreItemPackEntity && e.isMyPack || e instanceof UTStoreBundleEntity) && t.setTradableStyle(e.tradable)
        }
        return t
    }
    ,
    UTStoreView.prototype.setupPack = function(e, t) {
        var i = this.setupArticleView(e);
        if (i instanceof UTStorePackDetailsView) {
            var o = e.guidAssetId && !JSUtils.isEmpty(e.guidAssetId) ? Number(e.guidAssetId) : Number(e.assetId);
            return DebugUtils.Assert(JSUtils.isNumber(o), "Foreground asset id is expecting a number but received" + typeof o),
            i.renderDefault(o, e.assetId),
            i.setItemCounts(e.itemQuantity, e.rareQuantity, e.contentType),
            t && (i.setupOddsButton(),
            i.addTarget(this, this._ePackEventHandler, UTStorePackDetailsView.Event.CHECK_ODDS)),
            i
        }
        return null
    }
    ,
    UTStoreView.prototype.generatePack = function(e, t, i, o) {
        var n = this
          , r = this.setupPack(e, o);
        if (r instanceof UTStorePackDetailsView) {
            var s = e.getPrice(GameCurrency.COINS)
              , a = e.getPrice(GameCurrency.POINTS);
            r.setMyPack(e.isMyPack),
            e.isMyPack || (i.coins && 0 < s && r.setupBuyCoinsButton(s),
            i.points && 0 < a && r.setupBuyPointsButton(a),
            t.forEach(function(e) {
                e.type === GameCurrency.COINS ? r.enableBuyCoinButton(0 < s && e.amount >= s) : e.type === GameCurrency.POINTS && r.enableBuyPointsButton(0 < a && e.amount >= a)
            })),
            r.addTarget(this, function() {
                return n._ePackEventHandler(r, UTStorePackDetailsView.Event.OPEN, {
                    articleId: e.id,
                    tradable: e.tradable
                })
            }, UTStorePackDetailsView.Event.OPEN),
            r.addTarget(this, this._ePackEventHandler, UTStorePackDetailsView.Event.BUY_COINS),
            r.addTarget(this, this._ePackEventHandler, UTStorePackDetailsView.Event.BUY_POINTS),
            this.addSubview(r, this.__itemList),
            this.storePacks.push(r)
        }
    }
    ,
    UTStoreView.prototype.generateXrayPack = function(e, t) {
        var i = this.setupPack(e, t);
        if (i instanceof UTStoreXrayPackDetailsView) {
            var o = e.getPreviewItem()
              , n = e.getPrice(GameCurrency.COINS)
              , r = e.getPrice(GameCurrency.POINTS);
            i.setCoinsAmount(n),
            i.setPointsAmount(r),
            e.isPreviewed() && o instanceof UTItemEntity && i.renderPreviewed(o, e.previewExpireTime, e.end),
            i.toggleReplacementWarning(e.wasRefreshed),
            i.addTarget(this, this._ePackEventHandler, UTStoreXrayPackDetailsView.Event.REVEAL),
            i.addTarget(this, this._ePackEventHandler, UTStoreXrayPackDetailsView.Event.REVEAL_EXPIRED),
            this.addSubview(i, this.__itemList),
            this.storePacks.push(i)
        }
    }
    ,
    UTStoreView.prototype.removeArticleView = function(t) {
        var e = this.storePacks.find(function(e) {
            return e.getArticleId() === t
        });
        e && (e.dealloc(),
        this.storePacks.splice(this.storePacks.indexOf(e), 1))
    }
    ,
    UTStoreView.prototype.handleArticleTimedUpdate = function(t) {
        if (this.getStoreCategory() !== PurchaseDisplayGroup.MYPACKS) {
            var e = this.storePacks.find(function(e) {
                return e.getArticleId() === t.id
            });
            e instanceof UTStoreXrayPackDetailsView && t instanceof UTStoreXrayItemPackEntity ? (e.setPreviewTimeRemainingLabel(t.previewExpireTime, t.end),
            e.setTimeRemaining(t.end)) : e instanceof UTStoreArticleDetailsView && e.setTimeRemaining(t.end)
        } else
            DebugUtils.Assert(!1, "UTStoreView.handleArticleTimedUpdate() fired on myPacks presented tab. Exiting our of timed event handler")
    }
    ,
    UTStoreView.prototype.updatePack = function(t) {
        var e = this.storePacks.find(function(e) {
            return e.getArticleId() === t.id
        });
        if (e instanceof UTStoreXrayPackDetailsView) {
            var i = t.getPreviewItem();
            if (t.isPreviewed() && i instanceof UTItemEntity)
                e.toggleReplacementWarning(t.wasRefreshed),
                e.renderPreviewed(i, t.previewExpireTime, t.end);
            else {
                var o = t.guidAssetId && !JSUtils.isEmpty(t.guidAssetId) ? Number(t.guidAssetId) : Number(t.assetId);
                DebugUtils.Assert(JSUtils.isNumber(o), "Foreground asset id is expecting a number but received" + typeof o),
                e.renderDefault(o, t.assetId)
            }
        } else
            DebugUtils.Assert(!1, "No UTStoreXrayPackDetailsView's found in collection")
    }
    ,
    UTStoreView.prototype.generateBundle = function(e, t, i) {
        var o = this.setupArticleView(e);
        if (o instanceof UTStoreBundleDetailsView) {
            var n = e.guidAssetId && !JSUtils.isEmpty(e.guidAssetId) ? e.guidAssetId : Number(e.assetId);
            e.isSingle ? o.renderDirectPurchase(e.getPreviewItem()) : o.renderBundle(n);
            var r = e.getPrice(GameCurrency.COINS)
              , s = e.getPrice(GameCurrency.POINTS);
            i.coins && 0 < r && o.setupBuyCoinsButton(r),
            i.points && 0 < s && o.setupBuyPointsButton(s),
            t.forEach(function(e) {
                e.type === GameCurrency.COINS ? o.enableBuyCoinButton(0 < r && e.amount >= r) : e.type === GameCurrency.POINTS && o.enableBuyPointsButton(0 < s && e.amount >= s)
            }),
            e.isSingle || (o.setupRevealButton(),
            o.addTarget(this, this._ePackEventHandler, UTStoreBundleDetailsView.Event.VIEW_REVEAL),
            o.setupStoryButton(),
            o.addTarget(this, this._ePackEventHandler, UTStoreBundleDetailsView.Event.VIEW_STORY)),
            o.addTarget(this, this._ePackEventHandler, UTStoreBundleDetailsView.Event.BUY_COINS),
            o.addTarget(this, this._ePackEventHandler, UTStoreBundleDetailsView.Event.BUY_POINTS),
            this.addSubview(o, this.__itemList),
            this.storePacks.push(o)
        }
    }
    ,
    UTStoreView.prototype._handleTabSelect = function(e, t, i) {
        this.isInteractionEnabled() && (this.__itemList.scrollTop = 0,
        this._triggerActions(UTStoreView.Event.TAB_SELECTED, i))
    }
    ,
    UTStoreView.prototype._ePackEventHandler = function(e, t, i) {
        var o = null == i ? void 0 : i.articleId;
        this.getStoreCategory() === PurchaseDisplayGroup.PREVIEWED && t === UTStoreXrayPackDetailsView.Event.REVEAL_EXPIRED && o ? this.removeArticleView(o) : this.isInteractionEnabled() && this._triggerActions(t, i)
    }
    ,
    UTStoreView.prototype._eNimbleMTXItemEventHandler = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(t, i)
    }
    ,
    UTStoreView.prototype._eUnassignedTileSelected = function(e, t, i) {
        this.isInteractionEnabled() && this._triggerActions(UTStoreView.Event.UNASSIGNED_SELECTED)
    }
    ,
    UTStoreView.Event = {
        TAB_SELECTED: "UTStoreView.Event.TAB_SELECTED",
        UNASSIGNED_SELECTED: "UTStoreView.Event.UNASSIGNED_SELECTED"
    },
    UTStoreView
}(UTTargetActionView);
UTStoreView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-hub-view"),
        this._navigation = new EAFilterBarView,
        e.appendChild(this._navigation.getRootElement()),
        this.__description = document.createElement("div"),
        this.__description.classList.add("ut-store-hub-view--description"),
        e.appendChild(this.__description),
        this.__itemList = document.createElement("div"),
        this.__itemList.classList.add("ut-store-hub-view--content"),
        this._unassignedTile = new UTUnassignedTileView,
        this.__itemList.appendChild(this._unassignedTile.getRootElement()),
        e.appendChild(this.__itemList),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStoreView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._navigation.destroy(),
    this.__description = null,
    this.__itemList = null,
    this._unassignedTile.destroy()
}
,
UTStoreView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreRevealModalListView = function(i) {
    function UTStoreRevealModalListView(e) {
        var t = i.call(this) || this;
        return t.loc = e.localization,
        t.listRows = [],
        t.emptyMessage = null,
        t._coinPurchaseBtn = null,
        t._pointsPurchaseBtn = null,
        t
    }
    return __extends(UTStoreRevealModalListView, i),
    UTStoreRevealModalListView.prototype.init = function() {
        i.prototype.init.call(this),
        this._exitBtn.init(),
        this._exitBtn.addTarget(this, this.onButtonTapped, EventType.TAP),
        this._exitBtn.setInteractionState(!0)
    }
    ,
    UTStoreRevealModalListView.prototype.dealloc = function() {
        this.removeEmptyMessage(),
        this.clearList(),
        this.removeDuplicateButton(),
        this.removeFooter(),
        i.prototype.dealloc.call(this)
    }
    ,
    UTStoreRevealModalListView.prototype.toggleDuplicateWarning = function(e) {
        this.__duplicateCountContainer.style.display = 1 <= e ? "block" : "";
        var t = services.Localization
          , i = 1 === e ? "store.x.p.duplicateCountSingle" : "store.x.p.duplicateCountPlural";
        this.__duplicateCount.textContent = 0 < e ? t.localize(i, [e.toString()]) : ""
    }
    ,
    UTStoreRevealModalListView.prototype.toggleReplacementWarning = function(e) {
        var t = services.Localization;
        this.__replacementWarning.textContent = e ? t.localize("store.x.p.m") : ""
    }
    ,
    UTStoreRevealModalListView.prototype.toggleFooterDisplay = function(e) {
        this.__footerElement.style.display = e ? "" : "none"
    }
    ,
    UTStoreRevealModalListView.prototype.clearList = function() {
        this.listRows.forEach(function(e) {
            return e.dealloc()
        }),
        this.listRows = []
    }
    ,
    UTStoreRevealModalListView.prototype.showEmptyMessage = function() {
        this.emptyHeaderMessage = this.loc.localize("store.x.l.e.t"),
        this.emptyBodyMessage = this.loc.localize("store.x.l.e.m"),
        this.emptyMessage || (this.emptyMessage = new UTEmptySectionMessageView),
        this.getRootElement().appendChild(this.emptyMessage.getRootElement()),
        this.emptyMessage.render(this.emptyHeaderMessage, this.emptyBodyMessage)
    }
    ,
    UTStoreRevealModalListView.prototype.removeEmptyMessage = function() {
        this.emptyMessage && (this.emptyMessage.dealloc(),
        this.emptyMessage = null)
    }
    ,
    UTStoreRevealModalListView.prototype.setHeader = function(e) {
        this.__title.textContent = e
    }
    ,
    UTStoreRevealModalListView.prototype.removeDuplicateButton = function() {
        this._duplicateBtn && (this._duplicateBtn.removeTarget(this, this.onButtonTapped, EventType.TAP),
        this._duplicateBtn.dealloc(),
        this._duplicateBtn = null)
    }
    ,
    UTStoreRevealModalListView.prototype.toggleDuplicateButtonInteractionState = function(e) {
        var t;
        null === (t = this._duplicateBtn) || void 0 === t || t.setInteractionState(e)
    }
    ,
    UTStoreRevealModalListView.prototype.setupFooter = function(e, t, i, o, n) {
        var r = this;
        void 0 === o && (o = 0),
        void 0 === n && (n = 0),
        this.removeFooter(),
        e && (this.removeDuplicateButton(),
        this._duplicateBtn = new UTStandardButtonControl,
        this._duplicateBtn.init(),
        this._duplicateBtn.setText(this.loc.localize("store.x.p.duplicateCheck")),
        this._duplicateBtn.addClass("mini"),
        this.__actionContainer.appendChild(this._duplicateBtn.getRootElement()),
        this._duplicateBtn.addTarget(this, this.onButtonTapped, EventType.TAP),
        this.setInteractionState(!0)),
        i.coins && 0 < o && (this._coinPurchaseBtn = new UTCurrencyButtonControl,
        this._coinPurchaseBtn.init(),
        this._coinPurchaseBtn.setText(this.loc.localizeNumber(o)),
        this._coinPurchaseBtn.setCurrencyType(GameCurrency.COINS),
        this._coinPurchaseBtn.setSubText(this.loc.localize("currency.coins")),
        this._coinPurchaseBtn.addClass("call-to-action"),
        this.__actionContainer.appendChild(this._coinPurchaseBtn.getRootElement()),
        this._coinPurchaseBtn.addTarget(this, this.onButtonTapped, EventType.TAP)),
        i.points && 0 < n && (this._pointsPurchaseBtn = new UTCurrencyButtonControl,
        this._pointsPurchaseBtn.init(),
        this._pointsPurchaseBtn.setText(this.loc.localizeNumber(n)),
        this._pointsPurchaseBtn.setCurrencyType(GameCurrency.POINTS),
        this._pointsPurchaseBtn.setSubText(this.loc.localize("currency.points")),
        this._pointsPurchaseBtn.addClass("call-to-action"),
        this.__actionContainer.appendChild(this._pointsPurchaseBtn.getRootElement()),
        this._pointsPurchaseBtn.addTarget(this, this.onButtonTapped, EventType.TAP)),
        t.forEach(function(e) {
            r._coinPurchaseBtn && e.type === GameCurrency.COINS ? (r._coinPurchaseBtn.setInteractionState(0 < o && e.amount >= o),
            r.__coinsAvailable.textContent = r.loc.localizeNumber(e.amount)) : r._pointsPurchaseBtn && e.type === GameCurrency.POINTS && (r._pointsPurchaseBtn.setInteractionState(0 < n && e.amount >= n),
            r.__pointsAvailable.textContent = r.loc.localizeNumber(e.amount))
        }),
        this.setInteractionState(!0)
    }
    ,
    UTStoreRevealModalListView.prototype.removeFooter = function() {
        this.removeDuplicateButton(),
        this._coinPurchaseBtn && (this._coinPurchaseBtn.removeTarget(this, this.onButtonTapped, EventType.TAP),
        this._coinPurchaseBtn.dealloc(),
        this._coinPurchaseBtn = null),
        this._pointsPurchaseBtn && (this._pointsPurchaseBtn.removeTarget(this, this.onButtonTapped, EventType.TAP),
        this._pointsPurchaseBtn.dealloc(),
        this._pointsPurchaseBtn = null)
    }
    ,
    UTStoreRevealModalListView.prototype.addItems = function(e, t, i, o) {
        var n = this;
        return i = i || ListItemPriority.DEFAULT,
        e.forEach(function(e) {
            n.listRows.push(n.generateListRow(e, t.includes(e.definitionId), i, o))
        }),
        this.listRows
    }
    ,
    UTStoreRevealModalListView.prototype.render = function() {
        var t = this;
        0 === this.listRows.length ? (this.showEmptyMessage(),
        this.removeFooter()) : (this.removeEmptyMessage(),
        this.listRows.forEach(function(e) {
            e.render(),
            t.__list.appendChild(e.getRootElement())
        }))
    }
    ,
    UTStoreRevealModalListView.prototype.generateListRow = function(e, t, i, o) {
        var n = new UTItemTableCellView;
        return n.setData(e, void 0, i, o),
        t && n.addClass(UTStoreRevealModalListView.ListStyle.DUPLICATE),
        n
    }
    ,
    UTStoreRevealModalListView.prototype.onButtonTapped = function(e, t, i) {
        this.isInteractionEnabled() && (e === this._exitBtn ? this._triggerActions(UTStoreRevealModalListView.Event.EXIT, i) : e === this._duplicateBtn ? this._triggerActions(UTStoreRevealModalListView.Event.DUPLICATE_CHECK, i) : e === this._coinPurchaseBtn && this._triggerActions(UTStoreRevealModalListView.Event.COIN_PURCHASE, i),
        e === this._pointsPurchaseBtn && this._triggerActions(UTStoreRevealModalListView.Event.POINTS_PURCHASE, i))
    }
    ,
    UTStoreRevealModalListView.ListStyle = Object.freeze({
        DUPLICATE: "ut-store-reveal-modal-list-view--duplicate"
    }),
    UTStoreRevealModalListView.Event = Object.freeze({
        EXIT: "UTStoreRevealModalListView.Event.EXIT",
        COIN_PURCHASE: "UTStoreRevealModalListView.Event.COIN_PURCHASE",
        DUPLICATE_CHECK: "UTStoreRevealModalListView.Event.DUPLICATE_CHECK",
        POINTS_PURCHASE: "UTStoreRevealModalListView.Event.POINTS_PURCHASE"
    }),
    UTStoreRevealModalListView
}(UTTargetActionView);
UTStoreRevealModalListView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-reveal-modal-list-view");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        this._exitBtn = new UTImageButtonControl,
        this._exitBtn.getRootElement().classList.add("exit-btn"),
        t.appendChild(this._exitBtn.getRootElement()),
        e.appendChild(t),
        this.__list = document.createElement("ul"),
        this.__list.classList.add("itemList"),
        e.appendChild(this.__list),
        this.__footerElement = document.createElement("footer"),
        this.__replacementWarning = document.createElement("div"),
        this.__replacementWarning.classList.add("ut-store-reveal-modal-list-view--warning"),
        this.__footerElement.appendChild(this.__replacementWarning);
        var i = document.createElement("div");
        i.classList.add("ut-store-reveal-modal-list-view--footer-container"),
        this.__wallet = document.createElement("div"),
        this.__wallet.classList.add("ut-store-reveal-modal-list-view--wallet"),
        this.__coinsAvailable = document.createElement("span"),
        this.__coinsAvailable.classList.add("ut-store-reveal-modal-list-view--coins"),
        this.__wallet.appendChild(this.__coinsAvailable),
        this.__pointsAvailable = document.createElement("span"),
        this.__pointsAvailable.classList.add("ut-store-reveal-modal-list-view--points"),
        this.__wallet.appendChild(this.__pointsAvailable),
        i.appendChild(this.__wallet),
        this.__duplicateCountContainer = document.createElement("div"),
        this.__duplicateCountContainer.classList.add("ut-store-reveal-modal-list-view--duplicate-count");
        var o = document.createElement("span");
        o.classList.add("ut-store-reveal-modal-list-view--duplicate-count-icon"),
        this.__duplicateCountContainer.appendChild(o),
        this.__duplicateCount = document.createElement("span"),
        this.__duplicateCount.classList.add("ut-store-reveal-modal-list-view--duplicate-count-content"),
        this.__duplicateCountContainer.appendChild(this.__duplicateCount),
        i.appendChild(this.__duplicateCountContainer),
        this.__actionContainer = document.createElement("div"),
        this.__actionContainer.classList.add("ut-store-reveal-modal-list-view--action-container"),
        i.appendChild(this.__actionContainer),
        this.__footerElement.appendChild(i),
        e.appendChild(this.__footerElement),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStoreRevealModalListView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._exitBtn.destroy(),
    this.__list = null,
    this.__footerElement = null,
    this.__replacementWarning = null,
    this.__wallet = null,
    this.__coinsAvailable = null,
    this.__pointsAvailable = null,
    this.__duplicateCountContainer = null,
    this.__duplicateCount = null,
    this.__actionContainer = null
}
,
UTStoreRevealModalListView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStorePackRevealModalListViewController = function(l) {
    function UTStorePackRevealModalListViewController(e, t, i) {
        var o = l.call(this) || this;
        return o.isCachePreview = e,
        o.pack = t,
        o.storeVM = i,
        o.viewmodel = new UTItemListViewModel([]),
        o
    }
    return __extends(UTStorePackRevealModalListViewController, l),
    UTStorePackRevealModalListViewController.prototype.dealloc = function() {
        this.viewmodel = null,
        l.prototype.dealloc.call(this)
    }
    ,
    UTStorePackRevealModalListViewController.prototype._getTelemetryId = function() {
        return "Store Pack Reveal"
    }
    ,
    UTStorePackRevealModalListViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreRevealModalListView({
            localization: services.Localization
        })
    }
    ,
    UTStorePackRevealModalListViewController.prototype.viewDidAppear = function() {
        var e, t, i, o;
        l.prototype.viewDidAppear.call(this),
        null === (e = this.viewmodel) || void 0 === e || e.addArray(this.pack.itemCollection);
        var n = services.Localization
          , r = services.Store.isStoreDuplicateChecksEnabled()
          , s = this.getView()
          , a = services.User.getUser();
        s.setHeader(n.localize("store.x.pp")),
        this.pack.isDuplicateChecked || s.addTarget(this, this.eDuplicateCheck, UTStoreRevealModalListView.Event.DUPLICATE_CHECK),
        s.addItems(null !== (i = null === (t = this.viewmodel) || void 0 === t ? void 0 : t.getItemList()) && void 0 !== i ? i : [], this.pack.duplicateIds),
        s.setupFooter(r && !this.pack.isDuplicateChecked, null !== (o = null == a ? void 0 : a.getCurrencies()) && void 0 !== o ? o : [], {
            coins: services.Store.isCoinsEnabled(),
            points: services.Store.hasPointsSpendingAccess()
        }, this.pack.getPrice(GameCurrency.COINS), this.pack.getPrice(GameCurrency.POINTS)),
        r && 0 < this.pack.duplicateIds.length && s.toggleDuplicateWarning(this.pack.duplicateIds.length),
        s.toggleReplacementWarning(this.pack.wasRefreshed),
        s.addTarget(this, this.eExitTapped, UTStoreRevealModalListView.Event.EXIT),
        s.addTarget(this, this.eBuyWithCoins, UTStoreRevealModalListView.Event.COIN_PURCHASE),
        s.addTarget(this, this.eBuyWithPoints, UTStoreRevealModalListView.Event.POINTS_PURCHASE),
        s.render(),
        this.triggerTelemetryPage()
    }
    ,
    UTStorePackRevealModalListViewController.prototype.viewWillDisappear = function() {
        var e;
        l.prototype.viewWillDisappear.call(this),
        null === (e = this.viewmodel) || void 0 === e || e.resetCollection([]);
        var t = this.getView();
        t.removeTarget(this, this.eDuplicateCheck, UTStoreRevealModalListView.Event.DUPLICATE_CHECK),
        t.removeTarget(this, this.eExitTapped, UTStoreRevealModalListView.Event.EXIT),
        t.removeTarget(this, this.eBuyWithCoins, UTStoreRevealModalListView.Event.COIN_PURCHASE),
        t.removeTarget(this, this.eBuyWithPoints, UTStoreRevealModalListView.Event.POINTS_PURCHASE)
    }
    ,
    UTStorePackRevealModalListViewController.prototype.eDuplicateCheck = function(e, t, i) {
        var n = this
          , r = this.getView();
        r.toggleDuplicateButtonInteractionState(!1),
        r.removeTarget(this, this.eDuplicateCheck, UTStoreRevealModalListView.Event.DUPLICATE_CHECK);
        this.storeVM.requestArticlePreviewDuplicates(this.pack).observe(this, function(e, t) {
            var i, o;
            e.unobserve(n),
            t.success && JSUtils.isObject(t.response) ? (r.clearList(),
            r.addItems(null !== (o = null === (i = n.viewmodel) || void 0 === i ? void 0 : i.getItemList()) && void 0 !== o ? o : [], n.pack.duplicateIds),
            r.toggleDuplicateWarning(n.pack.duplicateIds.length),
            r.render()) : t.status === UtasErrorCode.SERVICE_IS_DISABLED ? (services.Store.setStoreDuplicateChecksEnabled(!1),
            services.Notification.queue([services.Localization.localize("notification.store.duplicateCheckServiceDisabled"), UINotificationType.NEGATIVE])) : services.Notification.queue([services.Localization.localize("notification.store.duplicateCheckFail"), UINotificationType.NEGATIVE])
        })
    }
    ,
    UTStorePackRevealModalListViewController.prototype.eExitTapped = function(e, t, i) {
        this.onExit.notify(t, this)
    }
    ,
    UTStorePackRevealModalListViewController.prototype.eBuyWithCoins = function(e, t, i) {
        this.onExit.notify(t, this)
    }
    ,
    UTStorePackRevealModalListViewController.prototype.eBuyWithPoints = function(e, t, i) {
        this.onExit.notify(t, this)
    }
    ,
    UTStorePackRevealModalListViewController.prototype.handleKeyUpEvent = function(e) {
        e.key !== KeyboardKey.ESCAPE && e.key !== KeyboardKey.MS_ESCAPE && e.key !== KeyboardKey.ENTER || this.onExit.notify(enums.UIDialogOptions.OK)
    }
    ,
    UTStorePackRevealModalListViewController.prototype.triggerTelemetryPage = function() {
        function toFormattedDate(e) {
            return e.toISOString()
        }
        if (this.isCachePreview) {
            var t = {
                items: {
                    consumable: [],
                    durable: []
                },
                preview_generated: toFormattedDate(new Date(this.pack.previewCreateTime * MS_PER_SECOND)),
                refresh_time: toFormattedDate(new Date(this.pack.previewExpireTime * MS_PER_SECOND))
            };
            this.pack.itemCollection.forEach(function(e) {
                e.isConsumable() ? t.items.consumable.push({
                    id: e.definitionId,
                    quantity: e.stackCount
                }) : t.items.durable.push({
                    id: e.definitionId,
                    quantity: e.stackCount
                })
            }, this);
            var e = services.Localization;
            services.PIN.sendData(PINEventType.STORE_ARTICLE_PREVIEW, {
                item_attr: t,
                item_id: this.pack.id.toString(),
                item_name: e.localize(this.pack.packName),
                item_type: "Pack",
                source: "UT",
                type: "view"
            })
        }
        var i = this._getTelemetryId();
        TelemetryManager.trackPage(TelemetryManager.Sections.STORE, i)
    }
    ,
    UTStorePackRevealModalListViewController
}(BasePopupViewController)
  , UTStoreViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(o) {
    function UTStoreViewController() {
        var e = o.call(this) || this;
        return e.viewmodel = null,
        e.startingCategory = PurchaseDisplayGroup.MYPACKS,
        e.packLoadObservable = null,
        e.isOpeningPack = !1,
        e.isLoadingPacks = !1,
        e.intervalController = new EAIntervalController(1e3,e.handleEventTimer.bind(e)),
        e
    }
    return __extends(UTStoreViewController, o),
    UTStoreViewController.prototype.initWithStartingCategory = function(e) {
        this.initialized || (this.startingCategory = e,
        this.init())
    }
    ,
    UTStoreViewController.prototype.dealloc = function() {
        o.prototype.dealloc.call(this),
        this.viewmodel = null,
        this.packLoadObservable && (this.packLoadObservable.unobserve(this),
        this.packLoadObservable = null,
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING))
    }
    ,
    UTStoreViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreView
    }
    ,
    UTStoreViewController.prototype._getTelemetryId = function() {
        return "Hub - Store"
    }
    ,
    UTStoreViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.store")
    }
    ,
    UTStoreViewController.prototype.viewDidAppear = function() {
        var e;
        if (o.prototype.viewDidAppear.call(this),
        this.intervalController.start(),
        null === (e = this.getNavigationController()) || void 0 === e || e.setNavigationVisibility(!0, !0),
        services.Store.isStoreEnabled())
            this.getStorePacks(!1),
            this.getUnassignedItems();
        else {
            var t = this.getNavigationController();
            t && t.popViewController()
        }
        getDefaultDispatcher().addObserver(AppNotification.APP_RESUME, this, this.nAppResumed),
        getDefaultDispatcher().addObserver(AppNotification.APP_PAUSE, this, this._nAppPaused);
        var i = this.getView();
        i.addTarget(this, this.eTabSelected, UTStoreView.Event.TAB_SELECTED),
        i.addTarget(this, this.eUnassignedSelected, UTStoreView.Event.UNASSIGNED_SELECTED),
        this.triggerTelemetryPage()
    }
    ,
    UTStoreViewController.prototype.viewWillDisappear = function() {
        o.prototype.viewWillDisappear.call(this),
        this.intervalController.stop(),
        getDefaultDispatcher().removeObserver(AppNotification.APP_RESUME, this),
        getDefaultDispatcher().removeObserver(AppNotification.APP_PAUSE, this);
        var e = this.getView();
        e.removeTarget(this, this.eTabSelected, UTStoreView.Event.TAB_SELECTED),
        e.removeTarget(this, this.eUnassignedSelected, UTStoreView.Event.UNASSIGNED_SELECTED)
    }
    ,
    UTStoreViewController.prototype.willDismiss = function(e) {
        o.prototype.willDismiss.call(this, e),
        e && e instanceof UTPackOddsViewController && e.dealloc()
    }
    ,
    UTStoreViewController.prototype.setCategory = function(e) {
        var t, i, o, n, r, s, a;
        if (this.packLoadObservable)
            this.startingCategory = e;
        else {
            var l = this.getView()
              , c = services.User.getUser();
            l.setStoreCategory(e),
            e === PurchaseDisplayGroup.FIFAPOINTS ? l.setNimbleMTXItems(null !== (i = null === (t = this.viewmodel) || void 0 === t ? void 0 : t.getNimbleMTXItems()) && void 0 !== i ? i : [], null !== (n = null === (o = null == c ? void 0 : c.getSelectedPersona()) || void 0 === o ? void 0 : o.hasOriginAccess) && void 0 !== n && n) : l.setPacks(null !== (s = null === (r = this.viewmodel) || void 0 === r ? void 0 : r.getPacks(e)) && void 0 !== s ? s : [], null !== (a = null == c ? void 0 : c.getCurrencies()) && void 0 !== a ? a : [], {
                coins: services.Store.isCoinsEnabled(),
                points: services.Store.hasPointsSpendingAccess()
            }, services.Store.isPackOddsEnabled() && e !== PurchaseDisplayGroup.VANITYBUNDLE)
        }
    }
    ,
    UTStoreViewController.prototype.createCustomErrorPopup = function(e, t) {
        var i = services.Localization
          , o = new EADialogViewController({
            dialogOptions: [{
                labelEnum: enums.UIDialogOptions.OK
            }],
            message: i.localize(t),
            title: i.localize(e)
        });
        o.init(),
        o.viewWillAppear(),
        o.modalDisplayDimensions.width = "380px",
        gPopupClickShield.setActivePopup(o)
    }
    ,
    UTStoreViewController.prototype.getStorePacks = function(e) {
        var t, i, s = this;
        void 0 === e && (e = !0),
        e && repositories.Store.setDirty();
        var a = null !== (i = null === (t = this.viewmodel) || void 0 === t ? void 0 : t.categories) && void 0 !== i ? i : [];
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        this.packLoadObservable = services.Store.getPacks(PurchasePackType.ALL, !0, !0),
        this.packLoadObservable.observe(this, function(e, t) {
            if (e.unobserve(s),
            s.packLoadObservable = null,
            t.success && JSUtils.isObject(t.response)) {
                var i = t.response.packs;
                if (0 === i.length)
                    (r = s.getNavigationController()) && r.popViewController();
                s.viewmodel = new UTStoreViewModel(i,services.Store.isMobileMTXEnabled() ? services.MTX.getNimbleMTXItems() : []);
                var o = services.Store.isCoinsEnabled()
                  , n = services.Store.hasPointsSpendingAccess();
                o || n ? o ? n || services.Notification.queue([services.Localization.localize("notification.store.fifapointsDisabled"), UINotificationType.NEGATIVE]) : services.Notification.queue([services.Localization.localize("notification.store.coinsDisabled"), UINotificationType.NEGATIVE]) : services.Notification.queue([services.Localization.localize("notification.store.allCurrenciesDisabled"), UINotificationType.NEGATIVE]),
                t.status !== HttpStatusCode.NOT_MODIFIED || 0 === a.length ? s.getStoreCategories() : (s.viewmodel.setStoreCategories(a),
                s.setCategory(s.startingCategory))
            } else {
                var r;
                (r = s.getNavigationController()) && r.popViewController()
            }
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
        })
    }
    ,
    UTStoreViewController.prototype.getStoreCategories = function() {
        var e, t = this;
        null === (e = this.viewmodel) || void 0 === e || e.requestCategoryData().observe(this, function() {
            t.setupCategories()
        })
    }
    ,
    UTStoreViewController.prototype.updateViewCategories = function() {}
    ,
    UTStoreViewController.prototype.setupCategories = function() {
        this.setCategory(this.startingCategory)
    }
    ,
    UTStoreViewController.prototype.getUnassignedItems = function() {
        var o = this;
        services.Item.requestUnassignedItems().observe(this, function(e, t) {
            var i;
            e.unobserve(o),
            JSUtils.isObject(t.response) && o.getView().setNumUnassignedItems(null !== (i = t.response.items.length) && void 0 !== i ? i : 0)
        })
    }
    ,
    UTStoreViewController.prototype.gotoUnassigned = function() {
        function wzc(e, t) {
            var i;
            e.unobserve(r);
            var o = r.getNavigationController();
            if (o) {
                var n = isPhone() ? new UTUnassignedItemsViewController : new UTUnassignedItemsSplitViewController;
                t.success && JSUtils.isObject(t.response) ? n.initWithItems(null !== (i = t.response.items) && void 0 !== i ? i : []) : NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : n.init(),
                a && n.setStadiumViewModel(new UTMyStadiumViewModel(a)),
                o.pushViewController(n)
            }
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
            s.setInteractionState(!0)
        }
        var r = this
          , s = this.getView()
          , a = null;
        s.setInteractionState(!1),
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.MyStadium.getStadium().observe(this, function(e, t) {
            var i;
            e.unobserve(r),
            t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.stadium) && (a = t.data.stadium),
            services.Item.requestUnassignedItems().observe(r, wzc)
        })
    }
    ,
    UTStoreViewController.prototype.eTabSelected = function(e, t, i) {
        var o, n, r, s, a = this;
        if (!this.isLoadingPacks) {
            var l = this.getView()
              , c = services.User.getUser()
              , d = services.Store.isCoinsEnabled()
              , u = services.Store.hasPointsSpendingAccess()
              , h = services.Store.isPackOddsEnabled() && i.id !== PurchaseDisplayGroup.VANITYBUNDLE;
            this.isLoadingPacks = !0,
            l.setInteractionState(!1),
            l.setPacks(null !== (n = null === (o = this.viewmodel) || void 0 === o ? void 0 : o.getPacks(i.id)) && void 0 !== n ? n : [], null !== (r = null == c ? void 0 : c.getCurrencies()) && void 0 !== r ? r : [], {
                coins: d,
                points: u
            }, h);
            var p = null === (s = this.viewmodel) || void 0 === s ? void 0 : s.categories.find(function(e) {
                return e.categoryId === i.id
            })
              , _ = null;
            i.id === PurchaseDisplayGroup.MYPACKS ? _ = this._getTelemetryId() + ": " + i.id.toString() : p && (_ = this._getTelemetryId() + ": " + p.localizedName),
            _ && (TelemetryManager.trackEvent(TelemetryManager.Sections.STORE, TelemetryManager.Categories.FILTER, _.toUpperCase()),
            services.PIN.sendData(PINEventType.PAGE_VIEW, {
                type: PIN_PAGEVIEW_EVT_TYPE,
                pgid: _.toUpperCase()
            })),
            setTimeout(function() {
                a.viewmodel && (a.isLoadingPacks = !1,
                l.setInteractionState(!0))
            }, 0)
        }
    }
    ,
    UTStoreViewController.prototype.eRevealPack = function(e, t, i) {
        var o, l = this;
        if (!this.isPreviewingPack) {
            this.isPreviewingPack = !0;
            var n = this.viewmodel
              , c = this.getView()
              , d = null === (o = this.viewmodel) || void 0 === o ? void 0 : o.getPackById(i.articleId, !1);
            if (!(d instanceof UTStoreXrayItemPackEntity))
                return DebugUtils.Assert(!1, "Attempt to preview a non previewable pack"),
                void (this.isPreviewingPack = !1);
            var u = !d.isPreviewed()
              , r = d.isCollectionCached();
            c.setInteractionState(!1);
            function eAc(e, t, i) {
                if (e.unobserve(l),
                t === UTStoreRevealModalListView.Event.COIN_PURCHASE || t === UTStoreRevealModalListView.Event.POINTS_PURCHASE)
                    return l.isPreviewingPack = !1,
                    void l.eOpenPack(i, t, {
                        articleId: d.id
                    });
                c.updatePack(d),
                l.isPreviewingPack = !1,
                u && l.updateViewCategories(),
                c.setInteractionState(!0)
            }
            function fAc() {
                if (n) {
                    var e = new UTStorePackRevealModalListViewController(r,d,n);
                    e.init(),
                    e.onExit.observe(l, eAc),
                    gPopupClickShield.setActivePopup(e)
                } else
                    DebugUtils.Assert(!1, "viewmodel is not undefined and required to progress")
            }
            d ? d.getPreviewCollection().observe(this, function(e, t) {
                if (e.unobserve(l),
                t.success && JSUtils.isObject(t.response)) {
                    d.wasRefreshed && l.createCustomErrorPopup("fut.p.c.changed.title", "fut.p.x.p.c.changed.d");
                    var i = d.getPreviewItem();
                    if (d && i)
                        if (u) {
                            var o = new UTPackAnimationViewController;
                            o.initWithPackData(i, d.assetId),
                            o.setAnimationCallback(function() {
                                l.dismissViewController(!1, function() {
                                    o.dealloc()
                                }),
                                fAc()
                            }),
                            o.modalDisplayStyle = "fullscreen",
                            l.presentViewController(o, !0)
                        } else
                            fAc();
                    else
                        DebugUtils.Assert(!1, "Unable to determine the itemToShow")
                } else {
                    var n = services.Localization
                      , r = !0;
                    l.isPreviewingPack = !1,
                    c.setInteractionState(!0);
                    var s = t.error ? t.error.code : t.status;
                    if (s === HttpStatusCode.NOT_FOUND)
                        l.createCustomErrorPopup("store.x.e.t.p.e", "store.x.e.d.p.e");
                    else if (s === HttpStatusCode.FORBIDDEN)
                        r = !1,
                        l.createCustomErrorPopup("store.x.e.t.p.l", "fut.p.x.limit.reached");
                    else if (s === UtasErrorCode.SERVICE_IS_DISABLED)
                        services.Configuration.setFeatureEnabled(UTServerSettingsRepository.KEY.STORE_PREVIEWS_ENABLED, !1),
                        services.Notification.queue([n.localize("fut.pu.fail.p.x.disabled"), UINotificationType.NEGATIVE]);
                    else if (s === HttpStatusCode.RATE_LIMIT)
                        l.createCustomErrorPopup("store.popup.error.RateLimitHeader", "store.popup.error.RateLimitBody");
                    else if (NetworkErrorManager.checkCriticalStatus(s))
                        NetworkErrorManager.handleStatus(s);
                    else {
                        services.Notification.queue([n.localize("notification.store.failedRequest"), UINotificationType.NEGATIVE]);
                        var a = l.getNavigationController();
                        a && a.popViewController()
                    }
                    r && l.getStorePacks()
                }
            }) : DebugUtils.Assert(!1, "Unable to determine the pack from viewmodel")
        }
    }
    ,
    UTStoreViewController.prototype.eOpenPack = function(u, e, t) {
        var i, h = this;
        if (!this.isOpeningPack) {
            var p = this.getView()
              , _ = null === (i = this.viewmodel) || void 0 === i ? void 0 : i.getPackById(t.articleId, e === UTStorePackDetailsView.Event.OPEN, JSUtils.isBoolean(t.tradable) ? t.tradable : void 0)
              , T = e === UTStorePackDetailsView.Event.BUY_POINTS || e === UTStoreBundleDetailsView.Event.BUY_POINTS || e === UTStoreRevealModalListView.Event.POINTS_PURCHASE ? GameCurrency.POINTS : GameCurrency.COINS;
            this.isOpeningPack = !0,
            p.setInteractionState(!1);
            function BAc() {
                utils.PopupManager.showConfirmation(utils.PopupManager.Confirmations.UNASSIGNED_ENTITLEMENT, [], h.gotoUnassigned.bind(h), function() {
                    p.setInteractionState(!0)
                })
            }
            function CAc(e, t) {
                var i, o, n;
                if (e.unobserve(h),
                h.isOpeningPack = !1,
                t.success && JSUtils.isObject(t.response))
                    if (repositories.Item.setDirty(ItemPile.PURCHASED),
                    services.User.requestCurrencies(),
                    _ instanceof UTStoreItemPackEntity && (null == _ ? void 0 : _.isMyPack) && (null === (i = services.User.getUser()) || void 0 === i || i.decrementNumUnopenedPacks()),
                    u instanceof UTStorePackRevealModalListViewController)
                        repositories.Store.setDirty(),
                        h.gotoUnassigned();
                    else {
                        var s = null
                          , r = t.response.items.filter(function(e) {
                            return e.isPlayer()
                        });
                        if (0 < r.length ? r.forEach(function(e) {
                            if (s) {
                                var t = e.rareflag > s.rareflag
                                  , i = e.rareflag === s.rareflag
                                  , o = e.getTier() > s.getTier()
                                  , n = e.getTier() === s.getTier()
                                  , r = e.rating > s.rating;
                                (e.isSpecial() && (t || i && r) || !(null == s ? void 0 : s.isSpecial()) && (o || n && t || n && i && r)) && (s = e)
                            } else
                                s = e
                        }) : t.response.items.forEach(function(e) {
                            (!s || s.discardValue < e.discardValue) && (s = e)
                        }),
                        s && _) {
                            var a = new UTPackAnimationViewController;
                            a.initWithPackData(s, _.assetId),
                            a.setAnimationCallback(function() {
                                this.dismissViewController(!1, function() {
                                    a.dealloc()
                                }),
                                repositories.Store.setDirty(),
                                this.gotoUnassigned()
                            }
                            .bind(h)),
                            a.modalDisplayStyle = "fullscreen",
                            h.presentViewController(a, !0)
                        } else
                            DebugUtils.Assert(!1, "Unable to determine the itemToShow")
                    }
                else {
                    p.setInteractionState(!0);
                    var l = services.Localization
                      , c = t.error ? t.error.code : t.status;
                    if (c === HttpStatusCode.NOT_FOUND)
                        h.createCustomErrorPopup("store.x.e.t.p.e", "store.x.e.d.p.e");
                    else if (c === HttpStatusCode.FORBIDDEN)
                        h.createCustomErrorPopup("fut.p.c.not_expired.title", "fut.x.not_expired");
                    else if (c === UtasErrorCode.STATE_INVALID)
                        h.createCustomErrorPopup("fut.p.c.changed.title", "fut.p.x.p.c.changed");
                    else if (c === UtasErrorCode.ITEM_EXISTS)
                        repositories.Item.setDirty(ItemPile.PURCHASED),
                        BAc.call(h);
                    else if (c === UtasErrorCode.SERVICE_IS_DISABLED) {
                        switch (T) {
                        case GameCurrency.COINS:
                            services.Store.setCoinsEnabled(!1);
                            break;
                        case GameCurrency.POINTS:
                            (null === (n = null === (o = services.User.getUser()) || void 0 === o ? void 0 : o.getSelectedPersona()) || void 0 === n ? void 0 : n.isPC) ? services.MTX.setMTXEnabled(!1) : services.Store.setPointsEnabled(!1);
                            break;
                        default:
                            services.Store.setStoreEnabled(!1)
                        }
                        if (!services.Store.isCoinsEnabled() && !services.Store.hasPointsSpendingAccess() || !services.Store.isStoreEnabled())
                            (d = h.getNavigationController()) && d.popViewController()
                    } else if (c === HttpStatusCode.RATE_LIMIT)
                        h.createCustomErrorPopup("store.popup.error.RateLimitHeader", "store.popup.error.RateLimitBody");
                    else if (NetworkErrorManager.checkCriticalStatus(c))
                        NetworkErrorManager.handleStatus(c);
                    else {
                        var d;
                        services.Notification.queue([l.localize("notification.store.failedRequest"), UINotificationType.NEGATIVE]),
                        (d = h.getNavigationController()) && d.popViewController()
                    }
                    h.getStorePacks()
                }
            }
            function DAc() {
                if (_ instanceof UTStorePurchasableArticleEntity) {
                    var e = T === GameCurrency.POINTS ? utils.PopupManager.Confirmations.BUY_PACK_POINTS : utils.PopupManager.Confirmations.BUY_PACK_COINS;
                    _ instanceof UTStoreBundleEntity && _.isSingle ? e = T === GameCurrency.POINTS ? utils.PopupManager.Confirmations.BUY_ITEM_POINTS : utils.PopupManager.Confirmations.BUY_ITEM_COINS : _ instanceof UTStoreBundleEntity && !_.isSingle && (e = T === GameCurrency.POINTS ? utils.PopupManager.Confirmations.BUY_BUNDLE_POINTS : utils.PopupManager.Confirmations.BUY_BUNDLE_COINS),
                    utils.PopupManager.showConfirmation(e, [services.Localization.localize(_.packName), services.Localization.localizeNumber(_.getPrice(T))], function() {
                        _.purchase(T).observe(this, CAc)
                    }
                    .bind(h), function() {
                        this.isOpeningPack = !1,
                        p.setInteractionState(!0)
                    }
                    .bind(h))
                }
            }
            function EAc(e, t) {
                if (e.unobserve(h),
                t === UTPlayerHealthLimitPopupView.Events.IGNORE_TAPPED)
                    services.PIN.sendData(PINEventType.MILESTONE, {
                        mode: PIN_MILESTONE_EVT_MODE,
                        moment: PINMileStoneEventMoment.IGNORE,
                        mstid: PINMilestoneEventId.PACK_LIMIT,
                        type: PINMilestoneEventType.PLAY_TIME
                    }),
                    DAc.call(h),
                    services.PlayerHealth.storeLimitIgnoredTimestamp(PlayerHealthStatId.PACKS_OPENED);
                else if (t === UTPlayerHealthLimitPopupView.Events.REVIEW_TAPPED) {
                    var i = h.getNavigationController();
                    if (i) {
                        var o = new UTPlayerHealthViewController;
                        o.init(),
                        i.pushViewController(o, !0)
                    }
                    h.isOpeningPack = !1,
                    p.setInteractionState(!0)
                } else
                    h.isOpeningPack = !1,
                    p.setInteractionState(!0)
            }
            _ ? 0 < repositories.Item.numItemsInCache(ItemPile.PURCHASED) ? (BAc.call(this),
            this.isOpeningPack = !1) : e === UTStorePackDetailsView.Event.OPEN ? _.open().observe(this, CAc) : services.PlayerHealth.isIgnoreLimitPeriodExpired(PlayerHealthStatId.PACKS_OPENED) ? services.PlayerHealth.readPlayerHealth().observe(this, function(e, t) {
                if (e.unobserve(h),
                t.success && t.data && t.data.playerHealth) {
                    var i = t.data.playerHealth
                      , o = i.getStatById(PlayerHealthStatId.PACKS_OPENED);
                    if (i.enabled && o && o.isLimitReached()) {
                        services.PIN.sendData(PINEventType.MILESTONE, {
                            mode: PIN_MILESTONE_EVT_MODE,
                            moment: PINMileStoneEventMoment.COMPLETE,
                            mstid: PINMilestoneEventId.PACK_LIMIT,
                            type: PINMilestoneEventType.PLAY_TIME
                        });
                        var n = new UTPlayerHealthLimitPopupViewController;
                        n.init(),
                        n.getView().setContentByType(o.id, o.limit),
                        n.onExit.observe(h, EAc),
                        gPopupClickShield.setActivePopup(n)
                    } else
                        DAc.call(h)
                } else
                    DAc.call(h)
            }) : DAc.call(this) : DebugUtils.Assert(!1, "Unable to determine the pack from viewmodel")
        }
    }
    ,
    UTStoreViewController.prototype.eUnassignedSelected = function(e, t, i) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.STORE, TelemetryManager.Categories.BUTTON_PRESS, "Store - Unassigned Tile"),
        this.gotoUnassigned()
    }
    ,
    UTStoreViewController.prototype._nAppPaused = function(e, t, i) {
        this.intervalController.stop()
    }
    ,
    UTStoreViewController.prototype.nAppResumed = function(e, t, i) {
        this.intervalController.start()
    }
    ,
    UTStoreViewController.prototype.handleEventTimer = function() {
        if (this.viewmodel) {
            var t = this.getView()
              , e = t.getStoreCategory();
            e !== PurchaseDisplayGroup.MYPACKS && this.viewmodel.getAllPurchaseablePacks().forEach(function(e) {
                return t.handleArticleTimedUpdate(e)
            }),
            e !== PurchaseDisplayGroup.PREVIEWED || this.viewmodel.hasPreviewedPacks() || (this.createCustomErrorPopup("store.popup.error.packsExpiredWarningTitle", "store.popup.error.packsExpiredWarningMessage"),
            this.setupCategories())
        }
    }
    ,
    UTStoreViewController.prototype.triggerTelemetryPage = function() {
        var e = this._getTelemetryId();
        e && TelemetryManager.trackPage(TelemetryManager.Sections.STORE, e)
    }
    ,
    UTStoreViewController
}(UTViewController));
services.URL.registerDeepLinkID(DeepLinkSection.STORE, function(e) {
    var t = getAppMain().getRootViewController();
    if (services.Localization.storeLocLoaded) {
        if (t.setGameViewTab(UTGameTabBarController.TabTag.STORE),
        0 < e.length) {
            var i = e[0]
              , o = void 0;
            for (o in PurchaseDisplayGroup)
                if (PurchaseDisplayGroup.hasOwnProperty(o) && PurchaseDisplayGroup[o] === i) {
                    var n = t.getPresentedViewController();
                    if (n instanceof UTTabBarController) {
                        var r = n.getCurrentViewController();
                        (null == r ? void 0 : r.getRootController()).setCategory(PurchaseDisplayGroup[o])
                    }
                }
        }
    } else
        t.setGameViewTab(UTGameTabBarController.TabTag.HOME)
});
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreBundleDetailsModalView = function(e) {
    function UTStoreBundleDetailsModalView() {
        return e.call(this) || this
    }
    return __extends(UTStoreBundleDetailsModalView, e),
    UTStoreBundleDetailsModalView.prototype.init = function() {
        e.prototype.init.call(this),
        this._exitBtn.init(),
        this._exitBtn.addTarget(this, this.onButtonTapped, EventType.TAP),
        this._exitBtn.setInteractionState(!0)
    }
    ,
    UTStoreBundleDetailsModalView.prototype.dealloc = function() {
        e.prototype.dealloc.call(this)
    }
    ,
    UTStoreBundleDetailsModalView.prototype.setModalHeader = function(e) {
        this.__title.textContent = e
    }
    ,
    UTStoreBundleDetailsModalView.prototype.setName = function(e) {
        this.__name.textContent = e
    }
    ,
    UTStoreBundleDetailsModalView.prototype.setDescription = function(e) {
        this.__description.innerHTML = TextUtils.nltobr(e)
    }
    ,
    UTStoreBundleDetailsModalView.prototype.setArtAsset = function(e) {
        this._asset.setResource(AssetLocationUtils.getBundleBackgroundImageUri(e))
    }
    ,
    UTStoreBundleDetailsModalView.prototype.onButtonTapped = function(e, t, i) {
        this.isInteractionEnabled() && e === this._exitBtn && this._triggerActions(UTStoreBundleDetailsModalView.Event.EXIT, i)
    }
    ,
    UTStoreBundleDetailsModalView.Event = Object.freeze({
        EXIT: "UTStoreBundleDetailsModalView.Event.EXIT"
    }),
    UTStoreBundleDetailsModalView
}(UTTargetActionView);
UTStoreBundleDetailsModalView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-store-bundle-details-modal-view");
        var t = document.createElement("header");
        this.__title = document.createElement("h1"),
        t.appendChild(this.__title),
        this._exitBtn = new UTImageButtonControl,
        this._exitBtn.getRootElement().classList.add("exit-btn"),
        t.appendChild(this._exitBtn.getRootElement()),
        e.appendChild(t);
        var i = document.createElement("div");
        i.classList.add("ut-store-bundle-details-modal-view--body");
        var o = document.createElement("div");
        o.classList.add("ut-store-bundle-details-modal-view--image-container"),
        this._asset = new UTImageView,
        this._asset.getRootElement().classList.add("ut-store-bundle-details-modal-view--asset"),
        o.appendChild(this._asset.getRootElement()),
        i.appendChild(o),
        this.__name = document.createElement("div"),
        this.__name.classList.add("ut-store-bundle-details-modal-view--name"),
        i.appendChild(this.__name),
        this.__description = document.createElement("div"),
        this.__description.classList.add("ut-store-bundle-details-modal-view--description"),
        i.appendChild(this.__description),
        e.appendChild(i),
        this.__root = e,
        this._generated = !0
    }
}
,
UTStoreBundleDetailsModalView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__title = null,
    this._exitBtn.destroy(),
    this._asset.destroy(),
    this.__name = null,
    this.__description = null
}
,
UTStoreBundleDetailsModalView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTStoreBundleDetailsModalViewController = function(i) {
    function UTStoreBundleDetailsModalViewController(e) {
        var t = i.call(this) || this;
        return t.bundle = e,
        t
    }
    return __extends(UTStoreBundleDetailsModalViewController, i),
    UTStoreBundleDetailsModalViewController.prototype._getTelemetryId = function() {
        return "Store - Bundle Story - Bundle ID: " + this.bundle.id
    }
    ,
    UTStoreBundleDetailsModalViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreBundleDetailsModalView
    }
    ,
    UTStoreBundleDetailsModalViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this);
        var e = services.Localization
          , t = this.getView();
        t.setModalHeader(e.localize("store.bundle.story.title")),
        t.setName(e.localize(this.bundle.packName)),
        t.setDescription(e.localize(this.bundle.packDesc)),
        t.setArtAsset(this.bundle.guidAssetId),
        t.addTarget(this, this.eExitTapped, UTStoreBundleDetailsModalView.Event.EXIT),
        t.setInteractionState(!0),
        this.triggerTelemetryPage()
    }
    ,
    UTStoreBundleDetailsModalViewController.prototype.viewWillDisappear = function() {
        i.prototype.viewWillDisappear.call(this),
        this.getView().removeTarget(this, this.eExitTapped, UTStoreBundleDetailsModalView.Event.EXIT)
    }
    ,
    UTStoreBundleDetailsModalViewController.prototype.eExitTapped = function(e, t, i) {
        this.onExit.notify(t, this)
    }
    ,
    UTStoreBundleDetailsModalViewController.prototype.triggerTelemetryPage = function() {
        var e = this._getTelemetryId();
        TelemetryManager.trackPage(TelemetryManager.Sections.STORE, e)
    }
    ,
    UTStoreBundleDetailsModalViewController
}(BasePopupViewController)
  , UTStoreBundleRevealModalListViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(l) {
    function UTStoreBundleRevealModalListViewController(e, t) {
        var i = l.call(this) || this;
        return i.bundle = e,
        i.stadiumViewModel = null != t ? t : null,
        i.viewmodel = new UTItemListViewModel([]),
        i
    }
    return __extends(UTStoreBundleRevealModalListViewController, l),
    UTStoreBundleRevealModalListViewController.prototype.dealloc = function() {
        var e, t;
        null === (e = this.viewmodel) || void 0 === e || e.dealloc(),
        null === (t = this.stadiumViewModel) || void 0 === t || t.dealloc(),
        l.prototype.dealloc.call(this)
    }
    ,
    UTStoreBundleRevealModalListViewController.prototype._getTelemetryId = function() {
        return "Store - Bundle Reveal - Bundle ID: " + this.bundle.id
    }
    ,
    UTStoreBundleRevealModalListViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreRevealModalListView({
            localization: services.Localization
        })
    }
    ,
    UTStoreBundleRevealModalListViewController.prototype.viewDidAppear = function() {
        var e, t, i, o;
        l.prototype.viewDidAppear.call(this),
        null === (e = this.viewmodel) || void 0 === e || e.addArray(this.bundle.getCollection());
        var n = services.Localization
          , r = this.getView();
        r.toggleFooterDisplay(!1),
        r.setHeader(n.localize("store.vanity.bundle.content.modal.title"));
        var s = (null === (t = this.viewmodel) || void 0 === t ? void 0 : t.getItemList().map(function(e) {
            return e.subtype
        })) || []
          , a = null;
        this.stadiumViewModel && 0 < s.length && (a = this.stadiumViewModel.getStadiumProgression(s)),
        r.addItems(null !== (o = null === (i = this.viewmodel) || void 0 === i ? void 0 : i.getItemList()) && void 0 !== o ? o : [], [], ListItemPriority.DEFAULT, null != a ? a : void 0),
        r.addTarget(this, this.eExitTapped, UTStoreRevealModalListView.Event.EXIT),
        r.render(),
        r.setInteractionState(!0),
        this.triggerTelemetryPage()
    }
    ,
    UTStoreBundleRevealModalListViewController.prototype.viewWillDisappear = function() {
        var e;
        l.prototype.viewWillDisappear.call(this),
        null === (e = this.viewmodel) || void 0 === e || e.resetCollection([]),
        this.getView().removeTarget(this, this.eExitTapped, UTStoreRevealModalListView.Event.EXIT)
    }
    ,
    UTStoreBundleRevealModalListViewController.prototype.eExitTapped = function(e, t, i) {
        this.onExit.notify(t, this)
    }
    ,
    UTStoreBundleRevealModalListViewController.prototype.triggerTelemetryPage = function() {
        var e = this._getTelemetryId();
        TelemetryManager.trackPage(TelemetryManager.Sections.STORE, e)
    }
    ,
    UTStoreBundleRevealModalListViewController
}(BasePopupViewController))
  , UTStoreItemViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(r) {
    function UTStoreItemViewController(e) {
        void 0 === e && (e = -1);
        var t = r.call(this) || this;
        return t.initCategory = e,
        t
    }
    return __extends(UTStoreItemViewController, r),
    UTStoreItemViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreView
    }
    ,
    UTStoreItemViewController.prototype._getTelemetryId = function() {
        return "Hub - Store - Vanity"
    }
    ,
    UTStoreItemViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.vanity")
    }
    ,
    UTStoreItemViewController.prototype.updateViewCategories = function() {
        var e;
        if (null === (e = this.viewmodel) || void 0 === e ? void 0 : e.categories) {
            var t = this.getView().getStoreCategory()
              , i = this.viewmodel.getBundleCategories().concat(this.viewmodel.getVanityCategories()).filter(function(e, t, i) {
                return i.indexOf(e) === t
            });
            this.getView().setCategoryTabs(!1, !1, i),
            this.setCategory(t)
        }
    }
    ,
    UTStoreItemViewController.prototype.setupCategories = function() {
        var e, t;
        this.updateViewCategories();
        var i = null === (e = this.viewmodel) || void 0 === e ? void 0 : e.getBundleCategories()
          , o = null === (t = this.viewmodel) || void 0 === t ? void 0 : t.getVanityCategories();
        if (-1 < this.initCategory)
            this.startingCategory = this.initCategory,
            this.initCategory = -1;
        else if (i && 0 < i.length)
            this.startingCategory = i[0].categoryId;
        else if (o && 0 < o.length)
            this.startingCategory = o[0].categoryId;
        else {
            var n = this.getNavigationController();
            n && n.popViewController()
        }
        r.prototype.setupCategories.call(this)
    }
    ,
    UTStoreItemViewController.prototype.viewDidAppear = function() {
        r.prototype.viewDidAppear.call(this);
        var e = this.getView();
        e.addTarget(this, this.eRevealStoryBundle, UTStoreBundleDetailsView.Event.VIEW_STORY),
        e.addTarget(this, this.eRevealContentsBundle, UTStoreBundleDetailsView.Event.VIEW_REVEAL),
        e.addTarget(this, this.eOpenPack, UTStoreBundleDetailsView.Event.BUY_COINS),
        e.addTarget(this, this.eOpenPack, UTStoreBundleDetailsView.Event.BUY_POINTS)
    }
    ,
    UTStoreItemViewController.prototype.viewWillDisappear = function() {
        r.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this.eRevealStoryBundle, UTStoreBundleDetailsView.Event.VIEW_STORY),
        e.removeTarget(this, this.eRevealContentsBundle, UTStoreBundleDetailsView.Event.VIEW_REVEAL),
        e.removeTarget(this, this.eOpenPack, UTStoreBundleDetailsView.Event.BUY_COINS),
        e.removeTarget(this, this.eOpenPack, UTStoreBundleDetailsView.Event.BUY_POINTS)
    }
    ,
    UTStoreItemViewController.prototype.eRevealStoryBundle = function(e, t, i) {
        var o, n = null === (o = this.viewmodel) || void 0 === o ? void 0 : o.getPackById(i.articleId);
        if (n instanceof UTStoreBundleEntity) {
            var r = new UTStoreBundleDetailsModalViewController(n);
            r.init(),
            gPopupClickShield.setActivePopup(r)
        }
    }
    ,
    UTStoreItemViewController.prototype.eRevealContentsBundle = function(e, t, i) {
        var o, n = this, r = null === (o = this.viewmodel) || void 0 === o ? void 0 : o.getPackById(i.articleId), s = this.getView();
        s.setInteractionState(!1),
        gClickShield.showShield(EAClickShieldView.Shield.LOADING),
        services.MyStadium.getStadium().observe(this, function(e, t) {
            var i;
            if (e.unobserve(n),
            gClickShield.hideShield(EAClickShieldView.Shield.LOADING),
            s.setInteractionState(!0),
            r instanceof UTStoreBundleEntity) {
                var o = new UTStoreBundleRevealModalListViewController(r,t.success && (null === (i = t.data) || void 0 === i ? void 0 : i.stadium) ? new UTMyStadiumViewModel(t.data.stadium) : void 0);
                o.init(),
                gPopupClickShield.setActivePopup(o)
            }
        })
    }
    ,
    UTStoreItemViewController
}(UTStoreViewController))
  , UTStoreMTXViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(n) {
    function UTStoreMTXViewController() {
        return n.call(this) || this
    }
    return __extends(UTStoreMTXViewController, n),
    UTStoreMTXViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreView
    }
    ,
    UTStoreMTXViewController.prototype._getTelemetryId = function() {
        return "Hub - Store - FIFA Points"
    }
    ,
    UTStoreMTXViewController.prototype.viewDidAppear = function() {
        services.Store.isMobileMTXEnabled() && !services.Store.hasMobileMTXAccess() ? (this.createCustomErrorPopup("popup.error.storeOriginAccessWarningTitle", "popup.error.storeOriginAccessWarning"),
        this.disablePointsPurchasing()) : services.Store.isMobileMTXEnabled() || this.disablePointsPurchasing(),
        TelemetryManager.trackPage(TelemetryManager.Sections.STORE, "MTX Store"),
        getDefaultDispatcher().addObserver(AppNotification.APP_RESUME, this, this.nAppResumed),
        getDefaultDispatcher().addObserver(AppNotification.MTX_PURCHASE_NOTIF, this, this.nMTXNotif),
        this.getView().addTarget(this, this.eStartNimbleTransaction, UTNimbleMTXDetailsView.START_TRANSACTION),
        n.prototype.viewDidAppear.call(this)
    }
    ,
    UTStoreMTXViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.mtx")
    }
    ,
    UTStoreMTXViewController.prototype.setupCategories = function() {
        this.startingCategory = PurchaseDisplayGroup.FIFAPOINTS,
        n.prototype.setupCategories.call(this)
    }
    ,
    UTStoreMTXViewController.prototype.viewWillDisappear = function() {
        n.prototype.viewWillDisappear.call(this),
        getDefaultDispatcher().removeObserver(AppNotification.APP_RESUME, this),
        getDefaultDispatcher().removeObserver(AppNotification.MTX_CATALOG_REFRESH, this),
        getDefaultDispatcher().removeObserver(AppNotification.MTX_PURCHASE_NOTIF, this),
        this.getView().removeTarget(this, this.eStartNimbleTransaction, UTNimbleMTXDetailsView.START_TRANSACTION)
    }
    ,
    UTStoreMTXViewController.prototype.disablePointsPurchasing = function() {
        var e;
        services.MTX.disableNimbleMTX(),
        null === (e = this.getNavigationController()) || void 0 === e || e.popViewController()
    }
    ,
    UTStoreMTXViewController.prototype.nAppResumed = function(e, t, i) {
        var o = this;
        n.prototype.nAppResumed.call(this, e, t, i);
        services.Store.isMobileMTXEnabled() && (getDefaultDispatcher().addObserver(AppNotification.MTX_CATALOG_REFRESH, this, this.nMTXCatalogRefresh),
        window.plugins.cordovaNimble.setupMTX(function() {
            o.startingCategory = o.getView().getStoreCategory()
        }
        .bind(this), function() {
            o.disablePointsPurchasing()
        }
        .bind(this)))
    }
    ,
    UTStoreMTXViewController.prototype.eStartNimbleTransaction = function(e, t, r) {
        var s = this;
        if (!this.isOpeningPack && !this.isLoadingPacks) {
            if (!services.Store.isMobileMTXEnabled())
                return services.Notification.queue([services.Localization.localize("mtx.error.disabled"), UINotificationType.NEGATIVE]),
                void this.disablePointsPurchasing();
            function hEc(e, t) {
                e.unobserve(s),
                t.success || (s.isOpeningPack = !1,
                services.Notification.queue([services.Localization.localize("mtx.error.nocharge"), UINotificationType.NEGATIVE]))
            }
            function iEc(e, t) {
                if (e.unobserve(s),
                t === UTPlayerHealthLimitPopupView.Events.IGNORE_TAPPED)
                    services.PIN.sendData(PINEventType.MILESTONE, {
                        mode: PIN_MILESTONE_EVT_MODE,
                        moment: PINMileStoneEventMoment.IGNORE,
                        mstid: PINMilestoneEventId.POINT_LIMIT,
                        type: PINMilestoneEventType.PLAY_TIME
                    }),
                    services.MTX.beginTransaction(r.nimbleMTXsku).observe(s, hEc),
                    services.PlayerHealth.storeLimitIgnoredTimestamp(PlayerHealthStatId.POINTS_PURCHASED);
                else if (t === UTPlayerHealthLimitPopupView.Events.REVIEW_TAPPED) {
                    var i = s.getNavigationController();
                    if (i) {
                        var o = new UTPlayerHealthViewController;
                        o.init(),
                        i.pushViewController(o, !0)
                    }
                    s.isOpeningPack = !1
                } else
                    s.isOpeningPack = !1
            }
            function jEc(e, t) {
                if (e.unobserve(s),
                t.success && t.data && t.data.playerHealth) {
                    var i = t.data.playerHealth
                      , o = i.getStatById(PlayerHealthStatId.POINTS_PURCHASED);
                    if (i.enabled && o && o.isLimitReached()) {
                        services.PIN.sendData(PINEventType.MILESTONE, {
                            mode: PIN_MILESTONE_EVT_MODE,
                            moment: PINMileStoneEventMoment.COMPLETE,
                            mstid: PINMilestoneEventId.POINT_LIMIT,
                            type: PINMilestoneEventType.PLAY_TIME
                        });
                        var n = new UTPlayerHealthLimitPopupViewController;
                        n.init(),
                        n.getView().setContentByType(o.id, o.limit),
                        n.onExit.observe(s, iEc),
                        gPopupClickShield.setActivePopup(n)
                    } else
                        services.MTX.beginTransaction(r.nimbleMTXsku).observe(s, hEc)
                } else
                    services.MTX.beginTransaction(r.nimbleMTXsku).observe(s, hEc)
            }
            var i = function(e, t) {
                e.unobserve(s),
                t.success ? services.MTX.hasUnverifiedTransactions() ? services.MTX.verifyStoredTransactions().observe(s, i) : services.PlayerHealth.isIgnoreLimitPeriodExpired(PlayerHealthStatId.POINTS_PURCHASED) ? services.PlayerHealth.readPlayerHealth().observe(s, jEc) : services.MTX.beginTransaction(r.nimbleMTXsku).observe(s, hEc) : (s.isOpeningPack = !1,
                services.Notification.queue([services.Localization.localize("mtx.error.nocharge"), UINotificationType.NEGATIVE]),
                s.disablePointsPurchasing())
            };
            this.isOpeningPack = !0,
            services.MTX.hasUnverifiedTransactions() ? services.MTX.verifyStoredTransactions().observe(this, i) : services.PlayerHealth.isIgnoreLimitPeriodExpired(PlayerHealthStatId.POINTS_PURCHASED) ? services.PlayerHealth.readPlayerHealth().observe(this, jEc) : services.MTX.beginTransaction(r.nimbleMTXsku).observe(this, hEc)
        }
    }
    ,
    UTStoreMTXViewController.prototype.nMTXNotif = function(e, t, i) {
        var o, n;
        if (this.isOpeningPack = !1,
        i.success)
            services.Notification.queue([services.Localization.localize("mtx.notification.purchaseSuccess"), UINotificationType.POSITIVE]);
        else {
            var r = null === (o = i.error) || void 0 === o ? void 0 : o.code
              , s = null === (n = i.error) || void 0 === n ? void 0 : n.message
              , a = ""
              , l = "mtx.error.generic"
              , c = JSUtils.isEmpty(s) ? "UTAS Error: " + r : "MTX Error: " + r + ", " + s;
            switch (TelemetryManager.trackEvent(TelemetryManager.Sections.STORE, TelemetryManager.Categories.MTX_ERROR, c),
            r) {
            case NimbleError.UNKNOWN:
            case NimbleError.NIMBLE_VERIFICATION_ERROR:
                a = "mtx.error.basic";
                break;
            case NimbleError.NIMBLE_BILLING_NOT_AVAILABLE:
            case NimbleError.NIMBLE_INVALID_SKU:
            case NimbleError.NIMBLE_EMPTY_SYNERGY_CATALOG:
            case NimbleError.NIMBLE_EMPTY_BILLING_CATALOG:
                a = "mtx.error.disabled",
                this.disablePointsPurchasing();
                break;
            case NimbleError.NIMBLE_ITEM_ALREADY_OWNED:
                l = "mtx.error.firstParty";
                break;
            case NimbleError.NIMBLE_PLATFORM_ERROR:
                a = "mtx.error.transactionCancelled";
                break;
            case NimbleError.NIMBLE_ITEM_UNAVAILABLE:
                a = "mtx.error.itemUnavailable";
                break;
            case NimbleError.NIMBLE_TRANSACTION_OUTSTANDING:
                a = "mtx.error.pendingTransaction";
                break;
            case NimbleError.NIMBLE_USER_CANCELED:
                return
            }
            JSUtils.isEmpty(a) ? this.createCustomErrorPopup("popup.error.genericMtxErrorTitle", l) : services.Notification.queue([services.Localization.localize(a), UINotificationType.NEGATIVE])
        }
    }
    ,
    UTStoreMTXViewController.prototype.nMTXCatalogRefresh = function(e, t) {
        getDefaultDispatcher().removeObserver(AppNotification.MTX_CATALOG_REFRESH, this),
        this.getStorePacks()
    }
    ,
    UTStoreMTXViewController
}(UTStoreViewController))
  , UTStorePackViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(s) {
    function UTStorePackViewController(e) {
        void 0 === e && (e = -1);
        var t = s.call(this) || this;
        return t.initCategory = e,
        t
    }
    return __extends(UTStorePackViewController, s),
    UTStorePackViewController.prototype._getViewInstanceFromData = function() {
        return new UTStoreView
    }
    ,
    UTStorePackViewController.prototype._getTelemetryId = function() {
        return "Hub - Store - Packs"
    }
    ,
    UTStorePackViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.packs")
    }
    ,
    UTStorePackViewController.prototype.viewDidAppear = function() {
        s.prototype.viewDidAppear.call(this);
        var e = this.getView();
        e.addTarget(this, this.eOpenPack, UTStorePackDetailsView.Event.OPEN),
        e.addTarget(this, this.eOpenPack, UTStorePackDetailsView.Event.BUY_COINS),
        e.addTarget(this, this.eOpenPack, UTStorePackDetailsView.Event.BUY_POINTS),
        e.addTarget(this, this.eRevealPack, UTStoreXrayPackDetailsView.Event.REVEAL),
        e.addTarget(this, this.eRevealExpired, UTStoreXrayPackDetailsView.Event.REVEAL_EXPIRED),
        e.addTarget(this, this.eCheckPackOdds, UTStorePackDetailsView.Event.CHECK_ODDS)
    }
    ,
    UTStorePackViewController.prototype.viewWillDisappear = function() {
        s.prototype.viewWillDisappear.call(this);
        var e = this.getView();
        e.removeTarget(this, this.eOpenPack, UTStorePackDetailsView.Event.OPEN),
        e.removeTarget(this, this.eOpenPack, UTStorePackDetailsView.Event.BUY_COINS),
        e.removeTarget(this, this.eOpenPack, UTStorePackDetailsView.Event.BUY_POINTS),
        e.removeTarget(this, this.eRevealPack, UTStoreXrayPackDetailsView.Event.REVEAL),
        e.removeTarget(this, this.eRevealExpired, UTStoreXrayPackDetailsView.Event.REVEAL_EXPIRED),
        e.removeTarget(this, this.eCheckPackOdds, UTStorePackDetailsView.Event.CHECK_ODDS)
    }
    ,
    UTStorePackViewController.prototype.updateViewCategories = function() {
        var e;
        if (null === (e = this.viewmodel) || void 0 === e ? void 0 : e.categories) {
            var t = this.getView()
              , i = t.getStoreCategory();
            t.setCategoryTabs(this.viewmodel.hasMyPacks, this.viewmodel.hasPreviewedPacks(), this.viewmodel.getPackCategories()),
            this.setCategory(i)
        }
    }
    ,
    UTStorePackViewController.prototype.setupCategories = function() {
        var e, t, i;
        this.updateViewCategories(),
        -1 < this.initCategory ? (this.startingCategory = this.initCategory,
        this.initCategory = -1) : this.startingCategory !== PurchaseDisplayGroup.PREVIEWED || (null === (e = this.viewmodel) || void 0 === e ? void 0 : e.hasPreviewedPacks()) || (this.startingCategory = PurchaseDisplayGroup.MYPACKS);
        var o = null === (t = this.viewmodel) || void 0 === t ? void 0 : t.getPackCategories();
        if (o && 0 < o.length) {
            var n = o[0];
            n && this.startingCategory === PurchaseDisplayGroup.MYPACKS && !(null === (i = this.viewmodel) || void 0 === i ? void 0 : i.hasMyPacks) && (this.startingCategory = n.categoryId)
        } else {
            var r = this.getNavigationController();
            r && r.popViewController()
        }
        s.prototype.setupCategories.call(this)
    }
    ,
    UTStorePackViewController.prototype.eRevealExpired = function(e, t, i) {
        if (this.viewmodel) {
            var o = this.getView().getStoreCategory();
            o !== PurchaseDisplayGroup.PREVIEWED || this.viewmodel.hasPreviewedPacks() ? o === PurchaseDisplayGroup.PREVIEWED && this.setCategory(o) : (this.createCustomErrorPopup("store.popup.error.packsExpiredWarningTitle", "store.popup.error.packsExpiredWarningMessage"),
            this.setupCategories())
        }
    }
    ,
    UTStorePackViewController.prototype.eCheckPackOdds = function(e, t, i) {
        var o;
        if (!this.isOpeningPack) {
            var n = null === (o = this.viewmodel) || void 0 === o ? void 0 : o.getPackById(i.articleId);
            if (n instanceof UTStoreItemPackEntity && (null == n ? void 0 : n.hasOdds())) {
                var r = new UTPackOddsViewController;
                r.initWithPack(n),
                r.modalDisplayStyle = "form",
                this.presentViewController(r, !0);
                var s = n.odds.map(function(e) {
                    var t = {};
                    return t[e.description] = e.odds,
                    t
                }, this);
                services.PIN.sendData(PINEventType.UI_INTERACTION, {
                    action: "selection",
                    custom: s,
                    mdur: 0,
                    object_id: n.id.toString(),
                    object_type: "store_pack",
                    pgid: "",
                    sdur: 0
                })
            } else
                services.Notification.queue([services.Localization.localize("packodds.error.noOdds"), UINotificationType.NEGATIVE])
        }
    }
    ,
    UTStorePackViewController
}(UTStoreViewController))
  , UTWatchSectionListViewModel = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTWatchSectionListViewModel(e) {
        var t = i.call(this, e) || this;
        return t.setSection(UTWatchSectionListViewModel.SECTION.ACTIVE, function(e) {
            var t = e.getAuctionData();
            return t.isActiveTrade() && t.isBid()
        }, UTWatchSectionListViewModel.SECTION.ACTIVE),
        t.setSection(UTWatchSectionListViewModel.SECTION.WATCHED, function(e) {
            var t = e.getAuctionData();
            return t.isActiveTrade() && !t.isBid() && t.watched
        }, UTWatchSectionListViewModel.SECTION.WATCHED),
        t.setSection(UTWatchSectionListViewModel.SECTION.WON, function(e) {
            var t = e.getAuctionData();
            return e.getAuctionData().isWon() || !t.isValid()
        }, UTWatchSectionListViewModel.SECTION.WON),
        t.setSection(UTWatchSectionListViewModel.SECTION.EXPIRED, function(e) {
            var t = e.getAuctionData();
            return t.isExpired() || t.isClosedTrade() && !t.isWon()
        }, UTWatchSectionListViewModel.SECTION.EXPIRED),
        t.organizeItems(),
        t
    }
    return __extends(UTWatchSectionListViewModel, i),
    UTWatchSectionListViewModel.prototype.hasMovableWonItems = function() {
        return -1 < this.indexOf(this.findMovableWon)
    }
    ,
    UTWatchSectionListViewModel.prototype.getMovableWonItems = function() {
        return this.values().filter(this.findMovableWon)
    }
    ,
    UTWatchSectionListViewModel.prototype.hasExpiredAuctions = function() {
        return -1 < this.indexOf(this.findExpired)
    }
    ,
    UTWatchSectionListViewModel.prototype.getExpiredAuctions = function() {
        return this.values().filter(this.findExpired)
    }
    ,
    UTWatchSectionListViewModel.prototype.findMovableWon = function(e) {
        return e.isMovable() && e.getAuctionData().isWon()
    }
    ,
    UTWatchSectionListViewModel.prototype.findExpired = function(e) {
        var t = e.getAuctionData();
        return t.isExpired() || t.isClosedTrade() && !t.isWon()
    }
    ,
    UTWatchSectionListViewModel.SECTION = {
        ACTIVE: 0,
        WATCHED: 1,
        WON: 2,
        EXPIRED: 3
    },
    UTWatchSectionListViewModel
}(UTItemSectionListViewModel))
  , UTWatchListView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTWatchListView() {
        var e = t.call(this) || this;
        return e.sections = [],
        e.emptyListView = null,
        e
    }
    return __extends(UTWatchListView, t),
    UTWatchListView.prototype.dealloc = function() {
        var e;
        JSUtils.isValid(this.emptyListView) && (null === (e = this.emptyListView) || void 0 === e || e.dealloc(),
        this.emptyListView = null),
        this.clearSections(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTWatchListView.prototype.clearSections = function() {
        this.sections.forEach(function(e) {
            return e.dealloc()
        }),
        this.sections = []
    }
    ,
    UTWatchListView.prototype.renderSection = function(e, t, i) {
        var o = this.sections[t];
        o ? o.clearList() : ((o = new UTSectionedItemListView).init(),
        this.sections[t] = o),
        o.addItems(e, i),
        o.render();
        var n = this.getRootElement();
        return DOMKit.empty(n),
        this.sections.forEach(function(e) {
            return n.appendChild(e.getRootElement())
        }),
        o
    }
    ,
    UTWatchListView.prototype.getSection = function(e) {
        return this.sections[e] || null
    }
    ,
    UTWatchListView.prototype.renderEmptyView = function(e, t, i) {
        this.clearSections(),
        this.emptyListView = new UTListNoResultsView,
        this.emptyListView.init(),
        this.emptyListView.setText(e),
        i && this.emptyListView.setupButton(t, i),
        this.getRootElement().appendChild(this.emptyListView.getRootElement())
    }
    ,
    UTWatchListView.prototype.onTimedUpdate = function() {
        this.sections.forEach(function(e) {
            return e.onTimedUpdate()
        })
    }
    ,
    UTWatchListView.prototype.selectListRow = function(t) {
        this.sections.forEach(function(e) {
            return e.selectRowByItemId(t)
        })
    }
    ,
    UTWatchListView.prototype.removeItemsById = function(t) {
        this.sections.forEach(function(e) {
            return e.removeItemsById(t)
        })
    }
    ,
    UTWatchListView
}(UTView));
UTWatchListView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-watch-list-view"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTWatchListView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTWatchListView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWatchListViewController = function(o) {
    function UTWatchListViewController() {
        var e = o.call(this) || this;
        return e.onDataChange = new EAObservable,
        e.onItemSelected = new EAObservable,
        e.viewmodel = null,
        e
    }
    return __extends(UTWatchListViewController, o),
    UTWatchListViewController.prototype.init = function() {
        this.initialized || (o.prototype.init.call(this),
        this.viewmodel = new UTWatchSectionListViewModel([]),
        this.viewmodel.dataUpdated.observe(this, this._eViewmodelDataUpdated),
        TelemetryManager.trackPage(TelemetryManager.Sections.AUCTIONS, "Transfer Targets"))
    }
    ,
    UTWatchListViewController.prototype.dealloc = function() {
        var e, t, i;
        null === (e = this.viewmodel) || void 0 === e || e.stopAuctionUpdates(),
        null === (t = this.viewmodel) || void 0 === t || t.dataUpdated.unobserve(this),
        this.onDataChange.dealloc(),
        this.onItemSelected.dealloc(),
        o.prototype.dealloc.call(this),
        null === (i = this.viewmodel) || void 0 === i || i.dealloc()
    }
    ,
    UTWatchListViewController.prototype._getViewInstanceFromData = function() {
        return new UTWatchListView
    }
    ,
    UTWatchListViewController.prototype._getTelemetryId = function() {
        return "Transfer Targets - List View"
    }
    ,
    UTWatchListViewController.prototype.getNavigationTitle = function() {
        return services.Localization.localize("navbar.label.watchlist")
    }
    ,
    UTWatchListViewController.prototype.viewDidAppear = function() {
        o.prototype.viewDidAppear.call(this);
        var e = getDefaultDispatcher();
        e.addObserver(AppNotification.ITEM_UNWATCH, this, this._nItemUnwatched),
        e.addObserver(AppNotification.AUCTION_CLOSE, this, this._nAuctionClosed),
        e.addObserver(AppNotification.UI_ITEM_STATE_CHANGE, this, this._nInfoStateChanged),
        this._requestItems()
    }
    ,
    UTWatchListViewController.prototype.viewWillDisappear = function() {
        o.prototype.viewWillDisappear.call(this);
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.ITEM_UNWATCH, this),
        e.removeObserver(AppNotification.AUCTION_CLOSE, this),
        e.removeObserver(AppNotification.UI_ITEM_STATE_CHANGE, this),
        this.viewmodel && this.viewmodel.stopAuctionUpdates()
    }
    ,
    UTWatchListViewController.prototype.getIterator = function() {
        return this.viewmodel
    }
    ,
    UTWatchListViewController.prototype._requestItems = function() {
        var e, _ = this;
        null === (e = this.viewmodel) || void 0 === e || e.stopAuctionUpdates(),
        this.getView().setInteractionState(!1),
        services.Item.requestWatchedItems().observe(this, function(e, t) {
            var i, o, n, r, s, a, l, c, d, u;
            if (e.unobserve(_),
            !(t.success && JSUtils.isObject(t.response) && _.viewmodel))
                return services.Notification.queue([services.Localization.localize("watchlist.loaderror"), UINotificationType.NEGATIVE]),
                void (NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : null === (c = _.getNavigationController()) || void 0 === c || c.popViewController());
            var h = _.viewmodel.getIndex();
            null === (i = _.viewmodel) || void 0 === i || i.resetCollection([]),
            null === (o = _.viewmodel) || void 0 === o || o.addArray(null !== (n = t.response.items) && void 0 !== n ? n : []),
            null === (r = _.viewmodel) || void 0 === r || r.setIndex(Math.min(h, _.viewmodel.getLastIndex())),
            _.onDataChange.notify({
                items: null === (s = _.viewmodel) || void 0 === s ? void 0 : s.values()
            }),
            _._renderView();
            var p = null === (l = null === (a = _.viewmodel) || void 0 === a ? void 0 : a.current()) || void 0 === l ? void 0 : l.id;
            p && !isPhone() && _.getView().selectListRow(p),
            _.getView().setInteractionState(!0),
            (null === (d = _.viewmodel) || void 0 === d ? void 0 : d.hasExpiredAuctions()) && services.User.requestCurrencies(),
            null === (u = _.viewmodel) || void 0 === u || u.startAuctionUpdates()
        })
    }
    ,
    UTWatchListViewController.prototype.removeItemsById = function(e) {
        var t;
        if (this.viewmodel && 0 < this.viewmodel.length) {
            var i = this.getView();
            i.removeItemsById(e);
            var o = null === (t = this.viewmodel.current()) || void 0 === t ? void 0 : t.id;
            o && i.selectListRow(o),
            this._updateSectionHeaders()
        } else
            this._renderView(),
            this.onDataChange.notify({
                items: []
            })
    }
    ,
    UTWatchListViewController.prototype._updateSectionHeaders = function() {
        var e, t = this, i = services.Localization, o = this.getView(), n = o.getSection(UTWatchSectionListViewModel.SECTION.WON), r = o.getSection(UTWatchSectionListViewModel.SECTION.EXPIRED);
        n && n.setHeader(i.localize("watchlist.dock.categories.won"), i.localize("infopanel.label.alltoclub"), this.viewmodel && 0 < (null === (e = this.viewmodel) || void 0 === e ? void 0 : e.getMovableWonItems().length) ? function() {
            return t._onSendToClub(t.getView())
        }
        : void 0),
        r && r.setHeader(i.localize("watchlist.dock.categories.expired"), i.localize("button.label.clearexpired"), this.viewmodel && 0 < this.viewmodel.getSectionItems(UTWatchSectionListViewModel.SECTION.EXPIRED).length ? function() {
            return t._onUnwatchExpired(t.getView())
        }
        : void 0)
    }
    ,
    UTWatchListViewController.prototype._renderView = function() {
        function uHc(t) {
            var e, i, o = null === (e = l.viewmodel) || void 0 === e ? void 0 : e.indexOf(function(e) {
                return e.id === t.id
            });
            if (null != o && -1 != o && (null === (i = l.viewmodel) || void 0 === i || i.setIndex(o)),
            isPhone()) {
                var n = t.getAuctionData();
                if (!services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED) && (n.isActiveTrade() || n.isClosedTrade()))
                    return void utils.PopupManager.showAlert(utils.PopupManager.Alerts.TRADING_DISABLED);
                var r = l.getNavigationController();
                if (r && l.viewmodel) {
                    var s = new controllers.navigation.ItemDetails;
                    s.initWithIterator(l.viewmodel),
                    r.pushViewController(s, !0)
                }
            } else
                c.selectListRow(Number(t.id)),
                l.onItemSelected.notify(o)
        }
        var e, t, i, o, n, r, s, a, l = this, c = this.getView();
        c.clearSections();
        var d = services.Localization
          , u = null !== (t = null === (e = this.viewmodel) || void 0 === e ? void 0 : e.getSectionItems(UTWatchSectionListViewModel.SECTION.ACTIVE)) && void 0 !== t ? t : []
          , h = c.renderSection(u, UTWatchSectionListViewModel.SECTION.ACTIVE, function(e) {
            return uHc(e)
        });
        h.setHeader(d.localize("watchlist.dock.categories.active"), ""),
        h.setEmptyMessage(d.localize("watchlist.availabletransfers.empty.header"), d.localize("watchlist.availabletransfers.empty.body"));
        var p = null !== (o = null === (i = this.viewmodel) || void 0 === i ? void 0 : i.getSectionItems(UTWatchSectionListViewModel.SECTION.WATCHED)) && void 0 !== o ? o : []
          , _ = c.renderSection(p, UTWatchSectionListViewModel.SECTION.WATCHED, function(e) {
            return uHc(e)
        });
        _.setHeader(d.localize("watchlist.dock.categories.watched"), ""),
        _.setEmptyMessage(d.localize("watchlist.watched.empty.header"), d.localize("watchlist.watched.empty.body"));
        var T = null !== (r = null === (n = this.viewmodel) || void 0 === n ? void 0 : n.getSectionItems(UTWatchSectionListViewModel.SECTION.WON)) && void 0 !== r ? r : [];
        c.renderSection(T, UTWatchSectionListViewModel.SECTION.WON, function(e) {
            return uHc(e)
        }).setEmptyMessage(d.localize("watchlist.won.empty.header"), d.localize("watchlist.won.empty.body"));
        var m = null !== (a = null === (s = this.viewmodel) || void 0 === s ? void 0 : s.getSectionItems(UTWatchSectionListViewModel.SECTION.EXPIRED)) && void 0 !== a ? a : [];
        c.renderSection(m, UTWatchSectionListViewModel.SECTION.EXPIRED, function(e) {
            return uHc(e)
        }).setEmptyMessage(d.localize("watchlist.expired.empty.header"), d.localize("watchlist.expired.empty.body")),
        this._updateSectionHeaders()
    }
    ,
    UTWatchListViewController.prototype._onSendToClub = function(e) {
        var t, i;
        TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.BUTTON_PRESS, "Transfer Targets - Send All To Club");
        var o = null !== (i = null === (t = this.viewmodel) || void 0 === t ? void 0 : t.getMovableWonItems()) && void 0 !== i ? i : [];
        0 < o.length && (this.getView().setInteractionState(!1),
        services.Item.move(o, ItemPile.CLUB).observe(this, this._onMoveToClubComplete))
    }
    ,
    UTWatchListViewController.prototype._onUnwatchExpired = function(e) {
        var t, i;
        TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.BUTTON_PRESS, "Transfer Targets - Clear Expired");
        var o = null !== (i = null === (t = this.viewmodel) || void 0 === t ? void 0 : t.getExpiredAuctions()) && void 0 !== i ? i : [];
        0 < o.length && (this.getView().setInteractionState(!1),
        services.Item.untarget(o).observe(this, this._onUnwatchExpiredComplete))
    }
    ,
    UTWatchListViewController.prototype._onUnwatchExpiredComplete = function(e, t) {
        var i;
        e.unobserve(this),
        t.success || null === (i = this.getNavigationController()) || void 0 === i || i.popViewController()
    }
    ,
    UTWatchListViewController.prototype._onMoveToClubComplete = function(e, t) {
        var i, o, n;
        e.unobserve(this);
        var r = services.Localization;
        if (t.success) {
            var s = null !== (o = null === (i = t.data) || void 0 === i ? void 0 : i.itemIds.length) && void 0 !== o ? o : 0
              , a = 1 < s ? r.localize("notification.item.allToClub", [s.toString()]) : r.localize("notification.item.oneToClub");
            this._requestItems(),
            services.Notification.queue([a, UINotificationType.NEUTRAL])
        } else
            services.Notification.queue([r.localize("notification.item.moveFailed"), UINotificationType.NEGATIVE]),
            NetworkErrorManager.handleStatus(t.status),
            null === (n = this.getNavigationController()) || void 0 === n || n.popViewController()
    }
    ,
    UTWatchListViewController.prototype._nAuctionClosed = function(e, t, i) {
        this._requestItems()
    }
    ,
    UTWatchListViewController.prototype._nItemUnwatched = function(e, t, i) {
        this._requestItems()
    }
    ,
    UTWatchListViewController.prototype._eViewmodelDataUpdated = function(e) {
        this.getView().onTimedUpdate()
    }
    ,
    UTWatchListViewController.prototype._nInfoStateChanged = function(e, t, i) {
        TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.BUTTON_PRESS, "Item Info Switch Button - Transfer Targets")
    }
    ,
    UTWatchListViewController
}(UTViewController);
services.URL.registerDeepLinkID(DeepLinkSection.WATCH_LIST, function(e) {
    var t = getAppMain().getRootViewController();
    if (t.setGameViewTab(UTGameTabBarController.TabTag.TRANSFERS),
    !getAppMain().getConfigRepository().getConfigBoolean(EAConfigurationRepository.KEY_HIDE_TRANSFER_MARKET)) {
        var i = t.getPresentedViewController();
        if (i instanceof UTTabBarController) {
            var o = i.getCurrentViewController();
            if (o instanceof UTNavigationController) {
                var n = isPhone() ? new UTWatchListViewController : new UTWatchListSplitViewController;
                n.init(),
                o.pushViewController(n)
            }
        }
    }
});
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTWatchListSplitViewController = function(i) {
    function UTWatchListSplitViewController() {
        var e = i.call(this) || this;
        return e._listController = new UTWatchListViewController,
        e._itemDetailController = new controllers.navigation.ItemDetails,
        e
    }
    return __extends(UTWatchListSplitViewController, i),
    UTWatchListSplitViewController.prototype.init = function() {
        if (!this.initialized) {
            i.prototype.init.call(this),
            this._listController.init(),
            this._listController.onDataChange.observe(this, this.eListDataChanged),
            this._listController.onItemSelected.observe(this, this.eItemSelected);
            var e = this._listController.getIterator();
            e && this._itemDetailController.initWithIterator(e),
            this._itemDetailController.enableSwiping(!1),
            this.addChildViewController(this._listController),
            this.addChildViewController(this._itemDetailController);
            var t = getDefaultDispatcher();
            t.addObserver(AppNotification.ITEM_ACTIVATE, this, this.nItemActivated),
            t.addObserver(AppNotification.ITEM_DISCARD, this, this.nItemDiscarded),
            t.addObserver(AppNotification.ITEM_LIST, this, this.nItemListed),
            t.addObserver(AppNotification.ITEM_MOVE, this, this.nItemMoved)
        }
    }
    ,
    UTWatchListSplitViewController.prototype.dealloc = function() {
        this._itemDetailController.dealloc(),
        this._listController.dealloc();
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.ITEM_ACTIVATE, this),
        e.removeObserver(AppNotification.ITEM_DISCARD, this),
        e.removeObserver(AppNotification.ITEM_LIST, this),
        e.removeObserver(AppNotification.ITEM_MOVE, this),
        i.prototype.dealloc.call(this)
    }
    ,
    UTWatchListSplitViewController.prototype.getNavigationTitle = function() {
        return this._listController.getNavigationTitle()
    }
    ,
    UTWatchListSplitViewController.prototype.viewDidAppear = function() {
        i.prototype.viewDidAppear.call(this),
        this._setLeftController(this._listController),
        this._itemDetailController.setNavigationStyle(UTNavigationBarView.Style.SECONDARY)
    }
    ,
    UTWatchListSplitViewController.prototype.eItemSelected = function(e, t) {
        this._itemDetailController.setIndex(t)
    }
    ,
    UTWatchListSplitViewController.prototype.eListDataChanged = function(e, t) {
        if (t.items)
            if (0 < t.items.length) {
                this._setRightController(this._itemDetailController);
                var i = this._listController.getIterator();
                i && this._itemDetailController.setIndex(i.getIndex())
            } else
                this.hideRightController()
    }
    ,
    UTWatchListSplitViewController.prototype.nItemActivated = function(e, t, i) {
        this._listController.removeItemsById(i.itemIds || [])
    }
    ,
    UTWatchListSplitViewController.prototype.nItemListed = function(e, t, i) {
        this._listController.removeItemsById(i.itemIds || [])
    }
    ,
    UTWatchListSplitViewController.prototype.nItemDiscarded = function(e, t, i) {
        this._listController.removeItemsById(i.itemIds || [])
    }
    ,
    UTWatchListSplitViewController.prototype.nItemMoved = function(e, t, i) {
        this._listController.removeItemsById(i.itemIds || [])
    }
    ,
    UTWatchListSplitViewController
}(UTSplitViewController)
  , UTExternalLinkTileView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTExternalLinkTileView() {
        return e.call(this) || this
    }
    return __extends(UTExternalLinkTileView, e),
    UTExternalLinkTileView
}(UTTileView));
UTExternalLinkTileView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-tile-external-link"),
        e.classList.add("tile");
        var t = document.createElement("div");
        t.classList.add("loadingSpinner"),
        e.appendChild(t);
        var i = document.createElement("header");
        this.__tileTitle = document.createElement("h1"),
        this.__tileTitle.classList.add("ut-tile-header"),
        i.appendChild(this.__tileTitle),
        e.appendChild(i),
        this.__tileContent = document.createElement("div"),
        this.__tileContent.classList.add("ut-tile-content"),
        e.appendChild(this.__tileContent);
        var o = document.createElement("div");
        o.classList.add("ut-tile-image"),
        e.appendChild(o),
        this.__root = e,
        this._generated = !0
    }
}
,
UTExternalLinkTileView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__tileTitle = null,
    this.__tileContent = null
}
,
UTExternalLinkTileView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTTransfersHubView = function(t) {
    function UTTransfersHubView() {
        return t.call(this) || this
    }
    return __extends(UTTransfersHubView, t),
    UTTransfersHubView.prototype.init = function() {
        var e = services.Localization;
        t.prototype.init.call(this),
        this._extLinkTile.init(),
        this._extLinkTile.hide(),
        this._transferMarketTile.init(),
        this._transferMarketTile.setTitle(e.localize("navbar.label.search")),
        this._transferListTile.init(),
        this._transferListTile.setTitle(e.localize("panel.label.transferlist")),
        this._transferListTile.setTotalTransferLabel(e.localize("dock.label.items")),
        this._transferListTile.setTotalTransferCount(0),
        this._transferListTile.setActiveTransferLabel(e.localize("dock.label.selling")),
        this._transferListTile.setActiveTransferCount(0),
        this._transferListTile.setFinishedTransferLabel(e.localize("tradepile.dock.categories.sold")),
        this._transferListTile.setFinishedTransferCount(0),
        this._transferTargetsTile.init(),
        this._transferTargetsTile.setTitle(e.localize("panel.label.transfertargets")),
        this._transferTargetsTile.setTotalTransferLabel(e.localize("dock.label.items")),
        this._transferTargetsTile.setTotalTransferCount(0),
        this._transferTargetsTile.setActiveTransferLabel(e.localize("dock.label.winning")),
        this._transferTargetsTile.setActiveTransferCount(0),
        this._transferTargetsTile.setFinishedTransferLabel(e.localize("dock.label.outbid")),
        this._transferTargetsTile.setFinishedTransferCount(0)
    }
    ,
    UTTransfersHubView.prototype.getExtLinkTileContent = function() {
        return this._extLinkTile.getTileContent()
    }
    ,
    UTTransfersHubView.prototype.getTransferMarketTile = function() {
        return this._transferMarketTile
    }
    ,
    UTTransfersHubView.prototype.getTransferListTile = function() {
        return this._transferListTile
    }
    ,
    UTTransfersHubView.prototype.getTransferTargetsTile = function() {
        return this._transferTargetsTile
    }
    ,
    UTTransfersHubView.prototype.setTradeAccessState = function(e, t) {
        var i = services.Localization;
        if (e === TradeAccessLevel.ALLOWED)
            return this._transferTargetsTile.setDimmed(!1),
            this._transferTargetsTile.setInteractionState(!0),
            this._transferMarketTile.setDimmed(!1),
            this._transferMarketTile.setInteractionState(!0),
            void this._extLinkTile.hide();
        if (this.disableMarketTiles(),
        e === TradeAccessLevel.MAINTENANCE)
            this._transferTargetsTile.setInteractionState(!1),
            this._transferTargetsTile.setDimOverlayType(TileDimOverlayType.MAINTENANCE),
            this._transferMarketTile.setInteractionState(!1),
            this._transferMarketTile.setDimOverlayText(i.localize("tile.disabled.transfersMaintenance")),
            this._transferMarketTile.setDimOverlayType(TileDimOverlayType.MAINTENANCE),
            this._extLinkTile.hide();
        else if (e === TradeAccessLevel.BANNED)
            this._transferMarketTile.setInteractionState(!1),
            this._transferMarketTile.setDimOverlayText(i.localize("tile.disabled.transfersBlacklisted")),
            this._extLinkTile.hide();
        else if (e === TradeAccessLevel.UNAVAILABLE)
            this._transferMarketTile.setInteractionState(!1),
            this._transferMarketTile.setDimOverlayType(TileDimOverlayType.LOCKED),
            this._transferMarketTile.setDimOverlayText(i.localize("tile.disabled.transfersUnavailable")),
            this._transferTargetsTile.setInteractionState(!1),
            this._transferTargetsTile.setDimOverlayType(TileDimOverlayType.LOCKED),
            this._extLinkTile.hide();
        else {
            var o = "";
            switch (t) {
            case GameSku.XBO:
                o = i.localize("platform.console.xboxOne");
                break;
            case GameSku.PS4:
                o = i.localize("platform.console.ps4");
                break;
            case GameSku.PC:
                o = i.localize("platform.pc")
            }
            if (e === TradeAccessLevel.CONSOLE_ONLY)
                this._transferMarketTile.setInteractionState(!1),
                this._transferMarketTile.setDimOverlayText(i.localize("tile.disabled.transfersGreylisted", [o]));
            else {
                var n = i.localize("tile.disabled.learnmore", [o])
                  , r = new DOMParser
                  , s = document.createElement("p");
                s.innerHTML = r.parseFromString(n, "text/html").body.innerHTML,
                this._extLinkTile.setContent(s),
                this._extLinkTile.show(),
                this._transferTargetsTile.setDimOverlayType(TileDimOverlayType.LOCKED),
                this._transferMarketTile.setDimOverlayType(TileDimOverlayType.LOCKED),
                this._transferMarketTile.setDimOverlayText(i.localize("tile.disabled.transfersUnlockAccess", [o]))
            }
        }
    }
    ,
    UTTransfersHubView.prototype.disableMarket = function() {
        this.disableMarketTiles(),
        this._transferMarketTile.setDimOverlayText(services.Localization.localize("tile.disabled.marketdisabled"))
    }
    ,
    UTTransfersHubView.prototype.disableMarketForPlatformSplit = function() {
        this.disableMarketTile(),
        this._transferMarketTile.setDimOverlayText(services.Localization.localize("tile.disabled.marketdisabledforplatformsplit"))
    }
    ,
    UTTransfersHubView.prototype.disableMarketTiles = function() {
        this._transferMarketTile.setInteractionState(!1),
        this._transferMarketTile.setDimmed(!0),
        this._transferTargetsTile.setInteractionState(!1),
        this._transferTargetsTile.setDimmed(!0)
    }
    ,
    UTTransfersHubView.prototype.disableMarketTile = function() {
        this._transferMarketTile.setInteractionState(!1),
        this._transferMarketTile.setDimmed(!0)
    }
    ,
    UTTransfersHubView
}(UTView);
function UTTransfersHubViewController() {
    UTViewController.call(this)
}
UTTransfersHubView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("TransfersHub");
        var t = document.createElement("div");
        t.classList.add("grid"),
        t.classList.add("layout-hub"),
        this._extLinkTile = new UTExternalLinkTileView,
        this._extLinkTile.getRootElement().classList.add("col-1-1"),
        t.appendChild(this._extLinkTile.getRootElement()),
        this._transferMarketTile = new UTTileView,
        this._transferMarketTile.getRootElement().classList.add("col-1-1"),
        this._transferMarketTile.getRootElement().classList.add("ut-tile-transfer-market"),
        t.appendChild(this._transferMarketTile.getRootElement()),
        this._transferListTile = new UTTransfersTileView,
        this._transferListTile.getRootElement().classList.add("col-1-2"),
        this._transferListTile.getRootElement().classList.add("ut-tile-transfer-list"),
        t.appendChild(this._transferListTile.getRootElement()),
        this._transferTargetsTile = new UTTransfersTileView,
        this._transferTargetsTile.getRootElement().classList.add("col-1-2"),
        this._transferTargetsTile.getRootElement().classList.add("ut-tile-transfer-targets"),
        t.appendChild(this._transferTargetsTile.getRootElement()),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTTransfersHubView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this._extLinkTile.destroy(),
    this._transferMarketTile.destroy(),
    this._transferListTile.destroy(),
    this._transferTargetsTile.destroy()
}
,
UTTransfersHubView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
JSUtils.inherits(UTTransfersHubViewController, UTViewController),
UTTransfersHubViewController.prototype.init = function init() {
    this.superclass();
    var e = this.getView();
    e.getTransferMarketTile().addTarget(this, this._eTransferMarketTileSelected, EventType.TAP),
    e.getTransferListTile().addTarget(this, this._eTransferListTileSelected, EventType.TAP),
    e.getTransferTargetsTile().addTarget(this, this._eTransferTargetsTileSelected, EventType.TAP)
}
,
UTTransfersHubViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTTransfersHubView
}
,
UTTransfersHubViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "Hub - Transfers"
}
,
UTTransfersHubViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("nav.label.trading")
}
,
UTTransfersHubViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var e = services.User.getUser()
      , t = this.getView();
    this.getNavigationController().setNavigationVisibility(!0, !0),
    this._requestTransferListData(),
    TelemetryManager.trackPage(TelemetryManager.Sections.AUCTIONS, "Transfers Hub"),
    t.setTradeAccessState(e.tradeAccess, e.getSelectedPersona().sku);
    var i = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.TRADING_ENABLED)
      , o = services.Configuration.checkFeatureEnabled(UTServerSettingsRepository.KEY.PLATFORM_SPLIT_FOR_TRANSFER_MARKET);
    if (e.hasTradeAccess())
        i && !o ? this._requestTransferTargetData() : (TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.MARKET_STATUS, "Disabled"),
        o ? t.disableMarketForPlatformSplit() : t.disableMarket());
    else {
        var n = "No Access";
        this.decorateLinks(t.getExtLinkTileContent()),
        e.tradeAccess === TradeAccessLevel.BANNED ? n = "Denied" : e.tradeAccess === TradeAccessLevel.CONSOLE_ONLY ? n = "Greylisted" : e.tradeAccess === TradeAccessLevel.UNAVAILABLE ? n = "Unavailable" : e.tradeAccess === TradeAccessLevel.MAINTENANCE && (n = "Maintenance"),
        TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.MARKET_STATUS, n)
    }
}
,
UTTransfersHubViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass(),
    services.User.getUser().hasTradeAccess() || this.stripLinks(this.getView().getExtLinkTileContent())
}
,
UTTransfersHubViewController.prototype._requestTransferListData = function _requestTransferListData() {
    gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Item.requestTransferItems().observe(this, function _onRequestTransferItemsComplete(e, t) {
        e.unobserve(this);
        var i = this.getView().getTransferListTile();
        if (i && t.success) {
            var o = JSUtils.isObject(t.response) ? t.response.items : []
              , n = new UTTransferSectionListViewModel(o)
              , r = o.length
              , s = 1 === r ? services.Localization.localize("dock.label.item") : services.Localization.localize("dock.label.items");
            i.setTotalTransferLabel(s),
            i.setTotalTransferCount(r),
            i.setActiveTransferCount(n.getActiveItems().length),
            i.setFinishedTransferCount(n.getSoldItems().length),
            i.setInteractionState(!0),
            i.setDimmed(!1)
        } else
            NetworkErrorManager.checkCriticalStatus(t.status) ? NetworkErrorManager.handleStatus(t.status) : t.success || (services.Notification.queue([services.Localization.localize("tradepile.unavailable"), UINotificationType.NEGATIVE]),
            i.setInteractionState(!1),
            i.setDimmed(!0));
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    })
}
,
UTTransfersHubViewController.prototype._requestTransferTargetData = function _requestTransferTargetData() {
    gClickShield.showShield(EAClickShieldView.Shield.LOADING),
    services.Item.requestWatchedItems().observe(this, function _onRequestWatchedItemsComplete(e, t) {
        e.unobserve(this);
        var i = this.getView().getTransferTargetsTile();
        if (i && t.success) {
            var o = t.response.items.length
              , n = 1 === o ? services.Localization.localize("dock.label.item") : services.Localization.localize("dock.label.items");
            i.setTotalTransferLabel(n),
            i.setTotalTransferCount(o);
            var r = t.response.items.reduce(function(e, t) {
                var i = t.getAuctionData();
                return i.isHighestBid() && i.isActiveTrade() && e++,
                e
            }, 0);
            i.setActiveTransferCount(r);
            var s = t.response.items.reduce(function(e, t) {
                return t.getAuctionData().isOutbid() && e++,
                e
            }, 0);
            i.setFinishedTransferCount(s)
        } else
            NetworkErrorManager.checkCriticalStatus(t.status) && NetworkErrorManager.handleStatus(t.status);
        gClickShield.hideShield(EAClickShieldView.Shield.LOADING)
    })
}
,
UTTransfersHubViewController.prototype._eTransferMarketTileSelected = function _eTransferMarketTileSelected() {
    var e = this.getNavigationController();
    if (e) {
        var t = services.User.getUser().marketSearchCriteria
          , i = new UTMarketSearchFiltersViewController;
        i.initWithSearchCriteria(t),
        e.pushViewController(i)
    }
}
,
UTTransfersHubViewController.prototype._eTransferListTileSelected = function _eTransferListTileSelected() {
    var e = this.getNavigationController();
    if (e) {
        var t = isPhone() ? new UTTransferListViewController : new UTTransferListSplitViewController;
        t.init(),
        e.pushViewController(t)
    }
}
,
UTTransfersHubViewController.prototype._eTransferTargetsTileSelected = function _eTransferTargetsTileSelected() {
    var e = this.getNavigationController();
    if (e) {
        var t = isPhone() ? new UTWatchListViewController : new UTWatchListSplitViewController;
        t.init(),
        e.pushViewController(t)
    }
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTRootView = function(e) {
    function UTRootView() {
        return e.call(this) || this
    }
    return __extends(UTRootView, e),
    UTRootView
}(UTView);
function UTRootViewController() {
    UTViewController.call(this)
}
UTRootView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("main");
        e.classList.add("ut-root-view"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTRootView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTRootView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
,
JSUtils.inherits(UTRootViewController, UTViewController),
UTRootViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTRootView
}
,
UTRootViewController.prototype._getPresentationControllerInstance = function _getPresentationControllerInstance(e) {
    return new UTRootPresentationController(e,this)
}
,
UTRootViewController.prototype.showLanguageSelectView = function showLanguageSelectView() {
    if (this.getPresentedViewController()instanceof UTLanguageSelectViewController)
        return !1;
    var e = new UTLanguageSelectViewController;
    return e.init(),
    e.setLanguageSelectCallback(function() {
        getAppMain().onLanguageLoaded()
    }),
    this.presentViewController(e, !0),
    !0
}
,
UTRootViewController.prototype.showLicenseView = function showLicenseView() {
    if (this.getPresentedViewController()instanceof UTLicenseViewController)
        return !1;
    var e = new UTLicenseViewController;
    return e.init(),
    this.presentViewController(e, !0),
    !0
}
,
UTRootViewController.prototype.showLoginView = function showLoginView() {
    if (this.getPresentedViewController()instanceof UTLoginViewController)
        return !1;
    var e = new UTLoginViewController;
    return e.init(),
    this.presentViewController(e, !0),
    !0
}
,
UTRootViewController.prototype.showOnboardingView = function showOnboardingView(e, t) {
    var i = new controllers.navigation.Onboarding;
    return t && i.setSquad(t),
    e ? i.initWithViewmodel(e) : i.init(),
    this.presentViewController(i, !0),
    !0
}
,
UTRootViewController.prototype.showWCStarterPackView = function showWCStarterPackView(e) {
    var t = new UTWorldCupNavigationController;
    return t.initWithViewmodel(e),
    this.presentViewController(t, !0),
    !0
}
,
UTRootViewController.prototype.showCaptchaView = function showCaptchaView() {
    var e = new UTBootFlowNavigationController
      , t = new UTFunCaptchaViewController;
    return t.init(),
    e.initWithRootController(t),
    this.presentViewController(e, !0),
    !0
}
,
UTRootViewController.prototype.showLoggedOnConsoleView = function showLoggedOnConsoleView() {
    var e = new UTBootFlowNavigationController
      , t = new UTLoggedOnConsoleViewController;
    return t.init(),
    e.initWithRootController(t),
    this.presentViewController(e, !0),
    !0
}
,
UTRootViewController.prototype.showGettingStartedView = function showGettingStartedView(e) {
    var t = new UTBootFlowNavigationController
      , i = new UTGettingStartedViewController;
    return i.init(),
    i.setType(e),
    t.initWithRootController(i),
    this.presentViewController(t, !0),
    !0
}
,
UTRootViewController.prototype.showSharedSquadView = function showSharedSquadView(e) {
    var t = new UTGameFlowNavigationController
      , i = isPhone() ? new UTShowOffSquadOverviewViewController : new UTShowOffSquadSplitViewController;
    return i.initWithSquad(e.squad),
    t.initWithRootController(i),
    t.setClubInfo(e.clubName, e.estDate),
    this.presentViewController(t),
    !0
}
,
UTRootViewController.prototype.showGameView = function showGameView() {
    if (this._presentedViewController instanceof UTGameTabBarController)
        return !1;
    var e, t = new UTGameTabBarController, i = new UTGameFlowNavigationController, o = new UTGameFlowNavigationController, n = new UTGameFlowNavigationController, r = new UTGameFlowNavigationController, s = new UTGameFlowNavigationController, a = new UTTabBarItemView, l = new UTTabBarItemView, c = new UTTabBarItemView, d = new UTTabBarItemView, u = new UTTabBarItemView;
    if (i.initWithRootController(new UTHomeHubViewController),
    o.initWithRootController(new UTSquadsHubViewController),
    n.initWithRootController(new UTTransfersHubViewController),
    r.initWithRootController(new UTStoreHubViewController),
    s.initWithRootController(new UTClubHubViewController),
    a.init(),
    a.setTag(UTGameTabBarController.TabTag.HOME),
    a.setText(services.Localization.localize("navbar.label.home")),
    a.addClass("icon-home"),
    l.init(),
    l.setTag(UTGameTabBarController.TabTag.SQUADS),
    l.setText(services.Localization.localize("nav.label.squads")),
    l.addClass("icon-squad"),
    c.init(),
    c.setTag(UTGameTabBarController.TabTag.TRANSFERS),
    c.setText(services.Localization.localize("nav.label.trading")),
    c.addClass("icon-transfer"),
    d.init(),
    d.setTag(UTGameTabBarController.TabTag.STORE),
    d.setText(services.Localization.localize("navbar.label.store")),
    d.addClass("icon-store"),
    u.init(),
    u.setTag(UTGameTabBarController.TabTag.CLUB),
    u.setText(services.Localization.localize("nav.label.club")),
    u.addClass("icon-club"),
    i.tabBarItem = a,
    o.tabBarItem = l,
    n.tabBarItem = c,
    r.tabBarItem = d,
    s.tabBarItem = u,
    e = [i, o, n, r, s],
    !isPhone()) {
        var h = new UTGameFlowNavigationController
          , p = new UTGameFlowNavigationController
          , _ = new UTGameFlowNavigationController
          , T = new UTGameFlowNavigationController;
        h.initWithRootController(new UTSBCHubViewController),
        p.initWithRootController(new UTCustomizeHubViewController),
        _.initWithRootController(new UTLeaderboardsHubViewController),
        T.initWithRootController(new UTAppSettingsViewController);
        var m = new UTTabBarItemView;
        m.init(),
        m.setTag(UTGameTabBarController.TabTag.SBC),
        m.setText(services.Localization.localize("nav.label.sbc")),
        m.addClass("icon-sbc");
        var g = new UTTabBarItemView;
        g.init(),
        g.setTag(UTGameTabBarController.TabTag.STADIUM),
        g.setText(services.Localization.localize("nav.label.customizeHub")),
        g.addClass("icon-stadium");
        var w = new UTTabBarItemView;
        w.init(),
        w.setTag(UTGameTabBarController.TabTag.LEADERBOARDS),
        w.setText(services.Localization.localize("nav.label.leaderboards")),
        w.addClass("icon-leaderboards");
        var v = new UTTabBarItemView;
        v.init(),
        v.setTag(UTGameTabBarController.TabTag.SETTINGS),
        v.setText(services.Localization.localize("button.settings")),
        v.addClass("icon-settings"),
        h.tabBarItem = m,
        p.tabBarItem = g,
        _.tabBarItem = w,
        T.tabBarItem = v,
        e = e.concat([h, p, _, T])
    }
    return t.initWithViewControllers(e),
    t.getView().addClass("game-navigation"),
    this.presentViewController(t, !0, function() {
        services.URL.hasDeepLinkURL() && services.URL.processDeepLinkURL()
    }),
    !0
}
,
UTRootViewController.prototype.setGameViewTab = function setGameViewTab(e) {
    var t = this.getPresentedViewController();
    if (t instanceof UTGameTabBarController) {
        var i = t.getCurrentViewController();
        t.setSelectedIndexByTag(e),
        i instanceof UTGameFlowNavigationController && i.popToRootViewController()
    } else
        DebugUtils.Assert(!1, "Attempted to set game view tab when the game view is not being presented.")
}
,
UTRootViewController.prototype.didDismiss = function didDismiss(e) {
    this.superclass(),
    e.dealloc()
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTServerSettingsUpdateController = function(t) {
    function UTServerSettingsUpdateController() {
        var e = t.call(this) || this;
        return e.observable = null,
        e.timeout = 0,
        e
    }
    return __extends(UTServerSettingsUpdateController, t),
    UTServerSettingsUpdateController.prototype.dealloc = function() {
        this.stopPolling(),
        t.prototype.dealloc.call(this)
    }
    ,
    UTServerSettingsUpdateController.prototype.startPolling = function() {
        var t = this;
        this.observable || (0 < this.timeout && (window.clearTimeout(this.timeout),
        this.timeout = 0),
        this.observable = services.Configuration.requestSettingsData(),
        this.observable.observe(this, function(e) {
            e.unobserve(t),
            t.observable = null,
            t.timeout = window.setTimeout(t.startPolling.bind(t), getAppMain().getConfigRepository().getConfigNumber(EAConfigurationRepository.KEY_SETTINGS_REFRESH_INTERVAL))
        }))
    }
    ,
    UTServerSettingsUpdateController.prototype.stopPolling = function() {
        window.clearTimeout(this.timeout),
        this.timeout = 0,
        this.observable && (this.observable.unobserve(this),
        this.observable.dealloc())
    }
    ,
    UTServerSettingsUpdateController
}(EAObject)
  , UTMyStadiumController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function UTMyStadiumController() {
        var e = t.call(this) || this;
        return e.saveInterval = null,
        e.isDisplayingSaveStadiumPopup = !1,
        e
    }
    return __extends(UTMyStadiumController, t),
    UTMyStadiumController.prototype.dealloc = function() {
        t.prototype.dealloc.call(this),
        this.stopObservingSaveEvents()
    }
    ,
    UTMyStadiumController.prototype.startObservingSaveEvents = function() {
        getDefaultDispatcher().addObserver(AppNotification.STADIUM_SAVE_FAILED, this, this.eSaveStadiumPopup),
        getDefaultDispatcher().addObserver(AppNotification.STADIUM_SAVE_INTERVAL, this, this.startSaveIntervalCb)
    }
    ,
    UTMyStadiumController.prototype.stopObservingSaveEvents = function() {
        getDefaultDispatcher().removeObserver(AppNotification.STADIUM_SAVE_FAILED, this),
        getDefaultDispatcher().removeObserver(AppNotification.STADIUM_SAVE_INTERVAL, this)
    }
    ,
    UTMyStadiumController.prototype.startSaveIntervalCb = function(e, t, i) {
        this.startSaveInterval()
    }
    ,
    UTMyStadiumController.prototype.startSaveInterval = function() {
        if (!this.saveInterval) {
            var e = getAppMain().getConfigRepository().getConfigNumber(EAConfigurationRepository.KEY_STADIUM_SAVE_INTERVAL);
            this.saveInterval = new EAIntervalController((0 < e ? e : 15) * MS_PER_SECOND,this.triggerStadiumSave.bind(this)),
            this.saveInterval.start()
        }
    }
    ,
    UTMyStadiumController.prototype.stopSaveInterval = function() {
        this.saveInterval && (this.saveInterval.stop(),
        this.saveInterval = null)
    }
    ,
    UTMyStadiumController.prototype.triggerStadiumSave = function() {
        var e = services.Authentication.getUtasSession();
        hasConnection() && e.isAuthenticated() ? services.MyStadium.saveStadium() : services.Notification.queue([services.Localization.localize("notification.stadium.saveFailed"), UINotificationType.NEGATIVE]),
        this.stopSaveInterval()
    }
    ,
    UTMyStadiumController.prototype.eSaveStadiumPopup = function(e, t, i) {
        var o = this
          , n = services.Localization;
        if (!this.isDisplayingSaveStadiumPopup && hasConnection()) {
            services.Notification.queue([n.localize("notification.stadium.saveFailed"), UINotificationType.NEGATIVE]),
            this.isDisplayingSaveStadiumPopup = !0;
            var r = new EADialogViewController({
                dialogOptions: [{
                    labelEnum: enums.UIDialogOptions.CANCEL,
                    negativeActionFlag: !0
                }, {
                    labelEnum: enums.UIDialogOptions.RETRY
                }],
                message: n.localize("mystadium.savepopup.description"),
                title: n.localize("mystadium.savepopup.title"),
                type: EADialogView.Type.SAVE_FAILED
            });
            r.init(),
            r.onExit.observe(this, function(e, t) {
                e.unobserve(o),
                hasConnection() ? t === enums.UIDialogOptions.CANCEL ? (services.MyStadium.reset(),
                getAppMain().getRootViewController().setGameViewTab(UTGameTabBarController.TabTag.HOME)) : t === enums.UIDialogOptions.RETRY && services.MyStadium.saveStadium() : services.Notification.queue([n.localize("notification.stadium.logoutMessage"), UINotificationType.NEGATIVE]),
                o.isDisplayingSaveStadiumPopup = !1
            }),
            gPopupClickShield.setActivePopup(r)
        }
    }
    ,
    UTMyStadiumController
}(EAObject))
  , UTNotificationView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(i) {
    function UTNotificationView(e) {
        var t = i.call(this) || this;
        return t.message = e.message,
        t.type = e.type,
        t.displayTimeout = void 0,
        t.state = UTNotificationView.UIStates.HIDDEN,
        t
    }
    return __extends(UTNotificationView, i),
    UTNotificationView.prototype.init = function() {
        i.prototype.init.call(this),
        this.setInteractionState(!0);
        var e = "";
        switch (this.type) {
        case UINotificationType.POSITIVE:
            e = "positive";
            break;
        case UINotificationType.NEUTRAL:
            e = "neutral";
            break;
        case UINotificationType.NEGATIVE:
            e = "negative"
        }
        this.addClass(e),
        this.__content.textContent = this.message
    }
    ,
    UTNotificationView.prototype.didAddToSuperview = function() {
        this.display()
    }
    ,
    UTNotificationView.prototype.display = function() {
        this.state === UTNotificationView.UIStates.HIDDEN && (this.state = UTNotificationView.UIStates.SHOWING,
        this.perform(enums.UIAnimation.FADE_IN, function() {
            this.state = UTNotificationView.UIStates.SHOWN
        }
        .bind(this)),
        this.displayTimeout = window.setTimeout(this.remove.bind(this), Math.max(60 * this.message.length, 1500)))
    }
    ,
    UTNotificationView.prototype.remove = function() {
        this.state !== UTNotificationView.UIStates.DISMISSING && (this.state = UTNotificationView.UIStates.DISMISSING,
        window.clearTimeout(this.displayTimeout),
        this.perform(enums.UIAnimation.FADE_OUT, function() {
            this.removeFromSuperview(),
            this.dealloc()
        }
        .bind(this)))
    }
    ,
    UTNotificationView.prototype._tapDetected = function(e) {
        this.state === UTNotificationView.UIStates.SHOWN && this.remove()
    }
    ,
    UTNotificationView.UIStates = Object.freeze({
        HIDDEN: 0,
        SHOWING: 1,
        SHOWN: 2,
        DISMISSING: 3
    }),
    UTNotificationView
}(UTView));
UTNotificationView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("Notification"),
        this.__content = document.createElement("p"),
        e.appendChild(this.__content);
        var t = document.createElement("span");
        t.classList.add("icon_close"),
        t.classList.add("fut_icon"),
        e.appendChild(t),
        this.__root = e,
        this._generated = !0
    }
}
,
UTNotificationView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__content = null
}
,
UTNotificationView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTNotificationLayerView = function(e) {
    function UTNotificationLayerView() {
        return e.call(this) || this
    }
    return __extends(UTNotificationLayerView, e),
    UTNotificationLayerView.prototype.displayNotification = function(e) {
        var t = new UTNotificationView(e);
        t.init(),
        this.addSubview(t, this.getRootElement()),
        this.layoutSubviews()
    }
    ,
    UTNotificationLayerView
}(UTView);
UTNotificationLayerView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.setAttribute("id", "NotificationLayer"),
        this.__root = e,
        this._generated = !0
    }
}
,
UTNotificationLayerView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null
}
,
UTNotificationLayerView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var ClickShieldType, UTNotificationLayerViewController = function(t) {
    function UTNotificationLayerViewController() {
        return t.call(this) || this
    }
    return __extends(UTNotificationLayerViewController, t),
    UTNotificationLayerViewController.prototype.init = function() {
        var i = this;
        t.prototype.init.call(this);
        services.Notification.display.observe(this, function(e, t) {
            i.getView().displayNotification(t)
        });
        var e = getDefaultDispatcher();
        e.addObserver(AppNotification.OBJECTIVE_COMPLETE, this, this.nObjectiveCompleted),
        e.addObserver(AppNotification.OBJECTIVE_GROUP_COMPLETE, this, this.nObjectiveGroupCompleted),
        e.addObserver(AppNotification.ITEM_REDEEM, this, this.nUnlockabledRedeemed)
    }
    ,
    UTNotificationLayerViewController.prototype.dealloc = function() {
        services.Notification.display.unobserve(this);
        var e = getDefaultDispatcher();
        e.removeObserver(AppNotification.OBJECTIVE_COMPLETE, this),
        e.removeObserver(AppNotification.OBJECTIVE_GROUP_COMPLETE, this),
        e.removeObserver(AppNotification.ITEM_REDEEM, this),
        t.prototype.dealloc.call(this)
    }
    ,
    UTNotificationLayerViewController.prototype._getViewInstanceFromData = function() {
        return new UTNotificationLayerView
    }
    ,
    UTNotificationLayerViewController.prototype.nObjectiveCompleted = function(e, t, i) {
        var o = services.Localization.localize("notification.objectives.completedObjective", [i.name]);
        this.getView().displayNotification(new UINotificationDTO(o,UINotificationType.POSITIVE))
    }
    ,
    UTNotificationLayerViewController.prototype.nObjectiveGroupCompleted = function(e, t, i) {
        var o = services.Localization.localize("notification.objectives.completedObjectiveGroup", [i.name]);
        this.getView().displayNotification(new UINotificationDTO(o,UINotificationType.POSITIVE))
    }
    ,
    UTNotificationLayerViewController.prototype.nUnlockabledRedeemed = function(e, t, i) {
        var o, n = services.Localization;
        i.isCoins ? o = n.localize("notification.coins.added") : i.isPack ? o = n.localize("notification.pack.added") : i.isDraftToken ? o = n.localize("notification.drafttoken.added") : i.isPlayerPickItem && (o = n.localize("notification.draftitem.added")),
        this.getView().displayNotification(new UINotificationDTO(o || "",UINotificationType.POSITIVE))
    }
    ,
    UTNotificationLayerViewController
}(UTViewController), PopupQueueViewController = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(t) {
    function PopupQueueViewController() {
        var e = t.call(this) || this;
        return e.queue = [],
        e
    }
    return __extends(PopupQueueViewController, t),
    PopupQueueViewController.prototype.init = function() {
        t.prototype.init.call(this)
    }
    ,
    PopupQueueViewController.prototype.dealloc = function() {
        this.reset(),
        t.prototype.dealloc.call(this)
    }
    ,
    PopupQueueViewController.prototype._getViewInstanceFromData = function() {
        return new UTModalContainerView
    }
    ,
    PopupQueueViewController.prototype.reset = function() {
        this.queue.forEach(function(e) {
            return e.dealloc()
        }),
        this.queue = [],
        this.hideShield()
    }
    ,
    PopupQueueViewController.prototype.onRequestBack = function() {
        var e = this.queue[0];
        return !e || e.onBackButton()
    }
    ,
    PopupQueueViewController.prototype.setActivePopup = function(e, t) {
        var i = this.getView();
        i.removeClass([PopupQueueViewController.ModalType.FORM, PopupQueueViewController.ModalType.PAGE].join(" ")),
        i.addClass(t || "form-modal"),
        this.queue.push(e),
        e.onExit.observe(this, this.handlePopupExit),
        1 === this.queue.length && this.displayPopup(e)
    }
    ,
    PopupQueueViewController.prototype.closeActivePopup = function() {
        var e = this
          , t = this.queue.shift()
          , i = this.queue[0];
        t && t.dealloc(),
        i ? requestAnimationFrame(function() {
            return e.displayPopup(i)
        }) : this.hideShield()
    }
    ,
    PopupQueueViewController.prototype.displayPopup = function(e) {
        e.initialized || e.init(),
        e.viewWillAppear(),
        this.showShield(),
        this.getView().getRootElement().appendChild(e.getView().getRootElement());
        var t = e.getView().getRootElement();
        e.modalDisplayDimensions.width && (t.style.width = e.modalDisplayDimensions.width),
        e.modalDisplayDimensions.height && (t.style.height = e.modalDisplayDimensions.height),
        e.modalDisplayDimensions.maxHeight && (t.style.maxHeight = e.modalDisplayDimensions.maxHeight),
        e.modalDisplayDimensions.maxWidth && (t.style.maxWidth = e.modalDisplayDimensions.maxWidth),
        e.modalDisplayDimensions.minHeight && (t.style.minHeight = e.modalDisplayDimensions.minHeight),
        e.modalDisplayDimensions.minWidth && (t.style.minWidth = e.modalDisplayDimensions.minWidth),
        e.viewDidAppear()
    }
    ,
    PopupQueueViewController.prototype.showShield = function() {
        var e = getAppMain().getRootViewController().getView();
        DOMKit.insertAfter(this.getView().getRootElement(), e.getRootElement())
    }
    ,
    PopupQueueViewController.prototype.hideShield = function() {
        DOMKit.remove(this.getView().getRootElement())
    }
    ,
    PopupQueueViewController.prototype.handlePopupExit = function(e) {
        this.closeActivePopup()
    }
    ,
    PopupQueueViewController.ModalType = {
        FORM: "form-modal",
        PAGE: "page-modal"
    },
    PopupQueueViewController
}(UTViewController)), gPopupClickShield = new PopupQueueViewController;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
!function(e) {
    e[e.FULL = 0] = "FULL",
    e[e.INTERACTION = 1] = "INTERACTION",
    e[e.LOADING = 2] = "LOADING"
}(ClickShieldType = ClickShieldType || {});
var EAClickShieldView = function(t) {
    function EAClickShieldView() {
        var e = t.call(this) || this;
        return e.shieldCounter = {
            FULL: 0,
            LOADING: 0,
            INTERACTION: 0
        },
        e
    }
    return __extends(EAClickShieldView, t),
    EAClickShieldView.prototype.init = function() {
        t.prototype.init.call(this),
        this.update(),
        this._startHandlingEvents(this.getRootElement())
    }
    ,
    EAClickShieldView.prototype.dealloc = function() {
        this._stopHandlingEvents(),
        this.reset(),
        t.prototype.dealloc.call(this)
    }
    ,
    EAClickShieldView.prototype.reset = function() {
        this.shieldCounter.FULL = 0,
        this.shieldCounter.LOADING = 0,
        this.shieldCounter.INTERACTION = 0,
        this.update()
    }
    ,
    EAClickShieldView.prototype.showShield = function(e) {
        switch (e) {
        case ClickShieldType.FULL:
            ++this.shieldCounter.FULL;
            break;
        case ClickShieldType.LOADING:
            ++this.shieldCounter.LOADING;
            break;
        case ClickShieldType.INTERACTION:
            ++this.shieldCounter.INTERACTION
        }
        this.update()
    }
    ,
    EAClickShieldView.prototype.hideShield = function(e) {
        switch (e) {
        case ClickShieldType.FULL:
            DebugUtils.Assert(0 <= this.shieldCounter.FULL - 1, "Hiding full shield when counter is 0."),
            1 <= this.shieldCounter.FULL && --this.shieldCounter.FULL;
            break;
        case ClickShieldType.LOADING:
            DebugUtils.Assert(0 <= this.shieldCounter.LOADING - 1, "Hiding loading shield when counter is 0."),
            1 <= this.shieldCounter.LOADING && --this.shieldCounter.LOADING;
            break;
        case ClickShieldType.INTERACTION:
            DebugUtils.Assert(0 <= this.shieldCounter.INTERACTION - 1, "Hiding interaction shield when counter is 0."),
            1 <= this.shieldCounter.INTERACTION && --this.shieldCounter.INTERACTION
        }
        this.update(),
        this.isShowing() || this._triggerActions(EAClickShieldView.Event.DISMISSED)
    }
    ,
    EAClickShieldView.prototype.isShowing = function() {
        return 0 < this.shieldCounter.FULL || 0 < this.shieldCounter.LOADING || 0 < this.shieldCounter.INTERACTION
    }
    ,
    EAClickShieldView.prototype.isInteractionShieldShowing = function() {
        return 0 < this.shieldCounter.INTERACTION
    }
    ,
    EAClickShieldView.prototype.update = function() {
        DOMKit.toggleDisplayStyle(this.__loaderIcon, 0 < this.shieldCounter.LOADING);
        var e = 0 < this.shieldCounter.INTERACTION && !(0 < this.shieldCounter.LOADING || 0 < this.shieldCounter.FULL);
        this.toggleClass("showing", this.isShowing()),
        this.toggleClass("interaction", e)
    }
    ,
    EAClickShieldView.prototype._touchStarted = function(e) {
        t.prototype._touchStarted.call(this, e),
        e.preventDefault()
    }
    ,
    EAClickShieldView.prototype._touchMoved = function(e) {
        t.prototype._touchMoved.call(this, e),
        hideKeyboard()
    }
    ,
    EAClickShieldView.prototype._tapDetected = function(e) {
        t.prototype._tapDetected.call(this, e),
        hideKeyboard()
    }
    ,
    EAClickShieldView.Shield = Object.freeze({
        FULL: ClickShieldType.FULL,
        INTERACTION: ClickShieldType.INTERACTION,
        LOADING: ClickShieldType.LOADING
    }),
    EAClickShieldView.Event = Object.freeze({
        DISMISSED: "EAClickShieldView.DISMISSED"
    }),
    EAClickShieldView
}(UTTargetActionView);
EAClickShieldView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-click-shield"),
        this.__loaderIcon = document.createElement("img"),
        this.__loaderIcon.setAttribute("src", "images/loader.gif"),
        this.__loaderIcon.classList.add("loaderIcon"),
        e.appendChild(this.__loaderIcon),
        this.__root = e,
        this._generated = !0
    }
}
,
EAClickShieldView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__loaderIcon = null
}
,
EAClickShieldView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
var gClickShield = new EAClickShieldView
  , UTFIFAHeaderView = (__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}(),
function(e) {
    function UTFIFAHeaderView() {
        return e.call(this) || this
    }
    return __extends(UTFIFAHeaderView, e),
    UTFIFAHeaderView.prototype.renderText = function(e, t, i) {
        this.__fifaLink.textContent = e,
        this.__fifaLink.href = t,
        this.__easportsLink.href = i
    }
    ,
    UTFIFAHeaderView
}(UTView));
UTFIFAHeaderView.prototype._generate = function _generate() {
    if (!this._generated) {
        var e = document.createElement("div");
        e.classList.add("ut-fifa-header-view"),
        this.__fifaLink = document.createElement("a"),
        this.__fifaLink.classList.add("fifa"),
        e.appendChild(this.__fifaLink),
        this.__easportsLink = document.createElement("a"),
        this.__easportsLink.setAttribute("target", "blank"),
        this.__easportsLink.classList.add("eaSports"),
        e.appendChild(this.__easportsLink),
        this.__root = e,
        this._generated = !0
    }
}
,
UTFIFAHeaderView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    DOMKit.remove(this.__root),
    this.__root = null,
    this.__fifaLink = null,
    this.__easportsLink = null
}
,
UTFIFAHeaderView.prototype.getRootElement = function getRootElement() {
    return this.__root
}
;
__extends = this && this.__extends || function() {
    var i = function(e, t) {
        return (i = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i])
        }
        )(e, t)
    };
    return function(e, t) {
        function __() {
            this.constructor = e
        }
        i(e, t),
        e.prototype = null === t ? Object.create(t) : (__.prototype = t.prototype,
        new __)
    }
}();
var UTFIFAHeaderViewController = function(e) {
    function UTFIFAHeaderViewController() {
        return e.call(this) || this
    }
    return __extends(UTFIFAHeaderViewController, e),
    UTFIFAHeaderViewController.prototype._getViewInstanceFromData = function() {
        return new UTFIFAHeaderView
    }
    ,
    UTFIFAHeaderViewController.prototype.setup = function(e) {
        var t = e ? services.Localization.localize("preload.fifaheader.back") : "Back to FIFA"
          , i = e ? services.Localization.localize("preload.fifaheader.url") : "/fifa/ultimate-team/features"
          , o = getAppMain().getConfigRepository().getConfigString(EAConfigurationRepository.KEY_RESOURCE_ROOT)
          , n = o + i;
        this.getView().renderText(t, n, o)
    }
    ,
    UTFIFAHeaderViewController
}(UTViewController)
  , _appMain = null;
function getUrlVars() {
    var i = {
        locale: null,
        language: null,
        region: null,
        variant: null
    }
      , e = window.location.href.indexOf("?");
    (0 <= e ? window.location.href.slice(e + 1).split("&") : []).forEach(function(e) {
        var t = e.split("=");
        i[t[0]] = t[1]
    });
    var t = [];
    if (i.locale)
        t = i.locale.split("_");
    else {
        var o = /\/(en-uk|en-au|fr-fr|it-it|de-de|es-es|es-mx|nl-nl|pl-pl|ru-ru|ja-jp|pt-br|cs-cz|sv-se|da-dk|no-no|nb-no|nn-no|ko-kr|zh-cn|zh-hans-cn|zh-tw|zh-hant-tw|ar-sa|tr-tr)?\/fifa\/ultimate-team\//.exec(window.location.href);
        o && (t = o[1].split("-"))
    }
    return 3 === t.length ? (i.language = t[0],
    i.variant = t[1],
    i.region = t[2]) : 2 === t.length && (i.language = t[0],
    i.region = t[1]),
    i
}
function isChrome() {
    return !0
}
function isWeb() {
    return !0
}
function isAndroid() {
    return !1
}
function isIOS() {
    return !1
}
function isIE() {
    var e = !1
      , t = window.navigator.userAgent
      , i = t.indexOf("MSIE ")
      , o = t.indexOf("Trident/");
    return (-1 < i || -1 < o) && (e = !0),
    e
}
function isPhone() {
    var e = document.getElementsByTagName("body")[0]
      , t = DOMKit.hasClass(e, enums.UIDeviceTypes.PHONE)
      , i = DOMKit.hasClass(e, enums.UIDeviceTypes.LANDSCAPE);
    return t || i ? t : isWeb() ? window.matchMedia("(max-device-width: 599px) and (orientation: portrait)").matches || window.matchMedia("(min-aspect-ratio: 32/19) and (max-device-width: 1023px) and (orientation: landscape)").matches : window.matchMedia("(orientation: portrait)").matches
}
function getUUID() {
    return "0"
}
function getAppMain() {
    return _appMain
}
function getStorage() {
    return _appMain ? _appMain.getStorage() : localStorage
}
function toJS(e) {
    DebugUtils.Assert(!1, "Native code is trying to tell the web code something: " + e)
}
function onMTXCatalog(e) {
    _appMain && _appMain.onMTXCatalog && _appMain.onMTXCatalog(JSON.parse(e))
}
function onMTXTransaction(e) {
    _appMain && _appMain.onMTXTransaction && _appMain.onMTXTransaction(JSON.parse(e))
}
function onMTXItemGranted() {
    _appMain && _appMain.onMTXItemGranted && _appMain.onMTXItemGranted()
}
function onMTXError(e) {
    _appMain && _appMain.onMTXError && _appMain.onMTXError(JSON.parse(e))
}
function onPN(e, t) {
    _appMain && _appMain.onPN && _appMain.onPN(e, t)
}
function handleOpenURL(e) {
    _appMain && _appMain.onHandleDeepLink(e)
}
function hasConnection() {
    return navigator.onLine
}
function onAppPaused() {
    _appMain && _appMain.onPause()
}
function onAppResumed() {
    _appMain && _appMain.onResume()
}
function onVisibilityChanged(e) {
    document.hidden ? onAppPaused() : onAppResumed()
}
function onAppOnline() {
    _appMain && _appMain.onOnline()
}
function onAppOffline() {
    _appMain && _appMain.onOffline()
}
function onBeforeUnload() {
    _appMain && _appMain.onDestroy()
}
function isVerboseLoggingEnabled() {
    return !!_appMain && _appMain.isVerboseLoggingEnabled()
}
function getAppVersion() {
    return _appMain ? _appMain.getAppVersion() : "0"
}
function getAppId() {
    return _appMain ? _appMain.getAppIdentifier() : "com.ea.fifaultimate.inc"
}
function getSellId() {
    return _appMain ? _appMain.getSellId() : 0
}
function getStoreId() {
    return 0
}
function getDefaultDispatcher() {
    return _appMain ? _appMain.getDefaultDispatcher() : null
}
function getKeyboardEventController() {
    return _appMain ? _appMain.getKeyboardEventController() : null
}
function getBackButtonEventController() {
    return _appMain && _appMain.getBackButtonEventController ? _appMain.getBackButtonEventController() : null
}
function onOrientationChanged() {
    _appMain && _appMain.onOrientationChanged()
}
function removeFocus() {
    document.activeElement && "body" !== document.activeElement.nodeName.toLowerCase() && document.activeElement.blur()
}
function showKeyboard() {
    !isChrome() && cordova && cordova.plugins && cordova.plugins.Keyboard && cordova.plugins.Keyboard.show()
}
function hideKeyboard() {
    removeFocus(),
    !isChrome() && cordova && cordova.plugins && cordova.plugins.Keyboard && cordova.plugins.Keyboard.close()
}
function onDeviceReady() {
    var e = "expire"
      , i = "showoffId";
    console.log("onDeviceReady"),
    document.addEventListener("visibilitychange", onVisibilityChanged, !1),
    window.addEventListener("beforeunload", onBeforeUnload, !1),
    document.addEventListener("message", onMessage, !1),
    window.addEventListener("orientationchange", onOrientationChanged, !1),
    window.addEventListener("online", onAppOnline, !1),
    window.addEventListener("offline", onAppOffline, !1),
    (_appMain = new EASFCApp_FUTWeb).init();
    var o = ""
      , n = "";
    if (window.MobileAccessibility && (window.MobileAccessibility.usePreferredTextZoom(!1),
    window.MobileAccessibility.setTextZoom(100)),
    isChrome()) {
        console.log("Check for URL params.");
        var t = HttpUtils.getParamsFromUrl(window.location.href);
        if (t.has("token")) {
            var r = getStorage();
            r.setItem(EADPIdentityManager.StorageKey.ACCESS_TOKEN, t.get("token")),
            t.remove("token"),
            t.has(e) && (r.setItem(EADPIdentityManager.StorageKey.EXPIRE, t.get(e)),
            t.remove(e))
        }
        t.has(i) && (_appMain.setUnauthenticatedShowOffId(t.get(i) || ""),
        t.remove(i)),
        (n = services.URL.findValidDeepLinkID(t.keys())) !== DeepLinkSection.NONE && services.URL.setDeepLinkURL(n, t.get(n))
    } else
        window.universalLinks.subscribe("launchFromLink", function(e) {
            if ((o = e.params[i]) && _appMain.setUnauthenticatedShowOffId(o),
            (n = services.URL.findValidDeepLinkID(Object.keys(e.params))) !== DeepLinkSection.NONE) {
                services.URL.setDeepLinkURL(n, e.params[n]);
                var t = services.Authentication.getUtasSession().state;
                _appMain.isInitComplete() && t === AuthenticationState.AUTHENTICATED && services.URL.processDeepLinkURL()
            }
        })
}
function onMessage(e) {
    e.origin == window.location.origin && e && e.data && e.data.target_event && "eadp_auth_success" === e.data.target_event && e.data.code && eadpAuthSuccess(code)
}
document.addEventListener("deviceready", function onDeviceReady() {
    window.plugins || (window.plugins = {}),
    window.plugins.cordovaNimble || (window.plugins.cordovaNimble = new CordovaNimble)
}, !1);
